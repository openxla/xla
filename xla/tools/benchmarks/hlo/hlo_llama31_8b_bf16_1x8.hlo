HloModule jit_train_step, input_output_alias={ {0}: (0, {}, may-alias), {1}: (1, {}, may-alias), {2}: (2, {}, may-alias), {3}: (3, {}, may-alias), {4}: (4, {}, may-alias), {5}: (5, {}, may-alias), {6}: (6, {}, may-alias), {7}: (7, {}, may-alias), {8}: (8, {}, may-alias), {9}: (9, {}, may-alias), {10}: (10, {}, may-alias), {11}: (11, {}, may-alias), {12}: (12, {}, may-alias), {13}: (13, {}, may-alias), {14}: (14, {}, may-alias), {15}: (15, {}, may-alias), {16}: (16, {}, may-alias), {17}: (17, {}, may-alias), {18}: (18, {}, may-alias), {19}: (19, {}, may-alias), {20}: (20, {}, may-alias), {21}: (21, {}, may-alias), {22}: (22, {}, may-alias), {23}: (23, {}, may-alias), {24}: (24, {}, may-alias), {25}: (25, {}, may-alias), {26}: (26, {}, may-alias), {27}: (27, {}, may-alias), {28}: (28, {}, may-alias), {29}: (29, {}, may-alias), {30}: (30, {}, may-alias), {31}: (31, {}, may-alias), {32}: (32, {}, may-alias), {33}: (33, {}, may-alias), {34}: (34, {}, may-alias), {35}: (35, {}, may-alias), {36}: (36, {}, may-alias), {37}: (37, {}, may-alias), {38}: (38, {}, may-alias), {39}: (39, {}, may-alias), {40}: (40, {}, may-alias), {41}: (41, {}, may-alias), {42}: (42, {}, may-alias), {43}: (43, {}, may-alias), {44}: (44, {}, may-alias), {45}: (45, {}, may-alias), {46}: (46, {}, may-alias), {47}: (47, {}, may-alias), {48}: (48, {}, may-alias), {49}: (49, {}, may-alias), {50}: (50, {}, may-alias), {51}: (51, {}, may-alias), {52}: (52, {}, may-alias), {53}: (53, {}, may-alias), {54}: (54, {}, may-alias), {55}: (55, {}, may-alias), {56}: (56, {}, may-alias), {57}: (57, {}, may-alias), {58}: (58, {}, may-alias), {59}: (59, {}, may-alias), {60}: (60, {}, may-alias), {61}: (61, {}, may-alias), {62}: (62, {}, may-alias), {63}: (63, {}, may-alias), {64}: (64, {}, may-alias), {65}: (65, {}, may-alias), {66}: (66, {}, may-alias), {67}: (67, {}, may-alias), {68}: (68, {}, may-alias), {69}: (69, {}, may-alias), {70}: (70, {}, may-alias), {71}: (71, {}, may-alias), {72}: (72, {}, may-alias), {73}: (73, {}, may-alias), {74}: (74, {}, may-alias), {75}: (75, {}, may-alias), {76}: (76, {}, may-alias), {77}: (77, {}, may-alias), {78}: (78, {}, may-alias), {79}: (79, {}, may-alias), {80}: (80, {}, may-alias), {81}: (81, {}, may-alias), {82}: (82, {}, may-alias), {83}: (83, {}, may-alias), {84}: (84, {}, may-alias), {85}: (85, {}, may-alias), {86}: (86, {}, may-alias), {87}: (87, {}, may-alias), {88}: (88, {}, may-alias), {89}: (89, {}, may-alias), {90}: (90, {}, may-alias), {91}: (91, {}, may-alias), {92}: (92, {}, may-alias), {93}: (93, {}, may-alias), {94}: (94, {}, may-alias), {95}: (95, {}, may-alias), {96}: (96, {}, may-alias), {97}: (97, {}, may-alias), {98}: (98, {}, may-alias), {99}: (99, {}, may-alias), {100}: (100, {}, may-alias), {101}: (101, {}, may-alias), {102}: (102, {}, may-alias), {103}: (103, {}, may-alias), {104}: (104, {}, may-alias), {105}: (105, {}, may-alias), {106}: (106, {}, may-alias), {107}: (107, {}, may-alias), {108}: (108, {}, may-alias), {109}: (109, {}, may-alias), {110}: (110, {}, may-alias), {111}: (111, {}, may-alias), {112}: (112, {}, may-alias), {113}: (113, {}, may-alias), {114}: (114, {}, may-alias), {115}: (115, {}, may-alias), {116}: (116, {}, may-alias), {117}: (117, {}, may-alias), {118}: (118, {}, may-alias), {119}: (119, {}, may-alias), {120}: (120, {}, may-alias), {121}: (121, {}, may-alias), {122}: (122, {}, may-alias), {123}: (123, {}, may-alias), {124}: (124, {}, may-alias), {125}: (125, {}, may-alias), {126}: (126, {}, may-alias), {127}: (127, {}, may-alias), {128}: (128, {}, may-alias), {129}: (129, {}, may-alias), {130}: (130, {}, may-alias), {131}: (131, {}, may-alias), {132}: (132, {}, may-alias), {133}: (133, {}, may-alias), {134}: (134, {}, may-alias), {135}: (135, {}, may-alias), {136}: (136, {}, may-alias), {137}: (137, {}, may-alias), {138}: (138, {}, may-alias), {139}: (139, {}, may-alias), {140}: (140, {}, may-alias), {141}: (141, {}, may-alias), {142}: (142, {}, may-alias), {143}: (143, {}, may-alias), {144}: (144, {}, may-alias), {145}: (145, {}, may-alias), {146}: (146, {}, may-alias), {147}: (147, {}, may-alias), {148}: (148, {}, may-alias), {149}: (149, {}, may-alias), {150}: (150, {}, may-alias), {151}: (151, {}, may-alias), {152}: (152, {}, may-alias), {153}: (153, {}, may-alias), {154}: (154, {}, may-alias), {155}: (155, {}, may-alias), {156}: (156, {}, may-alias), {157}: (157, {}, may-alias), {158}: (158, {}, may-alias), {159}: (159, {}, may-alias), {160}: (160, {}, may-alias), {161}: (161, {}, may-alias), {162}: (162, {}, may-alias), {163}: (163, {}, may-alias), {164}: (164, {}, may-alias), {165}: (165, {}, may-alias), {166}: (166, {}, may-alias), {167}: (167, {}, may-alias), {168}: (168, {}, may-alias), {169}: (169, {}, may-alias), {170}: (170, {}, may-alias), {171}: (171, {}, may-alias), {172}: (172, {}, may-alias), {173}: (173, {}, may-alias), {174}: (174, {}, may-alias), {175}: (175, {}, may-alias), {176}: (176, {}, may-alias), {177}: (177, {}, may-alias), {178}: (178, {}, may-alias), {179}: (179, {}, may-alias), {180}: (180, {}, may-alias), {181}: (181, {}, may-alias), {182}: (182, {}, may-alias), {183}: (183, {}, may-alias), {184}: (184, {}, may-alias), {185}: (185, {}, may-alias), {186}: (186, {}, may-alias), {187}: (187, {}, may-alias), {188}: (188, {}, may-alias), {189}: (189, {}, may-alias), {190}: (190, {}, may-alias), {191}: (191, {}, may-alias), {192}: (192, {}, may-alias), {193}: (193, {}, may-alias), {194}: (194, {}, may-alias), {195}: (195, {}, may-alias), {196}: (196, {}, may-alias), {197}: (197, {}, may-alias), {198}: (198, {}, may-alias), {199}: (199, {}, may-alias), {200}: (200, {}, may-alias), {201}: (201, {}, may-alias), {202}: (202, {}, may-alias), {203}: (203, {}, may-alias), {204}: (204, {}, may-alias), {205}: (205, {}, may-alias), {206}: (206, {}, may-alias), {207}: (207, {}, may-alias), {208}: (208, {}, may-alias), {209}: (209, {}, may-alias), {210}: (210, {}, may-alias), {211}: (211, {}, may-alias), {212}: (212, {}, may-alias), {213}: (213, {}, may-alias), {214}: (214, {}, may-alias), {215}: (215, {}, may-alias), {216}: (216, {}, may-alias), {217}: (217, {}, may-alias), {218}: (218, {}, may-alias), {219}: (219, {}, may-alias), {220}: (220, {}, may-alias), {221}: (221, {}, may-alias), {222}: (222, {}, may-alias), {223}: (223, {}, may-alias), {224}: (224, {}, may-alias), {225}: (225, {}, may-alias), {226}: (226, {}, may-alias), {227}: (227, {}, may-alias), {228}: (228, {}, may-alias), {229}: (229, {}, may-alias), {230}: (230, {}, may-alias), {231}: (231, {}, may-alias), {232}: (232, {}, may-alias), {233}: (233, {}, may-alias), {234}: (234, {}, may-alias), {235}: (235, {}, may-alias), {236}: (236, {}, may-alias), {237}: (237, {}, may-alias), {238}: (238, {}, may-alias), {239}: (239, {}, may-alias), {240}: (240, {}, may-alias), {241}: (241, {}, may-alias), {242}: (242, {}, may-alias), {243}: (243, {}, may-alias), {244}: (244, {}, may-alias), {245}: (245, {}, may-alias), {246}: (246, {}, may-alias), {247}: (247, {}, may-alias), {248}: (248, {}, may-alias), {249}: (249, {}, may-alias), {250}: (250, {}, may-alias), {251}: (251, {}, may-alias), {252}: (252, {}, may-alias), {253}: (253, {}, may-alias), {254}: (254, {}, may-alias), {255}: (255, {}, may-alias), {256}: (256, {}, may-alias), {257}: (257, {}, may-alias), {258}: (258, {}, may-alias), {259}: (259, {}, may-alias), {260}: (260, {}, may-alias), {261}: (261, {}, may-alias), {262}: (262, {}, may-alias), {263}: (263, {}, may-alias), {264}: (264, {}, may-alias), {265}: (265, {}, may-alias), {266}: (266, {}, may-alias), {267}: (267, {}, may-alias), {268}: (268, {}, may-alias), {269}: (269, {}, may-alias), {270}: (270, {}, may-alias), {271}: (271, {}, may-alias), {272}: (272, {}, may-alias), {273}: (273, {}, may-alias), {274}: (274, {}, may-alias), {275}: (275, {}, may-alias), {276}: (276, {}, may-alias), {277}: (277, {}, may-alias), {278}: (278, {}, may-alias), {279}: (279, {}, may-alias), {280}: (280, {}, may-alias), {281}: (281, {}, may-alias), {282}: (282, {}, may-alias), {283}: (283, {}, may-alias), {284}: (284, {}, may-alias), {285}: (285, {}, may-alias), {286}: (286, {}, may-alias), {287}: (287, {}, may-alias), {288}: (288, {}, may-alias), {289}: (289, {}, may-alias), {290}: (290, {}, may-alias), {291}: (291, {}, may-alias), {292}: (292, {}, may-alias), {293}: (293, {}, may-alias), {294}: (294, {}, may-alias), {295}: (295, {}, may-alias), {296}: (296, {}, may-alias), {297}: (297, {}, may-alias), {298}: (298, {}, may-alias), {299}: (299, {}, may-alias), {300}: (300, {}, may-alias), {301}: (301, {}, may-alias), {302}: (302, {}, may-alias), {303}: (303, {}, may-alias), {304}: (304, {}, may-alias), {305}: (305, {}, may-alias), {306}: (306, {}, may-alias), {307}: (307, {}, may-alias), {308}: (308, {}, may-alias), {309}: (309, {}, may-alias), {310}: (310, {}, may-alias), {311}: (311, {}, may-alias), {312}: (312, {}, may-alias), {313}: (313, {}, may-alias), {314}: (314, {}, may-alias), {315}: (315, {}, may-alias), {316}: (316, {}, may-alias), {317}: (317, {}, may-alias), {318}: (318, {}, may-alias), {319}: (319, {}, may-alias), {320}: (320, {}, may-alias), {321}: (321, {}, may-alias), {322}: (322, {}, may-alias), {323}: (323, {}, may-alias), {324}: (324, {}, may-alias), {325}: (325, {}, may-alias), {326}: (326, {}, may-alias), {327}: (327, {}, may-alias), {328}: (328, {}, may-alias), {329}: (329, {}, may-alias), {330}: (330, {}, may-alias), {331}: (331, {}, may-alias), {332}: (332, {}, may-alias), {333}: (333, {}, may-alias), {334}: (334, {}, may-alias), {335}: (335, {}, may-alias), {336}: (336, {}, may-alias), {337}: (337, {}, may-alias), {338}: (338, {}, may-alias), {339}: (339, {}, may-alias), {340}: (340, {}, may-alias), {341}: (341, {}, may-alias), {342}: (342, {}, may-alias), {343}: (343, {}, may-alias), {344}: (344, {}, may-alias), {345}: (345, {}, may-alias), {346}: (346, {}, may-alias), {347}: (347, {}, may-alias), {348}: (348, {}, may-alias), {349}: (349, {}, may-alias), {350}: (350, {}, may-alias), {351}: (351, {}, may-alias), {352}: (352, {}, may-alias), {353}: (353, {}, may-alias), {354}: (354, {}, may-alias), {355}: (355, {}, may-alias), {356}: (356, {}, may-alias), {357}: (357, {}, may-alias), {358}: (358, {}, may-alias), {359}: (359, {}, may-alias), {360}: (360, {}, may-alias), {361}: (361, {}, may-alias), {362}: (362, {}, may-alias), {363}: (363, {}, may-alias), {364}: (364, {}, may-alias), {365}: (365, {}, may-alias), {366}: (366, {}, may-alias), {367}: (367, {}, may-alias), {368}: (368, {}, may-alias), {369}: (369, {}, may-alias), {370}: (370, {}, may-alias), {371}: (371, {}, may-alias), {372}: (372, {}, may-alias), {373}: (373, {}, may-alias), {374}: (374, {}, may-alias), {375}: (375, {}, may-alias), {376}: (376, {}, may-alias), {377}: (377, {}, may-alias), {378}: (378, {}, may-alias), {379}: (379, {}, may-alias), {380}: (380, {}, may-alias), {381}: (381, {}, may-alias), {382}: (382, {}, may-alias), {383}: (383, {}, may-alias), {384}: (384, {}, may-alias), {385}: (385, {}, may-alias), {386}: (386, {}, may-alias), {387}: (387, {}, may-alias), {388}: (388, {}, may-alias), {389}: (389, {}, may-alias), {390}: (390, {}, may-alias), {391}: (391, {}, may-alias), {392}: (392, {}, may-alias), {393}: (393, {}, may-alias), {394}: (394, {}, may-alias), {395}: (395, {}, may-alias), {396}: (396, {}, may-alias), {397}: (397, {}, may-alias), {398}: (398, {}, may-alias), {399}: (399, {}, may-alias), {400}: (400, {}, may-alias), {401}: (401, {}, may-alias), {402}: (402, {}, may-alias), {403}: (403, {}, may-alias), {404}: (404, {}, may-alias), {405}: (405, {}, may-alias), {406}: (406, {}, may-alias), {407}: (407, {}, may-alias), {408}: (408, {}, may-alias), {409}: (409, {}, may-alias), {410}: (410, {}, may-alias), {411}: (411, {}, may-alias), {412}: (412, {}, may-alias), {413}: (413, {}, may-alias), {414}: (414, {}, may-alias), {415}: (415, {}, may-alias), {416}: (416, {}, may-alias), {417}: (417, {}, may-alias), {418}: (418, {}, may-alias), {419}: (419, {}, may-alias), {420}: (420, {}, may-alias), {421}: (421, {}, may-alias), {422}: (422, {}, may-alias), {423}: (423, {}, may-alias), {424}: (424, {}, may-alias), {425}: (425, {}, may-alias), {426}: (426, {}, may-alias), {427}: (427, {}, may-alias), {428}: (428, {}, may-alias), {429}: (429, {}, may-alias), {430}: (430, {}, may-alias), {431}: (431, {}, may-alias), {432}: (432, {}, may-alias), {433}: (433, {}, may-alias), {434}: (434, {}, may-alias), {435}: (435, {}, may-alias), {436}: (436, {}, may-alias), {437}: (437, {}, may-alias), {438}: (438, {}, may-alias), {439}: (439, {}, may-alias), {440}: (440, {}, may-alias), {441}: (441, {}, may-alias), {442}: (442, {}, may-alias), {443}: (443, {}, may-alias), {444}: (444, {}, may-alias), {445}: (445, {}, may-alias), {446}: (446, {}, may-alias), {447}: (447, {}, may-alias), {448}: (448, {}, may-alias), {449}: (449, {}, may-alias), {450}: (450, {}, may-alias), {451}: (451, {}, may-alias), {452}: (452, {}, may-alias), {453}: (453, {}, may-alias), {454}: (454, {}, may-alias), {455}: (455, {}, may-alias), {456}: (456, {}, may-alias), {457}: (457, {}, may-alias), {458}: (458, {}, may-alias), {459}: (459, {}, may-alias), {460}: (460, {}, may-alias), {461}: (461, {}, may-alias), {462}: (462, {}, may-alias), {463}: (463, {}, may-alias), {464}: (464, {}, may-alias), {465}: (465, {}, may-alias), {466}: (466, {}, may-alias), {467}: (467, {}, may-alias), {468}: (468, {}, may-alias), {469}: (469, {}, may-alias), {470}: (470, {}, may-alias), {471}: (471, {}, may-alias), {472}: (472, {}, may-alias), {473}: (473, {}, may-alias), {474}: (474, {}, may-alias), {475}: (475, {}, may-alias), {476}: (476, {}, may-alias), {477}: (477, {}, may-alias), {478}: (478, {}, may-alias), {479}: (479, {}, may-alias), {480}: (480, {}, may-alias), {481}: (481, {}, may-alias), {482}: (482, {}, may-alias), {483}: (483, {}, may-alias), {484}: (484, {}, may-alias), {485}: (485, {}, may-alias), {486}: (486, {}, may-alias), {487}: (487, {}, may-alias), {488}: (488, {}, may-alias), {489}: (489, {}, may-alias), {490}: (490, {}, may-alias), {491}: (491, {}, may-alias), {492}: (492, {}, may-alias), {493}: (493, {}, may-alias), {494}: (494, {}, may-alias), {495}: (495, {}, may-alias), {496}: (496, {}, may-alias), {497}: (497, {}, may-alias), {498}: (498, {}, may-alias), {499}: (499, {}, may-alias), {500}: (500, {}, may-alias), {501}: (501, {}, may-alias), {502}: (502, {}, may-alias), {503}: (503, {}, may-alias), {504}: (504, {}, may-alias), {505}: (505, {}, may-alias), {506}: (506, {}, may-alias), {507}: (507, {}, may-alias), {508}: (508, {}, may-alias), {509}: (509, {}, may-alias), {510}: (510, {}, may-alias), {511}: (511, {}, may-alias), {512}: (512, {}, may-alias), {513}: (513, {}, may-alias), {514}: (514, {}, may-alias), {515}: (515, {}, may-alias), {516}: (516, {}, may-alias), {517}: (517, {}, may-alias), {518}: (518, {}, may-alias), {519}: (519, {}, may-alias), {520}: (520, {}, may-alias), {521}: (521, {}, may-alias), {522}: (522, {}, may-alias), {523}: (523, {}, may-alias), {524}: (524, {}, may-alias), {525}: (525, {}, may-alias), {526}: (526, {}, may-alias), {527}: (527, {}, may-alias), {528}: (528, {}, may-alias), {529}: (529, {}, may-alias), {530}: (530, {}, may-alias), {531}: (531, {}, may-alias), {532}: (532, {}, may-alias), {533}: (533, {}, may-alias), {534}: (534, {}, may-alias), {535}: (535, {}, may-alias), {536}: (536, {}, may-alias), {537}: (537, {}, may-alias), {538}: (538, {}, may-alias), {539}: (539, {}, may-alias), {540}: (540, {}, may-alias), {541}: (541, {}, may-alias), {542}: (542, {}, may-alias), {543}: (543, {}, may-alias), {544}: (544, {}, may-alias), {545}: (545, {}, may-alias), {546}: (546, {}, may-alias), {547}: (547, {}, may-alias), {548}: (548, {}, may-alias), {549}: (549, {}, may-alias), {550}: (550, {}, may-alias), {551}: (551, {}, may-alias), {552}: (552, {}, may-alias), {553}: (553, {}, may-alias), {554}: (554, {}, may-alias), {555}: (555, {}, may-alias), {556}: (556, {}, may-alias), {557}: (557, {}, may-alias), {558}: (558, {}, may-alias), {559}: (559, {}, may-alias), {560}: (560, {}, may-alias), {561}: (561, {}, may-alias), {562}: (562, {}, may-alias), {563}: (563, {}, may-alias), {564}: (564, {}, may-alias), {565}: (565, {}, may-alias), {566}: (566, {}, may-alias), {567}: (567, {}, may-alias), {568}: (568, {}, may-alias), {569}: (569, {}, may-alias), {570}: (570, {}, may-alias), {571}: (571, {}, may-alias), {572}: (572, {}, may-alias), {573}: (573, {}, may-alias), {574}: (574, {}, may-alias), {575}: (575, {}, may-alias), {576}: (576, {}, may-alias), {577}: (577, {}, may-alias), {578}: (578, {}, may-alias), {579}: (579, {}, may-alias), {580}: (580, {}, may-alias), {581}: (581, {}, may-alias), {582}: (582, {}, may-alias), {583}: (583, {}, may-alias), {584}: (584, {}, may-alias), {585}: (585, {}, may-alias), {586}: (586, {}, may-alias), {587}: (587, {}, may-alias), {588}: (588, {}, may-alias), {589}: (589, {}, may-alias), {590}: (590, {}, may-alias), {591}: (591, {}, may-alias), {592}: (592, {}, may-alias), {593}: (593, {}, may-alias), {594}: (594, {}, may-alias), {595}: (595, {}, may-alias), {596}: (596, {}, may-alias), {597}: (597, {}, may-alias), {598}: (598, {}, may-alias), {599}: (599, {}, may-alias), {600}: (600, {}, may-alias), {601}: (601, {}, may-alias), {602}: (602, {}, may-alias), {603}: (603, {}, may-alias), {604}: (604, {}, may-alias), {605}: (605, {}, may-alias), {606}: (606, {}, may-alias), {607}: (607, {}, may-alias), {608}: (608, {}, may-alias), {609}: (609, {}, may-alias), {610}: (610, {}, may-alias), {611}: (611, {}, may-alias), {612}: (612, {}, may-alias), {613}: (613, {}, may-alias), {614}: (614, {}, may-alias), {615}: (615, {}, may-alias), {616}: (616, {}, may-alias), {617}: (617, {}, may-alias), {618}: (618, {}, may-alias), {619}: (619, {}, may-alias), {620}: (620, {}, may-alias), {621}: (621, {}, may-alias), {622}: (622, {}, may-alias), {623}: (623, {}, may-alias), {624}: (624, {}, may-alias), {625}: (625, {}, may-alias), {626}: (626, {}, may-alias), {627}: (627, {}, may-alias), {628}: (628, {}, may-alias), {629}: (629, {}, may-alias), {630}: (630, {}, may-alias), {631}: (631, {}, may-alias), {632}: (632, {}, may-alias), {633}: (633, {}, may-alias), {634}: (634, {}, may-alias), {635}: (635, {}, may-alias), {636}: (636, {}, may-alias), {637}: (637, {}, may-alias), {638}: (638, {}, may-alias), {639}: (639, {}, may-alias), {640}: (640, {}, may-alias), {641}: (641, {}, may-alias), {642}: (642, {}, may-alias), {643}: (643, {}, may-alias), {644}: (644, {}, may-alias), {645}: (645, {}, may-alias), {646}: (646, {}, may-alias), {647}: (647, {}, may-alias), {648}: (648, {}, may-alias), {649}: (649, {}, may-alias), {650}: (650, {}, may-alias), {651}: (651, {}, may-alias), {652}: (652, {}, may-alias), {653}: (653, {}, may-alias), {654}: (654, {}, may-alias), {655}: (655, {}, may-alias), {656}: (656, {}, may-alias), {657}: (657, {}, may-alias), {658}: (658, {}, may-alias), {659}: (659, {}, may-alias), {660}: (660, {}, may-alias), {661}: (661, {}, may-alias), {662}: (662, {}, may-alias), {663}: (663, {}, may-alias), {664}: (664, {}, may-alias), {665}: (665, {}, may-alias), {666}: (666, {}, may-alias), {667}: (667, {}, may-alias), {668}: (668, {}, may-alias), {669}: (669, {}, may-alias), {670}: (670, {}, may-alias), {671}: (671, {}, may-alias), {672}: (672, {}, may-alias), {673}: (673, {}, may-alias), {674}: (674, {}, may-alias), {675}: (675, {}, may-alias), {676}: (676, {}, may-alias), {677}: (677, {}, may-alias), {678}: (678, {}, may-alias), {679}: (679, {}, may-alias), {680}: (680, {}, may-alias), {681}: (681, {}, may-alias), {682}: (682, {}, may-alias), {683}: (683, {}, may-alias), {684}: (684, {}, may-alias), {685}: (685, {}, may-alias), {686}: (686, {}, may-alias), {687}: (687, {}, may-alias), {688}: (688, {}, may-alias), {689}: (689, {}, may-alias), {690}: (690, {}, may-alias), {691}: (691, {}, may-alias), {692}: (692, {}, may-alias), {693}: (693, {}, may-alias), {694}: (694, {}, may-alias), {695}: (695, {}, may-alias), {696}: (696, {}, may-alias), {697}: (697, {}, may-alias), {698}: (698, {}, may-alias), {699}: (699, {}, may-alias), {700}: (700, {}, may-alias), {701}: (701, {}, may-alias), {702}: (702, {}, may-alias), {703}: (703, {}, may-alias), {704}: (704, {}, may-alias), {705}: (705, {}, may-alias), {706}: (706, {}, may-alias), {707}: (707, {}, may-alias), {708}: (708, {}, may-alias), {709}: (709, {}, may-alias), {710}: (710, {}, may-alias), {711}: (711, {}, may-alias), {712}: (712, {}, may-alias), {713}: (713, {}, may-alias), {714}: (714, {}, may-alias), {715}: (715, {}, may-alias), {716}: (716, {}, may-alias), {717}: (717, {}, may-alias), {718}: (718, {}, may-alias), {719}: (719, {}, may-alias), {720}: (720, {}, may-alias), {721}: (721, {}, may-alias), {722}: (722, {}, may-alias), {723}: (723, {}, may-alias), {724}: (724, {}, may-alias), {725}: (725, {}, may-alias), {726}: (726, {}, may-alias), {727}: (727, {}, may-alias), {728}: (728, {}, may-alias), {729}: (729, {}, may-alias), {730}: (730, {}, may-alias), {731}: (731, {}, may-alias), {732}: (732, {}, may-alias), {733}: (733, {}, may-alias), {734}: (734, {}, may-alias), {735}: (735, {}, may-alias), {736}: (736, {}, may-alias), {737}: (737, {}, may-alias), {738}: (738, {}, may-alias), {739}: (739, {}, may-alias), {740}: (740, {}, may-alias), {741}: (741, {}, may-alias), {742}: (742, {}, may-alias), {743}: (743, {}, may-alias), {744}: (744, {}, may-alias), {745}: (745, {}, may-alias), {746}: (746, {}, may-alias), {747}: (747, {}, may-alias), {748}: (748, {}, may-alias), {749}: (749, {}, may-alias), {750}: (750, {}, may-alias), {751}: (751, {}, may-alias), {752}: (752, {}, may-alias), {753}: (753, {}, may-alias), {754}: (754, {}, may-alias), {755}: (755, {}, may-alias), {756}: (756, {}, may-alias), {757}: (757, {}, may-alias), {758}: (758, {}, may-alias), {759}: (759, {}, may-alias), {760}: (760, {}, may-alias), {761}: (761, {}, may-alias), {762}: (762, {}, may-alias), {763}: (763, {}, may-alias), {764}: (764, {}, may-alias), {765}: (765, {}, may-alias), {766}: (766, {}, may-alias), {767}: (767, {}, may-alias), {768}: (768, {}, may-alias), {769}: (769, {}, may-alias), {770}: (770, {}, may-alias), {771}: (771, {}, may-alias), {772}: (772, {}, may-alias), {773}: (773, {}, may-alias), {774}: (774, {}, may-alias), {775}: (775, {}, may-alias), {776}: (776, {}, may-alias), {777}: (777, {}, may-alias), {778}: (778, {}, may-alias), {779}: (779, {}, may-alias), {780}: (780, {}, may-alias), {781}: (781, {}, may-alias), {782}: (782, {}, may-alias), {783}: (783, {}, may-alias), {784}: (784, {}, may-alias), {785}: (785, {}, may-alias), {786}: (786, {}, may-alias), {787}: (787, {}, may-alias), {788}: (788, {}, may-alias), {789}: (789, {}, may-alias), {790}: (790, {}, may-alias), {791}: (791, {}, may-alias), {792}: (792, {}, may-alias), {793}: (793, {}, may-alias), {794}: (794, {}, may-alias), {795}: (795, {}, may-alias), {796}: (796, {}, may-alias), {797}: (797, {}, may-alias), {798}: (798, {}, may-alias), {799}: (799, {}, may-alias), {800}: (800, {}, may-alias), {801}: (801, {}, may-alias), {802}: (802, {}, may-alias), {803}: (803, {}, may-alias), {804}: (804, {}, may-alias), {805}: (805, {}, may-alias), {806}: (806, {}, may-alias), {807}: (807, {}, may-alias), {808}: (808, {}, may-alias), {809}: (809, {}, may-alias), {810}: (810, {}, may-alias), {811}: (811, {}, may-alias), {812}: (812, {}, may-alias), {813}: (813, {}, may-alias), {814}: (814, {}, may-alias), {815}: (815, {}, may-alias), {816}: (816, {}, may-alias), {817}: (817, {}, may-alias), {818}: (818, {}, may-alias), {819}: (819, {}, may-alias), {820}: (820, {}, may-alias), {821}: (821, {}, may-alias), {822}: (822, {}, may-alias), {823}: (823, {}, may-alias), {824}: (824, {}, may-alias), {825}: (825, {}, may-alias), {826}: (826, {}, may-alias), {827}: (827, {}, may-alias), {828}: (828, {}, may-alias), {829}: (829, {}, may-alias), {830}: (830, {}, may-alias), {831}: (831, {}, may-alias), {832}: (832, {}, may-alias), {833}: (833, {}, may-alias), {834}: (834, {}, may-alias), {835}: (835, {}, may-alias), {836}: (836, {}, may-alias), {837}: (837, {}, may-alias), {838}: (838, {}, may-alias), {839}: (839, {}, may-alias), {840}: (840, {}, may-alias), {841}: (841, {}, may-alias), {842}: (842, {}, may-alias), {843}: (843, {}, may-alias), {844}: (844, {}, may-alias), {845}: (845, {}, may-alias), {846}: (846, {}, may-alias), {847}: (847, {}, may-alias), {848}: (848, {}, may-alias), {849}: (849, {}, may-alias), {850}: (850, {}, may-alias), {851}: (851, {}, may-alias), {852}: (852, {}, may-alias), {853}: (853, {}, may-alias), {854}: (854, {}, may-alias), {855}: (855, {}, may-alias), {856}: (856, {}, may-alias), {857}: (857, {}, may-alias), {858}: (858, {}, may-alias), {859}: (859, {}, may-alias), {860}: (860, {}, may-alias), {861}: (861, {}, may-alias), {862}: (862, {}, may-alias), {863}: (863, {}, may-alias), {864}: (864, {}, may-alias), {865}: (865, {}, may-alias), {866}: (866, {}, may-alias), {867}: (867, {}, may-alias), {868}: (868, {}, may-alias), {869}: (869, {}, may-alias), {870}: (870, {}, may-alias), {871}: (871, {}, may-alias), {872}: (872, {}, may-alias), {873}: (873, {}, may-alias), {874}: (874, {}, may-alias), {875}: (875, {}, may-alias) }, entry_computation_layout={(s32[], f32[4096]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=5*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=10*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=25*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=30*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=35*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=40*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=45*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=50*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=55*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=60*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=65*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=70*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=75*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=80*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=85*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=90*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=95*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=100*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=105*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=110*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=115*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=120*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=125*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=130*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=135*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=140*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=145*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=150*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=155*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=160*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=165*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=170*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=175*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=180*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=185*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=190*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=195*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=200*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=205*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=210*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=215*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=220*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=225*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=230*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=235*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=240*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=245*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=250*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=255*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=260*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=265*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=270*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=275*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=280*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=285*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=290*/f32[512,128256]{1,0}, f32[128256,512]{1,0}, s32[], f32[4096]{0}, f32[512,14336]{1,0}, /*index=295*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=300*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=305*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=310*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=315*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=320*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=325*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=330*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=335*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=340*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=345*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=350*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=355*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=360*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=365*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=370*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=375*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=380*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=385*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=390*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=395*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=400*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=405*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=410*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=415*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=420*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=425*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=430*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=435*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=440*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=445*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=450*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=455*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=460*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=465*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=470*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=475*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=480*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=485*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=490*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=495*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=500*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=505*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=510*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=515*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=520*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=525*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=530*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=535*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=540*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=545*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=550*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=555*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=560*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=565*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=570*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=575*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=580*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,128256]{1,0}, f32[128256,512]{1,0}, f32[4096]{0}, /*index=585*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=590*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=595*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=600*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=605*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=610*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=615*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=620*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=625*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=630*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=635*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=640*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=645*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=650*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=655*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=660*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=665*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=670*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=675*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=680*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=685*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=690*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=695*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=700*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=705*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=710*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=715*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=720*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=725*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=730*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=735*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=740*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=745*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=750*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=755*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=760*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=765*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=770*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=775*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=780*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=785*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=790*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=795*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=800*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=805*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=810*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=815*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=820*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=825*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=830*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=835*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=840*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=845*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=850*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=855*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=860*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=865*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=870*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,128256]{1,0}, f32[128256,512]{1,0}, /*index=875*/s32[], s32[2,8192]{1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, /*index=880*/s32[2,8192]{1,0})->(s32[], f32[4096]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=5*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=10*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=25*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=30*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=35*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=40*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=45*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=50*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=55*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=60*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=65*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=70*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=75*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=80*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=85*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=90*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=95*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=100*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=105*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=110*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=115*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=120*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=125*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=130*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=135*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=140*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=145*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=150*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=155*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=160*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=165*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=170*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=175*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=180*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=185*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=190*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=195*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=200*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=205*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=210*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=215*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=220*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=225*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=230*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=235*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=240*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=245*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=250*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=255*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=260*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=265*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=270*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=275*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=280*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=285*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=290*/f32[512,128256]{1,0}, f32[128256,512]{1,0}, s32[], f32[4096]{0}, f32[512,14336]{1,0}, /*index=295*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=300*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=305*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=310*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=315*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=320*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=325*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=330*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=335*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=340*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=345*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=350*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=355*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=360*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=365*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=370*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=375*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=380*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=385*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=390*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=395*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=400*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=405*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=410*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=415*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=420*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=425*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=430*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=435*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=440*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=445*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=450*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=455*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=460*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=465*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=470*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=475*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=480*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=485*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=490*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=495*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=500*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=505*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=510*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=515*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=520*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=525*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=530*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=535*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=540*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=545*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=550*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=555*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=560*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=565*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=570*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=575*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=580*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,128256]{1,0}, f32[128256,512]{1,0}, f32[4096]{0}, /*index=585*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=590*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=595*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=600*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=605*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=610*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=615*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=620*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=625*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=630*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=635*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=640*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=645*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=650*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=655*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=660*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=665*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=670*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=675*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=680*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=685*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=690*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=695*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=700*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=705*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=710*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=715*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=720*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=725*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=730*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=735*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=740*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=745*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=750*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=755*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=760*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=765*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=770*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=775*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=780*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=785*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=790*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=795*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=800*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=805*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=810*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=815*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=820*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=825*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=830*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=835*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=840*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=845*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=850*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=855*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=860*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=865*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=870*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,128256]{1,0}, f32[128256,512]{1,0}, /*index=875*/s32[], f32[], f32[], f32[], f32[], /*index=880*/f32[], f32[], s32[])}

%region_6.3145 (reduce_sum.3142: s32[], reduce_sum.3143: s32[]) -> s32[] {
  %reduce_sum.3142 = s32[] parameter(0)
  %reduce_sum.3143 = s32[] parameter(1)
  ROOT %reduce_sum.3144 = s32[] add(%reduce_sum.3142, %reduce_sum.3143)
}

%region_7.3154 (reduce_sum.3151: s32[], reduce_sum.3152: s32[]) -> s32[] {
  %reduce_sum.3151 = s32[] parameter(0)
  %reduce_sum.3152 = s32[] parameter(1)
  ROOT %reduce_sum.3153 = s32[] add(%reduce_sum.3151, %reduce_sum.3152)
}

%region_8.3160 (reduce_max.3157: s32[], reduce_max.3158: s32[]) -> s32[] {
  %reduce_max.3157 = s32[] parameter(0)
  %reduce_max.3158 = s32[] parameter(1)
  ROOT %reduce_max.3159 = s32[] maximum(%reduce_max.3157, %reduce_max.3158)
}

%region_11.3373 (reduce_sum.3370: s32[], reduce_sum.3371: s32[]) -> s32[] {
  %reduce_sum.3370 = s32[] parameter(0)
  %reduce_sum.3371 = s32[] parameter(1)
  ROOT %reduce_sum.3372 = s32[] add(%reduce_sum.3370, %reduce_sum.3371)
}

%region_12.3382 (reduce_sum.3379: s32[], reduce_sum.3380: s32[]) -> s32[] {
  %reduce_sum.3379 = s32[] parameter(0)
  %reduce_sum.3380 = s32[] parameter(1)
  ROOT %reduce_sum.3381 = s32[] add(%reduce_sum.3379, %reduce_sum.3380)
}

%region_13.3388 (reduce_max.3385: s32[], reduce_max.3386: s32[]) -> s32[] {
  %reduce_max.3385 = s32[] parameter(0)
  %reduce_max.3386 = s32[] parameter(1)
  ROOT %reduce_max.3387 = s32[] maximum(%reduce_max.3385, %reduce_max.3386)
}

%region_16.3601 (reduce_sum.3598: s32[], reduce_sum.3599: s32[]) -> s32[] {
  %reduce_sum.3598 = s32[] parameter(0)
  %reduce_sum.3599 = s32[] parameter(1)
  ROOT %reduce_sum.3600 = s32[] add(%reduce_sum.3598, %reduce_sum.3599)
}

%region_17.3610 (reduce_sum.3607: s32[], reduce_sum.3608: s32[]) -> s32[] {
  %reduce_sum.3607 = s32[] parameter(0)
  %reduce_sum.3608 = s32[] parameter(1)
  ROOT %reduce_sum.3609 = s32[] add(%reduce_sum.3607, %reduce_sum.3608)
}

%region_18.3616 (reduce_max.3613: s32[], reduce_max.3614: s32[]) -> s32[] {
  %reduce_max.3613 = s32[] parameter(0)
  %reduce_max.3614 = s32[] parameter(1)
  ROOT %reduce_max.3615 = s32[] maximum(%reduce_max.3613, %reduce_max.3614)
}

%region_21.3829 (reduce_sum.3826: s32[], reduce_sum.3827: s32[]) -> s32[] {
  %reduce_sum.3826 = s32[] parameter(0)
  %reduce_sum.3827 = s32[] parameter(1)
  ROOT %reduce_sum.3828 = s32[] add(%reduce_sum.3826, %reduce_sum.3827)
}

%region_22.3838 (reduce_sum.1: s32[], reduce_sum.2: s32[]) -> s32[] {
  %reduce_sum.1 = s32[] parameter(0)
  %reduce_sum.2 = s32[] parameter(1)
  ROOT %reduce_sum.3837 = s32[] add(%reduce_sum.1, %reduce_sum.2)
}

%region_23.3844 (reduce_max.3841: s32[], reduce_max.3842: s32[]) -> s32[] {
  %reduce_max.3841 = s32[] parameter(0)
  %reduce_max.3842 = s32[] parameter(1)
  ROOT %reduce_max.3843 = s32[] maximum(%reduce_max.3841, %reduce_max.3842)
}

%region_26.4057 (reduce_sum.4054: s32[], reduce_sum.4055: s32[]) -> s32[] {
  %reduce_sum.4054 = s32[] parameter(0)
  %reduce_sum.4055 = s32[] parameter(1)
  ROOT %reduce_sum.4056 = s32[] add(%reduce_sum.4054, %reduce_sum.4055)
}

%region_27.4066 (reduce_sum.4063: s32[], reduce_sum.4064: s32[]) -> s32[] {
  %reduce_sum.4063 = s32[] parameter(0)
  %reduce_sum.4064 = s32[] parameter(1)
  ROOT %reduce_sum.4065 = s32[] add(%reduce_sum.4063, %reduce_sum.4064)
}

%region_28.4072 (reduce_max.4069: s32[], reduce_max.4070: s32[]) -> s32[] {
  %reduce_max.4069 = s32[] parameter(0)
  %reduce_max.4070 = s32[] parameter(1)
  ROOT %reduce_max.4071 = s32[] maximum(%reduce_max.4069, %reduce_max.4070)
}

%region_31.4285 (reduce_sum.4282: s32[], reduce_sum.4283: s32[]) -> s32[] {
  %reduce_sum.4282 = s32[] parameter(0)
  %reduce_sum.4283 = s32[] parameter(1)
  ROOT %reduce_sum.4284 = s32[] add(%reduce_sum.4282, %reduce_sum.4283)
}

%region_32.4294 (reduce_sum.4291: s32[], reduce_sum.4292: s32[]) -> s32[] {
  %reduce_sum.4291 = s32[] parameter(0)
  %reduce_sum.4292 = s32[] parameter(1)
  ROOT %reduce_sum.4293 = s32[] add(%reduce_sum.4291, %reduce_sum.4292)
}

%region_33.4300 (reduce_max.4297: s32[], reduce_max.4298: s32[]) -> s32[] {
  %reduce_max.4297 = s32[] parameter(0)
  %reduce_max.4298 = s32[] parameter(1)
  ROOT %reduce_max.4299 = s32[] maximum(%reduce_max.4297, %reduce_max.4298)
}

%region_36.4513 (reduce_sum.4510: s32[], reduce_sum.4511: s32[]) -> s32[] {
  %reduce_sum.4510 = s32[] parameter(0)
  %reduce_sum.4511 = s32[] parameter(1)
  ROOT %reduce_sum.4512 = s32[] add(%reduce_sum.4510, %reduce_sum.4511)
}

%region_37.4522 (reduce_sum.4519: s32[], reduce_sum.4520: s32[]) -> s32[] {
  %reduce_sum.4519 = s32[] parameter(0)
  %reduce_sum.4520 = s32[] parameter(1)
  ROOT %reduce_sum.4521 = s32[] add(%reduce_sum.4519, %reduce_sum.4520)
}

%region_38.4528 (reduce_max.4525: s32[], reduce_max.4526: s32[]) -> s32[] {
  %reduce_max.4525 = s32[] parameter(0)
  %reduce_max.4526 = s32[] parameter(1)
  ROOT %reduce_max.4527 = s32[] maximum(%reduce_max.4525, %reduce_max.4526)
}

%region_41.4741 (reduce_sum.4738: s32[], reduce_sum.4739: s32[]) -> s32[] {
  %reduce_sum.4738 = s32[] parameter(0)
  %reduce_sum.4739 = s32[] parameter(1)
  ROOT %reduce_sum.4740 = s32[] add(%reduce_sum.4738, %reduce_sum.4739)
}

%region_42.4750 (reduce_sum.6: s32[], reduce_sum.7: s32[]) -> s32[] {
  %reduce_sum.6 = s32[] parameter(0)
  %reduce_sum.7 = s32[] parameter(1)
  ROOT %reduce_sum.8 = s32[] add(%reduce_sum.6, %reduce_sum.7)
}

%region_43.4756 (reduce_max.4753: s32[], reduce_max.4754: s32[]) -> s32[] {
  %reduce_max.4753 = s32[] parameter(0)
  %reduce_max.4754 = s32[] parameter(1)
  ROOT %reduce_max.4755 = s32[] maximum(%reduce_max.4753, %reduce_max.4754)
}

%region_46.4969 (reduce_sum.9: s32[], reduce_sum.10: s32[]) -> s32[] {
  %reduce_sum.9 = s32[] parameter(0)
  %reduce_sum.10 = s32[] parameter(1)
  ROOT %reduce_sum.11 = s32[] add(%reduce_sum.9, %reduce_sum.10)
}

%region_47.4978 (reduce_sum.4975: s32[], reduce_sum.4976: s32[]) -> s32[] {
  %reduce_sum.4975 = s32[] parameter(0)
  %reduce_sum.4976 = s32[] parameter(1)
  ROOT %reduce_sum.4977 = s32[] add(%reduce_sum.4975, %reduce_sum.4976)
}

%region_48.4984 (reduce_max.4981: s32[], reduce_max.4982: s32[]) -> s32[] {
  %reduce_max.4981 = s32[] parameter(0)
  %reduce_max.4982 = s32[] parameter(1)
  ROOT %reduce_max.4983 = s32[] maximum(%reduce_max.4981, %reduce_max.4982)
}

%region_51.5197 (reduce_sum.5194: s32[], reduce_sum.5195: s32[]) -> s32[] {
  %reduce_sum.5194 = s32[] parameter(0)
  %reduce_sum.5195 = s32[] parameter(1)
  ROOT %reduce_sum.5196 = s32[] add(%reduce_sum.5194, %reduce_sum.5195)
}

%region_52.5206 (reduce_sum.5203: s32[], reduce_sum.5204: s32[]) -> s32[] {
  %reduce_sum.5203 = s32[] parameter(0)
  %reduce_sum.5204 = s32[] parameter(1)
  ROOT %reduce_sum.5205 = s32[] add(%reduce_sum.5203, %reduce_sum.5204)
}

%region_53.5212 (reduce_max.5209: s32[], reduce_max.5210: s32[]) -> s32[] {
  %reduce_max.5209 = s32[] parameter(0)
  %reduce_max.5210 = s32[] parameter(1)
  ROOT %reduce_max.5211 = s32[] maximum(%reduce_max.5209, %reduce_max.5210)
}

%region_56.5425 (reduce_sum.5422: s32[], reduce_sum.5423: s32[]) -> s32[] {
  %reduce_sum.5422 = s32[] parameter(0)
  %reduce_sum.5423 = s32[] parameter(1)
  ROOT %reduce_sum.5424 = s32[] add(%reduce_sum.5422, %reduce_sum.5423)
}

%region_57.5434 (reduce_sum.5431: s32[], reduce_sum.5432: s32[]) -> s32[] {
  %reduce_sum.5431 = s32[] parameter(0)
  %reduce_sum.5432 = s32[] parameter(1)
  ROOT %reduce_sum.5433 = s32[] add(%reduce_sum.5431, %reduce_sum.5432)
}

%region_58.5440 (reduce_max.5437: s32[], reduce_max.5438: s32[]) -> s32[] {
  %reduce_max.5437 = s32[] parameter(0)
  %reduce_max.5438 = s32[] parameter(1)
  ROOT %reduce_max.5439 = s32[] maximum(%reduce_max.5437, %reduce_max.5438)
}

%region_61.5653 (reduce_sum.5650: s32[], reduce_sum.5651: s32[]) -> s32[] {
  %reduce_sum.5650 = s32[] parameter(0)
  %reduce_sum.5651 = s32[] parameter(1)
  ROOT %reduce_sum.5652 = s32[] add(%reduce_sum.5650, %reduce_sum.5651)
}

%region_62.5662 (reduce_sum.5659: s32[], reduce_sum.5660: s32[]) -> s32[] {
  %reduce_sum.5659 = s32[] parameter(0)
  %reduce_sum.5660 = s32[] parameter(1)
  ROOT %reduce_sum.5661 = s32[] add(%reduce_sum.5659, %reduce_sum.5660)
}

%region_63.5668 (reduce_max.5665: s32[], reduce_max.5666: s32[]) -> s32[] {
  %reduce_max.5665 = s32[] parameter(0)
  %reduce_max.5666 = s32[] parameter(1)
  ROOT %reduce_max.5667 = s32[] maximum(%reduce_max.5665, %reduce_max.5666)
}

%region_66.5881 (reduce_sum.5878: s32[], reduce_sum.5879: s32[]) -> s32[] {
  %reduce_sum.5878 = s32[] parameter(0)
  %reduce_sum.5879 = s32[] parameter(1)
  ROOT %reduce_sum.5880 = s32[] add(%reduce_sum.5878, %reduce_sum.5879)
}

%region_67.5890 (reduce_sum.5887: s32[], reduce_sum.5888: s32[]) -> s32[] {
  %reduce_sum.5887 = s32[] parameter(0)
  %reduce_sum.5888 = s32[] parameter(1)
  ROOT %reduce_sum.5889 = s32[] add(%reduce_sum.5887, %reduce_sum.5888)
}

%region_68.5896 (reduce_max.5893: s32[], reduce_max.5894: s32[]) -> s32[] {
  %reduce_max.5893 = s32[] parameter(0)
  %reduce_max.5894 = s32[] parameter(1)
  ROOT %reduce_max.5895 = s32[] maximum(%reduce_max.5893, %reduce_max.5894)
}

%region_71.6109 (reduce_sum.6106: s32[], reduce_sum.6107: s32[]) -> s32[] {
  %reduce_sum.6106 = s32[] parameter(0)
  %reduce_sum.6107 = s32[] parameter(1)
  ROOT %reduce_sum.6108 = s32[] add(%reduce_sum.6106, %reduce_sum.6107)
}

%region_72.6118 (reduce_sum.12: s32[], reduce_sum.13: s32[]) -> s32[] {
  %reduce_sum.12 = s32[] parameter(0)
  %reduce_sum.13 = s32[] parameter(1)
  ROOT %reduce_sum.6117 = s32[] add(%reduce_sum.12, %reduce_sum.13)
}

%region_73.6124 (reduce_max.6121: s32[], reduce_max.6122: s32[]) -> s32[] {
  %reduce_max.6121 = s32[] parameter(0)
  %reduce_max.6122 = s32[] parameter(1)
  ROOT %reduce_max.6123 = s32[] maximum(%reduce_max.6121, %reduce_max.6122)
}

%region_76.6337 (reduce_sum.6334: s32[], reduce_sum.6335: s32[]) -> s32[] {
  %reduce_sum.6334 = s32[] parameter(0)
  %reduce_sum.6335 = s32[] parameter(1)
  ROOT %reduce_sum.6336 = s32[] add(%reduce_sum.6334, %reduce_sum.6335)
}

%region_77.6346 (reduce_sum.6343: s32[], reduce_sum.6344: s32[]) -> s32[] {
  %reduce_sum.6343 = s32[] parameter(0)
  %reduce_sum.6344 = s32[] parameter(1)
  ROOT %reduce_sum.6345 = s32[] add(%reduce_sum.6343, %reduce_sum.6344)
}

%region_78.6352 (reduce_max.6349: s32[], reduce_max.6350: s32[]) -> s32[] {
  %reduce_max.6349 = s32[] parameter(0)
  %reduce_max.6350 = s32[] parameter(1)
  ROOT %reduce_max.6351 = s32[] maximum(%reduce_max.6349, %reduce_max.6350)
}

%region_81.6565 (reduce_sum.6562: s32[], reduce_sum.6563: s32[]) -> s32[] {
  %reduce_sum.6562 = s32[] parameter(0)
  %reduce_sum.6563 = s32[] parameter(1)
  ROOT %reduce_sum.6564 = s32[] add(%reduce_sum.6562, %reduce_sum.6563)
}

%region_82.6574 (reduce_sum.6571: s32[], reduce_sum.6572: s32[]) -> s32[] {
  %reduce_sum.6571 = s32[] parameter(0)
  %reduce_sum.6572 = s32[] parameter(1)
  ROOT %reduce_sum.6573 = s32[] add(%reduce_sum.6571, %reduce_sum.6572)
}

%region_83.6580 (reduce_max.6577: s32[], reduce_max.6578: s32[]) -> s32[] {
  %reduce_max.6577 = s32[] parameter(0)
  %reduce_max.6578 = s32[] parameter(1)
  ROOT %reduce_max.6579 = s32[] maximum(%reduce_max.6577, %reduce_max.6578)
}

%region_86.6793 (reduce_sum.6790: s32[], reduce_sum.6791: s32[]) -> s32[] {
  %reduce_sum.6790 = s32[] parameter(0)
  %reduce_sum.6791 = s32[] parameter(1)
  ROOT %reduce_sum.6792 = s32[] add(%reduce_sum.6790, %reduce_sum.6791)
}

%region_87.6802 (reduce_sum.6799: s32[], reduce_sum.6800: s32[]) -> s32[] {
  %reduce_sum.6799 = s32[] parameter(0)
  %reduce_sum.6800 = s32[] parameter(1)
  ROOT %reduce_sum.6801 = s32[] add(%reduce_sum.6799, %reduce_sum.6800)
}

%region_88.6808 (reduce_max.6805: s32[], reduce_max.6806: s32[]) -> s32[] {
  %reduce_max.6805 = s32[] parameter(0)
  %reduce_max.6806 = s32[] parameter(1)
  ROOT %reduce_max.6807 = s32[] maximum(%reduce_max.6805, %reduce_max.6806)
}

%region_91.7021 (reduce_sum.7018: s32[], reduce_sum.7019: s32[]) -> s32[] {
  %reduce_sum.7018 = s32[] parameter(0)
  %reduce_sum.7019 = s32[] parameter(1)
  ROOT %reduce_sum.7020 = s32[] add(%reduce_sum.7018, %reduce_sum.7019)
}

%region_92.7030 (reduce_sum.7027: s32[], reduce_sum.7028: s32[]) -> s32[] {
  %reduce_sum.7027 = s32[] parameter(0)
  %reduce_sum.7028 = s32[] parameter(1)
  ROOT %reduce_sum.7029 = s32[] add(%reduce_sum.7027, %reduce_sum.7028)
}

%region_93.7036 (reduce_max.7033: s32[], reduce_max.7034: s32[]) -> s32[] {
  %reduce_max.7033 = s32[] parameter(0)
  %reduce_max.7034 = s32[] parameter(1)
  ROOT %reduce_max.7035 = s32[] maximum(%reduce_max.7033, %reduce_max.7034)
}

%region_96.7249 (reduce_sum.7246: s32[], reduce_sum.7247: s32[]) -> s32[] {
  %reduce_sum.7246 = s32[] parameter(0)
  %reduce_sum.7247 = s32[] parameter(1)
  ROOT %reduce_sum.7248 = s32[] add(%reduce_sum.7246, %reduce_sum.7247)
}

%region_97.7258 (reduce_sum.7255: s32[], reduce_sum.7256: s32[]) -> s32[] {
  %reduce_sum.7255 = s32[] parameter(0)
  %reduce_sum.7256 = s32[] parameter(1)
  ROOT %reduce_sum.7257 = s32[] add(%reduce_sum.7255, %reduce_sum.7256)
}

%region_98.7264 (reduce_max.7261: s32[], reduce_max.7262: s32[]) -> s32[] {
  %reduce_max.7261 = s32[] parameter(0)
  %reduce_max.7262 = s32[] parameter(1)
  ROOT %reduce_max.7263 = s32[] maximum(%reduce_max.7261, %reduce_max.7262)
}

%region_101.7477 (reduce_sum.7474: s32[], reduce_sum.7475: s32[]) -> s32[] {
  %reduce_sum.7474 = s32[] parameter(0)
  %reduce_sum.7475 = s32[] parameter(1)
  ROOT %reduce_sum.7476 = s32[] add(%reduce_sum.7474, %reduce_sum.7475)
}

%region_102.7486 (reduce_sum.7483: s32[], reduce_sum.7484: s32[]) -> s32[] {
  %reduce_sum.7483 = s32[] parameter(0)
  %reduce_sum.7484 = s32[] parameter(1)
  ROOT %reduce_sum.7485 = s32[] add(%reduce_sum.7483, %reduce_sum.7484)
}

%region_103.7492 (reduce_max.7489: s32[], reduce_max.7490: s32[]) -> s32[] {
  %reduce_max.7489 = s32[] parameter(0)
  %reduce_max.7490 = s32[] parameter(1)
  ROOT %reduce_max.7491 = s32[] maximum(%reduce_max.7489, %reduce_max.7490)
}

%region_106.7705 (reduce_sum.7702: s32[], reduce_sum.7703: s32[]) -> s32[] {
  %reduce_sum.7702 = s32[] parameter(0)
  %reduce_sum.7703 = s32[] parameter(1)
  ROOT %reduce_sum.7704 = s32[] add(%reduce_sum.7702, %reduce_sum.7703)
}

%region_107.7714 (reduce_sum.7711: s32[], reduce_sum.7712: s32[]) -> s32[] {
  %reduce_sum.7711 = s32[] parameter(0)
  %reduce_sum.7712 = s32[] parameter(1)
  ROOT %reduce_sum.7713 = s32[] add(%reduce_sum.7711, %reduce_sum.7712)
}

%region_108.7720 (reduce_max.7717: s32[], reduce_max.7718: s32[]) -> s32[] {
  %reduce_max.7717 = s32[] parameter(0)
  %reduce_max.7718 = s32[] parameter(1)
  ROOT %reduce_max.7719 = s32[] maximum(%reduce_max.7717, %reduce_max.7718)
}

%region_111.7933 (reduce_sum.7930: s32[], reduce_sum.7931: s32[]) -> s32[] {
  %reduce_sum.7930 = s32[] parameter(0)
  %reduce_sum.7931 = s32[] parameter(1)
  ROOT %reduce_sum.7932 = s32[] add(%reduce_sum.7930, %reduce_sum.7931)
}

%region_112.7942 (reduce_sum.7939: s32[], reduce_sum.7940: s32[]) -> s32[] {
  %reduce_sum.7939 = s32[] parameter(0)
  %reduce_sum.7940 = s32[] parameter(1)
  ROOT %reduce_sum.7941 = s32[] add(%reduce_sum.7939, %reduce_sum.7940)
}

%region_113.7948 (reduce_max.7945: s32[], reduce_max.7946: s32[]) -> s32[] {
  %reduce_max.7945 = s32[] parameter(0)
  %reduce_max.7946 = s32[] parameter(1)
  ROOT %reduce_max.7947 = s32[] maximum(%reduce_max.7945, %reduce_max.7946)
}

%region_116.8161 (reduce_sum.8158: s32[], reduce_sum.8159: s32[]) -> s32[] {
  %reduce_sum.8158 = s32[] parameter(0)
  %reduce_sum.8159 = s32[] parameter(1)
  ROOT %reduce_sum.8160 = s32[] add(%reduce_sum.8158, %reduce_sum.8159)
}

%region_117.8170 (reduce_sum.8167: s32[], reduce_sum.8168: s32[]) -> s32[] {
  %reduce_sum.8167 = s32[] parameter(0)
  %reduce_sum.8168 = s32[] parameter(1)
  ROOT %reduce_sum.8169 = s32[] add(%reduce_sum.8167, %reduce_sum.8168)
}

%region_118.8176 (reduce_max.8173: s32[], reduce_max.8174: s32[]) -> s32[] {
  %reduce_max.8173 = s32[] parameter(0)
  %reduce_max.8174 = s32[] parameter(1)
  ROOT %reduce_max.8175 = s32[] maximum(%reduce_max.8173, %reduce_max.8174)
}

%region_121.8389 (reduce_sum.8386: s32[], reduce_sum.8387: s32[]) -> s32[] {
  %reduce_sum.8386 = s32[] parameter(0)
  %reduce_sum.8387 = s32[] parameter(1)
  ROOT %reduce_sum.8388 = s32[] add(%reduce_sum.8386, %reduce_sum.8387)
}

%region_122.8398 (reduce_sum.8395: s32[], reduce_sum.8396: s32[]) -> s32[] {
  %reduce_sum.8395 = s32[] parameter(0)
  %reduce_sum.8396 = s32[] parameter(1)
  ROOT %reduce_sum.8397 = s32[] add(%reduce_sum.8395, %reduce_sum.8396)
}

%region_123.8404 (reduce_max.8401: s32[], reduce_max.8402: s32[]) -> s32[] {
  %reduce_max.8401 = s32[] parameter(0)
  %reduce_max.8402 = s32[] parameter(1)
  ROOT %reduce_max.8403 = s32[] maximum(%reduce_max.8401, %reduce_max.8402)
}

%region_126.8617 (reduce_sum.8614: s32[], reduce_sum.17: s32[]) -> s32[] {
  %reduce_sum.8614 = s32[] parameter(0)
  %reduce_sum.17 = s32[] parameter(1)
  ROOT %reduce_sum.8616 = s32[] add(%reduce_sum.8614, %reduce_sum.17)
}

%region_127.8626 (reduce_sum.18: s32[], reduce_sum.8624: s32[]) -> s32[] {
  %reduce_sum.18 = s32[] parameter(0)
  %reduce_sum.8624 = s32[] parameter(1)
  ROOT %reduce_sum.8625 = s32[] add(%reduce_sum.18, %reduce_sum.8624)
}

%region_128.8632 (reduce_max.8629: s32[], reduce_max.8630: s32[]) -> s32[] {
  %reduce_max.8629 = s32[] parameter(0)
  %reduce_max.8630 = s32[] parameter(1)
  ROOT %reduce_max.8631 = s32[] maximum(%reduce_max.8629, %reduce_max.8630)
}

%region_131.8845 (reduce_sum.8842: s32[], reduce_sum.8843: s32[]) -> s32[] {
  %reduce_sum.8842 = s32[] parameter(0)
  %reduce_sum.8843 = s32[] parameter(1)
  ROOT %reduce_sum.8844 = s32[] add(%reduce_sum.8842, %reduce_sum.8843)
}

%region_132.8854 (reduce_sum.8851: s32[], reduce_sum.8852: s32[]) -> s32[] {
  %reduce_sum.8851 = s32[] parameter(0)
  %reduce_sum.8852 = s32[] parameter(1)
  ROOT %reduce_sum.8853 = s32[] add(%reduce_sum.8851, %reduce_sum.8852)
}

%region_133.8860 (reduce_max.8857: s32[], reduce_max.8858: s32[]) -> s32[] {
  %reduce_max.8857 = s32[] parameter(0)
  %reduce_max.8858 = s32[] parameter(1)
  ROOT %reduce_max.8859 = s32[] maximum(%reduce_max.8857, %reduce_max.8858)
}

%region_136.9073 (reduce_sum.9070: s32[], reduce_sum.9071: s32[]) -> s32[] {
  %reduce_sum.9070 = s32[] parameter(0)
  %reduce_sum.9071 = s32[] parameter(1)
  ROOT %reduce_sum.9072 = s32[] add(%reduce_sum.9070, %reduce_sum.9071)
}

%region_137.9082 (reduce_sum.9079: s32[], reduce_sum.9080: s32[]) -> s32[] {
  %reduce_sum.9079 = s32[] parameter(0)
  %reduce_sum.9080 = s32[] parameter(1)
  ROOT %reduce_sum.9081 = s32[] add(%reduce_sum.9079, %reduce_sum.9080)
}

%region_138.9088 (reduce_max.9085: s32[], reduce_max.9086: s32[]) -> s32[] {
  %reduce_max.9085 = s32[] parameter(0)
  %reduce_max.9086 = s32[] parameter(1)
  ROOT %reduce_max.9087 = s32[] maximum(%reduce_max.9085, %reduce_max.9086)
}

%region_141.9301 (reduce_sum.9298: s32[], reduce_sum.9299: s32[]) -> s32[] {
  %reduce_sum.9298 = s32[] parameter(0)
  %reduce_sum.9299 = s32[] parameter(1)
  ROOT %reduce_sum.9300 = s32[] add(%reduce_sum.9298, %reduce_sum.9299)
}

%region_142.9310 (reduce_sum.9307: s32[], reduce_sum.9308: s32[]) -> s32[] {
  %reduce_sum.9307 = s32[] parameter(0)
  %reduce_sum.9308 = s32[] parameter(1)
  ROOT %reduce_sum.9309 = s32[] add(%reduce_sum.9307, %reduce_sum.9308)
}

%region_143.9316 (reduce_max.9313: s32[], reduce_max.9314: s32[]) -> s32[] {
  %reduce_max.9313 = s32[] parameter(0)
  %reduce_max.9314 = s32[] parameter(1)
  ROOT %reduce_max.9315 = s32[] maximum(%reduce_max.9313, %reduce_max.9314)
}

%region_146.9529 (reduce_sum.22: s32[], reduce_sum.9527: s32[]) -> s32[] {
  %reduce_sum.22 = s32[] parameter(0)
  %reduce_sum.9527 = s32[] parameter(1)
  ROOT %reduce_sum.23 = s32[] add(%reduce_sum.22, %reduce_sum.9527)
}

%region_147.9538 (reduce_sum.9535: s32[], reduce_sum.9536: s32[]) -> s32[] {
  %reduce_sum.9535 = s32[] parameter(0)
  %reduce_sum.9536 = s32[] parameter(1)
  ROOT %reduce_sum.9537 = s32[] add(%reduce_sum.9535, %reduce_sum.9536)
}

%region_148.9544 (reduce_max.9541: s32[], reduce_max.9542: s32[]) -> s32[] {
  %reduce_max.9541 = s32[] parameter(0)
  %reduce_max.9542 = s32[] parameter(1)
  ROOT %reduce_max.9543 = s32[] maximum(%reduce_max.9541, %reduce_max.9542)
}

%region_151.9757 (reduce_sum.9754: s32[], reduce_sum.9755: s32[]) -> s32[] {
  %reduce_sum.9754 = s32[] parameter(0)
  %reduce_sum.9755 = s32[] parameter(1)
  ROOT %reduce_sum.9756 = s32[] add(%reduce_sum.9754, %reduce_sum.9755)
}

%region_152.9766 (reduce_sum.9763: s32[], reduce_sum.9764: s32[]) -> s32[] {
  %reduce_sum.9763 = s32[] parameter(0)
  %reduce_sum.9764 = s32[] parameter(1)
  ROOT %reduce_sum.9765 = s32[] add(%reduce_sum.9763, %reduce_sum.9764)
}

%region_153.9772 (reduce_max.9769: s32[], reduce_max.9770: s32[]) -> s32[] {
  %reduce_max.9769 = s32[] parameter(0)
  %reduce_max.9770 = s32[] parameter(1)
  ROOT %reduce_max.9771 = s32[] maximum(%reduce_max.9769, %reduce_max.9770)
}

%region_156.9985 (reduce_sum.9982: s32[], reduce_sum.9983: s32[]) -> s32[] {
  %reduce_sum.9982 = s32[] parameter(0)
  %reduce_sum.9983 = s32[] parameter(1)
  ROOT %reduce_sum.9984 = s32[] add(%reduce_sum.9982, %reduce_sum.9983)
}

%region_157.9994 (reduce_sum.9991: s32[], reduce_sum.9992: s32[]) -> s32[] {
  %reduce_sum.9991 = s32[] parameter(0)
  %reduce_sum.9992 = s32[] parameter(1)
  ROOT %reduce_sum.9993 = s32[] add(%reduce_sum.9991, %reduce_sum.9992)
}

%region_158.10000 (reduce_max.9997: s32[], reduce_max.9998: s32[]) -> s32[] {
  %reduce_max.9997 = s32[] parameter(0)
  %reduce_max.9998 = s32[] parameter(1)
  ROOT %reduce_max.9999 = s32[] maximum(%reduce_max.9997, %reduce_max.9998)
}

%region_1329.34753 (reduce_sum.34750: f32[], reduce_sum.34751: f32[]) -> f32[] {
  %reduce_sum.34750 = f32[] parameter(0)
  %reduce_sum.34751 = f32[] parameter(1)
  ROOT %reduce_sum.34752 = f32[] add(%reduce_sum.34750, %reduce_sum.34751)
}

%region_1330.34759 (reduce_sum.34756: f32[], reduce_sum.34757: f32[]) -> f32[] {
  %reduce_sum.34756 = f32[] parameter(0)
  %reduce_sum.34757 = f32[] parameter(1)
  ROOT %reduce_sum.34758 = f32[] add(%reduce_sum.34756, %reduce_sum.34757)
}

%region_1331.34766 (reduce_sum.34763: f32[], reduce_sum.34764: f32[]) -> f32[] {
  %reduce_sum.34763 = f32[] parameter(0)
  %reduce_sum.34764 = f32[] parameter(1)
  ROOT %reduce_sum.34765 = f32[] add(%reduce_sum.34763, %reduce_sum.34764)
}

%region_1332.34773 (reduce_sum.34770: f32[], reduce_sum.34771: f32[]) -> f32[] {
  %reduce_sum.34770 = f32[] parameter(0)
  %reduce_sum.34771 = f32[] parameter(1)
  ROOT %reduce_sum.34772 = f32[] add(%reduce_sum.34770, %reduce_sum.34771)
}

%region_1333.34780 (reduce_sum.34777: f32[], reduce_sum.34778: f32[]) -> f32[] {
  %reduce_sum.34777 = f32[] parameter(0)
  %reduce_sum.34778 = f32[] parameter(1)
  ROOT %reduce_sum.34779 = f32[] add(%reduce_sum.34777, %reduce_sum.34778)
}

%region_1334.34787 (reduce_sum.34784: f32[], reduce_sum.34785: f32[]) -> f32[] {
  %reduce_sum.34784 = f32[] parameter(0)
  %reduce_sum.34785 = f32[] parameter(1)
  ROOT %reduce_sum.34786 = f32[] add(%reduce_sum.34784, %reduce_sum.34785)
}

%region_1335.34794 (reduce_sum.34791: f32[], reduce_sum.34792: f32[]) -> f32[] {
  %reduce_sum.34791 = f32[] parameter(0)
  %reduce_sum.34792 = f32[] parameter(1)
  ROOT %reduce_sum.34793 = f32[] add(%reduce_sum.34791, %reduce_sum.34792)
}

%region_1336.34801 (reduce_sum.34798: f32[], reduce_sum.34799: f32[]) -> f32[] {
  %reduce_sum.34798 = f32[] parameter(0)
  %reduce_sum.34799 = f32[] parameter(1)
  ROOT %reduce_sum.34800 = f32[] add(%reduce_sum.34798, %reduce_sum.34799)
}

%region_1337.34808 (reduce_sum.34805: f32[], reduce_sum.34806: f32[]) -> f32[] {
  %reduce_sum.34805 = f32[] parameter(0)
  %reduce_sum.34806 = f32[] parameter(1)
  ROOT %reduce_sum.34807 = f32[] add(%reduce_sum.34805, %reduce_sum.34806)
}

%region_1338.34815 (reduce_sum.34812: f32[], reduce_sum.34813: f32[]) -> f32[] {
  %reduce_sum.34812 = f32[] parameter(0)
  %reduce_sum.34813 = f32[] parameter(1)
  ROOT %reduce_sum.34814 = f32[] add(%reduce_sum.34812, %reduce_sum.34813)
}

%region_1339.34822 (reduce_sum.34819: f32[], reduce_sum.34820: f32[]) -> f32[] {
  %reduce_sum.34819 = f32[] parameter(0)
  %reduce_sum.34820 = f32[] parameter(1)
  ROOT %reduce_sum.34821 = f32[] add(%reduce_sum.34819, %reduce_sum.34820)
}

%region_1340.34829 (reduce_sum.34826: f32[], reduce_sum.34827: f32[]) -> f32[] {
  %reduce_sum.34826 = f32[] parameter(0)
  %reduce_sum.34827 = f32[] parameter(1)
  ROOT %reduce_sum.34828 = f32[] add(%reduce_sum.34826, %reduce_sum.34827)
}

%region_1341.34836 (reduce_sum.34833: f32[], reduce_sum.192: f32[]) -> f32[] {
  %reduce_sum.34833 = f32[] parameter(0)
  %reduce_sum.192 = f32[] parameter(1)
  ROOT %reduce_sum.34835 = f32[] add(%reduce_sum.34833, %reduce_sum.192)
}

%region_1342.34843 (reduce_sum.193: f32[], reduce_sum.34841: f32[]) -> f32[] {
  %reduce_sum.193 = f32[] parameter(0)
  %reduce_sum.34841 = f32[] parameter(1)
  ROOT %reduce_sum.34842 = f32[] add(%reduce_sum.193, %reduce_sum.34841)
}

%region_1343.34850 (reduce_sum.194: f32[], reduce_sum.34848: f32[]) -> f32[] {
  %reduce_sum.194 = f32[] parameter(0)
  %reduce_sum.34848 = f32[] parameter(1)
  ROOT %reduce_sum.34849 = f32[] add(%reduce_sum.194, %reduce_sum.34848)
}

%region_1344.34857 (reduce_sum.195: f32[], reduce_sum.34855: f32[]) -> f32[] {
  %reduce_sum.195 = f32[] parameter(0)
  %reduce_sum.34855 = f32[] parameter(1)
  ROOT %reduce_sum.34856 = f32[] add(%reduce_sum.195, %reduce_sum.34855)
}

%region_1345.34864 (reduce_sum.196: f32[], reduce_sum.34862: f32[]) -> f32[] {
  %reduce_sum.196 = f32[] parameter(0)
  %reduce_sum.34862 = f32[] parameter(1)
  ROOT %reduce_sum.34863 = f32[] add(%reduce_sum.196, %reduce_sum.34862)
}

%region_1346.34871 (reduce_sum.197: f32[], reduce_sum.34869: f32[]) -> f32[] {
  %reduce_sum.197 = f32[] parameter(0)
  %reduce_sum.34869 = f32[] parameter(1)
  ROOT %reduce_sum.34870 = f32[] add(%reduce_sum.197, %reduce_sum.34869)
}

%region_1347.34878 (reduce_sum.198: f32[], reduce_sum.34876: f32[]) -> f32[] {
  %reduce_sum.198 = f32[] parameter(0)
  %reduce_sum.34876 = f32[] parameter(1)
  ROOT %reduce_sum.34877 = f32[] add(%reduce_sum.198, %reduce_sum.34876)
}

%region_1348.34885 (reduce_sum.199: f32[], reduce_sum.34883: f32[]) -> f32[] {
  %reduce_sum.199 = f32[] parameter(0)
  %reduce_sum.34883 = f32[] parameter(1)
  ROOT %reduce_sum.34884 = f32[] add(%reduce_sum.199, %reduce_sum.34883)
}

%region_1349.34892 (reduce_sum.200: f32[], reduce_sum.34890: f32[]) -> f32[] {
  %reduce_sum.200 = f32[] parameter(0)
  %reduce_sum.34890 = f32[] parameter(1)
  ROOT %reduce_sum.34891 = f32[] add(%reduce_sum.200, %reduce_sum.34890)
}

%region_1350.34899 (reduce_sum.201: f32[], reduce_sum.34897: f32[]) -> f32[] {
  %reduce_sum.201 = f32[] parameter(0)
  %reduce_sum.34897 = f32[] parameter(1)
  ROOT %reduce_sum.34898 = f32[] add(%reduce_sum.201, %reduce_sum.34897)
}

%region_1351.34906 (reduce_sum.202: f32[], reduce_sum.34904: f32[]) -> f32[] {
  %reduce_sum.202 = f32[] parameter(0)
  %reduce_sum.34904 = f32[] parameter(1)
  ROOT %reduce_sum.34905 = f32[] add(%reduce_sum.202, %reduce_sum.34904)
}

%region_1352.34913 (reduce_sum.203: f32[], reduce_sum.34911: f32[]) -> f32[] {
  %reduce_sum.203 = f32[] parameter(0)
  %reduce_sum.34911 = f32[] parameter(1)
  ROOT %reduce_sum.34912 = f32[] add(%reduce_sum.203, %reduce_sum.34911)
}

%region_1353.34920 (reduce_sum.204: f32[], reduce_sum.34918: f32[]) -> f32[] {
  %reduce_sum.204 = f32[] parameter(0)
  %reduce_sum.34918 = f32[] parameter(1)
  ROOT %reduce_sum.34919 = f32[] add(%reduce_sum.204, %reduce_sum.34918)
}

%region_1354.34927 (reduce_sum.205: f32[], reduce_sum.34925: f32[]) -> f32[] {
  %reduce_sum.205 = f32[] parameter(0)
  %reduce_sum.34925 = f32[] parameter(1)
  ROOT %reduce_sum.34926 = f32[] add(%reduce_sum.205, %reduce_sum.34925)
}

%region_1355.34934 (reduce_sum.206: f32[], reduce_sum.34932: f32[]) -> f32[] {
  %reduce_sum.206 = f32[] parameter(0)
  %reduce_sum.34932 = f32[] parameter(1)
  ROOT %reduce_sum.34933 = f32[] add(%reduce_sum.206, %reduce_sum.34932)
}

%region_1356.34941 (reduce_sum.207: f32[], reduce_sum.34939: f32[]) -> f32[] {
  %reduce_sum.207 = f32[] parameter(0)
  %reduce_sum.34939 = f32[] parameter(1)
  ROOT %reduce_sum.34940 = f32[] add(%reduce_sum.207, %reduce_sum.34939)
}

%region_1357.34948 (reduce_sum.208: f32[], reduce_sum.34946: f32[]) -> f32[] {
  %reduce_sum.208 = f32[] parameter(0)
  %reduce_sum.34946 = f32[] parameter(1)
  ROOT %reduce_sum.34947 = f32[] add(%reduce_sum.208, %reduce_sum.34946)
}

%region_1358.34955 (reduce_sum.209: f32[], reduce_sum.34953: f32[]) -> f32[] {
  %reduce_sum.209 = f32[] parameter(0)
  %reduce_sum.34953 = f32[] parameter(1)
  ROOT %reduce_sum.34954 = f32[] add(%reduce_sum.209, %reduce_sum.34953)
}

%region_1359.34962 (reduce_sum.210: f32[], reduce_sum.34960: f32[]) -> f32[] {
  %reduce_sum.210 = f32[] parameter(0)
  %reduce_sum.34960 = f32[] parameter(1)
  ROOT %reduce_sum.34961 = f32[] add(%reduce_sum.210, %reduce_sum.34960)
}

%region_1360.34969 (reduce_sum.211: f32[], reduce_sum.34967: f32[]) -> f32[] {
  %reduce_sum.211 = f32[] parameter(0)
  %reduce_sum.34967 = f32[] parameter(1)
  ROOT %reduce_sum.34968 = f32[] add(%reduce_sum.211, %reduce_sum.34967)
}

%region_1361.34976 (reduce_sum.212: f32[], reduce_sum.34974: f32[]) -> f32[] {
  %reduce_sum.212 = f32[] parameter(0)
  %reduce_sum.34974 = f32[] parameter(1)
  ROOT %reduce_sum.34975 = f32[] add(%reduce_sum.212, %reduce_sum.34974)
}

%region_1362.34983 (reduce_sum.213: f32[], reduce_sum.34981: f32[]) -> f32[] {
  %reduce_sum.213 = f32[] parameter(0)
  %reduce_sum.34981 = f32[] parameter(1)
  ROOT %reduce_sum.34982 = f32[] add(%reduce_sum.213, %reduce_sum.34981)
}

%region_1363.34990 (reduce_sum.214: f32[], reduce_sum.34988: f32[]) -> f32[] {
  %reduce_sum.214 = f32[] parameter(0)
  %reduce_sum.34988 = f32[] parameter(1)
  ROOT %reduce_sum.34989 = f32[] add(%reduce_sum.214, %reduce_sum.34988)
}

%region_1364.34997 (reduce_sum.215: f32[], reduce_sum.34995: f32[]) -> f32[] {
  %reduce_sum.215 = f32[] parameter(0)
  %reduce_sum.34995 = f32[] parameter(1)
  ROOT %reduce_sum.34996 = f32[] add(%reduce_sum.215, %reduce_sum.34995)
}

%region_1365.35004 (reduce_sum.216: f32[], reduce_sum.35002: f32[]) -> f32[] {
  %reduce_sum.216 = f32[] parameter(0)
  %reduce_sum.35002 = f32[] parameter(1)
  ROOT %reduce_sum.35003 = f32[] add(%reduce_sum.216, %reduce_sum.35002)
}

%region_1366.35011 (reduce_sum.217: f32[], reduce_sum.35009: f32[]) -> f32[] {
  %reduce_sum.217 = f32[] parameter(0)
  %reduce_sum.35009 = f32[] parameter(1)
  ROOT %reduce_sum.35010 = f32[] add(%reduce_sum.217, %reduce_sum.35009)
}

%region_1367.35018 (reduce_sum.218: f32[], reduce_sum.35016: f32[]) -> f32[] {
  %reduce_sum.218 = f32[] parameter(0)
  %reduce_sum.35016 = f32[] parameter(1)
  ROOT %reduce_sum.35017 = f32[] add(%reduce_sum.218, %reduce_sum.35016)
}

%region_1368.35025 (reduce_sum.219: f32[], reduce_sum.35023: f32[]) -> f32[] {
  %reduce_sum.219 = f32[] parameter(0)
  %reduce_sum.35023 = f32[] parameter(1)
  ROOT %reduce_sum.35024 = f32[] add(%reduce_sum.219, %reduce_sum.35023)
}

%region_1369.35032 (reduce_sum.220: f32[], reduce_sum.35030: f32[]) -> f32[] {
  %reduce_sum.220 = f32[] parameter(0)
  %reduce_sum.35030 = f32[] parameter(1)
  ROOT %reduce_sum.35031 = f32[] add(%reduce_sum.220, %reduce_sum.35030)
}

%region_1370.35039 (reduce_sum.221: f32[], reduce_sum.35037: f32[]) -> f32[] {
  %reduce_sum.221 = f32[] parameter(0)
  %reduce_sum.35037 = f32[] parameter(1)
  ROOT %reduce_sum.35038 = f32[] add(%reduce_sum.221, %reduce_sum.35037)
}

%region_1371.35046 (reduce_sum.222: f32[], reduce_sum.35044: f32[]) -> f32[] {
  %reduce_sum.222 = f32[] parameter(0)
  %reduce_sum.35044 = f32[] parameter(1)
  ROOT %reduce_sum.35045 = f32[] add(%reduce_sum.222, %reduce_sum.35044)
}

%region_1372.35053 (reduce_sum.223: f32[], reduce_sum.35051: f32[]) -> f32[] {
  %reduce_sum.223 = f32[] parameter(0)
  %reduce_sum.35051 = f32[] parameter(1)
  ROOT %reduce_sum.35052 = f32[] add(%reduce_sum.223, %reduce_sum.35051)
}

%region_1373.35060 (reduce_sum.224: f32[], reduce_sum.35058: f32[]) -> f32[] {
  %reduce_sum.224 = f32[] parameter(0)
  %reduce_sum.35058 = f32[] parameter(1)
  ROOT %reduce_sum.35059 = f32[] add(%reduce_sum.224, %reduce_sum.35058)
}

%region_1374.35067 (reduce_sum.225: f32[], reduce_sum.35065: f32[]) -> f32[] {
  %reduce_sum.225 = f32[] parameter(0)
  %reduce_sum.35065 = f32[] parameter(1)
  ROOT %reduce_sum.35066 = f32[] add(%reduce_sum.225, %reduce_sum.35065)
}

%region_1375.35074 (reduce_sum.226: f32[], reduce_sum.35072: f32[]) -> f32[] {
  %reduce_sum.226 = f32[] parameter(0)
  %reduce_sum.35072 = f32[] parameter(1)
  ROOT %reduce_sum.35073 = f32[] add(%reduce_sum.226, %reduce_sum.35072)
}

%region_1376.35081 (reduce_sum.227: f32[], reduce_sum.35079: f32[]) -> f32[] {
  %reduce_sum.227 = f32[] parameter(0)
  %reduce_sum.35079 = f32[] parameter(1)
  ROOT %reduce_sum.35080 = f32[] add(%reduce_sum.227, %reduce_sum.35079)
}

%region_1377.35088 (reduce_sum.228: f32[], reduce_sum.35086: f32[]) -> f32[] {
  %reduce_sum.228 = f32[] parameter(0)
  %reduce_sum.35086 = f32[] parameter(1)
  ROOT %reduce_sum.35087 = f32[] add(%reduce_sum.228, %reduce_sum.35086)
}

%region_1378.35095 (reduce_sum.229: f32[], reduce_sum.35093: f32[]) -> f32[] {
  %reduce_sum.229 = f32[] parameter(0)
  %reduce_sum.35093 = f32[] parameter(1)
  ROOT %reduce_sum.35094 = f32[] add(%reduce_sum.229, %reduce_sum.35093)
}

%region_1379.35102 (reduce_sum.230: f32[], reduce_sum.35100: f32[]) -> f32[] {
  %reduce_sum.230 = f32[] parameter(0)
  %reduce_sum.35100 = f32[] parameter(1)
  ROOT %reduce_sum.35101 = f32[] add(%reduce_sum.230, %reduce_sum.35100)
}

%region_1380.35109 (reduce_sum.231: f32[], reduce_sum.35107: f32[]) -> f32[] {
  %reduce_sum.231 = f32[] parameter(0)
  %reduce_sum.35107 = f32[] parameter(1)
  ROOT %reduce_sum.35108 = f32[] add(%reduce_sum.231, %reduce_sum.35107)
}

%region_1381.35116 (reduce_sum.232: f32[], reduce_sum.35114: f32[]) -> f32[] {
  %reduce_sum.232 = f32[] parameter(0)
  %reduce_sum.35114 = f32[] parameter(1)
  ROOT %reduce_sum.35115 = f32[] add(%reduce_sum.232, %reduce_sum.35114)
}

%region_1382.35123 (reduce_sum.233: f32[], reduce_sum.35121: f32[]) -> f32[] {
  %reduce_sum.233 = f32[] parameter(0)
  %reduce_sum.35121 = f32[] parameter(1)
  ROOT %reduce_sum.35122 = f32[] add(%reduce_sum.233, %reduce_sum.35121)
}

%region_1383.35130 (reduce_sum.234: f32[], reduce_sum.35128: f32[]) -> f32[] {
  %reduce_sum.234 = f32[] parameter(0)
  %reduce_sum.35128 = f32[] parameter(1)
  ROOT %reduce_sum.35129 = f32[] add(%reduce_sum.234, %reduce_sum.35128)
}

%region_1384.35137 (reduce_sum.235: f32[], reduce_sum.35135: f32[]) -> f32[] {
  %reduce_sum.235 = f32[] parameter(0)
  %reduce_sum.35135 = f32[] parameter(1)
  ROOT %reduce_sum.35136 = f32[] add(%reduce_sum.235, %reduce_sum.35135)
}

%region_1385.35144 (reduce_sum.236: f32[], reduce_sum.35142: f32[]) -> f32[] {
  %reduce_sum.236 = f32[] parameter(0)
  %reduce_sum.35142 = f32[] parameter(1)
  ROOT %reduce_sum.35143 = f32[] add(%reduce_sum.236, %reduce_sum.35142)
}

%region_1386.35151 (reduce_sum.237: f32[], reduce_sum.35149: f32[]) -> f32[] {
  %reduce_sum.237 = f32[] parameter(0)
  %reduce_sum.35149 = f32[] parameter(1)
  ROOT %reduce_sum.35150 = f32[] add(%reduce_sum.237, %reduce_sum.35149)
}

%region_1387.35158 (reduce_sum.238: f32[], reduce_sum.35156: f32[]) -> f32[] {
  %reduce_sum.238 = f32[] parameter(0)
  %reduce_sum.35156 = f32[] parameter(1)
  ROOT %reduce_sum.35157 = f32[] add(%reduce_sum.238, %reduce_sum.35156)
}

%region_1388.35165 (reduce_sum.239: f32[], reduce_sum.35163: f32[]) -> f32[] {
  %reduce_sum.239 = f32[] parameter(0)
  %reduce_sum.35163 = f32[] parameter(1)
  ROOT %reduce_sum.35164 = f32[] add(%reduce_sum.239, %reduce_sum.35163)
}

%region_1389.35172 (reduce_sum.240: f32[], reduce_sum.35170: f32[]) -> f32[] {
  %reduce_sum.240 = f32[] parameter(0)
  %reduce_sum.35170 = f32[] parameter(1)
  ROOT %reduce_sum.35171 = f32[] add(%reduce_sum.240, %reduce_sum.35170)
}

%region_1390.35179 (reduce_sum.241: f32[], reduce_sum.35177: f32[]) -> f32[] {
  %reduce_sum.241 = f32[] parameter(0)
  %reduce_sum.35177 = f32[] parameter(1)
  ROOT %reduce_sum.35178 = f32[] add(%reduce_sum.241, %reduce_sum.35177)
}

%region_1391.35186 (reduce_sum.242: f32[], reduce_sum.35184: f32[]) -> f32[] {
  %reduce_sum.242 = f32[] parameter(0)
  %reduce_sum.35184 = f32[] parameter(1)
  ROOT %reduce_sum.35185 = f32[] add(%reduce_sum.242, %reduce_sum.35184)
}

%region_1392.35193 (reduce_sum.243: f32[], reduce_sum.35191: f32[]) -> f32[] {
  %reduce_sum.243 = f32[] parameter(0)
  %reduce_sum.35191 = f32[] parameter(1)
  ROOT %reduce_sum.35192 = f32[] add(%reduce_sum.243, %reduce_sum.35191)
}

%region_1393.35200 (reduce_sum.244: f32[], reduce_sum.35198: f32[]) -> f32[] {
  %reduce_sum.244 = f32[] parameter(0)
  %reduce_sum.35198 = f32[] parameter(1)
  ROOT %reduce_sum.35199 = f32[] add(%reduce_sum.244, %reduce_sum.35198)
}

%region_1394.35207 (reduce_sum.245: f32[], reduce_sum.35205: f32[]) -> f32[] {
  %reduce_sum.245 = f32[] parameter(0)
  %reduce_sum.35205 = f32[] parameter(1)
  ROOT %reduce_sum.35206 = f32[] add(%reduce_sum.245, %reduce_sum.35205)
}

%region_1395.35214 (reduce_sum.246: f32[], reduce_sum.35212: f32[]) -> f32[] {
  %reduce_sum.246 = f32[] parameter(0)
  %reduce_sum.35212 = f32[] parameter(1)
  ROOT %reduce_sum.35213 = f32[] add(%reduce_sum.246, %reduce_sum.35212)
}

%region_1396.35221 (reduce_sum.247: f32[], reduce_sum.35219: f32[]) -> f32[] {
  %reduce_sum.247 = f32[] parameter(0)
  %reduce_sum.35219 = f32[] parameter(1)
  ROOT %reduce_sum.35220 = f32[] add(%reduce_sum.247, %reduce_sum.35219)
}

%region_1397.35228 (reduce_sum.248: f32[], reduce_sum.35226: f32[]) -> f32[] {
  %reduce_sum.248 = f32[] parameter(0)
  %reduce_sum.35226 = f32[] parameter(1)
  ROOT %reduce_sum.35227 = f32[] add(%reduce_sum.248, %reduce_sum.35226)
}

%region_1398.35235 (reduce_sum.249: f32[], reduce_sum.35233: f32[]) -> f32[] {
  %reduce_sum.249 = f32[] parameter(0)
  %reduce_sum.35233 = f32[] parameter(1)
  ROOT %reduce_sum.35234 = f32[] add(%reduce_sum.249, %reduce_sum.35233)
}

%region_1399.35242 (reduce_sum.250: f32[], reduce_sum.35240: f32[]) -> f32[] {
  %reduce_sum.250 = f32[] parameter(0)
  %reduce_sum.35240 = f32[] parameter(1)
  ROOT %reduce_sum.35241 = f32[] add(%reduce_sum.250, %reduce_sum.35240)
}

%region_1400.35249 (reduce_sum.251: f32[], reduce_sum.35247: f32[]) -> f32[] {
  %reduce_sum.251 = f32[] parameter(0)
  %reduce_sum.35247 = f32[] parameter(1)
  ROOT %reduce_sum.35248 = f32[] add(%reduce_sum.251, %reduce_sum.35247)
}

%region_1401.35256 (reduce_sum.252: f32[], reduce_sum.35254: f32[]) -> f32[] {
  %reduce_sum.252 = f32[] parameter(0)
  %reduce_sum.35254 = f32[] parameter(1)
  ROOT %reduce_sum.35255 = f32[] add(%reduce_sum.252, %reduce_sum.35254)
}

%region_1402.35263 (reduce_sum.253: f32[], reduce_sum.35261: f32[]) -> f32[] {
  %reduce_sum.253 = f32[] parameter(0)
  %reduce_sum.35261 = f32[] parameter(1)
  ROOT %reduce_sum.35262 = f32[] add(%reduce_sum.253, %reduce_sum.35261)
}

%region_1403.35270 (reduce_sum.254: f32[], reduce_sum.35268: f32[]) -> f32[] {
  %reduce_sum.254 = f32[] parameter(0)
  %reduce_sum.35268 = f32[] parameter(1)
  ROOT %reduce_sum.35269 = f32[] add(%reduce_sum.254, %reduce_sum.35268)
}

%region_1404.35277 (reduce_sum.255: f32[], reduce_sum.35275: f32[]) -> f32[] {
  %reduce_sum.255 = f32[] parameter(0)
  %reduce_sum.35275 = f32[] parameter(1)
  ROOT %reduce_sum.35276 = f32[] add(%reduce_sum.255, %reduce_sum.35275)
}

%region_1405.35284 (reduce_sum.256: f32[], reduce_sum.35282: f32[]) -> f32[] {
  %reduce_sum.256 = f32[] parameter(0)
  %reduce_sum.35282 = f32[] parameter(1)
  ROOT %reduce_sum.35283 = f32[] add(%reduce_sum.256, %reduce_sum.35282)
}

%region_1406.35291 (reduce_sum.257: f32[], reduce_sum.35289: f32[]) -> f32[] {
  %reduce_sum.257 = f32[] parameter(0)
  %reduce_sum.35289 = f32[] parameter(1)
  ROOT %reduce_sum.35290 = f32[] add(%reduce_sum.257, %reduce_sum.35289)
}

%region_1407.35298 (reduce_sum.258: f32[], reduce_sum.35296: f32[]) -> f32[] {
  %reduce_sum.258 = f32[] parameter(0)
  %reduce_sum.35296 = f32[] parameter(1)
  ROOT %reduce_sum.35297 = f32[] add(%reduce_sum.258, %reduce_sum.35296)
}

%region_1408.35305 (reduce_sum.259: f32[], reduce_sum.35303: f32[]) -> f32[] {
  %reduce_sum.259 = f32[] parameter(0)
  %reduce_sum.35303 = f32[] parameter(1)
  ROOT %reduce_sum.35304 = f32[] add(%reduce_sum.259, %reduce_sum.35303)
}

%region_1409.35312 (reduce_sum.260: f32[], reduce_sum.35310: f32[]) -> f32[] {
  %reduce_sum.260 = f32[] parameter(0)
  %reduce_sum.35310 = f32[] parameter(1)
  ROOT %reduce_sum.35311 = f32[] add(%reduce_sum.260, %reduce_sum.35310)
}

%region_1410.35319 (reduce_sum.261: f32[], reduce_sum.35317: f32[]) -> f32[] {
  %reduce_sum.261 = f32[] parameter(0)
  %reduce_sum.35317 = f32[] parameter(1)
  ROOT %reduce_sum.35318 = f32[] add(%reduce_sum.261, %reduce_sum.35317)
}

%region_1411.35326 (reduce_sum.262: f32[], reduce_sum.35324: f32[]) -> f32[] {
  %reduce_sum.262 = f32[] parameter(0)
  %reduce_sum.35324 = f32[] parameter(1)
  ROOT %reduce_sum.35325 = f32[] add(%reduce_sum.262, %reduce_sum.35324)
}

%region_1412.35333 (reduce_sum.263: f32[], reduce_sum.35331: f32[]) -> f32[] {
  %reduce_sum.263 = f32[] parameter(0)
  %reduce_sum.35331 = f32[] parameter(1)
  ROOT %reduce_sum.35332 = f32[] add(%reduce_sum.263, %reduce_sum.35331)
}

%region_1413.35340 (reduce_sum.264: f32[], reduce_sum.35338: f32[]) -> f32[] {
  %reduce_sum.264 = f32[] parameter(0)
  %reduce_sum.35338 = f32[] parameter(1)
  ROOT %reduce_sum.35339 = f32[] add(%reduce_sum.264, %reduce_sum.35338)
}

%region_1414.35347 (reduce_sum.265: f32[], reduce_sum.35345: f32[]) -> f32[] {
  %reduce_sum.265 = f32[] parameter(0)
  %reduce_sum.35345 = f32[] parameter(1)
  ROOT %reduce_sum.35346 = f32[] add(%reduce_sum.265, %reduce_sum.35345)
}

%region_1415.35354 (reduce_sum.266: f32[], reduce_sum.35352: f32[]) -> f32[] {
  %reduce_sum.266 = f32[] parameter(0)
  %reduce_sum.35352 = f32[] parameter(1)
  ROOT %reduce_sum.35353 = f32[] add(%reduce_sum.266, %reduce_sum.35352)
}

%region_1416.35361 (reduce_sum.267: f32[], reduce_sum.35359: f32[]) -> f32[] {
  %reduce_sum.267 = f32[] parameter(0)
  %reduce_sum.35359 = f32[] parameter(1)
  ROOT %reduce_sum.35360 = f32[] add(%reduce_sum.267, %reduce_sum.35359)
}

%region_1417.35368 (reduce_sum.268: f32[], reduce_sum.35366: f32[]) -> f32[] {
  %reduce_sum.268 = f32[] parameter(0)
  %reduce_sum.35366 = f32[] parameter(1)
  ROOT %reduce_sum.35367 = f32[] add(%reduce_sum.268, %reduce_sum.35366)
}

%region_1418.35375 (reduce_sum.269: f32[], reduce_sum.35373: f32[]) -> f32[] {
  %reduce_sum.269 = f32[] parameter(0)
  %reduce_sum.35373 = f32[] parameter(1)
  ROOT %reduce_sum.35374 = f32[] add(%reduce_sum.269, %reduce_sum.35373)
}

%region_1419.35382 (reduce_sum.270: f32[], reduce_sum.35380: f32[]) -> f32[] {
  %reduce_sum.270 = f32[] parameter(0)
  %reduce_sum.35380 = f32[] parameter(1)
  ROOT %reduce_sum.35381 = f32[] add(%reduce_sum.270, %reduce_sum.35380)
}

%region_1420.35389 (reduce_sum.271: f32[], reduce_sum.35387: f32[]) -> f32[] {
  %reduce_sum.271 = f32[] parameter(0)
  %reduce_sum.35387 = f32[] parameter(1)
  ROOT %reduce_sum.35388 = f32[] add(%reduce_sum.271, %reduce_sum.35387)
}

%region_1421.35396 (reduce_sum.272: f32[], reduce_sum.35394: f32[]) -> f32[] {
  %reduce_sum.272 = f32[] parameter(0)
  %reduce_sum.35394 = f32[] parameter(1)
  ROOT %reduce_sum.35395 = f32[] add(%reduce_sum.272, %reduce_sum.35394)
}

%region_1422.35403 (reduce_sum.273: f32[], reduce_sum.35401: f32[]) -> f32[] {
  %reduce_sum.273 = f32[] parameter(0)
  %reduce_sum.35401 = f32[] parameter(1)
  ROOT %reduce_sum.35402 = f32[] add(%reduce_sum.273, %reduce_sum.35401)
}

%region_1423.35410 (reduce_sum.274: f32[], reduce_sum.35408: f32[]) -> f32[] {
  %reduce_sum.274 = f32[] parameter(0)
  %reduce_sum.35408 = f32[] parameter(1)
  ROOT %reduce_sum.35409 = f32[] add(%reduce_sum.274, %reduce_sum.35408)
}

%region_1424.35417 (reduce_sum.275: f32[], reduce_sum.35415: f32[]) -> f32[] {
  %reduce_sum.275 = f32[] parameter(0)
  %reduce_sum.35415 = f32[] parameter(1)
  ROOT %reduce_sum.35416 = f32[] add(%reduce_sum.275, %reduce_sum.35415)
}

%region_1425.35424 (reduce_sum.276: f32[], reduce_sum.35422: f32[]) -> f32[] {
  %reduce_sum.276 = f32[] parameter(0)
  %reduce_sum.35422 = f32[] parameter(1)
  ROOT %reduce_sum.35423 = f32[] add(%reduce_sum.276, %reduce_sum.35422)
}

%region_1426.35431 (reduce_sum.277: f32[], reduce_sum.35429: f32[]) -> f32[] {
  %reduce_sum.277 = f32[] parameter(0)
  %reduce_sum.35429 = f32[] parameter(1)
  ROOT %reduce_sum.35430 = f32[] add(%reduce_sum.277, %reduce_sum.35429)
}

%region_1427.35438 (reduce_sum.278: f32[], reduce_sum.35436: f32[]) -> f32[] {
  %reduce_sum.278 = f32[] parameter(0)
  %reduce_sum.35436 = f32[] parameter(1)
  ROOT %reduce_sum.35437 = f32[] add(%reduce_sum.278, %reduce_sum.35436)
}

%region_1428.35445 (reduce_sum.279: f32[], reduce_sum.35443: f32[]) -> f32[] {
  %reduce_sum.279 = f32[] parameter(0)
  %reduce_sum.35443 = f32[] parameter(1)
  ROOT %reduce_sum.35444 = f32[] add(%reduce_sum.279, %reduce_sum.35443)
}

%region_1429.35452 (reduce_sum.280: f32[], reduce_sum.35450: f32[]) -> f32[] {
  %reduce_sum.280 = f32[] parameter(0)
  %reduce_sum.35450 = f32[] parameter(1)
  ROOT %reduce_sum.35451 = f32[] add(%reduce_sum.280, %reduce_sum.35450)
}

%region_1430.35459 (reduce_sum.281: f32[], reduce_sum.35457: f32[]) -> f32[] {
  %reduce_sum.281 = f32[] parameter(0)
  %reduce_sum.35457 = f32[] parameter(1)
  ROOT %reduce_sum.35458 = f32[] add(%reduce_sum.281, %reduce_sum.35457)
}

%region_1431.35466 (reduce_sum.282: f32[], reduce_sum.35464: f32[]) -> f32[] {
  %reduce_sum.282 = f32[] parameter(0)
  %reduce_sum.35464 = f32[] parameter(1)
  ROOT %reduce_sum.35465 = f32[] add(%reduce_sum.282, %reduce_sum.35464)
}

%region_1432.35473 (reduce_sum.283: f32[], reduce_sum.35471: f32[]) -> f32[] {
  %reduce_sum.283 = f32[] parameter(0)
  %reduce_sum.35471 = f32[] parameter(1)
  ROOT %reduce_sum.35472 = f32[] add(%reduce_sum.283, %reduce_sum.35471)
}

%region_1433.35480 (reduce_sum.284: f32[], reduce_sum.35478: f32[]) -> f32[] {
  %reduce_sum.284 = f32[] parameter(0)
  %reduce_sum.35478 = f32[] parameter(1)
  ROOT %reduce_sum.35479 = f32[] add(%reduce_sum.284, %reduce_sum.35478)
}

%region_1434.35487 (reduce_sum.285: f32[], reduce_sum.35485: f32[]) -> f32[] {
  %reduce_sum.285 = f32[] parameter(0)
  %reduce_sum.35485 = f32[] parameter(1)
  ROOT %reduce_sum.35486 = f32[] add(%reduce_sum.285, %reduce_sum.35485)
}

%region_1435.35494 (reduce_sum.286: f32[], reduce_sum.35492: f32[]) -> f32[] {
  %reduce_sum.286 = f32[] parameter(0)
  %reduce_sum.35492 = f32[] parameter(1)
  ROOT %reduce_sum.35493 = f32[] add(%reduce_sum.286, %reduce_sum.35492)
}

%region_1436.35501 (reduce_sum.287: f32[], reduce_sum.35499: f32[]) -> f32[] {
  %reduce_sum.287 = f32[] parameter(0)
  %reduce_sum.35499 = f32[] parameter(1)
  ROOT %reduce_sum.35500 = f32[] add(%reduce_sum.287, %reduce_sum.35499)
}

%region_1437.35508 (reduce_sum.288: f32[], reduce_sum.35506: f32[]) -> f32[] {
  %reduce_sum.288 = f32[] parameter(0)
  %reduce_sum.35506 = f32[] parameter(1)
  ROOT %reduce_sum.35507 = f32[] add(%reduce_sum.288, %reduce_sum.35506)
}

%region_1438.35515 (reduce_sum.289: f32[], reduce_sum.35513: f32[]) -> f32[] {
  %reduce_sum.289 = f32[] parameter(0)
  %reduce_sum.35513 = f32[] parameter(1)
  ROOT %reduce_sum.35514 = f32[] add(%reduce_sum.289, %reduce_sum.35513)
}

%region_1439.35522 (reduce_sum.290: f32[], reduce_sum.35520: f32[]) -> f32[] {
  %reduce_sum.290 = f32[] parameter(0)
  %reduce_sum.35520 = f32[] parameter(1)
  ROOT %reduce_sum.35521 = f32[] add(%reduce_sum.290, %reduce_sum.35520)
}

%region_1440.35529 (reduce_sum.291: f32[], reduce_sum.35527: f32[]) -> f32[] {
  %reduce_sum.291 = f32[] parameter(0)
  %reduce_sum.35527 = f32[] parameter(1)
  ROOT %reduce_sum.35528 = f32[] add(%reduce_sum.291, %reduce_sum.35527)
}

%region_1441.35536 (reduce_sum.292: f32[], reduce_sum.35534: f32[]) -> f32[] {
  %reduce_sum.292 = f32[] parameter(0)
  %reduce_sum.35534 = f32[] parameter(1)
  ROOT %reduce_sum.35535 = f32[] add(%reduce_sum.292, %reduce_sum.35534)
}

%region_1442.35543 (reduce_sum.293: f32[], reduce_sum.35541: f32[]) -> f32[] {
  %reduce_sum.293 = f32[] parameter(0)
  %reduce_sum.35541 = f32[] parameter(1)
  ROOT %reduce_sum.35542 = f32[] add(%reduce_sum.293, %reduce_sum.35541)
}

%region_1443.35550 (reduce_sum.294: f32[], reduce_sum.35548: f32[]) -> f32[] {
  %reduce_sum.294 = f32[] parameter(0)
  %reduce_sum.35548 = f32[] parameter(1)
  ROOT %reduce_sum.35549 = f32[] add(%reduce_sum.294, %reduce_sum.35548)
}

%region_1444.35557 (reduce_sum.295: f32[], reduce_sum.35555: f32[]) -> f32[] {
  %reduce_sum.295 = f32[] parameter(0)
  %reduce_sum.35555 = f32[] parameter(1)
  ROOT %reduce_sum.35556 = f32[] add(%reduce_sum.295, %reduce_sum.35555)
}

%region_1445.35564 (reduce_sum.296: f32[], reduce_sum.35562: f32[]) -> f32[] {
  %reduce_sum.296 = f32[] parameter(0)
  %reduce_sum.35562 = f32[] parameter(1)
  ROOT %reduce_sum.35563 = f32[] add(%reduce_sum.296, %reduce_sum.35562)
}

%region_1446.35571 (reduce_sum.297: f32[], reduce_sum.35569: f32[]) -> f32[] {
  %reduce_sum.297 = f32[] parameter(0)
  %reduce_sum.35569 = f32[] parameter(1)
  ROOT %reduce_sum.35570 = f32[] add(%reduce_sum.297, %reduce_sum.35569)
}

%region_1447.35578 (reduce_sum.298: f32[], reduce_sum.35576: f32[]) -> f32[] {
  %reduce_sum.298 = f32[] parameter(0)
  %reduce_sum.35576 = f32[] parameter(1)
  ROOT %reduce_sum.35577 = f32[] add(%reduce_sum.298, %reduce_sum.35576)
}

%region_1448.35585 (reduce_sum.299: f32[], reduce_sum.35583: f32[]) -> f32[] {
  %reduce_sum.299 = f32[] parameter(0)
  %reduce_sum.35583 = f32[] parameter(1)
  ROOT %reduce_sum.35584 = f32[] add(%reduce_sum.299, %reduce_sum.35583)
}

%region_1449.35592 (reduce_sum.300: f32[], reduce_sum.35590: f32[]) -> f32[] {
  %reduce_sum.300 = f32[] parameter(0)
  %reduce_sum.35590 = f32[] parameter(1)
  ROOT %reduce_sum.35591 = f32[] add(%reduce_sum.300, %reduce_sum.35590)
}

%region_1450.35599 (reduce_sum.301: f32[], reduce_sum.35597: f32[]) -> f32[] {
  %reduce_sum.301 = f32[] parameter(0)
  %reduce_sum.35597 = f32[] parameter(1)
  ROOT %reduce_sum.35598 = f32[] add(%reduce_sum.301, %reduce_sum.35597)
}

%region_1451.35606 (reduce_sum.302: f32[], reduce_sum.35604: f32[]) -> f32[] {
  %reduce_sum.302 = f32[] parameter(0)
  %reduce_sum.35604 = f32[] parameter(1)
  ROOT %reduce_sum.35605 = f32[] add(%reduce_sum.302, %reduce_sum.35604)
}

%region_1452.35613 (reduce_sum.303: f32[], reduce_sum.35611: f32[]) -> f32[] {
  %reduce_sum.303 = f32[] parameter(0)
  %reduce_sum.35611 = f32[] parameter(1)
  ROOT %reduce_sum.35612 = f32[] add(%reduce_sum.303, %reduce_sum.35611)
}

%region_1453.35620 (reduce_sum.304: f32[], reduce_sum.35618: f32[]) -> f32[] {
  %reduce_sum.304 = f32[] parameter(0)
  %reduce_sum.35618 = f32[] parameter(1)
  ROOT %reduce_sum.35619 = f32[] add(%reduce_sum.304, %reduce_sum.35618)
}

%region_1454.35627 (reduce_sum.305: f32[], reduce_sum.35625: f32[]) -> f32[] {
  %reduce_sum.305 = f32[] parameter(0)
  %reduce_sum.35625 = f32[] parameter(1)
  ROOT %reduce_sum.35626 = f32[] add(%reduce_sum.305, %reduce_sum.35625)
}

%region_1455.35634 (reduce_sum.306: f32[], reduce_sum.35632: f32[]) -> f32[] {
  %reduce_sum.306 = f32[] parameter(0)
  %reduce_sum.35632 = f32[] parameter(1)
  ROOT %reduce_sum.35633 = f32[] add(%reduce_sum.306, %reduce_sum.35632)
}

%region_1456.35641 (reduce_sum.307: f32[], reduce_sum.35639: f32[]) -> f32[] {
  %reduce_sum.307 = f32[] parameter(0)
  %reduce_sum.35639 = f32[] parameter(1)
  ROOT %reduce_sum.35640 = f32[] add(%reduce_sum.307, %reduce_sum.35639)
}

%region_1457.35648 (reduce_sum.308: f32[], reduce_sum.35646: f32[]) -> f32[] {
  %reduce_sum.308 = f32[] parameter(0)
  %reduce_sum.35646 = f32[] parameter(1)
  ROOT %reduce_sum.35647 = f32[] add(%reduce_sum.308, %reduce_sum.35646)
}

%region_1458.35655 (reduce_sum.309: f32[], reduce_sum.35653: f32[]) -> f32[] {
  %reduce_sum.309 = f32[] parameter(0)
  %reduce_sum.35653 = f32[] parameter(1)
  ROOT %reduce_sum.35654 = f32[] add(%reduce_sum.309, %reduce_sum.35653)
}

%region_1459.35662 (reduce_sum.310: f32[], reduce_sum.35660: f32[]) -> f32[] {
  %reduce_sum.310 = f32[] parameter(0)
  %reduce_sum.35660 = f32[] parameter(1)
  ROOT %reduce_sum.35661 = f32[] add(%reduce_sum.310, %reduce_sum.35660)
}

%region_1460.35669 (reduce_sum.311: f32[], reduce_sum.35667: f32[]) -> f32[] {
  %reduce_sum.311 = f32[] parameter(0)
  %reduce_sum.35667 = f32[] parameter(1)
  ROOT %reduce_sum.35668 = f32[] add(%reduce_sum.311, %reduce_sum.35667)
}

%region_1461.35676 (reduce_sum.312: f32[], reduce_sum.35674: f32[]) -> f32[] {
  %reduce_sum.312 = f32[] parameter(0)
  %reduce_sum.35674 = f32[] parameter(1)
  ROOT %reduce_sum.35675 = f32[] add(%reduce_sum.312, %reduce_sum.35674)
}

%region_1462.35683 (reduce_sum.313: f32[], reduce_sum.35681: f32[]) -> f32[] {
  %reduce_sum.313 = f32[] parameter(0)
  %reduce_sum.35681 = f32[] parameter(1)
  ROOT %reduce_sum.35682 = f32[] add(%reduce_sum.313, %reduce_sum.35681)
}

%region_1463.35690 (reduce_sum.314: f32[], reduce_sum.35688: f32[]) -> f32[] {
  %reduce_sum.314 = f32[] parameter(0)
  %reduce_sum.35688 = f32[] parameter(1)
  ROOT %reduce_sum.35689 = f32[] add(%reduce_sum.314, %reduce_sum.35688)
}

%region_1464.35697 (reduce_sum.315: f32[], reduce_sum.35695: f32[]) -> f32[] {
  %reduce_sum.315 = f32[] parameter(0)
  %reduce_sum.35695 = f32[] parameter(1)
  ROOT %reduce_sum.35696 = f32[] add(%reduce_sum.315, %reduce_sum.35695)
}

%region_1465.35704 (reduce_sum.316: f32[], reduce_sum.35702: f32[]) -> f32[] {
  %reduce_sum.316 = f32[] parameter(0)
  %reduce_sum.35702 = f32[] parameter(1)
  ROOT %reduce_sum.35703 = f32[] add(%reduce_sum.316, %reduce_sum.35702)
}

%region_1466.35711 (reduce_sum.317: f32[], reduce_sum.35709: f32[]) -> f32[] {
  %reduce_sum.317 = f32[] parameter(0)
  %reduce_sum.35709 = f32[] parameter(1)
  ROOT %reduce_sum.35710 = f32[] add(%reduce_sum.317, %reduce_sum.35709)
}

%region_1467.35718 (reduce_sum.318: f32[], reduce_sum.35716: f32[]) -> f32[] {
  %reduce_sum.318 = f32[] parameter(0)
  %reduce_sum.35716 = f32[] parameter(1)
  ROOT %reduce_sum.35717 = f32[] add(%reduce_sum.318, %reduce_sum.35716)
}

%region_1468.35725 (reduce_sum.319: f32[], reduce_sum.35723: f32[]) -> f32[] {
  %reduce_sum.319 = f32[] parameter(0)
  %reduce_sum.35723 = f32[] parameter(1)
  ROOT %reduce_sum.35724 = f32[] add(%reduce_sum.319, %reduce_sum.35723)
}

%region_1469.35732 (reduce_sum.320: f32[], reduce_sum.35730: f32[]) -> f32[] {
  %reduce_sum.320 = f32[] parameter(0)
  %reduce_sum.35730 = f32[] parameter(1)
  ROOT %reduce_sum.35731 = f32[] add(%reduce_sum.320, %reduce_sum.35730)
}

%region_1470.35739 (reduce_sum.321: f32[], reduce_sum.35737: f32[]) -> f32[] {
  %reduce_sum.321 = f32[] parameter(0)
  %reduce_sum.35737 = f32[] parameter(1)
  ROOT %reduce_sum.35738 = f32[] add(%reduce_sum.321, %reduce_sum.35737)
}

%region_1471.35746 (reduce_sum.322: f32[], reduce_sum.35744: f32[]) -> f32[] {
  %reduce_sum.322 = f32[] parameter(0)
  %reduce_sum.35744 = f32[] parameter(1)
  ROOT %reduce_sum.35745 = f32[] add(%reduce_sum.322, %reduce_sum.35744)
}

%region_1472.35753 (reduce_sum.323: f32[], reduce_sum.35751: f32[]) -> f32[] {
  %reduce_sum.323 = f32[] parameter(0)
  %reduce_sum.35751 = f32[] parameter(1)
  ROOT %reduce_sum.35752 = f32[] add(%reduce_sum.323, %reduce_sum.35751)
}

%region_1473.35760 (reduce_sum.324: f32[], reduce_sum.35758: f32[]) -> f32[] {
  %reduce_sum.324 = f32[] parameter(0)
  %reduce_sum.35758 = f32[] parameter(1)
  ROOT %reduce_sum.35759 = f32[] add(%reduce_sum.324, %reduce_sum.35758)
}

%region_1474.35767 (reduce_sum.325: f32[], reduce_sum.35765: f32[]) -> f32[] {
  %reduce_sum.325 = f32[] parameter(0)
  %reduce_sum.35765 = f32[] parameter(1)
  ROOT %reduce_sum.35766 = f32[] add(%reduce_sum.325, %reduce_sum.35765)
}

%region_1475.35774 (reduce_sum.326: f32[], reduce_sum.35772: f32[]) -> f32[] {
  %reduce_sum.326 = f32[] parameter(0)
  %reduce_sum.35772 = f32[] parameter(1)
  ROOT %reduce_sum.35773 = f32[] add(%reduce_sum.326, %reduce_sum.35772)
}

%region_1476.35781 (reduce_sum.327: f32[], reduce_sum.35779: f32[]) -> f32[] {
  %reduce_sum.327 = f32[] parameter(0)
  %reduce_sum.35779 = f32[] parameter(1)
  ROOT %reduce_sum.35780 = f32[] add(%reduce_sum.327, %reduce_sum.35779)
}

%region_1477.35788 (reduce_sum.328: f32[], reduce_sum.35786: f32[]) -> f32[] {
  %reduce_sum.328 = f32[] parameter(0)
  %reduce_sum.35786 = f32[] parameter(1)
  ROOT %reduce_sum.35787 = f32[] add(%reduce_sum.328, %reduce_sum.35786)
}

%region_1478.35795 (reduce_sum.329: f32[], reduce_sum.35793: f32[]) -> f32[] {
  %reduce_sum.329 = f32[] parameter(0)
  %reduce_sum.35793 = f32[] parameter(1)
  ROOT %reduce_sum.35794 = f32[] add(%reduce_sum.329, %reduce_sum.35793)
}

%region_1479.35802 (reduce_sum.330: f32[], reduce_sum.35800: f32[]) -> f32[] {
  %reduce_sum.330 = f32[] parameter(0)
  %reduce_sum.35800 = f32[] parameter(1)
  ROOT %reduce_sum.35801 = f32[] add(%reduce_sum.330, %reduce_sum.35800)
}

%region_1480.35809 (reduce_sum.331: f32[], reduce_sum.35807: f32[]) -> f32[] {
  %reduce_sum.331 = f32[] parameter(0)
  %reduce_sum.35807 = f32[] parameter(1)
  ROOT %reduce_sum.35808 = f32[] add(%reduce_sum.331, %reduce_sum.35807)
}

%region_1481.35816 (reduce_sum.332: f32[], reduce_sum.35814: f32[]) -> f32[] {
  %reduce_sum.332 = f32[] parameter(0)
  %reduce_sum.35814 = f32[] parameter(1)
  ROOT %reduce_sum.35815 = f32[] add(%reduce_sum.332, %reduce_sum.35814)
}

%region_1482.35823 (reduce_sum.333: f32[], reduce_sum.35821: f32[]) -> f32[] {
  %reduce_sum.333 = f32[] parameter(0)
  %reduce_sum.35821 = f32[] parameter(1)
  ROOT %reduce_sum.35822 = f32[] add(%reduce_sum.333, %reduce_sum.35821)
}

%region_1483.35830 (reduce_sum.334: f32[], reduce_sum.35828: f32[]) -> f32[] {
  %reduce_sum.334 = f32[] parameter(0)
  %reduce_sum.35828 = f32[] parameter(1)
  ROOT %reduce_sum.35829 = f32[] add(%reduce_sum.334, %reduce_sum.35828)
}

%region_1484.35837 (reduce_sum.335: f32[], reduce_sum.35835: f32[]) -> f32[] {
  %reduce_sum.335 = f32[] parameter(0)
  %reduce_sum.35835 = f32[] parameter(1)
  ROOT %reduce_sum.35836 = f32[] add(%reduce_sum.335, %reduce_sum.35835)
}

%region_1485.35844 (reduce_sum.336: f32[], reduce_sum.35842: f32[]) -> f32[] {
  %reduce_sum.336 = f32[] parameter(0)
  %reduce_sum.35842 = f32[] parameter(1)
  ROOT %reduce_sum.35843 = f32[] add(%reduce_sum.336, %reduce_sum.35842)
}

%region_1486.35851 (reduce_sum.337: f32[], reduce_sum.35849: f32[]) -> f32[] {
  %reduce_sum.337 = f32[] parameter(0)
  %reduce_sum.35849 = f32[] parameter(1)
  ROOT %reduce_sum.35850 = f32[] add(%reduce_sum.337, %reduce_sum.35849)
}

%region_1487.35858 (reduce_sum.338: f32[], reduce_sum.35856: f32[]) -> f32[] {
  %reduce_sum.338 = f32[] parameter(0)
  %reduce_sum.35856 = f32[] parameter(1)
  ROOT %reduce_sum.35857 = f32[] add(%reduce_sum.338, %reduce_sum.35856)
}

%region_1488.35865 (reduce_sum.339: f32[], reduce_sum.35863: f32[]) -> f32[] {
  %reduce_sum.339 = f32[] parameter(0)
  %reduce_sum.35863 = f32[] parameter(1)
  ROOT %reduce_sum.35864 = f32[] add(%reduce_sum.339, %reduce_sum.35863)
}

%region_1489.35872 (reduce_sum.340: f32[], reduce_sum.35870: f32[]) -> f32[] {
  %reduce_sum.340 = f32[] parameter(0)
  %reduce_sum.35870 = f32[] parameter(1)
  ROOT %reduce_sum.35871 = f32[] add(%reduce_sum.340, %reduce_sum.35870)
}

%region_1490.35879 (reduce_sum.341: f32[], reduce_sum.35877: f32[]) -> f32[] {
  %reduce_sum.341 = f32[] parameter(0)
  %reduce_sum.35877 = f32[] parameter(1)
  ROOT %reduce_sum.35878 = f32[] add(%reduce_sum.341, %reduce_sum.35877)
}

%region_1491.35886 (reduce_sum.342: f32[], reduce_sum.35884: f32[]) -> f32[] {
  %reduce_sum.342 = f32[] parameter(0)
  %reduce_sum.35884 = f32[] parameter(1)
  ROOT %reduce_sum.35885 = f32[] add(%reduce_sum.342, %reduce_sum.35884)
}

%region_1492.35893 (reduce_sum.343: f32[], reduce_sum.35891: f32[]) -> f32[] {
  %reduce_sum.343 = f32[] parameter(0)
  %reduce_sum.35891 = f32[] parameter(1)
  ROOT %reduce_sum.35892 = f32[] add(%reduce_sum.343, %reduce_sum.35891)
}

%region_1493.35900 (reduce_sum.344: f32[], reduce_sum.35898: f32[]) -> f32[] {
  %reduce_sum.344 = f32[] parameter(0)
  %reduce_sum.35898 = f32[] parameter(1)
  ROOT %reduce_sum.35899 = f32[] add(%reduce_sum.344, %reduce_sum.35898)
}

%region_1494.35907 (reduce_sum.345: f32[], reduce_sum.35905: f32[]) -> f32[] {
  %reduce_sum.345 = f32[] parameter(0)
  %reduce_sum.35905 = f32[] parameter(1)
  ROOT %reduce_sum.35906 = f32[] add(%reduce_sum.345, %reduce_sum.35905)
}

%region_1495.35914 (reduce_sum.346: f32[], reduce_sum.35912: f32[]) -> f32[] {
  %reduce_sum.346 = f32[] parameter(0)
  %reduce_sum.35912 = f32[] parameter(1)
  ROOT %reduce_sum.35913 = f32[] add(%reduce_sum.346, %reduce_sum.35912)
}

%region_1496.35921 (reduce_sum.347: f32[], reduce_sum.35919: f32[]) -> f32[] {
  %reduce_sum.347 = f32[] parameter(0)
  %reduce_sum.35919 = f32[] parameter(1)
  ROOT %reduce_sum.35920 = f32[] add(%reduce_sum.347, %reduce_sum.35919)
}

%region_1497.35928 (reduce_sum.348: f32[], reduce_sum.35926: f32[]) -> f32[] {
  %reduce_sum.348 = f32[] parameter(0)
  %reduce_sum.35926 = f32[] parameter(1)
  ROOT %reduce_sum.35927 = f32[] add(%reduce_sum.348, %reduce_sum.35926)
}

%region_1498.35935 (reduce_sum.349: f32[], reduce_sum.35933: f32[]) -> f32[] {
  %reduce_sum.349 = f32[] parameter(0)
  %reduce_sum.35933 = f32[] parameter(1)
  ROOT %reduce_sum.35934 = f32[] add(%reduce_sum.349, %reduce_sum.35933)
}

%region_1499.35942 (reduce_sum.350: f32[], reduce_sum.35940: f32[]) -> f32[] {
  %reduce_sum.350 = f32[] parameter(0)
  %reduce_sum.35940 = f32[] parameter(1)
  ROOT %reduce_sum.35941 = f32[] add(%reduce_sum.350, %reduce_sum.35940)
}

%region_1500.35949 (reduce_sum.351: f32[], reduce_sum.35947: f32[]) -> f32[] {
  %reduce_sum.351 = f32[] parameter(0)
  %reduce_sum.35947 = f32[] parameter(1)
  ROOT %reduce_sum.35948 = f32[] add(%reduce_sum.351, %reduce_sum.35947)
}

%region_1501.35956 (reduce_sum.352: f32[], reduce_sum.35954: f32[]) -> f32[] {
  %reduce_sum.352 = f32[] parameter(0)
  %reduce_sum.35954 = f32[] parameter(1)
  ROOT %reduce_sum.35955 = f32[] add(%reduce_sum.352, %reduce_sum.35954)
}

%region_1502.35963 (reduce_sum.353: f32[], reduce_sum.35961: f32[]) -> f32[] {
  %reduce_sum.353 = f32[] parameter(0)
  %reduce_sum.35961 = f32[] parameter(1)
  ROOT %reduce_sum.35962 = f32[] add(%reduce_sum.353, %reduce_sum.35961)
}

%region_1503.35970 (reduce_sum.354: f32[], reduce_sum.35968: f32[]) -> f32[] {
  %reduce_sum.354 = f32[] parameter(0)
  %reduce_sum.35968 = f32[] parameter(1)
  ROOT %reduce_sum.35969 = f32[] add(%reduce_sum.354, %reduce_sum.35968)
}

%region_1504.35977 (reduce_sum.355: f32[], reduce_sum.35975: f32[]) -> f32[] {
  %reduce_sum.355 = f32[] parameter(0)
  %reduce_sum.35975 = f32[] parameter(1)
  ROOT %reduce_sum.35976 = f32[] add(%reduce_sum.355, %reduce_sum.35975)
}

%region_1505.35984 (reduce_sum.356: f32[], reduce_sum.35982: f32[]) -> f32[] {
  %reduce_sum.356 = f32[] parameter(0)
  %reduce_sum.35982 = f32[] parameter(1)
  ROOT %reduce_sum.35983 = f32[] add(%reduce_sum.356, %reduce_sum.35982)
}

%region_1506.35991 (reduce_sum.357: f32[], reduce_sum.35989: f32[]) -> f32[] {
  %reduce_sum.357 = f32[] parameter(0)
  %reduce_sum.35989 = f32[] parameter(1)
  ROOT %reduce_sum.35990 = f32[] add(%reduce_sum.357, %reduce_sum.35989)
}

%region_1507.35998 (reduce_sum.358: f32[], reduce_sum.35996: f32[]) -> f32[] {
  %reduce_sum.358 = f32[] parameter(0)
  %reduce_sum.35996 = f32[] parameter(1)
  ROOT %reduce_sum.35997 = f32[] add(%reduce_sum.358, %reduce_sum.35996)
}

%region_1508.36005 (reduce_sum.359: f32[], reduce_sum.36003: f32[]) -> f32[] {
  %reduce_sum.359 = f32[] parameter(0)
  %reduce_sum.36003 = f32[] parameter(1)
  ROOT %reduce_sum.36004 = f32[] add(%reduce_sum.359, %reduce_sum.36003)
}

%region_1509.36012 (reduce_sum.360: f32[], reduce_sum.36010: f32[]) -> f32[] {
  %reduce_sum.360 = f32[] parameter(0)
  %reduce_sum.36010 = f32[] parameter(1)
  ROOT %reduce_sum.36011 = f32[] add(%reduce_sum.360, %reduce_sum.36010)
}

%region_1510.36019 (reduce_sum.361: f32[], reduce_sum.36017: f32[]) -> f32[] {
  %reduce_sum.361 = f32[] parameter(0)
  %reduce_sum.36017 = f32[] parameter(1)
  ROOT %reduce_sum.36018 = f32[] add(%reduce_sum.361, %reduce_sum.36017)
}

%region_1511.36026 (reduce_sum.362: f32[], reduce_sum.36024: f32[]) -> f32[] {
  %reduce_sum.362 = f32[] parameter(0)
  %reduce_sum.36024 = f32[] parameter(1)
  ROOT %reduce_sum.36025 = f32[] add(%reduce_sum.362, %reduce_sum.36024)
}

%region_1512.36033 (reduce_sum.363: f32[], reduce_sum.36031: f32[]) -> f32[] {
  %reduce_sum.363 = f32[] parameter(0)
  %reduce_sum.36031 = f32[] parameter(1)
  ROOT %reduce_sum.36032 = f32[] add(%reduce_sum.363, %reduce_sum.36031)
}

%region_1513.36040 (reduce_sum.364: f32[], reduce_sum.36038: f32[]) -> f32[] {
  %reduce_sum.364 = f32[] parameter(0)
  %reduce_sum.36038 = f32[] parameter(1)
  ROOT %reduce_sum.36039 = f32[] add(%reduce_sum.364, %reduce_sum.36038)
}

%region_1514.36047 (reduce_sum.365: f32[], reduce_sum.36045: f32[]) -> f32[] {
  %reduce_sum.365 = f32[] parameter(0)
  %reduce_sum.36045 = f32[] parameter(1)
  ROOT %reduce_sum.36046 = f32[] add(%reduce_sum.365, %reduce_sum.36045)
}

%region_1515.36054 (reduce_sum.366: f32[], reduce_sum.36052: f32[]) -> f32[] {
  %reduce_sum.366 = f32[] parameter(0)
  %reduce_sum.36052 = f32[] parameter(1)
  ROOT %reduce_sum.36053 = f32[] add(%reduce_sum.366, %reduce_sum.36052)
}

%region_1516.36061 (reduce_sum.367: f32[], reduce_sum.36059: f32[]) -> f32[] {
  %reduce_sum.367 = f32[] parameter(0)
  %reduce_sum.36059 = f32[] parameter(1)
  ROOT %reduce_sum.36060 = f32[] add(%reduce_sum.367, %reduce_sum.36059)
}

%region_1517.36068 (reduce_sum.368: f32[], reduce_sum.36066: f32[]) -> f32[] {
  %reduce_sum.368 = f32[] parameter(0)
  %reduce_sum.36066 = f32[] parameter(1)
  ROOT %reduce_sum.36067 = f32[] add(%reduce_sum.368, %reduce_sum.36066)
}

%region_1518.36075 (reduce_sum.369: f32[], reduce_sum.36073: f32[]) -> f32[] {
  %reduce_sum.369 = f32[] parameter(0)
  %reduce_sum.36073 = f32[] parameter(1)
  ROOT %reduce_sum.36074 = f32[] add(%reduce_sum.369, %reduce_sum.36073)
}

%region_1519.36082 (reduce_sum.370: f32[], reduce_sum.36080: f32[]) -> f32[] {
  %reduce_sum.370 = f32[] parameter(0)
  %reduce_sum.36080 = f32[] parameter(1)
  ROOT %reduce_sum.36081 = f32[] add(%reduce_sum.370, %reduce_sum.36080)
}

%region_1520.36089 (reduce_sum.371: f32[], reduce_sum.36087: f32[]) -> f32[] {
  %reduce_sum.371 = f32[] parameter(0)
  %reduce_sum.36087 = f32[] parameter(1)
  ROOT %reduce_sum.36088 = f32[] add(%reduce_sum.371, %reduce_sum.36087)
}

%region_1521.36096 (reduce_sum.372: f32[], reduce_sum.36094: f32[]) -> f32[] {
  %reduce_sum.372 = f32[] parameter(0)
  %reduce_sum.36094 = f32[] parameter(1)
  ROOT %reduce_sum.36095 = f32[] add(%reduce_sum.372, %reduce_sum.36094)
}

%region_1522.36103 (reduce_sum.373: f32[], reduce_sum.36101: f32[]) -> f32[] {
  %reduce_sum.373 = f32[] parameter(0)
  %reduce_sum.36101 = f32[] parameter(1)
  ROOT %reduce_sum.36102 = f32[] add(%reduce_sum.373, %reduce_sum.36101)
}

%region_1523.36110 (reduce_sum.374: f32[], reduce_sum.36108: f32[]) -> f32[] {
  %reduce_sum.374 = f32[] parameter(0)
  %reduce_sum.36108 = f32[] parameter(1)
  ROOT %reduce_sum.36109 = f32[] add(%reduce_sum.374, %reduce_sum.36108)
}

%region_1524.36117 (reduce_sum.375: f32[], reduce_sum.36115: f32[]) -> f32[] {
  %reduce_sum.375 = f32[] parameter(0)
  %reduce_sum.36115 = f32[] parameter(1)
  ROOT %reduce_sum.36116 = f32[] add(%reduce_sum.375, %reduce_sum.36115)
}

%region_1525.36124 (reduce_sum.376: f32[], reduce_sum.36122: f32[]) -> f32[] {
  %reduce_sum.376 = f32[] parameter(0)
  %reduce_sum.36122 = f32[] parameter(1)
  ROOT %reduce_sum.36123 = f32[] add(%reduce_sum.376, %reduce_sum.36122)
}

%region_1526.36131 (reduce_sum.377: f32[], reduce_sum.36129: f32[]) -> f32[] {
  %reduce_sum.377 = f32[] parameter(0)
  %reduce_sum.36129 = f32[] parameter(1)
  ROOT %reduce_sum.36130 = f32[] add(%reduce_sum.377, %reduce_sum.36129)
}

%region_1527.36138 (reduce_sum.378: f32[], reduce_sum.36136: f32[]) -> f32[] {
  %reduce_sum.378 = f32[] parameter(0)
  %reduce_sum.36136 = f32[] parameter(1)
  ROOT %reduce_sum.36137 = f32[] add(%reduce_sum.378, %reduce_sum.36136)
}

%region_1528.36145 (reduce_sum.379: f32[], reduce_sum.36143: f32[]) -> f32[] {
  %reduce_sum.379 = f32[] parameter(0)
  %reduce_sum.36143 = f32[] parameter(1)
  ROOT %reduce_sum.36144 = f32[] add(%reduce_sum.379, %reduce_sum.36143)
}

%region_1529.36152 (reduce_sum.380: f32[], reduce_sum.36150: f32[]) -> f32[] {
  %reduce_sum.380 = f32[] parameter(0)
  %reduce_sum.36150 = f32[] parameter(1)
  ROOT %reduce_sum.36151 = f32[] add(%reduce_sum.380, %reduce_sum.36150)
}

%region_1530.36159 (reduce_sum.381: f32[], reduce_sum.36157: f32[]) -> f32[] {
  %reduce_sum.381 = f32[] parameter(0)
  %reduce_sum.36157 = f32[] parameter(1)
  ROOT %reduce_sum.36158 = f32[] add(%reduce_sum.381, %reduce_sum.36157)
}

%region_1531.36166 (reduce_sum.382: f32[], reduce_sum.36164: f32[]) -> f32[] {
  %reduce_sum.382 = f32[] parameter(0)
  %reduce_sum.36164 = f32[] parameter(1)
  ROOT %reduce_sum.36165 = f32[] add(%reduce_sum.382, %reduce_sum.36164)
}

%region_1532.36173 (reduce_sum.383: f32[], reduce_sum.36171: f32[]) -> f32[] {
  %reduce_sum.383 = f32[] parameter(0)
  %reduce_sum.36171 = f32[] parameter(1)
  ROOT %reduce_sum.36172 = f32[] add(%reduce_sum.383, %reduce_sum.36171)
}

%region_1533.36180 (reduce_sum.384: f32[], reduce_sum.36178: f32[]) -> f32[] {
  %reduce_sum.384 = f32[] parameter(0)
  %reduce_sum.36178 = f32[] parameter(1)
  ROOT %reduce_sum.36179 = f32[] add(%reduce_sum.384, %reduce_sum.36178)
}

%region_1534.36187 (reduce_sum.385: f32[], reduce_sum.36185: f32[]) -> f32[] {
  %reduce_sum.385 = f32[] parameter(0)
  %reduce_sum.36185 = f32[] parameter(1)
  ROOT %reduce_sum.36186 = f32[] add(%reduce_sum.385, %reduce_sum.36185)
}

%region_1535.36194 (reduce_sum.386: f32[], reduce_sum.36192: f32[]) -> f32[] {
  %reduce_sum.386 = f32[] parameter(0)
  %reduce_sum.36192 = f32[] parameter(1)
  ROOT %reduce_sum.36193 = f32[] add(%reduce_sum.386, %reduce_sum.36192)
}

%region_1536.36201 (reduce_sum.387: f32[], reduce_sum.36199: f32[]) -> f32[] {
  %reduce_sum.387 = f32[] parameter(0)
  %reduce_sum.36199 = f32[] parameter(1)
  ROOT %reduce_sum.36200 = f32[] add(%reduce_sum.387, %reduce_sum.36199)
}

%region_1537.36208 (reduce_sum.388: f32[], reduce_sum.36206: f32[]) -> f32[] {
  %reduce_sum.388 = f32[] parameter(0)
  %reduce_sum.36206 = f32[] parameter(1)
  ROOT %reduce_sum.36207 = f32[] add(%reduce_sum.388, %reduce_sum.36206)
}

%region_1538.36215 (reduce_sum.389: f32[], reduce_sum.36213: f32[]) -> f32[] {
  %reduce_sum.389 = f32[] parameter(0)
  %reduce_sum.36213 = f32[] parameter(1)
  ROOT %reduce_sum.36214 = f32[] add(%reduce_sum.389, %reduce_sum.36213)
}

%region_1539.36222 (reduce_sum.390: f32[], reduce_sum.36220: f32[]) -> f32[] {
  %reduce_sum.390 = f32[] parameter(0)
  %reduce_sum.36220 = f32[] parameter(1)
  ROOT %reduce_sum.36221 = f32[] add(%reduce_sum.390, %reduce_sum.36220)
}

%region_1540.36229 (reduce_sum.391: f32[], reduce_sum.36227: f32[]) -> f32[] {
  %reduce_sum.391 = f32[] parameter(0)
  %reduce_sum.36227 = f32[] parameter(1)
  ROOT %reduce_sum.36228 = f32[] add(%reduce_sum.391, %reduce_sum.36227)
}

%region_1541.36236 (reduce_sum.392: f32[], reduce_sum.36234: f32[]) -> f32[] {
  %reduce_sum.392 = f32[] parameter(0)
  %reduce_sum.36234 = f32[] parameter(1)
  ROOT %reduce_sum.36235 = f32[] add(%reduce_sum.392, %reduce_sum.36234)
}

%region_1542.36243 (reduce_sum.393: f32[], reduce_sum.36241: f32[]) -> f32[] {
  %reduce_sum.393 = f32[] parameter(0)
  %reduce_sum.36241 = f32[] parameter(1)
  ROOT %reduce_sum.36242 = f32[] add(%reduce_sum.393, %reduce_sum.36241)
}

%region_1543.36250 (reduce_sum.394: f32[], reduce_sum.36248: f32[]) -> f32[] {
  %reduce_sum.394 = f32[] parameter(0)
  %reduce_sum.36248 = f32[] parameter(1)
  ROOT %reduce_sum.36249 = f32[] add(%reduce_sum.394, %reduce_sum.36248)
}

%region_1544.36257 (reduce_sum.395: f32[], reduce_sum.36255: f32[]) -> f32[] {
  %reduce_sum.395 = f32[] parameter(0)
  %reduce_sum.36255 = f32[] parameter(1)
  ROOT %reduce_sum.36256 = f32[] add(%reduce_sum.395, %reduce_sum.36255)
}

%region_1545.36264 (reduce_sum.396: f32[], reduce_sum.36262: f32[]) -> f32[] {
  %reduce_sum.396 = f32[] parameter(0)
  %reduce_sum.36262 = f32[] parameter(1)
  ROOT %reduce_sum.36263 = f32[] add(%reduce_sum.396, %reduce_sum.36262)
}

%region_1546.36271 (reduce_sum.397: f32[], reduce_sum.36269: f32[]) -> f32[] {
  %reduce_sum.397 = f32[] parameter(0)
  %reduce_sum.36269 = f32[] parameter(1)
  ROOT %reduce_sum.36270 = f32[] add(%reduce_sum.397, %reduce_sum.36269)
}

%region_1547.36278 (reduce_sum.398: f32[], reduce_sum.36276: f32[]) -> f32[] {
  %reduce_sum.398 = f32[] parameter(0)
  %reduce_sum.36276 = f32[] parameter(1)
  ROOT %reduce_sum.36277 = f32[] add(%reduce_sum.398, %reduce_sum.36276)
}

%region_1548.36285 (reduce_sum.399: f32[], reduce_sum.36283: f32[]) -> f32[] {
  %reduce_sum.399 = f32[] parameter(0)
  %reduce_sum.36283 = f32[] parameter(1)
  ROOT %reduce_sum.36284 = f32[] add(%reduce_sum.399, %reduce_sum.36283)
}

%region_1549.36292 (reduce_sum.400: f32[], reduce_sum.36290: f32[]) -> f32[] {
  %reduce_sum.400 = f32[] parameter(0)
  %reduce_sum.36290 = f32[] parameter(1)
  ROOT %reduce_sum.36291 = f32[] add(%reduce_sum.400, %reduce_sum.36290)
}

%region_1550.36299 (reduce_sum.401: f32[], reduce_sum.36297: f32[]) -> f32[] {
  %reduce_sum.401 = f32[] parameter(0)
  %reduce_sum.36297 = f32[] parameter(1)
  ROOT %reduce_sum.36298 = f32[] add(%reduce_sum.401, %reduce_sum.36297)
}

%region_1551.36306 (reduce_sum.402: f32[], reduce_sum.36304: f32[]) -> f32[] {
  %reduce_sum.402 = f32[] parameter(0)
  %reduce_sum.36304 = f32[] parameter(1)
  ROOT %reduce_sum.36305 = f32[] add(%reduce_sum.402, %reduce_sum.36304)
}

%region_1552.36313 (reduce_sum.403: f32[], reduce_sum.36311: f32[]) -> f32[] {
  %reduce_sum.403 = f32[] parameter(0)
  %reduce_sum.36311 = f32[] parameter(1)
  ROOT %reduce_sum.36312 = f32[] add(%reduce_sum.403, %reduce_sum.36311)
}

%region_1553.36320 (reduce_sum.404: f32[], reduce_sum.36318: f32[]) -> f32[] {
  %reduce_sum.404 = f32[] parameter(0)
  %reduce_sum.36318 = f32[] parameter(1)
  ROOT %reduce_sum.36319 = f32[] add(%reduce_sum.404, %reduce_sum.36318)
}

%region_1554.36327 (reduce_sum.405: f32[], reduce_sum.36325: f32[]) -> f32[] {
  %reduce_sum.405 = f32[] parameter(0)
  %reduce_sum.36325 = f32[] parameter(1)
  ROOT %reduce_sum.36326 = f32[] add(%reduce_sum.405, %reduce_sum.36325)
}

%region_1555.36334 (reduce_sum.406: f32[], reduce_sum.36332: f32[]) -> f32[] {
  %reduce_sum.406 = f32[] parameter(0)
  %reduce_sum.36332 = f32[] parameter(1)
  ROOT %reduce_sum.36333 = f32[] add(%reduce_sum.406, %reduce_sum.36332)
}

%region_1556.36341 (reduce_sum.407: f32[], reduce_sum.36339: f32[]) -> f32[] {
  %reduce_sum.407 = f32[] parameter(0)
  %reduce_sum.36339 = f32[] parameter(1)
  ROOT %reduce_sum.36340 = f32[] add(%reduce_sum.407, %reduce_sum.36339)
}

%region_1557.36348 (reduce_sum.408: f32[], reduce_sum.36346: f32[]) -> f32[] {
  %reduce_sum.408 = f32[] parameter(0)
  %reduce_sum.36346 = f32[] parameter(1)
  ROOT %reduce_sum.36347 = f32[] add(%reduce_sum.408, %reduce_sum.36346)
}

%region_1558.36355 (reduce_sum.409: f32[], reduce_sum.36353: f32[]) -> f32[] {
  %reduce_sum.409 = f32[] parameter(0)
  %reduce_sum.36353 = f32[] parameter(1)
  ROOT %reduce_sum.36354 = f32[] add(%reduce_sum.409, %reduce_sum.36353)
}

%region_1559.36362 (reduce_sum.410: f32[], reduce_sum.36360: f32[]) -> f32[] {
  %reduce_sum.410 = f32[] parameter(0)
  %reduce_sum.36360 = f32[] parameter(1)
  ROOT %reduce_sum.36361 = f32[] add(%reduce_sum.410, %reduce_sum.36360)
}

%region_1560.36369 (reduce_sum.411: f32[], reduce_sum.36367: f32[]) -> f32[] {
  %reduce_sum.411 = f32[] parameter(0)
  %reduce_sum.36367 = f32[] parameter(1)
  ROOT %reduce_sum.36368 = f32[] add(%reduce_sum.411, %reduce_sum.36367)
}

%region_1561.36376 (reduce_sum.412: f32[], reduce_sum.36374: f32[]) -> f32[] {
  %reduce_sum.412 = f32[] parameter(0)
  %reduce_sum.36374 = f32[] parameter(1)
  ROOT %reduce_sum.36375 = f32[] add(%reduce_sum.412, %reduce_sum.36374)
}

%region_1562.36383 (reduce_sum.413: f32[], reduce_sum.36381: f32[]) -> f32[] {
  %reduce_sum.413 = f32[] parameter(0)
  %reduce_sum.36381 = f32[] parameter(1)
  ROOT %reduce_sum.36382 = f32[] add(%reduce_sum.413, %reduce_sum.36381)
}

%region_1563.36390 (reduce_sum.414: f32[], reduce_sum.36388: f32[]) -> f32[] {
  %reduce_sum.414 = f32[] parameter(0)
  %reduce_sum.36388 = f32[] parameter(1)
  ROOT %reduce_sum.36389 = f32[] add(%reduce_sum.414, %reduce_sum.36388)
}

%region_1564.36397 (reduce_sum.415: f32[], reduce_sum.36395: f32[]) -> f32[] {
  %reduce_sum.415 = f32[] parameter(0)
  %reduce_sum.36395 = f32[] parameter(1)
  ROOT %reduce_sum.36396 = f32[] add(%reduce_sum.415, %reduce_sum.36395)
}

%region_1565.36404 (reduce_sum.416: f32[], reduce_sum.36402: f32[]) -> f32[] {
  %reduce_sum.416 = f32[] parameter(0)
  %reduce_sum.36402 = f32[] parameter(1)
  ROOT %reduce_sum.36403 = f32[] add(%reduce_sum.416, %reduce_sum.36402)
}

%region_1566.36411 (reduce_sum.417: f32[], reduce_sum.36409: f32[]) -> f32[] {
  %reduce_sum.417 = f32[] parameter(0)
  %reduce_sum.36409 = f32[] parameter(1)
  ROOT %reduce_sum.36410 = f32[] add(%reduce_sum.417, %reduce_sum.36409)
}

%region_1567.36418 (reduce_sum.418: f32[], reduce_sum.36416: f32[]) -> f32[] {
  %reduce_sum.418 = f32[] parameter(0)
  %reduce_sum.36416 = f32[] parameter(1)
  ROOT %reduce_sum.36417 = f32[] add(%reduce_sum.418, %reduce_sum.36416)
}

%region_1568.36425 (reduce_sum.419: f32[], reduce_sum.36423: f32[]) -> f32[] {
  %reduce_sum.419 = f32[] parameter(0)
  %reduce_sum.36423 = f32[] parameter(1)
  ROOT %reduce_sum.36424 = f32[] add(%reduce_sum.419, %reduce_sum.36423)
}

%region_1569.36432 (reduce_sum.420: f32[], reduce_sum.36430: f32[]) -> f32[] {
  %reduce_sum.420 = f32[] parameter(0)
  %reduce_sum.36430 = f32[] parameter(1)
  ROOT %reduce_sum.36431 = f32[] add(%reduce_sum.420, %reduce_sum.36430)
}

%region_1570.36439 (reduce_sum.421: f32[], reduce_sum.36437: f32[]) -> f32[] {
  %reduce_sum.421 = f32[] parameter(0)
  %reduce_sum.36437 = f32[] parameter(1)
  ROOT %reduce_sum.36438 = f32[] add(%reduce_sum.421, %reduce_sum.36437)
}

%region_1571.36446 (reduce_sum.422: f32[], reduce_sum.36444: f32[]) -> f32[] {
  %reduce_sum.422 = f32[] parameter(0)
  %reduce_sum.36444 = f32[] parameter(1)
  ROOT %reduce_sum.36445 = f32[] add(%reduce_sum.422, %reduce_sum.36444)
}

%region_1572.36453 (reduce_sum.423: f32[], reduce_sum.36451: f32[]) -> f32[] {
  %reduce_sum.423 = f32[] parameter(0)
  %reduce_sum.36451 = f32[] parameter(1)
  ROOT %reduce_sum.36452 = f32[] add(%reduce_sum.423, %reduce_sum.36451)
}

%region_1573.36460 (reduce_sum.424: f32[], reduce_sum.36458: f32[]) -> f32[] {
  %reduce_sum.424 = f32[] parameter(0)
  %reduce_sum.36458 = f32[] parameter(1)
  ROOT %reduce_sum.36459 = f32[] add(%reduce_sum.424, %reduce_sum.36458)
}

%region_1574.36467 (reduce_sum.425: f32[], reduce_sum.36465: f32[]) -> f32[] {
  %reduce_sum.425 = f32[] parameter(0)
  %reduce_sum.36465 = f32[] parameter(1)
  ROOT %reduce_sum.36466 = f32[] add(%reduce_sum.425, %reduce_sum.36465)
}

%region_1575.36474 (reduce_sum.426: f32[], reduce_sum.36472: f32[]) -> f32[] {
  %reduce_sum.426 = f32[] parameter(0)
  %reduce_sum.36472 = f32[] parameter(1)
  ROOT %reduce_sum.36473 = f32[] add(%reduce_sum.426, %reduce_sum.36472)
}

%region_1576.36481 (reduce_sum.427: f32[], reduce_sum.36479: f32[]) -> f32[] {
  %reduce_sum.427 = f32[] parameter(0)
  %reduce_sum.36479 = f32[] parameter(1)
  ROOT %reduce_sum.36480 = f32[] add(%reduce_sum.427, %reduce_sum.36479)
}

%region_1577.36488 (reduce_sum.428: f32[], reduce_sum.36486: f32[]) -> f32[] {
  %reduce_sum.428 = f32[] parameter(0)
  %reduce_sum.36486 = f32[] parameter(1)
  ROOT %reduce_sum.36487 = f32[] add(%reduce_sum.428, %reduce_sum.36486)
}

%region_1578.36495 (reduce_sum.429: f32[], reduce_sum.36493: f32[]) -> f32[] {
  %reduce_sum.429 = f32[] parameter(0)
  %reduce_sum.36493 = f32[] parameter(1)
  ROOT %reduce_sum.36494 = f32[] add(%reduce_sum.429, %reduce_sum.36493)
}

%region_1579.36502 (reduce_sum.430: f32[], reduce_sum.36500: f32[]) -> f32[] {
  %reduce_sum.430 = f32[] parameter(0)
  %reduce_sum.36500 = f32[] parameter(1)
  ROOT %reduce_sum.36501 = f32[] add(%reduce_sum.430, %reduce_sum.36500)
}

%region_1580.36509 (reduce_sum.431: f32[], reduce_sum.36507: f32[]) -> f32[] {
  %reduce_sum.431 = f32[] parameter(0)
  %reduce_sum.36507 = f32[] parameter(1)
  ROOT %reduce_sum.36508 = f32[] add(%reduce_sum.431, %reduce_sum.36507)
}

%region_1581.36516 (reduce_sum.432: f32[], reduce_sum.36514: f32[]) -> f32[] {
  %reduce_sum.432 = f32[] parameter(0)
  %reduce_sum.36514 = f32[] parameter(1)
  ROOT %reduce_sum.36515 = f32[] add(%reduce_sum.432, %reduce_sum.36514)
}

%region_1582.36523 (reduce_sum.433: f32[], reduce_sum.36521: f32[]) -> f32[] {
  %reduce_sum.433 = f32[] parameter(0)
  %reduce_sum.36521 = f32[] parameter(1)
  ROOT %reduce_sum.36522 = f32[] add(%reduce_sum.433, %reduce_sum.36521)
}

%region_1583.36530 (reduce_sum.434: f32[], reduce_sum.36528: f32[]) -> f32[] {
  %reduce_sum.434 = f32[] parameter(0)
  %reduce_sum.36528 = f32[] parameter(1)
  ROOT %reduce_sum.36529 = f32[] add(%reduce_sum.434, %reduce_sum.36528)
}

%region_1584.36537 (reduce_sum.435: f32[], reduce_sum.36535: f32[]) -> f32[] {
  %reduce_sum.435 = f32[] parameter(0)
  %reduce_sum.36535 = f32[] parameter(1)
  ROOT %reduce_sum.36536 = f32[] add(%reduce_sum.435, %reduce_sum.36535)
}

%region_1585.36544 (reduce_sum.436: f32[], reduce_sum.36542: f32[]) -> f32[] {
  %reduce_sum.436 = f32[] parameter(0)
  %reduce_sum.36542 = f32[] parameter(1)
  ROOT %reduce_sum.36543 = f32[] add(%reduce_sum.436, %reduce_sum.36542)
}

%region_1586.36551 (reduce_sum.437: f32[], reduce_sum.36549: f32[]) -> f32[] {
  %reduce_sum.437 = f32[] parameter(0)
  %reduce_sum.36549 = f32[] parameter(1)
  ROOT %reduce_sum.36550 = f32[] add(%reduce_sum.437, %reduce_sum.36549)
}

%region_1587.36558 (reduce_sum.438: f32[], reduce_sum.36556: f32[]) -> f32[] {
  %reduce_sum.438 = f32[] parameter(0)
  %reduce_sum.36556 = f32[] parameter(1)
  ROOT %reduce_sum.36557 = f32[] add(%reduce_sum.438, %reduce_sum.36556)
}

%region_1588.36565 (reduce_sum.439: f32[], reduce_sum.36563: f32[]) -> f32[] {
  %reduce_sum.439 = f32[] parameter(0)
  %reduce_sum.36563 = f32[] parameter(1)
  ROOT %reduce_sum.36564 = f32[] add(%reduce_sum.439, %reduce_sum.36563)
}

%region_1589.36572 (reduce_sum.440: f32[], reduce_sum.36570: f32[]) -> f32[] {
  %reduce_sum.440 = f32[] parameter(0)
  %reduce_sum.36570 = f32[] parameter(1)
  ROOT %reduce_sum.36571 = f32[] add(%reduce_sum.440, %reduce_sum.36570)
}

%region_1590.36579 (reduce_sum.441: f32[], reduce_sum.36577: f32[]) -> f32[] {
  %reduce_sum.441 = f32[] parameter(0)
  %reduce_sum.36577 = f32[] parameter(1)
  ROOT %reduce_sum.36578 = f32[] add(%reduce_sum.441, %reduce_sum.36577)
}

%region_1591.36586 (reduce_sum.442: f32[], reduce_sum.36584: f32[]) -> f32[] {
  %reduce_sum.442 = f32[] parameter(0)
  %reduce_sum.36584 = f32[] parameter(1)
  ROOT %reduce_sum.36585 = f32[] add(%reduce_sum.442, %reduce_sum.36584)
}

%region_1592.36593 (reduce_sum.443: f32[], reduce_sum.36591: f32[]) -> f32[] {
  %reduce_sum.443 = f32[] parameter(0)
  %reduce_sum.36591 = f32[] parameter(1)
  ROOT %reduce_sum.36592 = f32[] add(%reduce_sum.443, %reduce_sum.36591)
}

%region_1593.36600 (reduce_sum.444: f32[], reduce_sum.36598: f32[]) -> f32[] {
  %reduce_sum.444 = f32[] parameter(0)
  %reduce_sum.36598 = f32[] parameter(1)
  ROOT %reduce_sum.36599 = f32[] add(%reduce_sum.444, %reduce_sum.36598)
}

%region_1594.36607 (reduce_sum.445: f32[], reduce_sum.36605: f32[]) -> f32[] {
  %reduce_sum.445 = f32[] parameter(0)
  %reduce_sum.36605 = f32[] parameter(1)
  ROOT %reduce_sum.36606 = f32[] add(%reduce_sum.445, %reduce_sum.36605)
}

%region_1595.36614 (reduce_sum.446: f32[], reduce_sum.36612: f32[]) -> f32[] {
  %reduce_sum.446 = f32[] parameter(0)
  %reduce_sum.36612 = f32[] parameter(1)
  ROOT %reduce_sum.36613 = f32[] add(%reduce_sum.446, %reduce_sum.36612)
}

%region_1596.36621 (reduce_sum.447: f32[], reduce_sum.36619: f32[]) -> f32[] {
  %reduce_sum.447 = f32[] parameter(0)
  %reduce_sum.36619 = f32[] parameter(1)
  ROOT %reduce_sum.36620 = f32[] add(%reduce_sum.447, %reduce_sum.36619)
}

%region_1597.36628 (reduce_sum.448: f32[], reduce_sum.36626: f32[]) -> f32[] {
  %reduce_sum.448 = f32[] parameter(0)
  %reduce_sum.36626 = f32[] parameter(1)
  ROOT %reduce_sum.36627 = f32[] add(%reduce_sum.448, %reduce_sum.36626)
}

%region_1598.36635 (reduce_sum.449: f32[], reduce_sum.36633: f32[]) -> f32[] {
  %reduce_sum.449 = f32[] parameter(0)
  %reduce_sum.36633 = f32[] parameter(1)
  ROOT %reduce_sum.36634 = f32[] add(%reduce_sum.449, %reduce_sum.36633)
}

%region_1599.36642 (reduce_sum.450: f32[], reduce_sum.36640: f32[]) -> f32[] {
  %reduce_sum.450 = f32[] parameter(0)
  %reduce_sum.36640 = f32[] parameter(1)
  ROOT %reduce_sum.36641 = f32[] add(%reduce_sum.450, %reduce_sum.36640)
}

%region_1600.36649 (reduce_sum.451: f32[], reduce_sum.36647: f32[]) -> f32[] {
  %reduce_sum.451 = f32[] parameter(0)
  %reduce_sum.36647 = f32[] parameter(1)
  ROOT %reduce_sum.36648 = f32[] add(%reduce_sum.451, %reduce_sum.36647)
}

%region_1601.36656 (reduce_sum.452: f32[], reduce_sum.36654: f32[]) -> f32[] {
  %reduce_sum.452 = f32[] parameter(0)
  %reduce_sum.36654 = f32[] parameter(1)
  ROOT %reduce_sum.36655 = f32[] add(%reduce_sum.452, %reduce_sum.36654)
}

%region_1602.36663 (reduce_sum.453: f32[], reduce_sum.36661: f32[]) -> f32[] {
  %reduce_sum.453 = f32[] parameter(0)
  %reduce_sum.36661 = f32[] parameter(1)
  ROOT %reduce_sum.36662 = f32[] add(%reduce_sum.453, %reduce_sum.36661)
}

%region_1603.36670 (reduce_sum.454: f32[], reduce_sum.36668: f32[]) -> f32[] {
  %reduce_sum.454 = f32[] parameter(0)
  %reduce_sum.36668 = f32[] parameter(1)
  ROOT %reduce_sum.36669 = f32[] add(%reduce_sum.454, %reduce_sum.36668)
}

%region_1604.36677 (reduce_sum.455: f32[], reduce_sum.36675: f32[]) -> f32[] {
  %reduce_sum.455 = f32[] parameter(0)
  %reduce_sum.36675 = f32[] parameter(1)
  ROOT %reduce_sum.36676 = f32[] add(%reduce_sum.455, %reduce_sum.36675)
}

%region_1605.36684 (reduce_sum.456: f32[], reduce_sum.36682: f32[]) -> f32[] {
  %reduce_sum.456 = f32[] parameter(0)
  %reduce_sum.36682 = f32[] parameter(1)
  ROOT %reduce_sum.36683 = f32[] add(%reduce_sum.456, %reduce_sum.36682)
}

%region_1606.36691 (reduce_sum.457: f32[], reduce_sum.36689: f32[]) -> f32[] {
  %reduce_sum.457 = f32[] parameter(0)
  %reduce_sum.36689 = f32[] parameter(1)
  ROOT %reduce_sum.36690 = f32[] add(%reduce_sum.457, %reduce_sum.36689)
}

%region_1607.36698 (reduce_sum.458: f32[], reduce_sum.36696: f32[]) -> f32[] {
  %reduce_sum.458 = f32[] parameter(0)
  %reduce_sum.36696 = f32[] parameter(1)
  ROOT %reduce_sum.36697 = f32[] add(%reduce_sum.458, %reduce_sum.36696)
}

%region_1608.36705 (reduce_sum.459: f32[], reduce_sum.36703: f32[]) -> f32[] {
  %reduce_sum.459 = f32[] parameter(0)
  %reduce_sum.36703 = f32[] parameter(1)
  ROOT %reduce_sum.36704 = f32[] add(%reduce_sum.459, %reduce_sum.36703)
}

%region_1609.36712 (reduce_sum.460: f32[], reduce_sum.36710: f32[]) -> f32[] {
  %reduce_sum.460 = f32[] parameter(0)
  %reduce_sum.36710 = f32[] parameter(1)
  ROOT %reduce_sum.36711 = f32[] add(%reduce_sum.460, %reduce_sum.36710)
}

%region_1610.36719 (reduce_sum.461: f32[], reduce_sum.36717: f32[]) -> f32[] {
  %reduce_sum.461 = f32[] parameter(0)
  %reduce_sum.36717 = f32[] parameter(1)
  ROOT %reduce_sum.36718 = f32[] add(%reduce_sum.461, %reduce_sum.36717)
}

%region_1611.36726 (reduce_sum.462: f32[], reduce_sum.36724: f32[]) -> f32[] {
  %reduce_sum.462 = f32[] parameter(0)
  %reduce_sum.36724 = f32[] parameter(1)
  ROOT %reduce_sum.36725 = f32[] add(%reduce_sum.462, %reduce_sum.36724)
}

%region_1612.36733 (reduce_sum.463: f32[], reduce_sum.36731: f32[]) -> f32[] {
  %reduce_sum.463 = f32[] parameter(0)
  %reduce_sum.36731 = f32[] parameter(1)
  ROOT %reduce_sum.36732 = f32[] add(%reduce_sum.463, %reduce_sum.36731)
}

%region_1613.36740 (reduce_sum.464: f32[], reduce_sum.36738: f32[]) -> f32[] {
  %reduce_sum.464 = f32[] parameter(0)
  %reduce_sum.36738 = f32[] parameter(1)
  ROOT %reduce_sum.36739 = f32[] add(%reduce_sum.464, %reduce_sum.36738)
}

%region_1614.36747 (reduce_sum.465: f32[], reduce_sum.36745: f32[]) -> f32[] {
  %reduce_sum.465 = f32[] parameter(0)
  %reduce_sum.36745 = f32[] parameter(1)
  ROOT %reduce_sum.36746 = f32[] add(%reduce_sum.465, %reduce_sum.36745)
}

%region_1615.36754 (reduce_sum.466: f32[], reduce_sum.36752: f32[]) -> f32[] {
  %reduce_sum.466 = f32[] parameter(0)
  %reduce_sum.36752 = f32[] parameter(1)
  ROOT %reduce_sum.36753 = f32[] add(%reduce_sum.466, %reduce_sum.36752)
}

%region_1616.36761 (reduce_sum.467: f32[], reduce_sum.36759: f32[]) -> f32[] {
  %reduce_sum.467 = f32[] parameter(0)
  %reduce_sum.36759 = f32[] parameter(1)
  ROOT %reduce_sum.36760 = f32[] add(%reduce_sum.467, %reduce_sum.36759)
}

%region_1617.36768 (reduce_sum.468: f32[], reduce_sum.36766: f32[]) -> f32[] {
  %reduce_sum.468 = f32[] parameter(0)
  %reduce_sum.36766 = f32[] parameter(1)
  ROOT %reduce_sum.36767 = f32[] add(%reduce_sum.468, %reduce_sum.36766)
}

%region_1618.36775 (reduce_sum.469: f32[], reduce_sum.36773: f32[]) -> f32[] {
  %reduce_sum.469 = f32[] parameter(0)
  %reduce_sum.36773 = f32[] parameter(1)
  ROOT %reduce_sum.36774 = f32[] add(%reduce_sum.469, %reduce_sum.36773)
}

%region_1619.36782 (reduce_sum.470: f32[], reduce_sum.36780: f32[]) -> f32[] {
  %reduce_sum.470 = f32[] parameter(0)
  %reduce_sum.36780 = f32[] parameter(1)
  ROOT %reduce_sum.36781 = f32[] add(%reduce_sum.470, %reduce_sum.36780)
}

%region_0.33._custom_call_lowering_rule.1 (reduce_window_sum.0: s32[], reduce_window_sum.1: s32[]) -> s32[] {
  %reduce_window_sum.0 = s32[] parameter(0)
  %reduce_window_sum.1 = s32[] parameter(1)
  ROOT %reduce_window_sum.2 = s32[] add(%reduce_window_sum.0, %reduce_window_sum.1)
}

%region_0.33._custom_call_lowering_rule.2 (reduce_window_sum.3: s32[], reduce_window_sum.4: s32[]) -> s32[] {
  %reduce_window_sum.3 = s32[] parameter(0)
  %reduce_window_sum.4 = s32[] parameter(1)
  ROOT %reduce_window_sum.5 = s32[] add(%reduce_window_sum.3, %reduce_window_sum.4)
}

%region_0.33._custom_call_lowering_rule.3 (reduce_window_sum.6: s32[], reduce_window_sum.7: s32[]) -> s32[] {
  %reduce_window_sum.6 = s32[] parameter(0)
  %reduce_window_sum.7 = s32[] parameter(1)
  ROOT %reduce_window_sum.8 = s32[] add(%reduce_window_sum.6, %reduce_window_sum.7)
}

%region_0.33._custom_call_lowering_rule.4 (reduce_window_sum.9: s32[], reduce_window_sum.10: s32[]) -> s32[] {
  %reduce_window_sum.9 = s32[] parameter(0)
  %reduce_window_sum.10 = s32[] parameter(1)
  ROOT %reduce_window_sum.11 = s32[] add(%reduce_window_sum.9, %reduce_window_sum.10)
}

%region_0.33._custom_call_lowering_rule.5 (reduce_window_sum.12: s32[], reduce_window_sum.13: s32[]) -> s32[] {
  %reduce_window_sum.12 = s32[] parameter(0)
  %reduce_window_sum.13 = s32[] parameter(1)
  ROOT %reduce_window_sum.14 = s32[] add(%reduce_window_sum.12, %reduce_window_sum.13)
}

%region_0.33._custom_call_lowering_rule.6 (reduce_window_sum.15: s32[], reduce_window_sum.16: s32[]) -> s32[] {
  %reduce_window_sum.15 = s32[] parameter(0)
  %reduce_window_sum.16 = s32[] parameter(1)
  ROOT %reduce_window_sum.17 = s32[] add(%reduce_window_sum.15, %reduce_window_sum.16)
}

%region_0.33._custom_call_lowering_rule.7 (reduce_window_sum.18: s32[], reduce_window_sum.19: s32[]) -> s32[] {
  %reduce_window_sum.18 = s32[] parameter(0)
  %reduce_window_sum.19 = s32[] parameter(1)
  ROOT %reduce_window_sum.20 = s32[] add(%reduce_window_sum.18, %reduce_window_sum.19)
}

%region_0.33._custom_call_lowering_rule.8 (reduce_window_sum.21: s32[], reduce_window_sum.22: s32[]) -> s32[] {
  %reduce_window_sum.21 = s32[] parameter(0)
  %reduce_window_sum.22 = s32[] parameter(1)
  ROOT %reduce_window_sum.23 = s32[] add(%reduce_window_sum.21, %reduce_window_sum.22)
}

%region_0.33._custom_call_lowering_rule.9 (reduce_window_sum.24: s32[], reduce_window_sum.25: s32[]) -> s32[] {
  %reduce_window_sum.24 = s32[] parameter(0)
  %reduce_window_sum.25 = s32[] parameter(1)
  ROOT %reduce_window_sum.26 = s32[] add(%reduce_window_sum.24, %reduce_window_sum.25)
}

%region_0.33._custom_call_lowering_rule.10 (reduce_window_sum.27: s32[], reduce_window_sum.28: s32[]) -> s32[] {
  %reduce_window_sum.27 = s32[] parameter(0)
  %reduce_window_sum.28 = s32[] parameter(1)
  ROOT %reduce_window_sum.29 = s32[] add(%reduce_window_sum.27, %reduce_window_sum.28)
}

%region_0.33._custom_call_lowering_rule.11 (reduce_window_sum.33: s32[], reduce_window_sum.34: s32[]) -> s32[] {
  %reduce_window_sum.33 = s32[] parameter(0)
  %reduce_window_sum.34 = s32[] parameter(1)
  ROOT %reduce_window_sum.35 = s32[] add(%reduce_window_sum.33, %reduce_window_sum.34)
}

%region_0.33._custom_call_lowering_rule.12 (reduce_window_sum.36: s32[], reduce_window_sum.37: s32[]) -> s32[] {
  %reduce_window_sum.36 = s32[] parameter(0)
  %reduce_window_sum.37 = s32[] parameter(1)
  ROOT %reduce_window_sum.38 = s32[] add(%reduce_window_sum.36, %reduce_window_sum.37)
}

%region_0.33._custom_call_lowering_rule.13 (reduce_window_sum.39: s32[], reduce_window_sum.40: s32[]) -> s32[] {
  %reduce_window_sum.39 = s32[] parameter(0)
  %reduce_window_sum.40 = s32[] parameter(1)
  ROOT %reduce_window_sum.41 = s32[] add(%reduce_window_sum.39, %reduce_window_sum.40)
}

%region_0.33._custom_call_lowering_rule.14 (reduce_window_sum.42: s32[], reduce_window_sum.43: s32[]) -> s32[] {
  %reduce_window_sum.42 = s32[] parameter(0)
  %reduce_window_sum.43 = s32[] parameter(1)
  ROOT %reduce_window_sum.44 = s32[] add(%reduce_window_sum.42, %reduce_window_sum.43)
}

%region_0.33._custom_call_lowering_rule.15 (reduce_window_sum.45: s32[], reduce_window_sum.46: s32[]) -> s32[] {
  %reduce_window_sum.45 = s32[] parameter(0)
  %reduce_window_sum.46 = s32[] parameter(1)
  ROOT %reduce_window_sum.47 = s32[] add(%reduce_window_sum.45, %reduce_window_sum.46)
}

%region_0.33._custom_call_lowering_rule.16 (reduce_window_sum.48: s32[], reduce_window_sum.49: s32[]) -> s32[] {
  %reduce_window_sum.48 = s32[] parameter(0)
  %reduce_window_sum.49 = s32[] parameter(1)
  ROOT %reduce_window_sum.50 = s32[] add(%reduce_window_sum.48, %reduce_window_sum.49)
}

%region_0.33._custom_call_lowering_rule.17 (reduce_window_sum.51: s32[], reduce_window_sum.52: s32[]) -> s32[] {
  %reduce_window_sum.51 = s32[] parameter(0)
  %reduce_window_sum.52 = s32[] parameter(1)
  ROOT %reduce_window_sum.53 = s32[] add(%reduce_window_sum.51, %reduce_window_sum.52)
}

%region_0.33._custom_call_lowering_rule.18 (reduce_window_sum.54: s32[], reduce_window_sum.55: s32[]) -> s32[] {
  %reduce_window_sum.54 = s32[] parameter(0)
  %reduce_window_sum.55 = s32[] parameter(1)
  ROOT %reduce_window_sum.56 = s32[] add(%reduce_window_sum.54, %reduce_window_sum.55)
}

%region_0.33._custom_call_lowering_rule.19 (reduce_window_sum.57: s32[], reduce_window_sum.58: s32[]) -> s32[] {
  %reduce_window_sum.57 = s32[] parameter(0)
  %reduce_window_sum.58 = s32[] parameter(1)
  ROOT %reduce_window_sum.59 = s32[] add(%reduce_window_sum.57, %reduce_window_sum.58)
}

%region_0.33._custom_call_lowering_rule.20 (reduce_window_sum.60: s32[], reduce_window_sum.61: s32[]) -> s32[] {
  %reduce_window_sum.60 = s32[] parameter(0)
  %reduce_window_sum.61 = s32[] parameter(1)
  ROOT %reduce_window_sum.62 = s32[] add(%reduce_window_sum.60, %reduce_window_sum.61)
}

%region_0.33._custom_call_lowering_rule.21 (reduce_window_sum.63: s32[], reduce_window_sum.64: s32[]) -> s32[] {
  %reduce_window_sum.63 = s32[] parameter(0)
  %reduce_window_sum.64 = s32[] parameter(1)
  ROOT %reduce_window_sum.65 = s32[] add(%reduce_window_sum.63, %reduce_window_sum.64)
}

%region_0.33._custom_call_lowering_rule.22 (reduce_window_sum.66: s32[], reduce_window_sum.67: s32[]) -> s32[] {
  %reduce_window_sum.66 = s32[] parameter(0)
  %reduce_window_sum.67 = s32[] parameter(1)
  ROOT %reduce_window_sum.68 = s32[] add(%reduce_window_sum.66, %reduce_window_sum.67)
}

%region_0.33._custom_call_lowering_rule.23 (reduce_window_sum.69: s32[], reduce_window_sum.70: s32[]) -> s32[] {
  %reduce_window_sum.69 = s32[] parameter(0)
  %reduce_window_sum.70 = s32[] parameter(1)
  ROOT %reduce_window_sum.71 = s32[] add(%reduce_window_sum.69, %reduce_window_sum.70)
}

%region_0.33._custom_call_lowering_rule.24 (reduce_window_sum.72: s32[], reduce_window_sum.73: s32[]) -> s32[] {
  %reduce_window_sum.72 = s32[] parameter(0)
  %reduce_window_sum.73 = s32[] parameter(1)
  ROOT %reduce_window_sum.74 = s32[] add(%reduce_window_sum.72, %reduce_window_sum.73)
}

%region_0.33._custom_call_lowering_rule.25 (reduce_window_sum.75: s32[], reduce_window_sum.76: s32[]) -> s32[] {
  %reduce_window_sum.75 = s32[] parameter(0)
  %reduce_window_sum.76 = s32[] parameter(1)
  ROOT %reduce_window_sum.77 = s32[] add(%reduce_window_sum.75, %reduce_window_sum.76)
}

%region_0.33._custom_call_lowering_rule.26 (reduce_window_sum.78: s32[], reduce_window_sum.79: s32[]) -> s32[] {
  %reduce_window_sum.78 = s32[] parameter(0)
  %reduce_window_sum.79 = s32[] parameter(1)
  ROOT %reduce_window_sum.80 = s32[] add(%reduce_window_sum.78, %reduce_window_sum.79)
}

%region_0.33._custom_call_lowering_rule.27 (reduce_window_sum.81: s32[], reduce_window_sum.82: s32[]) -> s32[] {
  %reduce_window_sum.81 = s32[] parameter(0)
  %reduce_window_sum.82 = s32[] parameter(1)
  ROOT %reduce_window_sum.83 = s32[] add(%reduce_window_sum.81, %reduce_window_sum.82)
}

%region_0.33._custom_call_lowering_rule.28 (reduce_window_sum.84: s32[], reduce_window_sum.85: s32[]) -> s32[] {
  %reduce_window_sum.84 = s32[] parameter(0)
  %reduce_window_sum.85 = s32[] parameter(1)
  ROOT %reduce_window_sum.86 = s32[] add(%reduce_window_sum.84, %reduce_window_sum.85)
}

%region_0.33._custom_call_lowering_rule.29 (reduce_window_sum.87: s32[], reduce_window_sum.88: s32[]) -> s32[] {
  %reduce_window_sum.87 = s32[] parameter(0)
  %reduce_window_sum.88 = s32[] parameter(1)
  ROOT %reduce_window_sum.89 = s32[] add(%reduce_window_sum.87, %reduce_window_sum.88)
}

%region_0.33._custom_call_lowering_rule.30 (reduce_window_sum.90: s32[], reduce_window_sum.91: s32[]) -> s32[] {
  %reduce_window_sum.90 = s32[] parameter(0)
  %reduce_window_sum.91 = s32[] parameter(1)
  ROOT %reduce_window_sum.92 = s32[] add(%reduce_window_sum.90, %reduce_window_sum.91)
}

%region_0.33._custom_call_lowering_rule.31 (reduce_window_sum.93: s32[], reduce_window_sum.94: s32[]) -> s32[] {
  %reduce_window_sum.93 = s32[] parameter(0)
  %reduce_window_sum.94 = s32[] parameter(1)
  ROOT %reduce_window_sum.95 = s32[] add(%reduce_window_sum.93, %reduce_window_sum.94)
}

%region_0.2724 (reduce_sum.2721: f32[], reduce_sum.0: f32[]) -> f32[] {
  %reduce_sum.2721 = f32[] parameter(0)
  %reduce_sum.0 = f32[] parameter(1)
  ROOT %reduce_sum.2723 = f32[] add(%reduce_sum.2721, %reduce_sum.0)
}

%region_1.2913 (reduce_sum.2910: s32[], reduce_sum.2911: s32[]) -> s32[] {
  %reduce_sum.2910 = s32[] parameter(0)
  %reduce_sum.2911 = s32[] parameter(1)
  ROOT %reduce_sum.2912 = s32[] add(%reduce_sum.2910, %reduce_sum.2911)
}

%region_2.2922 (reduce_sum.2919: s32[], reduce_sum.2920: s32[]) -> s32[] {
  %reduce_sum.2919 = s32[] parameter(0)
  %reduce_sum.2920 = s32[] parameter(1)
  ROOT %reduce_sum.2921 = s32[] add(%reduce_sum.2919, %reduce_sum.2920)
}

%region_3.2929 (reduce_max.2926: s32[], reduce_max.2927: s32[]) -> s32[] {
  %reduce_max.2926 = s32[] parameter(0)
  %reduce_max.2927 = s32[] parameter(1)
  ROOT %reduce_max.2928 = s32[] maximum(%reduce_max.2926, %reduce_max.2927)
}

%region_0.33._custom_call_lowering_rule (reduce_window_sum.30: s32[], reduce_window_sum.31: s32[]) -> s32[] {
  %reduce_window_sum.30 = s32[] parameter(0)
  %reduce_window_sum.31 = s32[] parameter(1)
  ROOT %reduce_window_sum.32 = s32[] add(%reduce_window_sum.30, %reduce_window_sum.31)
}

%region_0.33._custom_call_lowering_rule.clone (reduce_window_sum.320: s32[], reduce_window_sum.321: s32[]) -> s32[] {
  %reduce_window_sum.320 = s32[] parameter(0)
  %reduce_window_sum.321 = s32[] parameter(1)
  ROOT %reduce_window_sum.322 = s32[] add(%reduce_window_sum.320, %reduce_window_sum.321)
}

%region_4.2948 (reduce_sum.2945: f32[], reduce_sum.2946: f32[]) -> f32[] {
  %reduce_sum.2945 = f32[] parameter(0)
  %reduce_sum.2946 = f32[] parameter(1)
  ROOT %reduce_sum.2947 = f32[] add(%reduce_sum.2945, %reduce_sum.2946)
}

%region_5.2986 (reduce_sum.2983: f32[], reduce_sum.2984: f32[]) -> f32[] {
  %reduce_sum.2983 = f32[] parameter(0)
  %reduce_sum.2984 = f32[] parameter(1)
  ROOT %reduce_sum.2985 = f32[] add(%reduce_sum.2983, %reduce_sum.2984)
}

%region_9.3178 (reduce_sum.3175: f32[], reduce_sum.3176: f32[]) -> f32[] {
  %reduce_sum.3175 = f32[] parameter(0)
  %reduce_sum.3176 = f32[] parameter(1)
  ROOT %reduce_sum.3177 = f32[] add(%reduce_sum.3175, %reduce_sum.3176)
}

%region_10.3214 (reduce_sum.3211: f32[], reduce_sum.3212: f32[]) -> f32[] {
  %reduce_sum.3211 = f32[] parameter(0)
  %reduce_sum.3212 = f32[] parameter(1)
  ROOT %reduce_sum.3213 = f32[] add(%reduce_sum.3211, %reduce_sum.3212)
}

%region_14.3406 (reduce_sum.3403: f32[], reduce_sum.3404: f32[]) -> f32[] {
  %reduce_sum.3403 = f32[] parameter(0)
  %reduce_sum.3404 = f32[] parameter(1)
  ROOT %reduce_sum.3405 = f32[] add(%reduce_sum.3403, %reduce_sum.3404)
}

%region_15.3442 (reduce_sum.3439: f32[], reduce_sum.3440: f32[]) -> f32[] {
  %reduce_sum.3439 = f32[] parameter(0)
  %reduce_sum.3440 = f32[] parameter(1)
  ROOT %reduce_sum.3441 = f32[] add(%reduce_sum.3439, %reduce_sum.3440)
}

%region_19.3634 (reduce_sum.3631: f32[], reduce_sum.3632: f32[]) -> f32[] {
  %reduce_sum.3631 = f32[] parameter(0)
  %reduce_sum.3632 = f32[] parameter(1)
  ROOT %reduce_sum.3633 = f32[] add(%reduce_sum.3631, %reduce_sum.3632)
}

%region_20.3670 (reduce_sum.3667: f32[], reduce_sum.3668: f32[]) -> f32[] {
  %reduce_sum.3667 = f32[] parameter(0)
  %reduce_sum.3668 = f32[] parameter(1)
  ROOT %reduce_sum.3669 = f32[] add(%reduce_sum.3667, %reduce_sum.3668)
}

%region_24.3862 (reduce_sum.3859: f32[], reduce_sum.3860: f32[]) -> f32[] {
  %reduce_sum.3859 = f32[] parameter(0)
  %reduce_sum.3860 = f32[] parameter(1)
  ROOT %reduce_sum.3861 = f32[] add(%reduce_sum.3859, %reduce_sum.3860)
}

%region_25.3898 (reduce_sum.3895: f32[], reduce_sum.3896: f32[]) -> f32[] {
  %reduce_sum.3895 = f32[] parameter(0)
  %reduce_sum.3896 = f32[] parameter(1)
  ROOT %reduce_sum.3897 = f32[] add(%reduce_sum.3895, %reduce_sum.3896)
}

%region_29.4090 (reduce_sum.4087: f32[], reduce_sum.4088: f32[]) -> f32[] {
  %reduce_sum.4087 = f32[] parameter(0)
  %reduce_sum.4088 = f32[] parameter(1)
  ROOT %reduce_sum.4089 = f32[] add(%reduce_sum.4087, %reduce_sum.4088)
}

%region_30.4126 (reduce_sum.3: f32[], reduce_sum.4: f32[]) -> f32[] {
  %reduce_sum.3 = f32[] parameter(0)
  %reduce_sum.4 = f32[] parameter(1)
  ROOT %reduce_sum.5 = f32[] add(%reduce_sum.3, %reduce_sum.4)
}

%region_34.4318 (reduce_sum.4315: f32[], reduce_sum.4316: f32[]) -> f32[] {
  %reduce_sum.4315 = f32[] parameter(0)
  %reduce_sum.4316 = f32[] parameter(1)
  ROOT %reduce_sum.4317 = f32[] add(%reduce_sum.4315, %reduce_sum.4316)
}

%region_35.4354 (reduce_sum.4351: f32[], reduce_sum.4352: f32[]) -> f32[] {
  %reduce_sum.4351 = f32[] parameter(0)
  %reduce_sum.4352 = f32[] parameter(1)
  ROOT %reduce_sum.4353 = f32[] add(%reduce_sum.4351, %reduce_sum.4352)
}

%region_39.4546 (reduce_sum.4543: f32[], reduce_sum.4544: f32[]) -> f32[] {
  %reduce_sum.4543 = f32[] parameter(0)
  %reduce_sum.4544 = f32[] parameter(1)
  ROOT %reduce_sum.4545 = f32[] add(%reduce_sum.4543, %reduce_sum.4544)
}

%region_40.4582 (reduce_sum.4579: f32[], reduce_sum.4580: f32[]) -> f32[] {
  %reduce_sum.4579 = f32[] parameter(0)
  %reduce_sum.4580 = f32[] parameter(1)
  ROOT %reduce_sum.4581 = f32[] add(%reduce_sum.4579, %reduce_sum.4580)
}

%region_44.4774 (reduce_sum.4771: f32[], reduce_sum.4772: f32[]) -> f32[] {
  %reduce_sum.4771 = f32[] parameter(0)
  %reduce_sum.4772 = f32[] parameter(1)
  ROOT %reduce_sum.4773 = f32[] add(%reduce_sum.4771, %reduce_sum.4772)
}

%region_45.4810 (reduce_sum.4807: f32[], reduce_sum.4808: f32[]) -> f32[] {
  %reduce_sum.4807 = f32[] parameter(0)
  %reduce_sum.4808 = f32[] parameter(1)
  ROOT %reduce_sum.4809 = f32[] add(%reduce_sum.4807, %reduce_sum.4808)
}

%region_49.5002 (reduce_sum.4999: f32[], reduce_sum.5000: f32[]) -> f32[] {
  %reduce_sum.4999 = f32[] parameter(0)
  %reduce_sum.5000 = f32[] parameter(1)
  ROOT %reduce_sum.5001 = f32[] add(%reduce_sum.4999, %reduce_sum.5000)
}

%region_50.5038 (reduce_sum.5035: f32[], reduce_sum.5036: f32[]) -> f32[] {
  %reduce_sum.5035 = f32[] parameter(0)
  %reduce_sum.5036 = f32[] parameter(1)
  ROOT %reduce_sum.5037 = f32[] add(%reduce_sum.5035, %reduce_sum.5036)
}

%region_54.5230 (reduce_sum.5227: f32[], reduce_sum.5228: f32[]) -> f32[] {
  %reduce_sum.5227 = f32[] parameter(0)
  %reduce_sum.5228 = f32[] parameter(1)
  ROOT %reduce_sum.5229 = f32[] add(%reduce_sum.5227, %reduce_sum.5228)
}

%region_55.5266 (reduce_sum.5263: f32[], reduce_sum.5264: f32[]) -> f32[] {
  %reduce_sum.5263 = f32[] parameter(0)
  %reduce_sum.5264 = f32[] parameter(1)
  ROOT %reduce_sum.5265 = f32[] add(%reduce_sum.5263, %reduce_sum.5264)
}

%region_59.5458 (reduce_sum.5455: f32[], reduce_sum.5456: f32[]) -> f32[] {
  %reduce_sum.5455 = f32[] parameter(0)
  %reduce_sum.5456 = f32[] parameter(1)
  ROOT %reduce_sum.5457 = f32[] add(%reduce_sum.5455, %reduce_sum.5456)
}

%region_60.5494 (reduce_sum.5491: f32[], reduce_sum.5492: f32[]) -> f32[] {
  %reduce_sum.5491 = f32[] parameter(0)
  %reduce_sum.5492 = f32[] parameter(1)
  ROOT %reduce_sum.5493 = f32[] add(%reduce_sum.5491, %reduce_sum.5492)
}

%region_64.5686 (reduce_sum.5683: f32[], reduce_sum.5684: f32[]) -> f32[] {
  %reduce_sum.5683 = f32[] parameter(0)
  %reduce_sum.5684 = f32[] parameter(1)
  ROOT %reduce_sum.5685 = f32[] add(%reduce_sum.5683, %reduce_sum.5684)
}

%region_65.5722 (reduce_sum.5719: f32[], reduce_sum.5720: f32[]) -> f32[] {
  %reduce_sum.5719 = f32[] parameter(0)
  %reduce_sum.5720 = f32[] parameter(1)
  ROOT %reduce_sum.5721 = f32[] add(%reduce_sum.5719, %reduce_sum.5720)
}

%region_69.5914 (reduce_sum.5911: f32[], reduce_sum.5912: f32[]) -> f32[] {
  %reduce_sum.5911 = f32[] parameter(0)
  %reduce_sum.5912 = f32[] parameter(1)
  ROOT %reduce_sum.5913 = f32[] add(%reduce_sum.5911, %reduce_sum.5912)
}

%region_70.5950 (reduce_sum.5947: f32[], reduce_sum.5948: f32[]) -> f32[] {
  %reduce_sum.5947 = f32[] parameter(0)
  %reduce_sum.5948 = f32[] parameter(1)
  ROOT %reduce_sum.5949 = f32[] add(%reduce_sum.5947, %reduce_sum.5948)
}

%region_74.6142 (reduce_sum.6139: f32[], reduce_sum.6140: f32[]) -> f32[] {
  %reduce_sum.6139 = f32[] parameter(0)
  %reduce_sum.6140 = f32[] parameter(1)
  ROOT %reduce_sum.6141 = f32[] add(%reduce_sum.6139, %reduce_sum.6140)
}

%region_75.6178 (reduce_sum.6175: f32[], reduce_sum.6176: f32[]) -> f32[] {
  %reduce_sum.6175 = f32[] parameter(0)
  %reduce_sum.6176 = f32[] parameter(1)
  ROOT %reduce_sum.6177 = f32[] add(%reduce_sum.6175, %reduce_sum.6176)
}

%region_79.6370 (reduce_sum.14: f32[], reduce_sum.6368: f32[]) -> f32[] {
  %reduce_sum.14 = f32[] parameter(0)
  %reduce_sum.6368 = f32[] parameter(1)
  ROOT %reduce_sum.6369 = f32[] add(%reduce_sum.14, %reduce_sum.6368)
}

%region_80.6406 (reduce_sum.6403: f32[], reduce_sum.6404: f32[]) -> f32[] {
  %reduce_sum.6403 = f32[] parameter(0)
  %reduce_sum.6404 = f32[] parameter(1)
  ROOT %reduce_sum.6405 = f32[] add(%reduce_sum.6403, %reduce_sum.6404)
}

%region_84.6598 (reduce_sum.6595: f32[], reduce_sum.6596: f32[]) -> f32[] {
  %reduce_sum.6595 = f32[] parameter(0)
  %reduce_sum.6596 = f32[] parameter(1)
  ROOT %reduce_sum.6597 = f32[] add(%reduce_sum.6595, %reduce_sum.6596)
}

%region_85.6634 (reduce_sum.6631: f32[], reduce_sum.6632: f32[]) -> f32[] {
  %reduce_sum.6631 = f32[] parameter(0)
  %reduce_sum.6632 = f32[] parameter(1)
  ROOT %reduce_sum.6633 = f32[] add(%reduce_sum.6631, %reduce_sum.6632)
}

%region_89.6826 (reduce_sum.6823: f32[], reduce_sum.6824: f32[]) -> f32[] {
  %reduce_sum.6823 = f32[] parameter(0)
  %reduce_sum.6824 = f32[] parameter(1)
  ROOT %reduce_sum.6825 = f32[] add(%reduce_sum.6823, %reduce_sum.6824)
}

%region_90.6862 (reduce_sum.6859: f32[], reduce_sum.6860: f32[]) -> f32[] {
  %reduce_sum.6859 = f32[] parameter(0)
  %reduce_sum.6860 = f32[] parameter(1)
  ROOT %reduce_sum.6861 = f32[] add(%reduce_sum.6859, %reduce_sum.6860)
}

%region_94.7054 (reduce_sum.7051: f32[], reduce_sum.7052: f32[]) -> f32[] {
  %reduce_sum.7051 = f32[] parameter(0)
  %reduce_sum.7052 = f32[] parameter(1)
  ROOT %reduce_sum.7053 = f32[] add(%reduce_sum.7051, %reduce_sum.7052)
}

%region_95.7090 (reduce_sum.7087: f32[], reduce_sum.7088: f32[]) -> f32[] {
  %reduce_sum.7087 = f32[] parameter(0)
  %reduce_sum.7088 = f32[] parameter(1)
  ROOT %reduce_sum.7089 = f32[] add(%reduce_sum.7087, %reduce_sum.7088)
}

%region_99.7282 (reduce_sum.7279: f32[], reduce_sum.15: f32[]) -> f32[] {
  %reduce_sum.7279 = f32[] parameter(0)
  %reduce_sum.15 = f32[] parameter(1)
  ROOT %reduce_sum.7281 = f32[] add(%reduce_sum.7279, %reduce_sum.15)
}

%region_100.7318 (reduce_sum.7315: f32[], reduce_sum.7316: f32[]) -> f32[] {
  %reduce_sum.7315 = f32[] parameter(0)
  %reduce_sum.7316 = f32[] parameter(1)
  ROOT %reduce_sum.7317 = f32[] add(%reduce_sum.7315, %reduce_sum.7316)
}

%region_104.7510 (reduce_sum.7507: f32[], reduce_sum.7508: f32[]) -> f32[] {
  %reduce_sum.7507 = f32[] parameter(0)
  %reduce_sum.7508 = f32[] parameter(1)
  ROOT %reduce_sum.7509 = f32[] add(%reduce_sum.7507, %reduce_sum.7508)
}

%region_105.7546 (reduce_sum.7543: f32[], reduce_sum.7544: f32[]) -> f32[] {
  %reduce_sum.7543 = f32[] parameter(0)
  %reduce_sum.7544 = f32[] parameter(1)
  ROOT %reduce_sum.7545 = f32[] add(%reduce_sum.7543, %reduce_sum.7544)
}

%region_109.7738 (reduce_sum.7735: f32[], reduce_sum.7736: f32[]) -> f32[] {
  %reduce_sum.7735 = f32[] parameter(0)
  %reduce_sum.7736 = f32[] parameter(1)
  ROOT %reduce_sum.7737 = f32[] add(%reduce_sum.7735, %reduce_sum.7736)
}

%region_110.7774 (reduce_sum.7771: f32[], reduce_sum.16: f32[]) -> f32[] {
  %reduce_sum.7771 = f32[] parameter(0)
  %reduce_sum.16 = f32[] parameter(1)
  ROOT %reduce_sum.7773 = f32[] add(%reduce_sum.7771, %reduce_sum.16)
}

%region_114.7966 (reduce_sum.7963: f32[], reduce_sum.7964: f32[]) -> f32[] {
  %reduce_sum.7963 = f32[] parameter(0)
  %reduce_sum.7964 = f32[] parameter(1)
  ROOT %reduce_sum.7965 = f32[] add(%reduce_sum.7963, %reduce_sum.7964)
}

%region_115.8002 (reduce_sum.7999: f32[], reduce_sum.8000: f32[]) -> f32[] {
  %reduce_sum.7999 = f32[] parameter(0)
  %reduce_sum.8000 = f32[] parameter(1)
  ROOT %reduce_sum.8001 = f32[] add(%reduce_sum.7999, %reduce_sum.8000)
}

%region_119.8194 (reduce_sum.8191: f32[], reduce_sum.8192: f32[]) -> f32[] {
  %reduce_sum.8191 = f32[] parameter(0)
  %reduce_sum.8192 = f32[] parameter(1)
  ROOT %reduce_sum.8193 = f32[] add(%reduce_sum.8191, %reduce_sum.8192)
}

%region_120.8230 (reduce_sum.8227: f32[], reduce_sum.8228: f32[]) -> f32[] {
  %reduce_sum.8227 = f32[] parameter(0)
  %reduce_sum.8228 = f32[] parameter(1)
  ROOT %reduce_sum.8229 = f32[] add(%reduce_sum.8227, %reduce_sum.8228)
}

%region_124.8422 (reduce_sum.8419: f32[], reduce_sum.8420: f32[]) -> f32[] {
  %reduce_sum.8419 = f32[] parameter(0)
  %reduce_sum.8420 = f32[] parameter(1)
  ROOT %reduce_sum.8421 = f32[] add(%reduce_sum.8419, %reduce_sum.8420)
}

%region_125.8458 (reduce_sum.8455: f32[], reduce_sum.8456: f32[]) -> f32[] {
  %reduce_sum.8455 = f32[] parameter(0)
  %reduce_sum.8456 = f32[] parameter(1)
  ROOT %reduce_sum.8457 = f32[] add(%reduce_sum.8455, %reduce_sum.8456)
}

%region_129.8650 (reduce_sum.19: f32[], reduce_sum.8648: f32[]) -> f32[] {
  %reduce_sum.19 = f32[] parameter(0)
  %reduce_sum.8648 = f32[] parameter(1)
  ROOT %reduce_sum.8649 = f32[] add(%reduce_sum.19, %reduce_sum.8648)
}

%region_130.8686 (reduce_sum.20: f32[], reduce_sum.8684: f32[]) -> f32[] {
  %reduce_sum.20 = f32[] parameter(0)
  %reduce_sum.8684 = f32[] parameter(1)
  ROOT %reduce_sum.21 = f32[] add(%reduce_sum.20, %reduce_sum.8684)
}

%region_134.8878 (reduce_sum.8875: f32[], reduce_sum.8876: f32[]) -> f32[] {
  %reduce_sum.8875 = f32[] parameter(0)
  %reduce_sum.8876 = f32[] parameter(1)
  ROOT %reduce_sum.8877 = f32[] add(%reduce_sum.8875, %reduce_sum.8876)
}

%region_135.8914 (reduce_sum.8911: f32[], reduce_sum.8912: f32[]) -> f32[] {
  %reduce_sum.8911 = f32[] parameter(0)
  %reduce_sum.8912 = f32[] parameter(1)
  ROOT %reduce_sum.8913 = f32[] add(%reduce_sum.8911, %reduce_sum.8912)
}

%region_139.9106 (reduce_sum.9103: f32[], reduce_sum.9104: f32[]) -> f32[] {
  %reduce_sum.9103 = f32[] parameter(0)
  %reduce_sum.9104 = f32[] parameter(1)
  ROOT %reduce_sum.9105 = f32[] add(%reduce_sum.9103, %reduce_sum.9104)
}

%region_140.9142 (reduce_sum.9139: f32[], reduce_sum.9140: f32[]) -> f32[] {
  %reduce_sum.9139 = f32[] parameter(0)
  %reduce_sum.9140 = f32[] parameter(1)
  ROOT %reduce_sum.9141 = f32[] add(%reduce_sum.9139, %reduce_sum.9140)
}

%region_144.9334 (reduce_sum.9331: f32[], reduce_sum.9332: f32[]) -> f32[] {
  %reduce_sum.9331 = f32[] parameter(0)
  %reduce_sum.9332 = f32[] parameter(1)
  ROOT %reduce_sum.9333 = f32[] add(%reduce_sum.9331, %reduce_sum.9332)
}

%region_145.9370 (reduce_sum.9367: f32[], reduce_sum.9368: f32[]) -> f32[] {
  %reduce_sum.9367 = f32[] parameter(0)
  %reduce_sum.9368 = f32[] parameter(1)
  ROOT %reduce_sum.9369 = f32[] add(%reduce_sum.9367, %reduce_sum.9368)
}

%region_149.9562 (reduce_sum.9559: f32[], reduce_sum.9560: f32[]) -> f32[] {
  %reduce_sum.9559 = f32[] parameter(0)
  %reduce_sum.9560 = f32[] parameter(1)
  ROOT %reduce_sum.9561 = f32[] add(%reduce_sum.9559, %reduce_sum.9560)
}

%region_150.9598 (reduce_sum.9595: f32[], reduce_sum.9596: f32[]) -> f32[] {
  %reduce_sum.9595 = f32[] parameter(0)
  %reduce_sum.9596 = f32[] parameter(1)
  ROOT %reduce_sum.9597 = f32[] add(%reduce_sum.9595, %reduce_sum.9596)
}

%region_154.9790 (reduce_sum.9787: f32[], reduce_sum.9788: f32[]) -> f32[] {
  %reduce_sum.9787 = f32[] parameter(0)
  %reduce_sum.9788 = f32[] parameter(1)
  ROOT %reduce_sum.9789 = f32[] add(%reduce_sum.9787, %reduce_sum.9788)
}

%region_155.9826 (reduce_sum.9823: f32[], reduce_sum.9824: f32[]) -> f32[] {
  %reduce_sum.9823 = f32[] parameter(0)
  %reduce_sum.9824 = f32[] parameter(1)
  ROOT %reduce_sum.9825 = f32[] add(%reduce_sum.9823, %reduce_sum.9824)
}

%region_159.10018 (reduce_sum.10015: f32[], reduce_sum.24: f32[]) -> f32[] {
  %reduce_sum.10015 = f32[] parameter(0)
  %reduce_sum.24 = f32[] parameter(1)
  ROOT %reduce_sum.25 = f32[] add(%reduce_sum.10015, %reduce_sum.24)
}

%region_160.10053 (reduce_sum.26: f32[], reduce_sum.10051: f32[]) -> f32[] {
  %reduce_sum.26 = f32[] parameter(0)
  %reduce_sum.10051 = f32[] parameter(1)
  ROOT %reduce_sum.27 = f32[] add(%reduce_sum.26, %reduce_sum.10051)
}

%region_161.10070 (reduce_sum.10067: s32[], reduce_sum.10068: s32[]) -> s32[] {
  %reduce_sum.10067 = s32[] parameter(0)
  %reduce_sum.10068 = s32[] parameter(1)
  ROOT %reduce_sum.10069 = s32[] add(%reduce_sum.10067, %reduce_sum.10068)
}

%region_161.10070.clone (reduce_sum.822: s32[], reduce_sum.823: s32[]) -> s32[] {
  %reduce_sum.822 = s32[] parameter(0)
  %reduce_sum.823 = s32[] parameter(1)
  ROOT %reduce_sum.824 = s32[] add(%reduce_sum.822, %reduce_sum.823)
}

%region_162.10092 (reduce_max.10089: f32[], reduce_max.10090: f32[]) -> f32[] {
  %reduce_max.10089 = f32[] parameter(0)
  %reduce_max.10090 = f32[] parameter(1)
  ROOT %reduce_max.10091 = f32[] maximum(%reduce_max.10089, %reduce_max.10090)
}

%region_163.10100 (reduce_sum.10097: f32[], reduce_sum.10098: f32[]) -> f32[] {
  %reduce_sum.10097 = f32[] parameter(0)
  %reduce_sum.10098 = f32[] parameter(1)
  ROOT %reduce_sum.10099 = f32[] add(%reduce_sum.10097, %reduce_sum.10098)
}

%region_164.10125 (reduce_sum.10122: bf16[], reduce_sum.10123: bf16[]) -> bf16[] {
  %reduce_sum.10122 = bf16[] parameter(0)
  %reduce_sum.10123 = bf16[] parameter(1)
  ROOT %reduce_sum.10124 = bf16[] add(%reduce_sum.10122, %reduce_sum.10123)
}

%region_164.10125.clone (reduce_sum.825: bf16[], reduce_sum.826: bf16[]) -> bf16[] {
  %reduce_sum.825 = bf16[] parameter(0)
  %reduce_sum.826 = bf16[] parameter(1)
  ROOT %reduce_sum.827 = bf16[] add(%reduce_sum.825, %reduce_sum.826)
}

%region_165.10132 (reduce_sum.10129: f32[], reduce_sum.10130: f32[]) -> f32[] {
  %reduce_sum.10129 = f32[] parameter(0)
  %reduce_sum.10130 = f32[] parameter(1)
  ROOT %reduce_sum.10131 = f32[] add(%reduce_sum.10129, %reduce_sum.10130)
}

%region_166.10176 (reduce_sum.28: f32[], reduce_sum.29: f32[]) -> f32[] {
  %reduce_sum.28 = f32[] parameter(0)
  %reduce_sum.29 = f32[] parameter(1)
  ROOT %reduce_sum.10175 = f32[] add(%reduce_sum.28, %reduce_sum.29)
}

%region_167.10256 (reduce_sum.10253: f32[], reduce_sum.10254: f32[]) -> f32[] {
  %reduce_sum.10253 = f32[] parameter(0)
  %reduce_sum.10254 = f32[] parameter(1)
  ROOT %reduce_sum.10255 = f32[] add(%reduce_sum.10253, %reduce_sum.10254)
}

%region_168.10269 (reduce_sum.10266: f32[], reduce_sum.10267: f32[]) -> f32[] {
  %reduce_sum.10266 = f32[] parameter(0)
  %reduce_sum.10267 = f32[] parameter(1)
  ROOT %reduce_sum.10268 = f32[] add(%reduce_sum.10266, %reduce_sum.10267)
}

%region_169.10421 (reduce_sum.10418: s32[], reduce_sum.10419: s32[]) -> s32[] {
  %reduce_sum.10418 = s32[] parameter(0)
  %reduce_sum.10419 = s32[] parameter(1)
  ROOT %reduce_sum.10420 = s32[] add(%reduce_sum.10418, %reduce_sum.10419)
}

%region_170.10430 (reduce_sum.10427: s32[], reduce_sum.10428: s32[]) -> s32[] {
  %reduce_sum.10427 = s32[] parameter(0)
  %reduce_sum.10428 = s32[] parameter(1)
  ROOT %reduce_sum.10429 = s32[] add(%reduce_sum.10427, %reduce_sum.10428)
}

%region_171.10436 (reduce_max.10433: s32[], reduce_max.10434: s32[]) -> s32[] {
  %reduce_max.10433 = s32[] parameter(0)
  %reduce_max.10434 = s32[] parameter(1)
  ROOT %reduce_max.10435 = s32[] maximum(%reduce_max.10433, %reduce_max.10434)
}

%region_0.36._custom_call_lowering_rule (reduce_window_sum.96: s32[], reduce_window_sum.97: s32[]) -> s32[] {
  %reduce_window_sum.96 = s32[] parameter(0)
  %reduce_window_sum.97 = s32[] parameter(1)
  ROOT %reduce_window_sum.98 = s32[] add(%reduce_window_sum.96, %reduce_window_sum.97)
}

%region_0.36._custom_call_lowering_rule.clone (reduce_window_sum.323: s32[], reduce_window_sum.324: s32[]) -> s32[] {
  %reduce_window_sum.323 = s32[] parameter(0)
  %reduce_window_sum.324 = s32[] parameter(1)
  ROOT %reduce_window_sum.325 = s32[] add(%reduce_window_sum.323, %reduce_window_sum.324)
}

%region_172.10526 (reduce_sum.10523: f32[], reduce_sum.10524: f32[]) -> f32[] {
  %reduce_sum.10523 = f32[] parameter(0)
  %reduce_sum.10524 = f32[] parameter(1)
  ROOT %reduce_sum.10525 = f32[] add(%reduce_sum.10523, %reduce_sum.10524)
}

%region_173.10539 (reduce_sum.10536: f32[], reduce_sum.10537: f32[]) -> f32[] {
  %reduce_sum.10536 = f32[] parameter(0)
  %reduce_sum.10537 = f32[] parameter(1)
  ROOT %reduce_sum.10538 = f32[] add(%reduce_sum.10536, %reduce_sum.10537)
}

%region_174.10617 (reduce_sum.10614: f32[], reduce_sum.10615: f32[]) -> f32[] {
  %reduce_sum.10614 = f32[] parameter(0)
  %reduce_sum.10615 = f32[] parameter(1)
  ROOT %reduce_sum.10616 = f32[] add(%reduce_sum.10614, %reduce_sum.10615)
}

%region_175.10630 (reduce_sum.30: f32[], reduce_sum.31: f32[]) -> f32[] {
  %reduce_sum.30 = f32[] parameter(0)
  %reduce_sum.31 = f32[] parameter(1)
  ROOT %reduce_sum.32 = f32[] add(%reduce_sum.30, %reduce_sum.31)
}

%region_176.10782 (reduce_sum.10779: s32[], reduce_sum.10780: s32[]) -> s32[] {
  %reduce_sum.10779 = s32[] parameter(0)
  %reduce_sum.10780 = s32[] parameter(1)
  ROOT %reduce_sum.33 = s32[] add(%reduce_sum.10779, %reduce_sum.10780)
}

%region_177.10791 (reduce_sum.10788: s32[], reduce_sum.10789: s32[]) -> s32[] {
  %reduce_sum.10788 = s32[] parameter(0)
  %reduce_sum.10789 = s32[] parameter(1)
  ROOT %reduce_sum.10790 = s32[] add(%reduce_sum.10788, %reduce_sum.10789)
}

%region_178.10797 (reduce_max.10794: s32[], reduce_max.10795: s32[]) -> s32[] {
  %reduce_max.10794 = s32[] parameter(0)
  %reduce_max.10795 = s32[] parameter(1)
  ROOT %reduce_max.10796 = s32[] maximum(%reduce_max.10794, %reduce_max.10795)
}

%region_0.36._custom_call_lowering_rule.1 (reduce_window_sum.99: s32[], reduce_window_sum.100: s32[]) -> s32[] {
  %reduce_window_sum.99 = s32[] parameter(0)
  %reduce_window_sum.100 = s32[] parameter(1)
  ROOT %reduce_window_sum.101 = s32[] add(%reduce_window_sum.99, %reduce_window_sum.100)
}

%region_0.36._custom_call_lowering_rule.1.clone (reduce_window_sum.326: s32[], reduce_window_sum.327: s32[]) -> s32[] {
  %reduce_window_sum.326 = s32[] parameter(0)
  %reduce_window_sum.327 = s32[] parameter(1)
  ROOT %reduce_window_sum.328 = s32[] add(%reduce_window_sum.326, %reduce_window_sum.327)
}

%region_179.10885 (reduce_sum.10882: f32[], reduce_sum.10883: f32[]) -> f32[] {
  %reduce_sum.10882 = f32[] parameter(0)
  %reduce_sum.10883 = f32[] parameter(1)
  ROOT %reduce_sum.10884 = f32[] add(%reduce_sum.10882, %reduce_sum.10883)
}

%region_180.10898 (reduce_sum.10895: f32[], reduce_sum.10896: f32[]) -> f32[] {
  %reduce_sum.10895 = f32[] parameter(0)
  %reduce_sum.10896 = f32[] parameter(1)
  ROOT %reduce_sum.10897 = f32[] add(%reduce_sum.10895, %reduce_sum.10896)
}

%region_181.10976 (reduce_sum.10973: f32[], reduce_sum.10974: f32[]) -> f32[] {
  %reduce_sum.10973 = f32[] parameter(0)
  %reduce_sum.10974 = f32[] parameter(1)
  ROOT %reduce_sum.10975 = f32[] add(%reduce_sum.10973, %reduce_sum.10974)
}

%region_182.10989 (reduce_sum.10986: f32[], reduce_sum.10987: f32[]) -> f32[] {
  %reduce_sum.10986 = f32[] parameter(0)
  %reduce_sum.10987 = f32[] parameter(1)
  ROOT %reduce_sum.10988 = f32[] add(%reduce_sum.10986, %reduce_sum.10987)
}

%region_183.11141 (reduce_sum.11138: s32[], reduce_sum.34: s32[]) -> s32[] {
  %reduce_sum.11138 = s32[] parameter(0)
  %reduce_sum.34 = s32[] parameter(1)
  ROOT %reduce_sum.35 = s32[] add(%reduce_sum.11138, %reduce_sum.34)
}

%region_184.11150 (reduce_sum.11147: s32[], reduce_sum.11148: s32[]) -> s32[] {
  %reduce_sum.11147 = s32[] parameter(0)
  %reduce_sum.11148 = s32[] parameter(1)
  ROOT %reduce_sum.11149 = s32[] add(%reduce_sum.11147, %reduce_sum.11148)
}

%region_185.11156 (reduce_max.11153: s32[], reduce_max.11154: s32[]) -> s32[] {
  %reduce_max.11153 = s32[] parameter(0)
  %reduce_max.11154 = s32[] parameter(1)
  ROOT %reduce_max.11155 = s32[] maximum(%reduce_max.11153, %reduce_max.11154)
}

%region_0.36._custom_call_lowering_rule.2 (reduce_window_sum.102: s32[], reduce_window_sum.103: s32[]) -> s32[] {
  %reduce_window_sum.102 = s32[] parameter(0)
  %reduce_window_sum.103 = s32[] parameter(1)
  ROOT %reduce_window_sum.104 = s32[] add(%reduce_window_sum.102, %reduce_window_sum.103)
}

%region_0.36._custom_call_lowering_rule.2.clone (reduce_window_sum.329: s32[], reduce_window_sum.330: s32[]) -> s32[] {
  %reduce_window_sum.329 = s32[] parameter(0)
  %reduce_window_sum.330 = s32[] parameter(1)
  ROOT %reduce_window_sum.331 = s32[] add(%reduce_window_sum.329, %reduce_window_sum.330)
}

%region_186.11244 (reduce_sum.11241: f32[], reduce_sum.11242: f32[]) -> f32[] {
  %reduce_sum.11241 = f32[] parameter(0)
  %reduce_sum.11242 = f32[] parameter(1)
  ROOT %reduce_sum.36 = f32[] add(%reduce_sum.11241, %reduce_sum.11242)
}

%region_187.11257 (reduce_sum.37: f32[], reduce_sum.38: f32[]) -> f32[] {
  %reduce_sum.37 = f32[] parameter(0)
  %reduce_sum.38 = f32[] parameter(1)
  ROOT %reduce_sum.11256 = f32[] add(%reduce_sum.37, %reduce_sum.38)
}

%region_188.11335 (reduce_sum.11332: f32[], reduce_sum.11333: f32[]) -> f32[] {
  %reduce_sum.11332 = f32[] parameter(0)
  %reduce_sum.11333 = f32[] parameter(1)
  ROOT %reduce_sum.11334 = f32[] add(%reduce_sum.11332, %reduce_sum.11333)
}

%region_189.11348 (reduce_sum.11345: f32[], reduce_sum.11346: f32[]) -> f32[] {
  %reduce_sum.11345 = f32[] parameter(0)
  %reduce_sum.11346 = f32[] parameter(1)
  ROOT %reduce_sum.11347 = f32[] add(%reduce_sum.11345, %reduce_sum.11346)
}

%region_190.11500 (reduce_sum.11497: s32[], reduce_sum.11498: s32[]) -> s32[] {
  %reduce_sum.11497 = s32[] parameter(0)
  %reduce_sum.11498 = s32[] parameter(1)
  ROOT %reduce_sum.11499 = s32[] add(%reduce_sum.11497, %reduce_sum.11498)
}

%region_191.11509 (reduce_sum.11506: s32[], reduce_sum.11507: s32[]) -> s32[] {
  %reduce_sum.11506 = s32[] parameter(0)
  %reduce_sum.11507 = s32[] parameter(1)
  ROOT %reduce_sum.11508 = s32[] add(%reduce_sum.11506, %reduce_sum.11507)
}

%region_192.11515 (reduce_max.11512: s32[], reduce_max.11513: s32[]) -> s32[] {
  %reduce_max.11512 = s32[] parameter(0)
  %reduce_max.11513 = s32[] parameter(1)
  ROOT %reduce_max.11514 = s32[] maximum(%reduce_max.11512, %reduce_max.11513)
}

%region_0.36._custom_call_lowering_rule.3 (reduce_window_sum.105: s32[], reduce_window_sum.106: s32[]) -> s32[] {
  %reduce_window_sum.105 = s32[] parameter(0)
  %reduce_window_sum.106 = s32[] parameter(1)
  ROOT %reduce_window_sum.107 = s32[] add(%reduce_window_sum.105, %reduce_window_sum.106)
}

%region_0.36._custom_call_lowering_rule.3.clone (reduce_window_sum.332: s32[], reduce_window_sum.333: s32[]) -> s32[] {
  %reduce_window_sum.332 = s32[] parameter(0)
  %reduce_window_sum.333 = s32[] parameter(1)
  ROOT %reduce_window_sum.334 = s32[] add(%reduce_window_sum.332, %reduce_window_sum.333)
}

%region_193.11603 (reduce_sum.11600: f32[], reduce_sum.39: f32[]) -> f32[] {
  %reduce_sum.11600 = f32[] parameter(0)
  %reduce_sum.39 = f32[] parameter(1)
  ROOT %reduce_sum.40 = f32[] add(%reduce_sum.11600, %reduce_sum.39)
}

%region_194.11616 (reduce_sum.41: f32[], reduce_sum.11614: f32[]) -> f32[] {
  %reduce_sum.41 = f32[] parameter(0)
  %reduce_sum.11614 = f32[] parameter(1)
  ROOT %reduce_sum.42 = f32[] add(%reduce_sum.41, %reduce_sum.11614)
}

%region_195.11694 (reduce_sum.11691: f32[], reduce_sum.11692: f32[]) -> f32[] {
  %reduce_sum.11691 = f32[] parameter(0)
  %reduce_sum.11692 = f32[] parameter(1)
  ROOT %reduce_sum.11693 = f32[] add(%reduce_sum.11691, %reduce_sum.11692)
}

%region_196.11707 (reduce_sum.11704: f32[], reduce_sum.11705: f32[]) -> f32[] {
  %reduce_sum.11704 = f32[] parameter(0)
  %reduce_sum.11705 = f32[] parameter(1)
  ROOT %reduce_sum.11706 = f32[] add(%reduce_sum.11704, %reduce_sum.11705)
}

%region_197.11859 (reduce_sum.11856: s32[], reduce_sum.11857: s32[]) -> s32[] {
  %reduce_sum.11856 = s32[] parameter(0)
  %reduce_sum.11857 = s32[] parameter(1)
  ROOT %reduce_sum.11858 = s32[] add(%reduce_sum.11856, %reduce_sum.11857)
}

%region_198.11868 (reduce_sum.11865: s32[], reduce_sum.11866: s32[]) -> s32[] {
  %reduce_sum.11865 = s32[] parameter(0)
  %reduce_sum.11866 = s32[] parameter(1)
  ROOT %reduce_sum.11867 = s32[] add(%reduce_sum.11865, %reduce_sum.11866)
}

%region_199.11874 (reduce_max.11871: s32[], reduce_max.11872: s32[]) -> s32[] {
  %reduce_max.11871 = s32[] parameter(0)
  %reduce_max.11872 = s32[] parameter(1)
  ROOT %reduce_max.11873 = s32[] maximum(%reduce_max.11871, %reduce_max.11872)
}

%region_0.36._custom_call_lowering_rule.4 (reduce_window_sum.108: s32[], reduce_window_sum.109: s32[]) -> s32[] {
  %reduce_window_sum.108 = s32[] parameter(0)
  %reduce_window_sum.109 = s32[] parameter(1)
  ROOT %reduce_window_sum.110 = s32[] add(%reduce_window_sum.108, %reduce_window_sum.109)
}

%region_0.36._custom_call_lowering_rule.4.clone (reduce_window_sum.335: s32[], reduce_window_sum.336: s32[]) -> s32[] {
  %reduce_window_sum.335 = s32[] parameter(0)
  %reduce_window_sum.336 = s32[] parameter(1)
  ROOT %reduce_window_sum.337 = s32[] add(%reduce_window_sum.335, %reduce_window_sum.336)
}

%region_200.11962 (reduce_sum.11959: f32[], reduce_sum.11960: f32[]) -> f32[] {
  %reduce_sum.11959 = f32[] parameter(0)
  %reduce_sum.11960 = f32[] parameter(1)
  ROOT %reduce_sum.11961 = f32[] add(%reduce_sum.11959, %reduce_sum.11960)
}

%region_201.11975 (reduce_sum.11972: f32[], reduce_sum.11973: f32[]) -> f32[] {
  %reduce_sum.11972 = f32[] parameter(0)
  %reduce_sum.11973 = f32[] parameter(1)
  ROOT %reduce_sum.11974 = f32[] add(%reduce_sum.11972, %reduce_sum.11973)
}

%region_202.12053 (reduce_sum.12050: f32[], reduce_sum.12051: f32[]) -> f32[] {
  %reduce_sum.12050 = f32[] parameter(0)
  %reduce_sum.12051 = f32[] parameter(1)
  ROOT %reduce_sum.12052 = f32[] add(%reduce_sum.12050, %reduce_sum.12051)
}

%region_203.12066 (reduce_sum.12063: f32[], reduce_sum.12064: f32[]) -> f32[] {
  %reduce_sum.12063 = f32[] parameter(0)
  %reduce_sum.12064 = f32[] parameter(1)
  ROOT %reduce_sum.12065 = f32[] add(%reduce_sum.12063, %reduce_sum.12064)
}

%region_204.12218 (reduce_sum.12215: s32[], reduce_sum.12216: s32[]) -> s32[] {
  %reduce_sum.12215 = s32[] parameter(0)
  %reduce_sum.12216 = s32[] parameter(1)
  ROOT %reduce_sum.12217 = s32[] add(%reduce_sum.12215, %reduce_sum.12216)
}

%region_205.12227 (reduce_sum.12224: s32[], reduce_sum.12225: s32[]) -> s32[] {
  %reduce_sum.12224 = s32[] parameter(0)
  %reduce_sum.12225 = s32[] parameter(1)
  ROOT %reduce_sum.12226 = s32[] add(%reduce_sum.12224, %reduce_sum.12225)
}

%region_206.12233 (reduce_max.12230: s32[], reduce_max.12231: s32[]) -> s32[] {
  %reduce_max.12230 = s32[] parameter(0)
  %reduce_max.12231 = s32[] parameter(1)
  ROOT %reduce_max.12232 = s32[] maximum(%reduce_max.12230, %reduce_max.12231)
}

%region_0.36._custom_call_lowering_rule.5 (reduce_window_sum.111: s32[], reduce_window_sum.112: s32[]) -> s32[] {
  %reduce_window_sum.111 = s32[] parameter(0)
  %reduce_window_sum.112 = s32[] parameter(1)
  ROOT %reduce_window_sum.113 = s32[] add(%reduce_window_sum.111, %reduce_window_sum.112)
}

%region_0.36._custom_call_lowering_rule.5.clone (reduce_window_sum.338: s32[], reduce_window_sum.339: s32[]) -> s32[] {
  %reduce_window_sum.338 = s32[] parameter(0)
  %reduce_window_sum.339 = s32[] parameter(1)
  ROOT %reduce_window_sum.340 = s32[] add(%reduce_window_sum.338, %reduce_window_sum.339)
}

%region_207.12321 (reduce_sum.12318: f32[], reduce_sum.12319: f32[]) -> f32[] {
  %reduce_sum.12318 = f32[] parameter(0)
  %reduce_sum.12319 = f32[] parameter(1)
  ROOT %reduce_sum.12320 = f32[] add(%reduce_sum.12318, %reduce_sum.12319)
}

%region_208.12334 (reduce_sum.12331: f32[], reduce_sum.12332: f32[]) -> f32[] {
  %reduce_sum.12331 = f32[] parameter(0)
  %reduce_sum.12332 = f32[] parameter(1)
  ROOT %reduce_sum.12333 = f32[] add(%reduce_sum.12331, %reduce_sum.12332)
}

%region_209.12412 (reduce_sum.12409: f32[], reduce_sum.12410: f32[]) -> f32[] {
  %reduce_sum.12409 = f32[] parameter(0)
  %reduce_sum.12410 = f32[] parameter(1)
  ROOT %reduce_sum.12411 = f32[] add(%reduce_sum.12409, %reduce_sum.12410)
}

%region_210.12425 (reduce_sum.12422: f32[], reduce_sum.12423: f32[]) -> f32[] {
  %reduce_sum.12422 = f32[] parameter(0)
  %reduce_sum.12423 = f32[] parameter(1)
  ROOT %reduce_sum.12424 = f32[] add(%reduce_sum.12422, %reduce_sum.12423)
}

%region_211.12577 (reduce_sum.12574: s32[], reduce_sum.12575: s32[]) -> s32[] {
  %reduce_sum.12574 = s32[] parameter(0)
  %reduce_sum.12575 = s32[] parameter(1)
  ROOT %reduce_sum.12576 = s32[] add(%reduce_sum.12574, %reduce_sum.12575)
}

%region_212.12586 (reduce_sum.12583: s32[], reduce_sum.12584: s32[]) -> s32[] {
  %reduce_sum.12583 = s32[] parameter(0)
  %reduce_sum.12584 = s32[] parameter(1)
  ROOT %reduce_sum.43 = s32[] add(%reduce_sum.12583, %reduce_sum.12584)
}

%region_213.12592 (reduce_max.12589: s32[], reduce_max.12590: s32[]) -> s32[] {
  %reduce_max.12589 = s32[] parameter(0)
  %reduce_max.12590 = s32[] parameter(1)
  ROOT %reduce_max.12591 = s32[] maximum(%reduce_max.12589, %reduce_max.12590)
}

%region_0.36._custom_call_lowering_rule.6 (reduce_window_sum.114: s32[], reduce_window_sum.115: s32[]) -> s32[] {
  %reduce_window_sum.114 = s32[] parameter(0)
  %reduce_window_sum.115 = s32[] parameter(1)
  ROOT %reduce_window_sum.116 = s32[] add(%reduce_window_sum.114, %reduce_window_sum.115)
}

%region_0.36._custom_call_lowering_rule.6.clone (reduce_window_sum.341: s32[], reduce_window_sum.342: s32[]) -> s32[] {
  %reduce_window_sum.341 = s32[] parameter(0)
  %reduce_window_sum.342 = s32[] parameter(1)
  ROOT %reduce_window_sum.343 = s32[] add(%reduce_window_sum.341, %reduce_window_sum.342)
}

%region_214.12680 (reduce_sum.12677: f32[], reduce_sum.12678: f32[]) -> f32[] {
  %reduce_sum.12677 = f32[] parameter(0)
  %reduce_sum.12678 = f32[] parameter(1)
  ROOT %reduce_sum.12679 = f32[] add(%reduce_sum.12677, %reduce_sum.12678)
}

%region_215.12693 (reduce_sum.12690: f32[], reduce_sum.12691: f32[]) -> f32[] {
  %reduce_sum.12690 = f32[] parameter(0)
  %reduce_sum.12691 = f32[] parameter(1)
  ROOT %reduce_sum.12692 = f32[] add(%reduce_sum.12690, %reduce_sum.12691)
}

%region_216.12771 (reduce_sum.12768: f32[], reduce_sum.12769: f32[]) -> f32[] {
  %reduce_sum.12768 = f32[] parameter(0)
  %reduce_sum.12769 = f32[] parameter(1)
  ROOT %reduce_sum.12770 = f32[] add(%reduce_sum.12768, %reduce_sum.12769)
}

%region_217.12784 (reduce_sum.12781: f32[], reduce_sum.12782: f32[]) -> f32[] {
  %reduce_sum.12781 = f32[] parameter(0)
  %reduce_sum.12782 = f32[] parameter(1)
  ROOT %reduce_sum.12783 = f32[] add(%reduce_sum.12781, %reduce_sum.12782)
}

%region_218.12936 (reduce_sum.12933: s32[], reduce_sum.12934: s32[]) -> s32[] {
  %reduce_sum.12933 = s32[] parameter(0)
  %reduce_sum.12934 = s32[] parameter(1)
  ROOT %reduce_sum.12935 = s32[] add(%reduce_sum.12933, %reduce_sum.12934)
}

%region_219.12945 (reduce_sum.12942: s32[], reduce_sum.12943: s32[]) -> s32[] {
  %reduce_sum.12942 = s32[] parameter(0)
  %reduce_sum.12943 = s32[] parameter(1)
  ROOT %reduce_sum.12944 = s32[] add(%reduce_sum.12942, %reduce_sum.12943)
}

%region_220.12951 (reduce_max.12948: s32[], reduce_max.12949: s32[]) -> s32[] {
  %reduce_max.12948 = s32[] parameter(0)
  %reduce_max.12949 = s32[] parameter(1)
  ROOT %reduce_max.12950 = s32[] maximum(%reduce_max.12948, %reduce_max.12949)
}

%region_0.36._custom_call_lowering_rule.7 (reduce_window_sum.117: s32[], reduce_window_sum.118: s32[]) -> s32[] {
  %reduce_window_sum.117 = s32[] parameter(0)
  %reduce_window_sum.118 = s32[] parameter(1)
  ROOT %reduce_window_sum.119 = s32[] add(%reduce_window_sum.117, %reduce_window_sum.118)
}

%region_0.36._custom_call_lowering_rule.7.clone (reduce_window_sum.344: s32[], reduce_window_sum.345: s32[]) -> s32[] {
  %reduce_window_sum.344 = s32[] parameter(0)
  %reduce_window_sum.345 = s32[] parameter(1)
  ROOT %reduce_window_sum.346 = s32[] add(%reduce_window_sum.344, %reduce_window_sum.345)
}

%region_221.13039 (reduce_sum.13036: f32[], reduce_sum.13037: f32[]) -> f32[] {
  %reduce_sum.13036 = f32[] parameter(0)
  %reduce_sum.13037 = f32[] parameter(1)
  ROOT %reduce_sum.13038 = f32[] add(%reduce_sum.13036, %reduce_sum.13037)
}

%region_222.13052 (reduce_sum.13049: f32[], reduce_sum.13050: f32[]) -> f32[] {
  %reduce_sum.13049 = f32[] parameter(0)
  %reduce_sum.13050 = f32[] parameter(1)
  ROOT %reduce_sum.13051 = f32[] add(%reduce_sum.13049, %reduce_sum.13050)
}

%region_223.13130 (reduce_sum.13127: f32[], reduce_sum.13128: f32[]) -> f32[] {
  %reduce_sum.13127 = f32[] parameter(0)
  %reduce_sum.13128 = f32[] parameter(1)
  ROOT %reduce_sum.13129 = f32[] add(%reduce_sum.13127, %reduce_sum.13128)
}

%region_224.13143 (reduce_sum.13140: f32[], reduce_sum.13141: f32[]) -> f32[] {
  %reduce_sum.13140 = f32[] parameter(0)
  %reduce_sum.13141 = f32[] parameter(1)
  ROOT %reduce_sum.13142 = f32[] add(%reduce_sum.13140, %reduce_sum.13141)
}

%region_225.13295 (reduce_sum.13292: s32[], reduce_sum.13293: s32[]) -> s32[] {
  %reduce_sum.13292 = s32[] parameter(0)
  %reduce_sum.13293 = s32[] parameter(1)
  ROOT %reduce_sum.13294 = s32[] add(%reduce_sum.13292, %reduce_sum.13293)
}

%region_226.13304 (reduce_sum.13301: s32[], reduce_sum.13302: s32[]) -> s32[] {
  %reduce_sum.13301 = s32[] parameter(0)
  %reduce_sum.13302 = s32[] parameter(1)
  ROOT %reduce_sum.13303 = s32[] add(%reduce_sum.13301, %reduce_sum.13302)
}

%region_227.13310 (reduce_max.13307: s32[], reduce_max.13308: s32[]) -> s32[] {
  %reduce_max.13307 = s32[] parameter(0)
  %reduce_max.13308 = s32[] parameter(1)
  ROOT %reduce_max.13309 = s32[] maximum(%reduce_max.13307, %reduce_max.13308)
}

%region_0.36._custom_call_lowering_rule.8 (reduce_window_sum.120: s32[], reduce_window_sum.121: s32[]) -> s32[] {
  %reduce_window_sum.120 = s32[] parameter(0)
  %reduce_window_sum.121 = s32[] parameter(1)
  ROOT %reduce_window_sum.122 = s32[] add(%reduce_window_sum.120, %reduce_window_sum.121)
}

%region_0.36._custom_call_lowering_rule.8.clone (reduce_window_sum.347: s32[], reduce_window_sum.348: s32[]) -> s32[] {
  %reduce_window_sum.347 = s32[] parameter(0)
  %reduce_window_sum.348 = s32[] parameter(1)
  ROOT %reduce_window_sum.349 = s32[] add(%reduce_window_sum.347, %reduce_window_sum.348)
}

%region_228.13398 (reduce_sum.13395: f32[], reduce_sum.13396: f32[]) -> f32[] {
  %reduce_sum.13395 = f32[] parameter(0)
  %reduce_sum.13396 = f32[] parameter(1)
  ROOT %reduce_sum.13397 = f32[] add(%reduce_sum.13395, %reduce_sum.13396)
}

%region_229.13411 (reduce_sum.13408: f32[], reduce_sum.13409: f32[]) -> f32[] {
  %reduce_sum.13408 = f32[] parameter(0)
  %reduce_sum.13409 = f32[] parameter(1)
  ROOT %reduce_sum.13410 = f32[] add(%reduce_sum.13408, %reduce_sum.13409)
}

%region_230.13489 (reduce_sum.13486: f32[], reduce_sum.13487: f32[]) -> f32[] {
  %reduce_sum.13486 = f32[] parameter(0)
  %reduce_sum.13487 = f32[] parameter(1)
  ROOT %reduce_sum.13488 = f32[] add(%reduce_sum.13486, %reduce_sum.13487)
}

%region_231.13502 (reduce_sum.44: f32[], reduce_sum.45: f32[]) -> f32[] {
  %reduce_sum.44 = f32[] parameter(0)
  %reduce_sum.45 = f32[] parameter(1)
  ROOT %reduce_sum.46 = f32[] add(%reduce_sum.44, %reduce_sum.45)
}

%region_232.13654 (reduce_sum.13651: s32[], reduce_sum.13652: s32[]) -> s32[] {
  %reduce_sum.13651 = s32[] parameter(0)
  %reduce_sum.13652 = s32[] parameter(1)
  ROOT %reduce_sum.13653 = s32[] add(%reduce_sum.13651, %reduce_sum.13652)
}

%region_233.13663 (reduce_sum.13660: s32[], reduce_sum.13661: s32[]) -> s32[] {
  %reduce_sum.13660 = s32[] parameter(0)
  %reduce_sum.13661 = s32[] parameter(1)
  ROOT %reduce_sum.13662 = s32[] add(%reduce_sum.13660, %reduce_sum.13661)
}

%region_234.13669 (reduce_max.13666: s32[], reduce_max.13667: s32[]) -> s32[] {
  %reduce_max.13666 = s32[] parameter(0)
  %reduce_max.13667 = s32[] parameter(1)
  ROOT %reduce_max.13668 = s32[] maximum(%reduce_max.13666, %reduce_max.13667)
}

%region_0.36._custom_call_lowering_rule.9 (reduce_window_sum.123: s32[], reduce_window_sum.124: s32[]) -> s32[] {
  %reduce_window_sum.123 = s32[] parameter(0)
  %reduce_window_sum.124 = s32[] parameter(1)
  ROOT %reduce_window_sum.125 = s32[] add(%reduce_window_sum.123, %reduce_window_sum.124)
}

%region_0.36._custom_call_lowering_rule.9.clone (reduce_window_sum.350: s32[], reduce_window_sum.351: s32[]) -> s32[] {
  %reduce_window_sum.350 = s32[] parameter(0)
  %reduce_window_sum.351 = s32[] parameter(1)
  ROOT %reduce_window_sum.352 = s32[] add(%reduce_window_sum.350, %reduce_window_sum.351)
}

%region_235.13757 (reduce_sum.13754: f32[], reduce_sum.13755: f32[]) -> f32[] {
  %reduce_sum.13754 = f32[] parameter(0)
  %reduce_sum.13755 = f32[] parameter(1)
  ROOT %reduce_sum.13756 = f32[] add(%reduce_sum.13754, %reduce_sum.13755)
}

%region_236.13770 (reduce_sum.13767: f32[], reduce_sum.13768: f32[]) -> f32[] {
  %reduce_sum.13767 = f32[] parameter(0)
  %reduce_sum.13768 = f32[] parameter(1)
  ROOT %reduce_sum.13769 = f32[] add(%reduce_sum.13767, %reduce_sum.13768)
}

%region_237.13848 (reduce_sum.13845: f32[], reduce_sum.13846: f32[]) -> f32[] {
  %reduce_sum.13845 = f32[] parameter(0)
  %reduce_sum.13846 = f32[] parameter(1)
  ROOT %reduce_sum.13847 = f32[] add(%reduce_sum.13845, %reduce_sum.13846)
}

%region_238.13861 (reduce_sum.13858: f32[], reduce_sum.13859: f32[]) -> f32[] {
  %reduce_sum.13858 = f32[] parameter(0)
  %reduce_sum.13859 = f32[] parameter(1)
  ROOT %reduce_sum.13860 = f32[] add(%reduce_sum.13858, %reduce_sum.13859)
}

%region_239.14013 (reduce_sum.47: s32[], reduce_sum.14011: s32[]) -> s32[] {
  %reduce_sum.47 = s32[] parameter(0)
  %reduce_sum.14011 = s32[] parameter(1)
  ROOT %reduce_sum.48 = s32[] add(%reduce_sum.47, %reduce_sum.14011)
}

%region_240.14022 (reduce_sum.14019: s32[], reduce_sum.14020: s32[]) -> s32[] {
  %reduce_sum.14019 = s32[] parameter(0)
  %reduce_sum.14020 = s32[] parameter(1)
  ROOT %reduce_sum.14021 = s32[] add(%reduce_sum.14019, %reduce_sum.14020)
}

%region_241.14028 (reduce_max.14025: s32[], reduce_max.14026: s32[]) -> s32[] {
  %reduce_max.14025 = s32[] parameter(0)
  %reduce_max.14026 = s32[] parameter(1)
  ROOT %reduce_max.14027 = s32[] maximum(%reduce_max.14025, %reduce_max.14026)
}

%region_0.36._custom_call_lowering_rule.10 (reduce_window_sum.126: s32[], reduce_window_sum.127: s32[]) -> s32[] {
  %reduce_window_sum.126 = s32[] parameter(0)
  %reduce_window_sum.127 = s32[] parameter(1)
  ROOT %reduce_window_sum.128 = s32[] add(%reduce_window_sum.126, %reduce_window_sum.127)
}

%region_0.36._custom_call_lowering_rule.10.clone (reduce_window_sum.353: s32[], reduce_window_sum.354: s32[]) -> s32[] {
  %reduce_window_sum.353 = s32[] parameter(0)
  %reduce_window_sum.354 = s32[] parameter(1)
  ROOT %reduce_window_sum.355 = s32[] add(%reduce_window_sum.353, %reduce_window_sum.354)
}

%region_242.14116 (reduce_sum.14113: f32[], reduce_sum.14114: f32[]) -> f32[] {
  %reduce_sum.14113 = f32[] parameter(0)
  %reduce_sum.14114 = f32[] parameter(1)
  ROOT %reduce_sum.14115 = f32[] add(%reduce_sum.14113, %reduce_sum.14114)
}

%region_243.14129 (reduce_sum.14126: f32[], reduce_sum.14127: f32[]) -> f32[] {
  %reduce_sum.14126 = f32[] parameter(0)
  %reduce_sum.14127 = f32[] parameter(1)
  ROOT %reduce_sum.14128 = f32[] add(%reduce_sum.14126, %reduce_sum.14127)
}

%region_244.14207 (reduce_sum.14204: f32[], reduce_sum.49: f32[]) -> f32[] {
  %reduce_sum.14204 = f32[] parameter(0)
  %reduce_sum.49 = f32[] parameter(1)
  ROOT %reduce_sum.50 = f32[] add(%reduce_sum.14204, %reduce_sum.49)
}

%region_245.14220 (reduce_sum.51: f32[], reduce_sum.14218: f32[]) -> f32[] {
  %reduce_sum.51 = f32[] parameter(0)
  %reduce_sum.14218 = f32[] parameter(1)
  ROOT %reduce_sum.14219 = f32[] add(%reduce_sum.51, %reduce_sum.14218)
}

%region_246.14372 (reduce_sum.14369: s32[], reduce_sum.14370: s32[]) -> s32[] {
  %reduce_sum.14369 = s32[] parameter(0)
  %reduce_sum.14370 = s32[] parameter(1)
  ROOT %reduce_sum.14371 = s32[] add(%reduce_sum.14369, %reduce_sum.14370)
}

%region_247.14381 (reduce_sum.14378: s32[], reduce_sum.14379: s32[]) -> s32[] {
  %reduce_sum.14378 = s32[] parameter(0)
  %reduce_sum.14379 = s32[] parameter(1)
  ROOT %reduce_sum.14380 = s32[] add(%reduce_sum.14378, %reduce_sum.14379)
}

%region_248.14387 (reduce_max.14384: s32[], reduce_max.14385: s32[]) -> s32[] {
  %reduce_max.14384 = s32[] parameter(0)
  %reduce_max.14385 = s32[] parameter(1)
  ROOT %reduce_max.14386 = s32[] maximum(%reduce_max.14384, %reduce_max.14385)
}

%region_0.36._custom_call_lowering_rule.11 (reduce_window_sum.129: s32[], reduce_window_sum.130: s32[]) -> s32[] {
  %reduce_window_sum.129 = s32[] parameter(0)
  %reduce_window_sum.130 = s32[] parameter(1)
  ROOT %reduce_window_sum.131 = s32[] add(%reduce_window_sum.129, %reduce_window_sum.130)
}

%region_0.36._custom_call_lowering_rule.11.clone (reduce_window_sum.356: s32[], reduce_window_sum.357: s32[]) -> s32[] {
  %reduce_window_sum.356 = s32[] parameter(0)
  %reduce_window_sum.357 = s32[] parameter(1)
  ROOT %reduce_window_sum.358 = s32[] add(%reduce_window_sum.356, %reduce_window_sum.357)
}

%region_249.14475 (reduce_sum.14472: f32[], reduce_sum.14473: f32[]) -> f32[] {
  %reduce_sum.14472 = f32[] parameter(0)
  %reduce_sum.14473 = f32[] parameter(1)
  ROOT %reduce_sum.14474 = f32[] add(%reduce_sum.14472, %reduce_sum.14473)
}

%region_250.14488 (reduce_sum.52: f32[], reduce_sum.14486: f32[]) -> f32[] {
  %reduce_sum.52 = f32[] parameter(0)
  %reduce_sum.14486 = f32[] parameter(1)
  ROOT %reduce_sum.53 = f32[] add(%reduce_sum.52, %reduce_sum.14486)
}

%region_251.14566 (reduce_sum.54: f32[], reduce_sum.55: f32[]) -> f32[] {
  %reduce_sum.54 = f32[] parameter(0)
  %reduce_sum.55 = f32[] parameter(1)
  ROOT %reduce_sum.56 = f32[] add(%reduce_sum.54, %reduce_sum.55)
}

%region_252.14579 (reduce_sum.14576: f32[], reduce_sum.14577: f32[]) -> f32[] {
  %reduce_sum.14576 = f32[] parameter(0)
  %reduce_sum.14577 = f32[] parameter(1)
  ROOT %reduce_sum.14578 = f32[] add(%reduce_sum.14576, %reduce_sum.14577)
}

%region_253.14731 (reduce_sum.14728: s32[], reduce_sum.14729: s32[]) -> s32[] {
  %reduce_sum.14728 = s32[] parameter(0)
  %reduce_sum.14729 = s32[] parameter(1)
  ROOT %reduce_sum.14730 = s32[] add(%reduce_sum.14728, %reduce_sum.14729)
}

%region_254.14740 (reduce_sum.14737: s32[], reduce_sum.14738: s32[]) -> s32[] {
  %reduce_sum.14737 = s32[] parameter(0)
  %reduce_sum.14738 = s32[] parameter(1)
  ROOT %reduce_sum.14739 = s32[] add(%reduce_sum.14737, %reduce_sum.14738)
}

%region_255.14746 (reduce_max.14743: s32[], reduce_max.14744: s32[]) -> s32[] {
  %reduce_max.14743 = s32[] parameter(0)
  %reduce_max.14744 = s32[] parameter(1)
  ROOT %reduce_max.14745 = s32[] maximum(%reduce_max.14743, %reduce_max.14744)
}

%region_0.36._custom_call_lowering_rule.12 (reduce_window_sum.132: s32[], reduce_window_sum.133: s32[]) -> s32[] {
  %reduce_window_sum.132 = s32[] parameter(0)
  %reduce_window_sum.133 = s32[] parameter(1)
  ROOT %reduce_window_sum.134 = s32[] add(%reduce_window_sum.132, %reduce_window_sum.133)
}

%region_0.36._custom_call_lowering_rule.12.clone (reduce_window_sum.359: s32[], reduce_window_sum.360: s32[]) -> s32[] {
  %reduce_window_sum.359 = s32[] parameter(0)
  %reduce_window_sum.360 = s32[] parameter(1)
  ROOT %reduce_window_sum.361 = s32[] add(%reduce_window_sum.359, %reduce_window_sum.360)
}

%region_256.14834 (reduce_sum.14831: f32[], reduce_sum.14832: f32[]) -> f32[] {
  %reduce_sum.14831 = f32[] parameter(0)
  %reduce_sum.14832 = f32[] parameter(1)
  ROOT %reduce_sum.14833 = f32[] add(%reduce_sum.14831, %reduce_sum.14832)
}

%region_257.14847 (reduce_sum.14844: f32[], reduce_sum.14845: f32[]) -> f32[] {
  %reduce_sum.14844 = f32[] parameter(0)
  %reduce_sum.14845 = f32[] parameter(1)
  ROOT %reduce_sum.14846 = f32[] add(%reduce_sum.14844, %reduce_sum.14845)
}

%region_258.14925 (reduce_sum.14922: f32[], reduce_sum.14923: f32[]) -> f32[] {
  %reduce_sum.14922 = f32[] parameter(0)
  %reduce_sum.14923 = f32[] parameter(1)
  ROOT %reduce_sum.14924 = f32[] add(%reduce_sum.14922, %reduce_sum.14923)
}

%region_259.14938 (reduce_sum.14935: f32[], reduce_sum.14936: f32[]) -> f32[] {
  %reduce_sum.14935 = f32[] parameter(0)
  %reduce_sum.14936 = f32[] parameter(1)
  ROOT %reduce_sum.14937 = f32[] add(%reduce_sum.14935, %reduce_sum.14936)
}

%region_260.15090 (reduce_sum.15087: s32[], reduce_sum.15088: s32[]) -> s32[] {
  %reduce_sum.15087 = s32[] parameter(0)
  %reduce_sum.15088 = s32[] parameter(1)
  ROOT %reduce_sum.15089 = s32[] add(%reduce_sum.15087, %reduce_sum.15088)
}

%region_261.15099 (reduce_sum.15096: s32[], reduce_sum.15097: s32[]) -> s32[] {
  %reduce_sum.15096 = s32[] parameter(0)
  %reduce_sum.15097 = s32[] parameter(1)
  ROOT %reduce_sum.15098 = s32[] add(%reduce_sum.15096, %reduce_sum.15097)
}

%region_262.15105 (reduce_max.15102: s32[], reduce_max.15103: s32[]) -> s32[] {
  %reduce_max.15102 = s32[] parameter(0)
  %reduce_max.15103 = s32[] parameter(1)
  ROOT %reduce_max.15104 = s32[] maximum(%reduce_max.15102, %reduce_max.15103)
}

%region_0.36._custom_call_lowering_rule.13 (reduce_window_sum.135: s32[], reduce_window_sum.136: s32[]) -> s32[] {
  %reduce_window_sum.135 = s32[] parameter(0)
  %reduce_window_sum.136 = s32[] parameter(1)
  ROOT %reduce_window_sum.137 = s32[] add(%reduce_window_sum.135, %reduce_window_sum.136)
}

%region_0.36._custom_call_lowering_rule.13.clone (reduce_window_sum.362: s32[], reduce_window_sum.363: s32[]) -> s32[] {
  %reduce_window_sum.362 = s32[] parameter(0)
  %reduce_window_sum.363 = s32[] parameter(1)
  ROOT %reduce_window_sum.364 = s32[] add(%reduce_window_sum.362, %reduce_window_sum.363)
}

%region_263.15193 (reduce_sum.57: f32[], reduce_sum.58: f32[]) -> f32[] {
  %reduce_sum.57 = f32[] parameter(0)
  %reduce_sum.58 = f32[] parameter(1)
  ROOT %reduce_sum.15192 = f32[] add(%reduce_sum.57, %reduce_sum.58)
}

%region_264.15206 (reduce_sum.15203: f32[], reduce_sum.15204: f32[]) -> f32[] {
  %reduce_sum.15203 = f32[] parameter(0)
  %reduce_sum.15204 = f32[] parameter(1)
  ROOT %reduce_sum.15205 = f32[] add(%reduce_sum.15203, %reduce_sum.15204)
}

%region_265.15284 (reduce_sum.15281: f32[], reduce_sum.15282: f32[]) -> f32[] {
  %reduce_sum.15281 = f32[] parameter(0)
  %reduce_sum.15282 = f32[] parameter(1)
  ROOT %reduce_sum.15283 = f32[] add(%reduce_sum.15281, %reduce_sum.15282)
}

%region_266.15297 (reduce_sum.15294: f32[], reduce_sum.15295: f32[]) -> f32[] {
  %reduce_sum.15294 = f32[] parameter(0)
  %reduce_sum.15295 = f32[] parameter(1)
  ROOT %reduce_sum.15296 = f32[] add(%reduce_sum.15294, %reduce_sum.15295)
}

%region_267.15449 (reduce_sum.15446: s32[], reduce_sum.15447: s32[]) -> s32[] {
  %reduce_sum.15446 = s32[] parameter(0)
  %reduce_sum.15447 = s32[] parameter(1)
  ROOT %reduce_sum.15448 = s32[] add(%reduce_sum.15446, %reduce_sum.15447)
}

%region_268.15458 (reduce_sum.15455: s32[], reduce_sum.15456: s32[]) -> s32[] {
  %reduce_sum.15455 = s32[] parameter(0)
  %reduce_sum.15456 = s32[] parameter(1)
  ROOT %reduce_sum.15457 = s32[] add(%reduce_sum.15455, %reduce_sum.15456)
}

%region_269.15464 (reduce_max.15461: s32[], reduce_max.15462: s32[]) -> s32[] {
  %reduce_max.15461 = s32[] parameter(0)
  %reduce_max.15462 = s32[] parameter(1)
  ROOT %reduce_max.15463 = s32[] maximum(%reduce_max.15461, %reduce_max.15462)
}

%region_0.36._custom_call_lowering_rule.14 (reduce_window_sum.138: s32[], reduce_window_sum.139: s32[]) -> s32[] {
  %reduce_window_sum.138 = s32[] parameter(0)
  %reduce_window_sum.139 = s32[] parameter(1)
  ROOT %reduce_window_sum.140 = s32[] add(%reduce_window_sum.138, %reduce_window_sum.139)
}

%region_0.36._custom_call_lowering_rule.14.clone (reduce_window_sum.365: s32[], reduce_window_sum.366: s32[]) -> s32[] {
  %reduce_window_sum.365 = s32[] parameter(0)
  %reduce_window_sum.366 = s32[] parameter(1)
  ROOT %reduce_window_sum.367 = s32[] add(%reduce_window_sum.365, %reduce_window_sum.366)
}

%region_270.15552 (reduce_sum.59: f32[], reduce_sum.15550: f32[]) -> f32[] {
  %reduce_sum.59 = f32[] parameter(0)
  %reduce_sum.15550 = f32[] parameter(1)
  ROOT %reduce_sum.60 = f32[] add(%reduce_sum.59, %reduce_sum.15550)
}

%region_271.15565 (reduce_sum.15562: f32[], reduce_sum.15563: f32[]) -> f32[] {
  %reduce_sum.15562 = f32[] parameter(0)
  %reduce_sum.15563 = f32[] parameter(1)
  ROOT %reduce_sum.15564 = f32[] add(%reduce_sum.15562, %reduce_sum.15563)
}

%region_272.15643 (reduce_sum.15640: f32[], reduce_sum.15641: f32[]) -> f32[] {
  %reduce_sum.15640 = f32[] parameter(0)
  %reduce_sum.15641 = f32[] parameter(1)
  ROOT %reduce_sum.15642 = f32[] add(%reduce_sum.15640, %reduce_sum.15641)
}

%region_273.15656 (reduce_sum.15653: f32[], reduce_sum.15654: f32[]) -> f32[] {
  %reduce_sum.15653 = f32[] parameter(0)
  %reduce_sum.15654 = f32[] parameter(1)
  ROOT %reduce_sum.15655 = f32[] add(%reduce_sum.15653, %reduce_sum.15654)
}

%region_274.15808 (reduce_sum.15805: s32[], reduce_sum.15806: s32[]) -> s32[] {
  %reduce_sum.15805 = s32[] parameter(0)
  %reduce_sum.15806 = s32[] parameter(1)
  ROOT %reduce_sum.15807 = s32[] add(%reduce_sum.15805, %reduce_sum.15806)
}

%region_275.15817 (reduce_sum.15814: s32[], reduce_sum.15815: s32[]) -> s32[] {
  %reduce_sum.15814 = s32[] parameter(0)
  %reduce_sum.15815 = s32[] parameter(1)
  ROOT %reduce_sum.15816 = s32[] add(%reduce_sum.15814, %reduce_sum.15815)
}

%region_276.15823 (reduce_max.15820: s32[], reduce_max.15821: s32[]) -> s32[] {
  %reduce_max.15820 = s32[] parameter(0)
  %reduce_max.15821 = s32[] parameter(1)
  ROOT %reduce_max.15822 = s32[] maximum(%reduce_max.15820, %reduce_max.15821)
}

%region_0.36._custom_call_lowering_rule.15 (reduce_window_sum.141: s32[], reduce_window_sum.142: s32[]) -> s32[] {
  %reduce_window_sum.141 = s32[] parameter(0)
  %reduce_window_sum.142 = s32[] parameter(1)
  ROOT %reduce_window_sum.143 = s32[] add(%reduce_window_sum.141, %reduce_window_sum.142)
}

%region_0.36._custom_call_lowering_rule.15.clone (reduce_window_sum.368: s32[], reduce_window_sum.369: s32[]) -> s32[] {
  %reduce_window_sum.368 = s32[] parameter(0)
  %reduce_window_sum.369 = s32[] parameter(1)
  ROOT %reduce_window_sum.370 = s32[] add(%reduce_window_sum.368, %reduce_window_sum.369)
}

%region_277.15911 (reduce_sum.15908: f32[], reduce_sum.15909: f32[]) -> f32[] {
  %reduce_sum.15908 = f32[] parameter(0)
  %reduce_sum.15909 = f32[] parameter(1)
  ROOT %reduce_sum.15910 = f32[] add(%reduce_sum.15908, %reduce_sum.15909)
}

%region_278.15924 (reduce_sum.15921: f32[], reduce_sum.15922: f32[]) -> f32[] {
  %reduce_sum.15921 = f32[] parameter(0)
  %reduce_sum.15922 = f32[] parameter(1)
  ROOT %reduce_sum.15923 = f32[] add(%reduce_sum.15921, %reduce_sum.15922)
}

%region_279.16002 (reduce_sum.15999: f32[], reduce_sum.16000: f32[]) -> f32[] {
  %reduce_sum.15999 = f32[] parameter(0)
  %reduce_sum.16000 = f32[] parameter(1)
  ROOT %reduce_sum.16001 = f32[] add(%reduce_sum.15999, %reduce_sum.16000)
}

%region_280.16015 (reduce_sum.16012: f32[], reduce_sum.16013: f32[]) -> f32[] {
  %reduce_sum.16012 = f32[] parameter(0)
  %reduce_sum.16013 = f32[] parameter(1)
  ROOT %reduce_sum.16014 = f32[] add(%reduce_sum.16012, %reduce_sum.16013)
}

%region_281.16167 (reduce_sum.61: s32[], reduce_sum.62: s32[]) -> s32[] {
  %reduce_sum.61 = s32[] parameter(0)
  %reduce_sum.62 = s32[] parameter(1)
  ROOT %reduce_sum.16166 = s32[] add(%reduce_sum.61, %reduce_sum.62)
}

%region_282.16176 (reduce_sum.63: s32[], reduce_sum.64: s32[]) -> s32[] {
  %reduce_sum.63 = s32[] parameter(0)
  %reduce_sum.64 = s32[] parameter(1)
  ROOT %reduce_sum.65 = s32[] add(%reduce_sum.63, %reduce_sum.64)
}

%region_283.16182 (reduce_max.16179: s32[], reduce_max.16180: s32[]) -> s32[] {
  %reduce_max.16179 = s32[] parameter(0)
  %reduce_max.16180 = s32[] parameter(1)
  ROOT %reduce_max.16181 = s32[] maximum(%reduce_max.16179, %reduce_max.16180)
}

%region_0.36._custom_call_lowering_rule.16 (reduce_window_sum.144: s32[], reduce_window_sum.145: s32[]) -> s32[] {
  %reduce_window_sum.144 = s32[] parameter(0)
  %reduce_window_sum.145 = s32[] parameter(1)
  ROOT %reduce_window_sum.146 = s32[] add(%reduce_window_sum.144, %reduce_window_sum.145)
}

%region_0.36._custom_call_lowering_rule.16.clone (reduce_window_sum.371: s32[], reduce_window_sum.372: s32[]) -> s32[] {
  %reduce_window_sum.371 = s32[] parameter(0)
  %reduce_window_sum.372 = s32[] parameter(1)
  ROOT %reduce_window_sum.373 = s32[] add(%reduce_window_sum.371, %reduce_window_sum.372)
}

%region_284.16270 (reduce_sum.16267: f32[], reduce_sum.16268: f32[]) -> f32[] {
  %reduce_sum.16267 = f32[] parameter(0)
  %reduce_sum.16268 = f32[] parameter(1)
  ROOT %reduce_sum.16269 = f32[] add(%reduce_sum.16267, %reduce_sum.16268)
}

%region_285.16283 (reduce_sum.16280: f32[], reduce_sum.16281: f32[]) -> f32[] {
  %reduce_sum.16280 = f32[] parameter(0)
  %reduce_sum.16281 = f32[] parameter(1)
  ROOT %reduce_sum.16282 = f32[] add(%reduce_sum.16280, %reduce_sum.16281)
}

%region_286.16361 (reduce_sum.16358: f32[], reduce_sum.16359: f32[]) -> f32[] {
  %reduce_sum.16358 = f32[] parameter(0)
  %reduce_sum.16359 = f32[] parameter(1)
  ROOT %reduce_sum.16360 = f32[] add(%reduce_sum.16358, %reduce_sum.16359)
}

%region_287.16374 (reduce_sum.16371: f32[], reduce_sum.16372: f32[]) -> f32[] {
  %reduce_sum.16371 = f32[] parameter(0)
  %reduce_sum.16372 = f32[] parameter(1)
  ROOT %reduce_sum.16373 = f32[] add(%reduce_sum.16371, %reduce_sum.16372)
}

%region_288.16526 (reduce_sum.66: s32[], reduce_sum.16524: s32[]) -> s32[] {
  %reduce_sum.66 = s32[] parameter(0)
  %reduce_sum.16524 = s32[] parameter(1)
  ROOT %reduce_sum.67 = s32[] add(%reduce_sum.66, %reduce_sum.16524)
}

%region_289.16535 (reduce_sum.68: s32[], reduce_sum.69: s32[]) -> s32[] {
  %reduce_sum.68 = s32[] parameter(0)
  %reduce_sum.69 = s32[] parameter(1)
  ROOT %reduce_sum.16534 = s32[] add(%reduce_sum.68, %reduce_sum.69)
}

%region_290.16541 (reduce_max.16538: s32[], reduce_max.16539: s32[]) -> s32[] {
  %reduce_max.16538 = s32[] parameter(0)
  %reduce_max.16539 = s32[] parameter(1)
  ROOT %reduce_max.16540 = s32[] maximum(%reduce_max.16538, %reduce_max.16539)
}

%region_0.36._custom_call_lowering_rule.17 (reduce_window_sum.147: s32[], reduce_window_sum.148: s32[]) -> s32[] {
  %reduce_window_sum.147 = s32[] parameter(0)
  %reduce_window_sum.148 = s32[] parameter(1)
  ROOT %reduce_window_sum.149 = s32[] add(%reduce_window_sum.147, %reduce_window_sum.148)
}

%region_0.36._custom_call_lowering_rule.17.clone (reduce_window_sum.374: s32[], reduce_window_sum.375: s32[]) -> s32[] {
  %reduce_window_sum.374 = s32[] parameter(0)
  %reduce_window_sum.375 = s32[] parameter(1)
  ROOT %reduce_window_sum.376 = s32[] add(%reduce_window_sum.374, %reduce_window_sum.375)
}

%region_291.16629 (reduce_sum.16626: f32[], reduce_sum.16627: f32[]) -> f32[] {
  %reduce_sum.16626 = f32[] parameter(0)
  %reduce_sum.16627 = f32[] parameter(1)
  ROOT %reduce_sum.16628 = f32[] add(%reduce_sum.16626, %reduce_sum.16627)
}

%region_292.16642 (reduce_sum.16639: f32[], reduce_sum.16640: f32[]) -> f32[] {
  %reduce_sum.16639 = f32[] parameter(0)
  %reduce_sum.16640 = f32[] parameter(1)
  ROOT %reduce_sum.16641 = f32[] add(%reduce_sum.16639, %reduce_sum.16640)
}

%region_293.16720 (reduce_sum.16717: f32[], reduce_sum.16718: f32[]) -> f32[] {
  %reduce_sum.16717 = f32[] parameter(0)
  %reduce_sum.16718 = f32[] parameter(1)
  ROOT %reduce_sum.16719 = f32[] add(%reduce_sum.16717, %reduce_sum.16718)
}

%region_294.16733 (reduce_sum.70: f32[], reduce_sum.16731: f32[]) -> f32[] {
  %reduce_sum.70 = f32[] parameter(0)
  %reduce_sum.16731 = f32[] parameter(1)
  ROOT %reduce_sum.16732 = f32[] add(%reduce_sum.70, %reduce_sum.16731)
}

%region_295.16885 (reduce_sum.16882: s32[], reduce_sum.16883: s32[]) -> s32[] {
  %reduce_sum.16882 = s32[] parameter(0)
  %reduce_sum.16883 = s32[] parameter(1)
  ROOT %reduce_sum.16884 = s32[] add(%reduce_sum.16882, %reduce_sum.16883)
}

%region_296.16894 (reduce_sum.16891: s32[], reduce_sum.16892: s32[]) -> s32[] {
  %reduce_sum.16891 = s32[] parameter(0)
  %reduce_sum.16892 = s32[] parameter(1)
  ROOT %reduce_sum.16893 = s32[] add(%reduce_sum.16891, %reduce_sum.16892)
}

%region_297.16900 (reduce_max.16897: s32[], reduce_max.16898: s32[]) -> s32[] {
  %reduce_max.16897 = s32[] parameter(0)
  %reduce_max.16898 = s32[] parameter(1)
  ROOT %reduce_max.16899 = s32[] maximum(%reduce_max.16897, %reduce_max.16898)
}

%region_0.36._custom_call_lowering_rule.18 (reduce_window_sum.150: s32[], reduce_window_sum.151: s32[]) -> s32[] {
  %reduce_window_sum.150 = s32[] parameter(0)
  %reduce_window_sum.151 = s32[] parameter(1)
  ROOT %reduce_window_sum.152 = s32[] add(%reduce_window_sum.150, %reduce_window_sum.151)
}

%region_0.36._custom_call_lowering_rule.18.clone (reduce_window_sum.377: s32[], reduce_window_sum.378: s32[]) -> s32[] {
  %reduce_window_sum.377 = s32[] parameter(0)
  %reduce_window_sum.378 = s32[] parameter(1)
  ROOT %reduce_window_sum.379 = s32[] add(%reduce_window_sum.377, %reduce_window_sum.378)
}

%region_298.16988 (reduce_sum.16985: f32[], reduce_sum.16986: f32[]) -> f32[] {
  %reduce_sum.16985 = f32[] parameter(0)
  %reduce_sum.16986 = f32[] parameter(1)
  ROOT %reduce_sum.16987 = f32[] add(%reduce_sum.16985, %reduce_sum.16986)
}

%region_299.17001 (reduce_sum.16998: f32[], reduce_sum.16999: f32[]) -> f32[] {
  %reduce_sum.16998 = f32[] parameter(0)
  %reduce_sum.16999 = f32[] parameter(1)
  ROOT %reduce_sum.17000 = f32[] add(%reduce_sum.16998, %reduce_sum.16999)
}

%region_300.17079 (reduce_sum.17076: f32[], reduce_sum.17077: f32[]) -> f32[] {
  %reduce_sum.17076 = f32[] parameter(0)
  %reduce_sum.17077 = f32[] parameter(1)
  ROOT %reduce_sum.17078 = f32[] add(%reduce_sum.17076, %reduce_sum.17077)
}

%region_301.17092 (reduce_sum.17089: f32[], reduce_sum.17090: f32[]) -> f32[] {
  %reduce_sum.17089 = f32[] parameter(0)
  %reduce_sum.17090 = f32[] parameter(1)
  ROOT %reduce_sum.17091 = f32[] add(%reduce_sum.17089, %reduce_sum.17090)
}

%region_302.17244 (reduce_sum.17241: s32[], reduce_sum.17242: s32[]) -> s32[] {
  %reduce_sum.17241 = s32[] parameter(0)
  %reduce_sum.17242 = s32[] parameter(1)
  ROOT %reduce_sum.17243 = s32[] add(%reduce_sum.17241, %reduce_sum.17242)
}

%region_303.17253 (reduce_sum.17250: s32[], reduce_sum.17251: s32[]) -> s32[] {
  %reduce_sum.17250 = s32[] parameter(0)
  %reduce_sum.17251 = s32[] parameter(1)
  ROOT %reduce_sum.17252 = s32[] add(%reduce_sum.17250, %reduce_sum.17251)
}

%region_304.17259 (reduce_max.17256: s32[], reduce_max.17257: s32[]) -> s32[] {
  %reduce_max.17256 = s32[] parameter(0)
  %reduce_max.17257 = s32[] parameter(1)
  ROOT %reduce_max.17258 = s32[] maximum(%reduce_max.17256, %reduce_max.17257)
}

%region_0.36._custom_call_lowering_rule.19 (reduce_window_sum.153: s32[], reduce_window_sum.154: s32[]) -> s32[] {
  %reduce_window_sum.153 = s32[] parameter(0)
  %reduce_window_sum.154 = s32[] parameter(1)
  ROOT %reduce_window_sum.155 = s32[] add(%reduce_window_sum.153, %reduce_window_sum.154)
}

%region_0.36._custom_call_lowering_rule.19.clone (reduce_window_sum.380: s32[], reduce_window_sum.381: s32[]) -> s32[] {
  %reduce_window_sum.380 = s32[] parameter(0)
  %reduce_window_sum.381 = s32[] parameter(1)
  ROOT %reduce_window_sum.382 = s32[] add(%reduce_window_sum.380, %reduce_window_sum.381)
}

%region_305.17347 (reduce_sum.17344: f32[], reduce_sum.17345: f32[]) -> f32[] {
  %reduce_sum.17344 = f32[] parameter(0)
  %reduce_sum.17345 = f32[] parameter(1)
  ROOT %reduce_sum.17346 = f32[] add(%reduce_sum.17344, %reduce_sum.17345)
}

%region_306.17360 (reduce_sum.17357: f32[], reduce_sum.17358: f32[]) -> f32[] {
  %reduce_sum.17357 = f32[] parameter(0)
  %reduce_sum.17358 = f32[] parameter(1)
  ROOT %reduce_sum.17359 = f32[] add(%reduce_sum.17357, %reduce_sum.17358)
}

%region_307.17438 (reduce_sum.71: f32[], reduce_sum.72: f32[]) -> f32[] {
  %reduce_sum.71 = f32[] parameter(0)
  %reduce_sum.72 = f32[] parameter(1)
  ROOT %reduce_sum.73 = f32[] add(%reduce_sum.71, %reduce_sum.72)
}

%region_308.17451 (reduce_sum.17448: f32[], reduce_sum.17449: f32[]) -> f32[] {
  %reduce_sum.17448 = f32[] parameter(0)
  %reduce_sum.17449 = f32[] parameter(1)
  ROOT %reduce_sum.17450 = f32[] add(%reduce_sum.17448, %reduce_sum.17449)
}

%region_309.17603 (reduce_sum.17600: s32[], reduce_sum.17601: s32[]) -> s32[] {
  %reduce_sum.17600 = s32[] parameter(0)
  %reduce_sum.17601 = s32[] parameter(1)
  ROOT %reduce_sum.17602 = s32[] add(%reduce_sum.17600, %reduce_sum.17601)
}

%region_310.17612 (reduce_sum.17609: s32[], reduce_sum.17610: s32[]) -> s32[] {
  %reduce_sum.17609 = s32[] parameter(0)
  %reduce_sum.17610 = s32[] parameter(1)
  ROOT %reduce_sum.17611 = s32[] add(%reduce_sum.17609, %reduce_sum.17610)
}

%region_311.17618 (reduce_max.17615: s32[], reduce_max.17616: s32[]) -> s32[] {
  %reduce_max.17615 = s32[] parameter(0)
  %reduce_max.17616 = s32[] parameter(1)
  ROOT %reduce_max.17617 = s32[] maximum(%reduce_max.17615, %reduce_max.17616)
}

%region_0.36._custom_call_lowering_rule.20 (reduce_window_sum.156: s32[], reduce_window_sum.157: s32[]) -> s32[] {
  %reduce_window_sum.156 = s32[] parameter(0)
  %reduce_window_sum.157 = s32[] parameter(1)
  ROOT %reduce_window_sum.158 = s32[] add(%reduce_window_sum.156, %reduce_window_sum.157)
}

%region_0.36._custom_call_lowering_rule.20.clone (reduce_window_sum.383: s32[], reduce_window_sum.384: s32[]) -> s32[] {
  %reduce_window_sum.383 = s32[] parameter(0)
  %reduce_window_sum.384 = s32[] parameter(1)
  ROOT %reduce_window_sum.385 = s32[] add(%reduce_window_sum.383, %reduce_window_sum.384)
}

%region_312.17706 (reduce_sum.17703: f32[], reduce_sum.17704: f32[]) -> f32[] {
  %reduce_sum.17703 = f32[] parameter(0)
  %reduce_sum.17704 = f32[] parameter(1)
  ROOT %reduce_sum.17705 = f32[] add(%reduce_sum.17703, %reduce_sum.17704)
}

%region_313.17719 (reduce_sum.17716: f32[], reduce_sum.17717: f32[]) -> f32[] {
  %reduce_sum.17716 = f32[] parameter(0)
  %reduce_sum.17717 = f32[] parameter(1)
  ROOT %reduce_sum.17718 = f32[] add(%reduce_sum.17716, %reduce_sum.17717)
}

%region_314.17797 (reduce_sum.17794: f32[], reduce_sum.17795: f32[]) -> f32[] {
  %reduce_sum.17794 = f32[] parameter(0)
  %reduce_sum.17795 = f32[] parameter(1)
  ROOT %reduce_sum.17796 = f32[] add(%reduce_sum.17794, %reduce_sum.17795)
}

%region_315.17810 (reduce_sum.17807: f32[], reduce_sum.17808: f32[]) -> f32[] {
  %reduce_sum.17807 = f32[] parameter(0)
  %reduce_sum.17808 = f32[] parameter(1)
  ROOT %reduce_sum.17809 = f32[] add(%reduce_sum.17807, %reduce_sum.17808)
}

%region_316.17962 (reduce_sum.17959: s32[], reduce_sum.17960: s32[]) -> s32[] {
  %reduce_sum.17959 = s32[] parameter(0)
  %reduce_sum.17960 = s32[] parameter(1)
  ROOT %reduce_sum.17961 = s32[] add(%reduce_sum.17959, %reduce_sum.17960)
}

%region_317.17971 (reduce_sum.17968: s32[], reduce_sum.17969: s32[]) -> s32[] {
  %reduce_sum.17968 = s32[] parameter(0)
  %reduce_sum.17969 = s32[] parameter(1)
  ROOT %reduce_sum.17970 = s32[] add(%reduce_sum.17968, %reduce_sum.17969)
}

%region_318.17977 (reduce_max.17974: s32[], reduce_max.17975: s32[]) -> s32[] {
  %reduce_max.17974 = s32[] parameter(0)
  %reduce_max.17975 = s32[] parameter(1)
  ROOT %reduce_max.17976 = s32[] maximum(%reduce_max.17974, %reduce_max.17975)
}

%region_0.36._custom_call_lowering_rule.21 (reduce_window_sum.159: s32[], reduce_window_sum.160: s32[]) -> s32[] {
  %reduce_window_sum.159 = s32[] parameter(0)
  %reduce_window_sum.160 = s32[] parameter(1)
  ROOT %reduce_window_sum.161 = s32[] add(%reduce_window_sum.159, %reduce_window_sum.160)
}

%region_0.36._custom_call_lowering_rule.21.clone (reduce_window_sum.386: s32[], reduce_window_sum.387: s32[]) -> s32[] {
  %reduce_window_sum.386 = s32[] parameter(0)
  %reduce_window_sum.387 = s32[] parameter(1)
  ROOT %reduce_window_sum.388 = s32[] add(%reduce_window_sum.386, %reduce_window_sum.387)
}

%region_319.18065 (reduce_sum.18062: f32[], reduce_sum.18063: f32[]) -> f32[] {
  %reduce_sum.18062 = f32[] parameter(0)
  %reduce_sum.18063 = f32[] parameter(1)
  ROOT %reduce_sum.18064 = f32[] add(%reduce_sum.18062, %reduce_sum.18063)
}

%region_320.18078 (reduce_sum.18075: f32[], reduce_sum.18076: f32[]) -> f32[] {
  %reduce_sum.18075 = f32[] parameter(0)
  %reduce_sum.18076 = f32[] parameter(1)
  ROOT %reduce_sum.18077 = f32[] add(%reduce_sum.18075, %reduce_sum.18076)
}

%region_321.18156 (reduce_sum.74: f32[], reduce_sum.18154: f32[]) -> f32[] {
  %reduce_sum.74 = f32[] parameter(0)
  %reduce_sum.18154 = f32[] parameter(1)
  ROOT %reduce_sum.18155 = f32[] add(%reduce_sum.74, %reduce_sum.18154)
}

%region_322.18169 (reduce_sum.18166: f32[], reduce_sum.18167: f32[]) -> f32[] {
  %reduce_sum.18166 = f32[] parameter(0)
  %reduce_sum.18167 = f32[] parameter(1)
  ROOT %reduce_sum.18168 = f32[] add(%reduce_sum.18166, %reduce_sum.18167)
}

%region_323.18321 (reduce_sum.18318: s32[], reduce_sum.18319: s32[]) -> s32[] {
  %reduce_sum.18318 = s32[] parameter(0)
  %reduce_sum.18319 = s32[] parameter(1)
  ROOT %reduce_sum.18320 = s32[] add(%reduce_sum.18318, %reduce_sum.18319)
}

%region_324.18330 (reduce_sum.18327: s32[], reduce_sum.18328: s32[]) -> s32[] {
  %reduce_sum.18327 = s32[] parameter(0)
  %reduce_sum.18328 = s32[] parameter(1)
  ROOT %reduce_sum.18329 = s32[] add(%reduce_sum.18327, %reduce_sum.18328)
}

%region_325.18336 (reduce_max.18333: s32[], reduce_max.18334: s32[]) -> s32[] {
  %reduce_max.18333 = s32[] parameter(0)
  %reduce_max.18334 = s32[] parameter(1)
  ROOT %reduce_max.18335 = s32[] maximum(%reduce_max.18333, %reduce_max.18334)
}

%region_0.36._custom_call_lowering_rule.22 (reduce_window_sum.162: s32[], reduce_window_sum.163: s32[]) -> s32[] {
  %reduce_window_sum.162 = s32[] parameter(0)
  %reduce_window_sum.163 = s32[] parameter(1)
  ROOT %reduce_window_sum.164 = s32[] add(%reduce_window_sum.162, %reduce_window_sum.163)
}

%region_0.36._custom_call_lowering_rule.22.clone (reduce_window_sum.389: s32[], reduce_window_sum.390: s32[]) -> s32[] {
  %reduce_window_sum.389 = s32[] parameter(0)
  %reduce_window_sum.390 = s32[] parameter(1)
  ROOT %reduce_window_sum.391 = s32[] add(%reduce_window_sum.389, %reduce_window_sum.390)
}

%region_326.18424 (reduce_sum.75: f32[], reduce_sum.18422: f32[]) -> f32[] {
  %reduce_sum.75 = f32[] parameter(0)
  %reduce_sum.18422 = f32[] parameter(1)
  ROOT %reduce_sum.76 = f32[] add(%reduce_sum.75, %reduce_sum.18422)
}

%region_327.18437 (reduce_sum.18434: f32[], reduce_sum.18435: f32[]) -> f32[] {
  %reduce_sum.18434 = f32[] parameter(0)
  %reduce_sum.18435 = f32[] parameter(1)
  ROOT %reduce_sum.77 = f32[] add(%reduce_sum.18434, %reduce_sum.18435)
}

%region_328.18515 (reduce_sum.18512: f32[], reduce_sum.18513: f32[]) -> f32[] {
  %reduce_sum.18512 = f32[] parameter(0)
  %reduce_sum.18513 = f32[] parameter(1)
  ROOT %reduce_sum.18514 = f32[] add(%reduce_sum.18512, %reduce_sum.18513)
}

%region_329.18528 (reduce_sum.18525: f32[], reduce_sum.18526: f32[]) -> f32[] {
  %reduce_sum.18525 = f32[] parameter(0)
  %reduce_sum.18526 = f32[] parameter(1)
  ROOT %reduce_sum.18527 = f32[] add(%reduce_sum.18525, %reduce_sum.18526)
}

%region_330.18680 (reduce_sum.18677: s32[], reduce_sum.18678: s32[]) -> s32[] {
  %reduce_sum.18677 = s32[] parameter(0)
  %reduce_sum.18678 = s32[] parameter(1)
  ROOT %reduce_sum.18679 = s32[] add(%reduce_sum.18677, %reduce_sum.18678)
}

%region_331.18689 (reduce_sum.18686: s32[], reduce_sum.18687: s32[]) -> s32[] {
  %reduce_sum.18686 = s32[] parameter(0)
  %reduce_sum.18687 = s32[] parameter(1)
  ROOT %reduce_sum.18688 = s32[] add(%reduce_sum.18686, %reduce_sum.18687)
}

%region_332.18695 (reduce_max.18692: s32[], reduce_max.18693: s32[]) -> s32[] {
  %reduce_max.18692 = s32[] parameter(0)
  %reduce_max.18693 = s32[] parameter(1)
  ROOT %reduce_max.18694 = s32[] maximum(%reduce_max.18692, %reduce_max.18693)
}

%region_0.36._custom_call_lowering_rule.23 (reduce_window_sum.165: s32[], reduce_window_sum.166: s32[]) -> s32[] {
  %reduce_window_sum.165 = s32[] parameter(0)
  %reduce_window_sum.166 = s32[] parameter(1)
  ROOT %reduce_window_sum.167 = s32[] add(%reduce_window_sum.165, %reduce_window_sum.166)
}

%region_0.36._custom_call_lowering_rule.23.clone (reduce_window_sum.392: s32[], reduce_window_sum.393: s32[]) -> s32[] {
  %reduce_window_sum.392 = s32[] parameter(0)
  %reduce_window_sum.393 = s32[] parameter(1)
  ROOT %reduce_window_sum.394 = s32[] add(%reduce_window_sum.392, %reduce_window_sum.393)
}

%region_333.18783 (reduce_sum.18780: f32[], reduce_sum.18781: f32[]) -> f32[] {
  %reduce_sum.18780 = f32[] parameter(0)
  %reduce_sum.18781 = f32[] parameter(1)
  ROOT %reduce_sum.18782 = f32[] add(%reduce_sum.18780, %reduce_sum.18781)
}

%region_334.18796 (reduce_sum.18793: f32[], reduce_sum.18794: f32[]) -> f32[] {
  %reduce_sum.18793 = f32[] parameter(0)
  %reduce_sum.18794 = f32[] parameter(1)
  ROOT %reduce_sum.18795 = f32[] add(%reduce_sum.18793, %reduce_sum.18794)
}

%region_335.18874 (reduce_sum.18871: f32[], reduce_sum.18872: f32[]) -> f32[] {
  %reduce_sum.18871 = f32[] parameter(0)
  %reduce_sum.18872 = f32[] parameter(1)
  ROOT %reduce_sum.18873 = f32[] add(%reduce_sum.18871, %reduce_sum.18872)
}

%region_336.18887 (reduce_sum.18884: f32[], reduce_sum.18885: f32[]) -> f32[] {
  %reduce_sum.18884 = f32[] parameter(0)
  %reduce_sum.18885 = f32[] parameter(1)
  ROOT %reduce_sum.18886 = f32[] add(%reduce_sum.18884, %reduce_sum.18885)
}

%region_337.19039 (reduce_sum.19036: s32[], reduce_sum.19037: s32[]) -> s32[] {
  %reduce_sum.19036 = s32[] parameter(0)
  %reduce_sum.19037 = s32[] parameter(1)
  ROOT %reduce_sum.19038 = s32[] add(%reduce_sum.19036, %reduce_sum.19037)
}

%region_338.19048 (reduce_sum.19045: s32[], reduce_sum.19046: s32[]) -> s32[] {
  %reduce_sum.19045 = s32[] parameter(0)
  %reduce_sum.19046 = s32[] parameter(1)
  ROOT %reduce_sum.19047 = s32[] add(%reduce_sum.19045, %reduce_sum.19046)
}

%region_339.19054 (reduce_max.19051: s32[], reduce_max.19052: s32[]) -> s32[] {
  %reduce_max.19051 = s32[] parameter(0)
  %reduce_max.19052 = s32[] parameter(1)
  ROOT %reduce_max.19053 = s32[] maximum(%reduce_max.19051, %reduce_max.19052)
}

%region_0.36._custom_call_lowering_rule.24 (reduce_window_sum.168: s32[], reduce_window_sum.169: s32[]) -> s32[] {
  %reduce_window_sum.168 = s32[] parameter(0)
  %reduce_window_sum.169 = s32[] parameter(1)
  ROOT %reduce_window_sum.170 = s32[] add(%reduce_window_sum.168, %reduce_window_sum.169)
}

%region_0.36._custom_call_lowering_rule.24.clone (reduce_window_sum.395: s32[], reduce_window_sum.396: s32[]) -> s32[] {
  %reduce_window_sum.395 = s32[] parameter(0)
  %reduce_window_sum.396 = s32[] parameter(1)
  ROOT %reduce_window_sum.397 = s32[] add(%reduce_window_sum.395, %reduce_window_sum.396)
}

%region_340.19142 (reduce_sum.19139: f32[], reduce_sum.19140: f32[]) -> f32[] {
  %reduce_sum.19139 = f32[] parameter(0)
  %reduce_sum.19140 = f32[] parameter(1)
  ROOT %reduce_sum.19141 = f32[] add(%reduce_sum.19139, %reduce_sum.19140)
}

%region_341.19155 (reduce_sum.19152: f32[], reduce_sum.19153: f32[]) -> f32[] {
  %reduce_sum.19152 = f32[] parameter(0)
  %reduce_sum.19153 = f32[] parameter(1)
  ROOT %reduce_sum.19154 = f32[] add(%reduce_sum.19152, %reduce_sum.19153)
}

%region_342.19233 (reduce_sum.19230: f32[], reduce_sum.19231: f32[]) -> f32[] {
  %reduce_sum.19230 = f32[] parameter(0)
  %reduce_sum.19231 = f32[] parameter(1)
  ROOT %reduce_sum.19232 = f32[] add(%reduce_sum.19230, %reduce_sum.19231)
}

%region_343.19246 (reduce_sum.19243: f32[], reduce_sum.19244: f32[]) -> f32[] {
  %reduce_sum.19243 = f32[] parameter(0)
  %reduce_sum.19244 = f32[] parameter(1)
  ROOT %reduce_sum.19245 = f32[] add(%reduce_sum.19243, %reduce_sum.19244)
}

%region_344.19398 (reduce_sum.78: s32[], reduce_sum.79: s32[]) -> s32[] {
  %reduce_sum.78 = s32[] parameter(0)
  %reduce_sum.79 = s32[] parameter(1)
  ROOT %reduce_sum.80 = s32[] add(%reduce_sum.78, %reduce_sum.79)
}

%region_345.19407 (reduce_sum.81: s32[], reduce_sum.82: s32[]) -> s32[] {
  %reduce_sum.81 = s32[] parameter(0)
  %reduce_sum.82 = s32[] parameter(1)
  ROOT %reduce_sum.19406 = s32[] add(%reduce_sum.81, %reduce_sum.82)
}

%region_346.19413 (reduce_max.0: s32[], reduce_max.19411: s32[]) -> s32[] {
  %reduce_max.0 = s32[] parameter(0)
  %reduce_max.19411 = s32[] parameter(1)
  ROOT %reduce_max.1 = s32[] maximum(%reduce_max.0, %reduce_max.19411)
}

%region_0.36._custom_call_lowering_rule.25 (reduce_window_sum.171: s32[], reduce_window_sum.172: s32[]) -> s32[] {
  %reduce_window_sum.171 = s32[] parameter(0)
  %reduce_window_sum.172 = s32[] parameter(1)
  ROOT %reduce_window_sum.173 = s32[] add(%reduce_window_sum.171, %reduce_window_sum.172)
}

%region_0.36._custom_call_lowering_rule.25.clone (reduce_window_sum.398: s32[], reduce_window_sum.399: s32[]) -> s32[] {
  %reduce_window_sum.398 = s32[] parameter(0)
  %reduce_window_sum.399 = s32[] parameter(1)
  ROOT %reduce_window_sum.400 = s32[] add(%reduce_window_sum.398, %reduce_window_sum.399)
}

%region_347.19501 (reduce_sum.19498: f32[], reduce_sum.19499: f32[]) -> f32[] {
  %reduce_sum.19498 = f32[] parameter(0)
  %reduce_sum.19499 = f32[] parameter(1)
  ROOT %reduce_sum.19500 = f32[] add(%reduce_sum.19498, %reduce_sum.19499)
}

%region_348.19514 (reduce_sum.19511: f32[], reduce_sum.19512: f32[]) -> f32[] {
  %reduce_sum.19511 = f32[] parameter(0)
  %reduce_sum.19512 = f32[] parameter(1)
  ROOT %reduce_sum.19513 = f32[] add(%reduce_sum.19511, %reduce_sum.19512)
}

%region_349.19592 (reduce_sum.19589: f32[], reduce_sum.19590: f32[]) -> f32[] {
  %reduce_sum.19589 = f32[] parameter(0)
  %reduce_sum.19590 = f32[] parameter(1)
  ROOT %reduce_sum.19591 = f32[] add(%reduce_sum.19589, %reduce_sum.19590)
}

%region_350.19605 (reduce_sum.19602: f32[], reduce_sum.19603: f32[]) -> f32[] {
  %reduce_sum.19602 = f32[] parameter(0)
  %reduce_sum.19603 = f32[] parameter(1)
  ROOT %reduce_sum.19604 = f32[] add(%reduce_sum.19602, %reduce_sum.19603)
}

%region_351.19757 (reduce_sum.19754: s32[], reduce_sum.19755: s32[]) -> s32[] {
  %reduce_sum.19754 = s32[] parameter(0)
  %reduce_sum.19755 = s32[] parameter(1)
  ROOT %reduce_sum.19756 = s32[] add(%reduce_sum.19754, %reduce_sum.19755)
}

%region_352.19766 (reduce_sum.19763: s32[], reduce_sum.19764: s32[]) -> s32[] {
  %reduce_sum.19763 = s32[] parameter(0)
  %reduce_sum.19764 = s32[] parameter(1)
  ROOT %reduce_sum.19765 = s32[] add(%reduce_sum.19763, %reduce_sum.19764)
}

%region_353.19772 (reduce_max.19769: s32[], reduce_max.19770: s32[]) -> s32[] {
  %reduce_max.19769 = s32[] parameter(0)
  %reduce_max.19770 = s32[] parameter(1)
  ROOT %reduce_max.19771 = s32[] maximum(%reduce_max.19769, %reduce_max.19770)
}

%region_0.36._custom_call_lowering_rule.26 (reduce_window_sum.174: s32[], reduce_window_sum.175: s32[]) -> s32[] {
  %reduce_window_sum.174 = s32[] parameter(0)
  %reduce_window_sum.175 = s32[] parameter(1)
  ROOT %reduce_window_sum.176 = s32[] add(%reduce_window_sum.174, %reduce_window_sum.175)
}

%region_0.36._custom_call_lowering_rule.26.clone (reduce_window_sum.401: s32[], reduce_window_sum.402: s32[]) -> s32[] {
  %reduce_window_sum.401 = s32[] parameter(0)
  %reduce_window_sum.402 = s32[] parameter(1)
  ROOT %reduce_window_sum.403 = s32[] add(%reduce_window_sum.401, %reduce_window_sum.402)
}

%region_354.19860 (reduce_sum.19857: f32[], reduce_sum.19858: f32[]) -> f32[] {
  %reduce_sum.19857 = f32[] parameter(0)
  %reduce_sum.19858 = f32[] parameter(1)
  ROOT %reduce_sum.19859 = f32[] add(%reduce_sum.19857, %reduce_sum.19858)
}

%region_355.19873 (reduce_sum.19870: f32[], reduce_sum.19871: f32[]) -> f32[] {
  %reduce_sum.19870 = f32[] parameter(0)
  %reduce_sum.19871 = f32[] parameter(1)
  ROOT %reduce_sum.19872 = f32[] add(%reduce_sum.19870, %reduce_sum.19871)
}

%region_356.19951 (reduce_sum.19948: f32[], reduce_sum.19949: f32[]) -> f32[] {
  %reduce_sum.19948 = f32[] parameter(0)
  %reduce_sum.19949 = f32[] parameter(1)
  ROOT %reduce_sum.19950 = f32[] add(%reduce_sum.19948, %reduce_sum.19949)
}

%region_357.19964 (reduce_sum.19961: f32[], reduce_sum.19962: f32[]) -> f32[] {
  %reduce_sum.19961 = f32[] parameter(0)
  %reduce_sum.19962 = f32[] parameter(1)
  ROOT %reduce_sum.19963 = f32[] add(%reduce_sum.19961, %reduce_sum.19962)
}

%region_358.20116 (reduce_sum.83: s32[], reduce_sum.20114: s32[]) -> s32[] {
  %reduce_sum.83 = s32[] parameter(0)
  %reduce_sum.20114 = s32[] parameter(1)
  ROOT %reduce_sum.20115 = s32[] add(%reduce_sum.83, %reduce_sum.20114)
}

%region_359.20125 (reduce_sum.20122: s32[], reduce_sum.20123: s32[]) -> s32[] {
  %reduce_sum.20122 = s32[] parameter(0)
  %reduce_sum.20123 = s32[] parameter(1)
  ROOT %reduce_sum.20124 = s32[] add(%reduce_sum.20122, %reduce_sum.20123)
}

%region_360.20131 (reduce_max.20128: s32[], reduce_max.20129: s32[]) -> s32[] {
  %reduce_max.20128 = s32[] parameter(0)
  %reduce_max.20129 = s32[] parameter(1)
  ROOT %reduce_max.20130 = s32[] maximum(%reduce_max.20128, %reduce_max.20129)
}

%region_0.36._custom_call_lowering_rule.27 (reduce_window_sum.177: s32[], reduce_window_sum.178: s32[]) -> s32[] {
  %reduce_window_sum.177 = s32[] parameter(0)
  %reduce_window_sum.178 = s32[] parameter(1)
  ROOT %reduce_window_sum.179 = s32[] add(%reduce_window_sum.177, %reduce_window_sum.178)
}

%region_0.36._custom_call_lowering_rule.27.clone (reduce_window_sum.404: s32[], reduce_window_sum.405: s32[]) -> s32[] {
  %reduce_window_sum.404 = s32[] parameter(0)
  %reduce_window_sum.405 = s32[] parameter(1)
  ROOT %reduce_window_sum.406 = s32[] add(%reduce_window_sum.404, %reduce_window_sum.405)
}

%region_361.20219 (reduce_sum.20216: f32[], reduce_sum.20217: f32[]) -> f32[] {
  %reduce_sum.20216 = f32[] parameter(0)
  %reduce_sum.20217 = f32[] parameter(1)
  ROOT %reduce_sum.20218 = f32[] add(%reduce_sum.20216, %reduce_sum.20217)
}

%region_362.20232 (reduce_sum.20229: f32[], reduce_sum.20230: f32[]) -> f32[] {
  %reduce_sum.20229 = f32[] parameter(0)
  %reduce_sum.20230 = f32[] parameter(1)
  ROOT %reduce_sum.20231 = f32[] add(%reduce_sum.20229, %reduce_sum.20230)
}

%region_363.20310 (reduce_sum.20307: f32[], reduce_sum.20308: f32[]) -> f32[] {
  %reduce_sum.20307 = f32[] parameter(0)
  %reduce_sum.20308 = f32[] parameter(1)
  ROOT %reduce_sum.20309 = f32[] add(%reduce_sum.20307, %reduce_sum.20308)
}

%region_364.20323 (reduce_sum.20320: f32[], reduce_sum.20321: f32[]) -> f32[] {
  %reduce_sum.20320 = f32[] parameter(0)
  %reduce_sum.20321 = f32[] parameter(1)
  ROOT %reduce_sum.20322 = f32[] add(%reduce_sum.20320, %reduce_sum.20321)
}

%region_365.20475 (reduce_sum.20472: s32[], reduce_sum.20473: s32[]) -> s32[] {
  %reduce_sum.20472 = s32[] parameter(0)
  %reduce_sum.20473 = s32[] parameter(1)
  ROOT %reduce_sum.20474 = s32[] add(%reduce_sum.20472, %reduce_sum.20473)
}

%region_366.20484 (reduce_sum.20481: s32[], reduce_sum.20482: s32[]) -> s32[] {
  %reduce_sum.20481 = s32[] parameter(0)
  %reduce_sum.20482 = s32[] parameter(1)
  ROOT %reduce_sum.20483 = s32[] add(%reduce_sum.20481, %reduce_sum.20482)
}

%region_367.20490 (reduce_max.20487: s32[], reduce_max.20488: s32[]) -> s32[] {
  %reduce_max.20487 = s32[] parameter(0)
  %reduce_max.20488 = s32[] parameter(1)
  ROOT %reduce_max.20489 = s32[] maximum(%reduce_max.20487, %reduce_max.20488)
}

%region_0.36._custom_call_lowering_rule.28 (reduce_window_sum.180: s32[], reduce_window_sum.181: s32[]) -> s32[] {
  %reduce_window_sum.180 = s32[] parameter(0)
  %reduce_window_sum.181 = s32[] parameter(1)
  ROOT %reduce_window_sum.182 = s32[] add(%reduce_window_sum.180, %reduce_window_sum.181)
}

%region_0.36._custom_call_lowering_rule.28.clone (reduce_window_sum.407: s32[], reduce_window_sum.408: s32[]) -> s32[] {
  %reduce_window_sum.407 = s32[] parameter(0)
  %reduce_window_sum.408 = s32[] parameter(1)
  ROOT %reduce_window_sum.409 = s32[] add(%reduce_window_sum.407, %reduce_window_sum.408)
}

%region_368.20578 (reduce_sum.20575: f32[], reduce_sum.20576: f32[]) -> f32[] {
  %reduce_sum.20575 = f32[] parameter(0)
  %reduce_sum.20576 = f32[] parameter(1)
  ROOT %reduce_sum.20577 = f32[] add(%reduce_sum.20575, %reduce_sum.20576)
}

%region_369.20591 (reduce_sum.20588: f32[], reduce_sum.20589: f32[]) -> f32[] {
  %reduce_sum.20588 = f32[] parameter(0)
  %reduce_sum.20589 = f32[] parameter(1)
  ROOT %reduce_sum.20590 = f32[] add(%reduce_sum.20588, %reduce_sum.20589)
}

%region_370.20669 (reduce_sum.84: f32[], reduce_sum.20667: f32[]) -> f32[] {
  %reduce_sum.84 = f32[] parameter(0)
  %reduce_sum.20667 = f32[] parameter(1)
  ROOT %reduce_sum.20668 = f32[] add(%reduce_sum.84, %reduce_sum.20667)
}

%region_371.20682 (reduce_sum.20679: f32[], reduce_sum.20680: f32[]) -> f32[] {
  %reduce_sum.20679 = f32[] parameter(0)
  %reduce_sum.20680 = f32[] parameter(1)
  ROOT %reduce_sum.20681 = f32[] add(%reduce_sum.20679, %reduce_sum.20680)
}

%region_372.20834 (reduce_sum.20831: s32[], reduce_sum.20832: s32[]) -> s32[] {
  %reduce_sum.20831 = s32[] parameter(0)
  %reduce_sum.20832 = s32[] parameter(1)
  ROOT %reduce_sum.20833 = s32[] add(%reduce_sum.20831, %reduce_sum.20832)
}

%region_373.20843 (reduce_sum.20840: s32[], reduce_sum.20841: s32[]) -> s32[] {
  %reduce_sum.20840 = s32[] parameter(0)
  %reduce_sum.20841 = s32[] parameter(1)
  ROOT %reduce_sum.20842 = s32[] add(%reduce_sum.20840, %reduce_sum.20841)
}

%region_374.20849 (reduce_max.20846: s32[], reduce_max.20847: s32[]) -> s32[] {
  %reduce_max.20846 = s32[] parameter(0)
  %reduce_max.20847 = s32[] parameter(1)
  ROOT %reduce_max.20848 = s32[] maximum(%reduce_max.20846, %reduce_max.20847)
}

%region_0.36._custom_call_lowering_rule.29 (reduce_window_sum.183: s32[], reduce_window_sum.184: s32[]) -> s32[] {
  %reduce_window_sum.183 = s32[] parameter(0)
  %reduce_window_sum.184 = s32[] parameter(1)
  ROOT %reduce_window_sum.185 = s32[] add(%reduce_window_sum.183, %reduce_window_sum.184)
}

%region_0.36._custom_call_lowering_rule.29.clone (reduce_window_sum.410: s32[], reduce_window_sum.411: s32[]) -> s32[] {
  %reduce_window_sum.410 = s32[] parameter(0)
  %reduce_window_sum.411 = s32[] parameter(1)
  ROOT %reduce_window_sum.412 = s32[] add(%reduce_window_sum.410, %reduce_window_sum.411)
}

%region_375.20937 (reduce_sum.20934: f32[], reduce_sum.20935: f32[]) -> f32[] {
  %reduce_sum.20934 = f32[] parameter(0)
  %reduce_sum.20935 = f32[] parameter(1)
  ROOT %reduce_sum.20936 = f32[] add(%reduce_sum.20934, %reduce_sum.20935)
}

%region_376.20950 (reduce_sum.20947: f32[], reduce_sum.20948: f32[]) -> f32[] {
  %reduce_sum.20947 = f32[] parameter(0)
  %reduce_sum.20948 = f32[] parameter(1)
  ROOT %reduce_sum.85 = f32[] add(%reduce_sum.20947, %reduce_sum.20948)
}

%region_377.21028 (reduce_sum.21025: f32[], reduce_sum.21026: f32[]) -> f32[] {
  %reduce_sum.21025 = f32[] parameter(0)
  %reduce_sum.21026 = f32[] parameter(1)
  ROOT %reduce_sum.21027 = f32[] add(%reduce_sum.21025, %reduce_sum.21026)
}

%region_378.21041 (reduce_sum.21038: f32[], reduce_sum.21039: f32[]) -> f32[] {
  %reduce_sum.21038 = f32[] parameter(0)
  %reduce_sum.21039 = f32[] parameter(1)
  ROOT %reduce_sum.21040 = f32[] add(%reduce_sum.21038, %reduce_sum.21039)
}

%region_379.21193 (reduce_sum.21190: s32[], reduce_sum.21191: s32[]) -> s32[] {
  %reduce_sum.21190 = s32[] parameter(0)
  %reduce_sum.21191 = s32[] parameter(1)
  ROOT %reduce_sum.21192 = s32[] add(%reduce_sum.21190, %reduce_sum.21191)
}

%region_380.21202 (reduce_sum.21199: s32[], reduce_sum.21200: s32[]) -> s32[] {
  %reduce_sum.21199 = s32[] parameter(0)
  %reduce_sum.21200 = s32[] parameter(1)
  ROOT %reduce_sum.21201 = s32[] add(%reduce_sum.21199, %reduce_sum.21200)
}

%region_381.21208 (reduce_max.21205: s32[], reduce_max.21206: s32[]) -> s32[] {
  %reduce_max.21205 = s32[] parameter(0)
  %reduce_max.21206 = s32[] parameter(1)
  ROOT %reduce_max.21207 = s32[] maximum(%reduce_max.21205, %reduce_max.21206)
}

%region_0.36._custom_call_lowering_rule.30 (reduce_window_sum.186: s32[], reduce_window_sum.187: s32[]) -> s32[] {
  %reduce_window_sum.186 = s32[] parameter(0)
  %reduce_window_sum.187 = s32[] parameter(1)
  ROOT %reduce_window_sum.188 = s32[] add(%reduce_window_sum.186, %reduce_window_sum.187)
}

%region_0.36._custom_call_lowering_rule.30.clone (reduce_window_sum.413: s32[], reduce_window_sum.414: s32[]) -> s32[] {
  %reduce_window_sum.413 = s32[] parameter(0)
  %reduce_window_sum.414 = s32[] parameter(1)
  ROOT %reduce_window_sum.415 = s32[] add(%reduce_window_sum.413, %reduce_window_sum.414)
}

%region_382.21296 (reduce_sum.21293: f32[], reduce_sum.21294: f32[]) -> f32[] {
  %reduce_sum.21293 = f32[] parameter(0)
  %reduce_sum.21294 = f32[] parameter(1)
  ROOT %reduce_sum.21295 = f32[] add(%reduce_sum.21293, %reduce_sum.21294)
}

%region_383.21309 (reduce_sum.21306: f32[], reduce_sum.21307: f32[]) -> f32[] {
  %reduce_sum.21306 = f32[] parameter(0)
  %reduce_sum.21307 = f32[] parameter(1)
  ROOT %reduce_sum.21308 = f32[] add(%reduce_sum.21306, %reduce_sum.21307)
}

%region_384.21360 (reduce_sum.21357: f32[], reduce_sum.21358: f32[]) -> f32[] {
  %reduce_sum.21357 = f32[] parameter(0)
  %reduce_sum.21358 = f32[] parameter(1)
  ROOT %reduce_sum.21359 = f32[] add(%reduce_sum.21357, %reduce_sum.21358)
}

%add.clone (x.1: bf16[], y.1: bf16[]) -> bf16[] {
  %x.1 = bf16[] parameter(0)
  %y.1 = bf16[] parameter(1)
  ROOT %add.1410 = bf16[] add(%x.1, %y.1)
}

%region_385.21395 (reduce_sum.86: f32[], reduce_sum.21393: f32[]) -> f32[] {
  %reduce_sum.86 = f32[] parameter(0)
  %reduce_sum.21393 = f32[] parameter(1)
  ROOT %reduce_sum.21394 = f32[] add(%reduce_sum.86, %reduce_sum.21393)
}

%region_385.21395.clone (reduce_sum.828: f32[], reduce_sum.829: f32[]) -> f32[] {
  %reduce_sum.828 = f32[] parameter(0)
  %reduce_sum.829 = f32[] parameter(1)
  ROOT %reduce_sum.830 = f32[] add(%reduce_sum.828, %reduce_sum.829)
}

%add.1.clone (x.3: bf16[], y.3: bf16[]) -> bf16[] {
  %x.3 = bf16[] parameter(0)
  %y.3 = bf16[] parameter(1)
  ROOT %add.1412 = bf16[] add(%x.3, %y.3)
}

%region_386.21406 (reduce_sum.21403: f32[], reduce_sum.21404: f32[]) -> f32[] {
  %reduce_sum.21403 = f32[] parameter(0)
  %reduce_sum.21404 = f32[] parameter(1)
  ROOT %reduce_sum.21405 = f32[] add(%reduce_sum.21403, %reduce_sum.21404)
}

%region_386.21406.clone (reduce_sum.831: f32[], reduce_sum.832: f32[]) -> f32[] {
  %reduce_sum.831 = f32[] parameter(0)
  %reduce_sum.832 = f32[] parameter(1)
  ROOT %reduce_sum.833 = f32[] add(%reduce_sum.831, %reduce_sum.832)
}

%add.2.clone (x.5: bf16[], y.5: bf16[]) -> bf16[] {
  %x.5 = bf16[] parameter(0)
  %y.5 = bf16[] parameter(1)
  ROOT %add.1417 = bf16[] add(%x.5, %y.5)
}

%region_387.21417 (reduce_sum.21414: f32[], reduce_sum.21415: f32[]) -> f32[] {
  %reduce_sum.21414 = f32[] parameter(0)
  %reduce_sum.21415 = f32[] parameter(1)
  ROOT %reduce_sum.21416 = f32[] add(%reduce_sum.21414, %reduce_sum.21415)
}

%region_387.21417.clone (reduce_sum.834: f32[], reduce_sum.835: f32[]) -> f32[] {
  %reduce_sum.834 = f32[] parameter(0)
  %reduce_sum.835 = f32[] parameter(1)
  ROOT %reduce_sum.836 = f32[] add(%reduce_sum.834, %reduce_sum.835)
}

%region_388.21430 (reduce_sum.21427: bf16[], reduce_sum.21428: bf16[]) -> bf16[] {
  %reduce_sum.21427 = bf16[] parameter(0)
  %reduce_sum.21428 = bf16[] parameter(1)
  ROOT %reduce_sum.21429 = bf16[] add(%reduce_sum.21427, %reduce_sum.21428)
}

%region_388.21430.clone (reduce_sum.837: bf16[], reduce_sum.838: bf16[]) -> bf16[] {
  %reduce_sum.837 = bf16[] parameter(0)
  %reduce_sum.838 = bf16[] parameter(1)
  ROOT %reduce_sum.839 = bf16[] add(%reduce_sum.837, %reduce_sum.838)
}

%region_389.21437 (reduce_sum.21434: f32[], reduce_sum.21435: f32[]) -> f32[] {
  %reduce_sum.21434 = f32[] parameter(0)
  %reduce_sum.21435 = f32[] parameter(1)
  ROOT %reduce_sum.21436 = f32[] add(%reduce_sum.21434, %reduce_sum.21435)
}

%region_390.21445 (reduce_sum.87: f32[], reduce_sum.88: f32[]) -> f32[] {
  %reduce_sum.87 = f32[] parameter(0)
  %reduce_sum.88 = f32[] parameter(1)
  ROOT %reduce_sum.21444 = f32[] add(%reduce_sum.87, %reduce_sum.88)
}

%region_391.21585 (reduce_sum.21582: f32[], reduce_sum.21583: f32[]) -> f32[] {
  %reduce_sum.21582 = f32[] parameter(0)
  %reduce_sum.21583 = f32[] parameter(1)
  ROOT %reduce_sum.21584 = f32[] add(%reduce_sum.21582, %reduce_sum.21583)
}

%region_392.21617 (reduce_sum.21614: s32[], reduce_sum.21615: s32[]) -> s32[] {
  %reduce_sum.21614 = s32[] parameter(0)
  %reduce_sum.21615 = s32[] parameter(1)
  ROOT %reduce_sum.21616 = s32[] add(%reduce_sum.21614, %reduce_sum.21615)
}

%region_393.21626 (reduce_sum.21623: s32[], reduce_sum.21624: s32[]) -> s32[] {
  %reduce_sum.21623 = s32[] parameter(0)
  %reduce_sum.21624 = s32[] parameter(1)
  ROOT %reduce_sum.21625 = s32[] add(%reduce_sum.21623, %reduce_sum.21624)
}

%region_394.21632 (reduce_max.21629: s32[], reduce_max.21630: s32[]) -> s32[] {
  %reduce_max.21629 = s32[] parameter(0)
  %reduce_max.21630 = s32[] parameter(1)
  ROOT %reduce_max.21631 = s32[] maximum(%reduce_max.21629, %reduce_max.21630)
}

%region_0.36._custom_call_lowering_rule.31 (reduce_window_sum.189: s32[], reduce_window_sum.190: s32[]) -> s32[] {
  %reduce_window_sum.189 = s32[] parameter(0)
  %reduce_window_sum.190 = s32[] parameter(1)
  ROOT %reduce_window_sum.191 = s32[] add(%reduce_window_sum.189, %reduce_window_sum.190)
}

%region_0.36._custom_call_lowering_rule.31.clone (reduce_window_sum.416: s32[], reduce_window_sum.417: s32[]) -> s32[] {
  %reduce_window_sum.416 = s32[] parameter(0)
  %reduce_window_sum.417 = s32[] parameter(1)
  ROOT %reduce_window_sum.418 = s32[] add(%reduce_window_sum.416, %reduce_window_sum.417)
}

%region_395.21715 (reduce_sum.21712: bf16[], reduce_sum.21713: bf16[]) -> bf16[] {
  %reduce_sum.21712 = bf16[] parameter(0)
  %reduce_sum.21713 = bf16[] parameter(1)
  ROOT %reduce_sum.21714 = bf16[] add(%reduce_sum.21712, %reduce_sum.21713)
}

%region_395.21715.clone (reduce_sum.840: bf16[], reduce_sum.841: bf16[]) -> bf16[] {
  %reduce_sum.840 = bf16[] parameter(0)
  %reduce_sum.841 = bf16[] parameter(1)
  ROOT %reduce_sum.842 = bf16[] add(%reduce_sum.840, %reduce_sum.841)
}

%region_396.21722 (reduce_sum.21719: f32[], reduce_sum.21720: f32[]) -> f32[] {
  %reduce_sum.21719 = f32[] parameter(0)
  %reduce_sum.21720 = f32[] parameter(1)
  ROOT %reduce_sum.21721 = f32[] add(%reduce_sum.21719, %reduce_sum.21720)
}

%add.3.clone (x.7: bf16[], y.7: bf16[]) -> bf16[] {
  %x.7 = bf16[] parameter(0)
  %y.7 = bf16[] parameter(1)
  ROOT %add.1419 = bf16[] add(%x.7, %y.7)
}

%region_397.21737 (reduce_sum.21734: f32[], reduce_sum.21735: f32[]) -> f32[] {
  %reduce_sum.21734 = f32[] parameter(0)
  %reduce_sum.21735 = f32[] parameter(1)
  ROOT %reduce_sum.21736 = f32[] add(%reduce_sum.21734, %reduce_sum.21735)
}

%region_397.21737.clone (reduce_sum.843: f32[], reduce_sum.844: f32[]) -> f32[] {
  %reduce_sum.843 = f32[] parameter(0)
  %reduce_sum.844 = f32[] parameter(1)
  ROOT %reduce_sum.845 = f32[] add(%reduce_sum.843, %reduce_sum.844)
}

%add.4.clone (x.9: bf16[], y.9: bf16[]) -> bf16[] {
  %x.9 = bf16[] parameter(0)
  %y.9 = bf16[] parameter(1)
  ROOT %add.1421 = bf16[] add(%x.9, %y.9)
}

%region_398.21747 (reduce_sum.21744: f32[], reduce_sum.21745: f32[]) -> f32[] {
  %reduce_sum.21744 = f32[] parameter(0)
  %reduce_sum.21745 = f32[] parameter(1)
  ROOT %reduce_sum.21746 = f32[] add(%reduce_sum.21744, %reduce_sum.21745)
}

%region_398.21747.clone (reduce_sum.846: f32[], reduce_sum.847: f32[]) -> f32[] {
  %reduce_sum.846 = f32[] parameter(0)
  %reduce_sum.847 = f32[] parameter(1)
  ROOT %reduce_sum.848 = f32[] add(%reduce_sum.846, %reduce_sum.847)
}

%add.5.clone (x.11: bf16[], y.11: bf16[]) -> bf16[] {
  %x.11 = bf16[] parameter(0)
  %y.11 = bf16[] parameter(1)
  ROOT %add.1423 = bf16[] add(%x.11, %y.11)
}

%region_399.21758 (reduce_sum.21755: f32[], reduce_sum.21756: f32[]) -> f32[] {
  %reduce_sum.21755 = f32[] parameter(0)
  %reduce_sum.21756 = f32[] parameter(1)
  ROOT %reduce_sum.21757 = f32[] add(%reduce_sum.21755, %reduce_sum.21756)
}

%region_399.21758.clone (reduce_sum.849: f32[], reduce_sum.850: f32[]) -> f32[] {
  %reduce_sum.849 = f32[] parameter(0)
  %reduce_sum.850 = f32[] parameter(1)
  ROOT %reduce_sum.851 = f32[] add(%reduce_sum.849, %reduce_sum.850)
}

%add.6.clone (x.13: bf16[], y.13: bf16[]) -> bf16[] {
  %x.13 = bf16[] parameter(0)
  %y.13 = bf16[] parameter(1)
  ROOT %add.1425 = bf16[] add(%x.13, %y.13)
}

%region_400.21768 (reduce_sum.21765: f32[], reduce_sum.21766: f32[]) -> f32[] {
  %reduce_sum.21765 = f32[] parameter(0)
  %reduce_sum.21766 = f32[] parameter(1)
  ROOT %reduce_sum.21767 = f32[] add(%reduce_sum.21765, %reduce_sum.21766)
}

%region_400.21768.clone (reduce_sum.852: f32[], reduce_sum.853: f32[]) -> f32[] {
  %reduce_sum.852 = f32[] parameter(0)
  %reduce_sum.853 = f32[] parameter(1)
  ROOT %reduce_sum.854 = f32[] add(%reduce_sum.852, %reduce_sum.853)
}

%add.7.clone (x.15: bf16[], y.15: bf16[]) -> bf16[] {
  %x.15 = bf16[] parameter(0)
  %y.15 = bf16[] parameter(1)
  ROOT %add.1427 = bf16[] add(%x.15, %y.15)
}

%region_401.21784 (reduce_sum.21781: f32[], reduce_sum.21782: f32[]) -> f32[] {
  %reduce_sum.21781 = f32[] parameter(0)
  %reduce_sum.21782 = f32[] parameter(1)
  ROOT %reduce_sum.21783 = f32[] add(%reduce_sum.21781, %reduce_sum.21782)
}

%region_401.21784.clone (reduce_sum.855: f32[], reduce_sum.856: f32[]) -> f32[] {
  %reduce_sum.855 = f32[] parameter(0)
  %reduce_sum.856 = f32[] parameter(1)
  ROOT %reduce_sum.857 = f32[] add(%reduce_sum.855, %reduce_sum.856)
}

%add.8.clone (x.17: bf16[], y.17: bf16[]) -> bf16[] {
  %x.17 = bf16[] parameter(0)
  %y.17 = bf16[] parameter(1)
  ROOT %add.1429 = bf16[] add(%x.17, %y.17)
}

%region_402.21793 (reduce_sum.21790: f32[], reduce_sum.21791: f32[]) -> f32[] {
  %reduce_sum.21790 = f32[] parameter(0)
  %reduce_sum.21791 = f32[] parameter(1)
  ROOT %reduce_sum.21792 = f32[] add(%reduce_sum.21790, %reduce_sum.21791)
}

%region_402.21793.clone (reduce_sum.858: f32[], reduce_sum.859: f32[]) -> f32[] {
  %reduce_sum.858 = f32[] parameter(0)
  %reduce_sum.859 = f32[] parameter(1)
  ROOT %reduce_sum.860 = f32[] add(%reduce_sum.858, %reduce_sum.859)
}

%add.9.clone (x.19: bf16[], y.19: bf16[]) -> bf16[] {
  %x.19 = bf16[] parameter(0)
  %y.19 = bf16[] parameter(1)
  ROOT %add.1431 = bf16[] add(%x.19, %y.19)
}

%region_403.21804 (reduce_sum.21801: f32[], reduce_sum.21802: f32[]) -> f32[] {
  %reduce_sum.21801 = f32[] parameter(0)
  %reduce_sum.21802 = f32[] parameter(1)
  ROOT %reduce_sum.21803 = f32[] add(%reduce_sum.21801, %reduce_sum.21802)
}

%region_403.21804.clone (reduce_sum.861: f32[], reduce_sum.862: f32[]) -> f32[] {
  %reduce_sum.861 = f32[] parameter(0)
  %reduce_sum.862 = f32[] parameter(1)
  ROOT %reduce_sum.863 = f32[] add(%reduce_sum.861, %reduce_sum.862)
}

%region_404.21811 (reduce_sum.21808: bf16[], reduce_sum.21809: bf16[]) -> bf16[] {
  %reduce_sum.21808 = bf16[] parameter(0)
  %reduce_sum.21809 = bf16[] parameter(1)
  ROOT %reduce_sum.21810 = bf16[] add(%reduce_sum.21808, %reduce_sum.21809)
}

%region_404.21811.clone (reduce_sum.864: bf16[], reduce_sum.865: bf16[]) -> bf16[] {
  %reduce_sum.864 = bf16[] parameter(0)
  %reduce_sum.865 = bf16[] parameter(1)
  ROOT %reduce_sum.866 = bf16[] add(%reduce_sum.864, %reduce_sum.865)
}

%region_405.21818 (reduce_sum.21815: f32[], reduce_sum.21816: f32[]) -> f32[] {
  %reduce_sum.21815 = f32[] parameter(0)
  %reduce_sum.21816 = f32[] parameter(1)
  ROOT %reduce_sum.21817 = f32[] add(%reduce_sum.21815, %reduce_sum.21816)
}

%region_406.21829 (reduce_sum.21826: bf16[], reduce_sum.21827: bf16[]) -> bf16[] {
  %reduce_sum.21826 = bf16[] parameter(0)
  %reduce_sum.21827 = bf16[] parameter(1)
  ROOT %reduce_sum.21828 = bf16[] add(%reduce_sum.21826, %reduce_sum.21827)
}

%region_406.21829.clone (reduce_sum.867: bf16[], reduce_sum.868: bf16[]) -> bf16[] {
  %reduce_sum.867 = bf16[] parameter(0)
  %reduce_sum.868 = bf16[] parameter(1)
  ROOT %reduce_sum.869 = bf16[] add(%reduce_sum.867, %reduce_sum.868)
}

%region_407.21836 (reduce_sum.21833: f32[], reduce_sum.21834: f32[]) -> f32[] {
  %reduce_sum.21833 = f32[] parameter(0)
  %reduce_sum.21834 = f32[] parameter(1)
  ROOT %reduce_sum.21835 = f32[] add(%reduce_sum.21833, %reduce_sum.21834)
}

%add.10.clone (x.21: bf16[], y.21: bf16[]) -> bf16[] {
  %x.21 = bf16[] parameter(0)
  %y.21 = bf16[] parameter(1)
  ROOT %add.1433 = bf16[] add(%x.21, %y.21)
}

%region_408.21850 (reduce_sum.21847: f32[], reduce_sum.21848: f32[]) -> f32[] {
  %reduce_sum.21847 = f32[] parameter(0)
  %reduce_sum.21848 = f32[] parameter(1)
  ROOT %reduce_sum.21849 = f32[] add(%reduce_sum.21847, %reduce_sum.21848)
}

%region_408.21850.clone (reduce_sum.870: f32[], reduce_sum.871: f32[]) -> f32[] {
  %reduce_sum.870 = f32[] parameter(0)
  %reduce_sum.871 = f32[] parameter(1)
  ROOT %reduce_sum.872 = f32[] add(%reduce_sum.870, %reduce_sum.871)
}

%add.11.clone (x.23: bf16[], y.23: bf16[]) -> bf16[] {
  %x.23 = bf16[] parameter(0)
  %y.23 = bf16[] parameter(1)
  ROOT %add.1438 = bf16[] add(%x.23, %y.23)
}

%region_409.21860 (reduce_sum.89: f32[], reduce_sum.21858: f32[]) -> f32[] {
  %reduce_sum.89 = f32[] parameter(0)
  %reduce_sum.21858 = f32[] parameter(1)
  ROOT %reduce_sum.90 = f32[] add(%reduce_sum.89, %reduce_sum.21858)
}

%region_409.21860.clone (reduce_sum.873: f32[], reduce_sum.874: f32[]) -> f32[] {
  %reduce_sum.873 = f32[] parameter(0)
  %reduce_sum.874 = f32[] parameter(1)
  ROOT %reduce_sum.875 = f32[] add(%reduce_sum.873, %reduce_sum.874)
}

%add.12.clone (x.25: bf16[], y.25: bf16[]) -> bf16[] {
  %x.25 = bf16[] parameter(0)
  %y.25 = bf16[] parameter(1)
  ROOT %add.1440 = bf16[] add(%x.25, %y.25)
}

%region_410.21871 (reduce_sum.21868: f32[], reduce_sum.21869: f32[]) -> f32[] {
  %reduce_sum.21868 = f32[] parameter(0)
  %reduce_sum.21869 = f32[] parameter(1)
  ROOT %reduce_sum.21870 = f32[] add(%reduce_sum.21868, %reduce_sum.21869)
}

%region_410.21871.clone (reduce_sum.876: f32[], reduce_sum.877: f32[]) -> f32[] {
  %reduce_sum.876 = f32[] parameter(0)
  %reduce_sum.877 = f32[] parameter(1)
  ROOT %reduce_sum.878 = f32[] add(%reduce_sum.876, %reduce_sum.877)
}

%add.13.clone (x.27: bf16[], y.27: bf16[]) -> bf16[] {
  %x.27 = bf16[] parameter(0)
  %y.27 = bf16[] parameter(1)
  ROOT %add.1442 = bf16[] add(%x.27, %y.27)
}

%region_411.21881 (reduce_sum.21878: f32[], reduce_sum.21879: f32[]) -> f32[] {
  %reduce_sum.21878 = f32[] parameter(0)
  %reduce_sum.21879 = f32[] parameter(1)
  ROOT %reduce_sum.91 = f32[] add(%reduce_sum.21878, %reduce_sum.21879)
}

%region_411.21881.clone (reduce_sum.879: f32[], reduce_sum.880: f32[]) -> f32[] {
  %reduce_sum.879 = f32[] parameter(0)
  %reduce_sum.880 = f32[] parameter(1)
  ROOT %reduce_sum.881 = f32[] add(%reduce_sum.879, %reduce_sum.880)
}

%add.14.clone (x.29: bf16[], y.29: bf16[]) -> bf16[] {
  %x.29 = bf16[] parameter(0)
  %y.29 = bf16[] parameter(1)
  ROOT %add.1445 = bf16[] add(%x.29, %y.29)
}

%region_412.21897 (reduce_sum.21894: f32[], reduce_sum.21895: f32[]) -> f32[] {
  %reduce_sum.21894 = f32[] parameter(0)
  %reduce_sum.21895 = f32[] parameter(1)
  ROOT %reduce_sum.21896 = f32[] add(%reduce_sum.21894, %reduce_sum.21895)
}

%region_412.21897.clone (reduce_sum.882: f32[], reduce_sum.883: f32[]) -> f32[] {
  %reduce_sum.882 = f32[] parameter(0)
  %reduce_sum.883 = f32[] parameter(1)
  ROOT %reduce_sum.884 = f32[] add(%reduce_sum.882, %reduce_sum.883)
}

%add.15.clone (x.31: bf16[], y.31: bf16[]) -> bf16[] {
  %x.31 = bf16[] parameter(0)
  %y.31 = bf16[] parameter(1)
  ROOT %add.1447 = bf16[] add(%x.31, %y.31)
}

%region_413.21906 (reduce_sum.21903: f32[], reduce_sum.21904: f32[]) -> f32[] {
  %reduce_sum.21903 = f32[] parameter(0)
  %reduce_sum.21904 = f32[] parameter(1)
  ROOT %reduce_sum.21905 = f32[] add(%reduce_sum.21903, %reduce_sum.21904)
}

%region_413.21906.clone (reduce_sum.885: f32[], reduce_sum.886: f32[]) -> f32[] {
  %reduce_sum.885 = f32[] parameter(0)
  %reduce_sum.886 = f32[] parameter(1)
  ROOT %reduce_sum.887 = f32[] add(%reduce_sum.885, %reduce_sum.886)
}

%add.16.clone (x.33: bf16[], y.33: bf16[]) -> bf16[] {
  %x.33 = bf16[] parameter(0)
  %y.33 = bf16[] parameter(1)
  ROOT %add.1449 = bf16[] add(%x.33, %y.33)
}

%region_414.21917 (reduce_sum.21914: f32[], reduce_sum.21915: f32[]) -> f32[] {
  %reduce_sum.21914 = f32[] parameter(0)
  %reduce_sum.21915 = f32[] parameter(1)
  ROOT %reduce_sum.21916 = f32[] add(%reduce_sum.21914, %reduce_sum.21915)
}

%region_414.21917.clone (reduce_sum.888: f32[], reduce_sum.889: f32[]) -> f32[] {
  %reduce_sum.888 = f32[] parameter(0)
  %reduce_sum.889 = f32[] parameter(1)
  ROOT %reduce_sum.890 = f32[] add(%reduce_sum.888, %reduce_sum.889)
}

%region_415.21924 (reduce_sum.21921: bf16[], reduce_sum.21922: bf16[]) -> bf16[] {
  %reduce_sum.21921 = bf16[] parameter(0)
  %reduce_sum.21922 = bf16[] parameter(1)
  ROOT %reduce_sum.21923 = bf16[] add(%reduce_sum.21921, %reduce_sum.21922)
}

%region_415.21924.clone (reduce_sum.891: bf16[], reduce_sum.892: bf16[]) -> bf16[] {
  %reduce_sum.891 = bf16[] parameter(0)
  %reduce_sum.892 = bf16[] parameter(1)
  ROOT %reduce_sum.893 = bf16[] add(%reduce_sum.891, %reduce_sum.892)
}

%region_416.21931 (reduce_sum.21928: f32[], reduce_sum.21929: f32[]) -> f32[] {
  %reduce_sum.21928 = f32[] parameter(0)
  %reduce_sum.21929 = f32[] parameter(1)
  ROOT %reduce_sum.21930 = f32[] add(%reduce_sum.21928, %reduce_sum.21929)
}

%region_417.21942 (reduce_sum.21939: bf16[], reduce_sum.21940: bf16[]) -> bf16[] {
  %reduce_sum.21939 = bf16[] parameter(0)
  %reduce_sum.21940 = bf16[] parameter(1)
  ROOT %reduce_sum.21941 = bf16[] add(%reduce_sum.21939, %reduce_sum.21940)
}

%region_417.21942.clone (reduce_sum.894: bf16[], reduce_sum.895: bf16[]) -> bf16[] {
  %reduce_sum.894 = bf16[] parameter(0)
  %reduce_sum.895 = bf16[] parameter(1)
  ROOT %reduce_sum.896 = bf16[] add(%reduce_sum.894, %reduce_sum.895)
}

%region_418.21949 (reduce_sum.21946: f32[], reduce_sum.92: f32[]) -> f32[] {
  %reduce_sum.21946 = f32[] parameter(0)
  %reduce_sum.92 = f32[] parameter(1)
  ROOT %reduce_sum.21948 = f32[] add(%reduce_sum.21946, %reduce_sum.92)
}

%add.17.clone (x.35: bf16[], y.35: bf16[]) -> bf16[] {
  %x.35 = bf16[] parameter(0)
  %y.35 = bf16[] parameter(1)
  ROOT %add.1451 = bf16[] add(%x.35, %y.35)
}

%region_419.21963 (reduce_sum.21960: f32[], reduce_sum.21961: f32[]) -> f32[] {
  %reduce_sum.21960 = f32[] parameter(0)
  %reduce_sum.21961 = f32[] parameter(1)
  ROOT %reduce_sum.21962 = f32[] add(%reduce_sum.21960, %reduce_sum.21961)
}

%region_419.21963.clone (reduce_sum.897: f32[], reduce_sum.898: f32[]) -> f32[] {
  %reduce_sum.897 = f32[] parameter(0)
  %reduce_sum.898 = f32[] parameter(1)
  ROOT %reduce_sum.899 = f32[] add(%reduce_sum.897, %reduce_sum.898)
}

%add.18.clone (x.37: bf16[], y.37: bf16[]) -> bf16[] {
  %x.37 = bf16[] parameter(0)
  %y.37 = bf16[] parameter(1)
  ROOT %add.1453 = bf16[] add(%x.37, %y.37)
}

%region_420.21973 (reduce_sum.21970: f32[], reduce_sum.21971: f32[]) -> f32[] {
  %reduce_sum.21970 = f32[] parameter(0)
  %reduce_sum.21971 = f32[] parameter(1)
  ROOT %reduce_sum.21972 = f32[] add(%reduce_sum.21970, %reduce_sum.21971)
}

%region_420.21973.clone (reduce_sum.900: f32[], reduce_sum.901: f32[]) -> f32[] {
  %reduce_sum.900 = f32[] parameter(0)
  %reduce_sum.901 = f32[] parameter(1)
  ROOT %reduce_sum.902 = f32[] add(%reduce_sum.900, %reduce_sum.901)
}

%add.19.clone (x.39: bf16[], y.39: bf16[]) -> bf16[] {
  %x.39 = bf16[] parameter(0)
  %y.39 = bf16[] parameter(1)
  ROOT %add.1455 = bf16[] add(%x.39, %y.39)
}

%region_421.21984 (reduce_sum.21981: f32[], reduce_sum.21982: f32[]) -> f32[] {
  %reduce_sum.21981 = f32[] parameter(0)
  %reduce_sum.21982 = f32[] parameter(1)
  ROOT %reduce_sum.21983 = f32[] add(%reduce_sum.21981, %reduce_sum.21982)
}

%region_421.21984.clone (reduce_sum.903: f32[], reduce_sum.904: f32[]) -> f32[] {
  %reduce_sum.903 = f32[] parameter(0)
  %reduce_sum.904 = f32[] parameter(1)
  ROOT %reduce_sum.905 = f32[] add(%reduce_sum.903, %reduce_sum.904)
}

%add.20.clone (x.41: bf16[], y.41: bf16[]) -> bf16[] {
  %x.41 = bf16[] parameter(0)
  %y.41 = bf16[] parameter(1)
  ROOT %add.1460 = bf16[] add(%x.41, %y.41)
}

%region_422.21994 (reduce_sum.21991: f32[], reduce_sum.21992: f32[]) -> f32[] {
  %reduce_sum.21991 = f32[] parameter(0)
  %reduce_sum.21992 = f32[] parameter(1)
  ROOT %reduce_sum.21993 = f32[] add(%reduce_sum.21991, %reduce_sum.21992)
}

%region_422.21994.clone (reduce_sum.906: f32[], reduce_sum.907: f32[]) -> f32[] {
  %reduce_sum.906 = f32[] parameter(0)
  %reduce_sum.907 = f32[] parameter(1)
  ROOT %reduce_sum.908 = f32[] add(%reduce_sum.906, %reduce_sum.907)
}

%add.21.clone (x.43: bf16[], y.43: bf16[]) -> bf16[] {
  %x.43 = bf16[] parameter(0)
  %y.43 = bf16[] parameter(1)
  ROOT %add.1462 = bf16[] add(%x.43, %y.43)
}

%region_423.22010 (reduce_sum.22007: f32[], reduce_sum.22008: f32[]) -> f32[] {
  %reduce_sum.22007 = f32[] parameter(0)
  %reduce_sum.22008 = f32[] parameter(1)
  ROOT %reduce_sum.22009 = f32[] add(%reduce_sum.22007, %reduce_sum.22008)
}

%region_423.22010.clone (reduce_sum.909: f32[], reduce_sum.910: f32[]) -> f32[] {
  %reduce_sum.909 = f32[] parameter(0)
  %reduce_sum.910 = f32[] parameter(1)
  ROOT %reduce_sum.911 = f32[] add(%reduce_sum.909, %reduce_sum.910)
}

%add.22.clone (x.45: bf16[], y.45: bf16[]) -> bf16[] {
  %x.45 = bf16[] parameter(0)
  %y.45 = bf16[] parameter(1)
  ROOT %add.1464 = bf16[] add(%x.45, %y.45)
}

%region_424.22019 (reduce_sum.22016: f32[], reduce_sum.22017: f32[]) -> f32[] {
  %reduce_sum.22016 = f32[] parameter(0)
  %reduce_sum.22017 = f32[] parameter(1)
  ROOT %reduce_sum.22018 = f32[] add(%reduce_sum.22016, %reduce_sum.22017)
}

%region_424.22019.clone (reduce_sum.912: f32[], reduce_sum.913: f32[]) -> f32[] {
  %reduce_sum.912 = f32[] parameter(0)
  %reduce_sum.913 = f32[] parameter(1)
  ROOT %reduce_sum.914 = f32[] add(%reduce_sum.912, %reduce_sum.913)
}

%add.23.clone (x.47: bf16[], y.47: bf16[]) -> bf16[] {
  %x.47 = bf16[] parameter(0)
  %y.47 = bf16[] parameter(1)
  ROOT %add.1466 = bf16[] add(%x.47, %y.47)
}

%region_425.22030 (reduce_sum.22027: f32[], reduce_sum.22028: f32[]) -> f32[] {
  %reduce_sum.22027 = f32[] parameter(0)
  %reduce_sum.22028 = f32[] parameter(1)
  ROOT %reduce_sum.22029 = f32[] add(%reduce_sum.22027, %reduce_sum.22028)
}

%region_425.22030.clone (reduce_sum.915: f32[], reduce_sum.916: f32[]) -> f32[] {
  %reduce_sum.915 = f32[] parameter(0)
  %reduce_sum.916 = f32[] parameter(1)
  ROOT %reduce_sum.917 = f32[] add(%reduce_sum.915, %reduce_sum.916)
}

%region_426.22037 (reduce_sum.22034: bf16[], reduce_sum.22035: bf16[]) -> bf16[] {
  %reduce_sum.22034 = bf16[] parameter(0)
  %reduce_sum.22035 = bf16[] parameter(1)
  ROOT %reduce_sum.22036 = bf16[] add(%reduce_sum.22034, %reduce_sum.22035)
}

%region_426.22037.clone (reduce_sum.918: bf16[], reduce_sum.919: bf16[]) -> bf16[] {
  %reduce_sum.918 = bf16[] parameter(0)
  %reduce_sum.919 = bf16[] parameter(1)
  ROOT %reduce_sum.920 = bf16[] add(%reduce_sum.918, %reduce_sum.919)
}

%region_427.22044 (reduce_sum.22041: f32[], reduce_sum.22042: f32[]) -> f32[] {
  %reduce_sum.22041 = f32[] parameter(0)
  %reduce_sum.22042 = f32[] parameter(1)
  ROOT %reduce_sum.22043 = f32[] add(%reduce_sum.22041, %reduce_sum.22042)
}

%region_428.22055 (reduce_sum.22052: bf16[], reduce_sum.22053: bf16[]) -> bf16[] {
  %reduce_sum.22052 = bf16[] parameter(0)
  %reduce_sum.22053 = bf16[] parameter(1)
  ROOT %reduce_sum.22054 = bf16[] add(%reduce_sum.22052, %reduce_sum.22053)
}

%region_428.22055.clone (reduce_sum.921: bf16[], reduce_sum.922: bf16[]) -> bf16[] {
  %reduce_sum.921 = bf16[] parameter(0)
  %reduce_sum.922 = bf16[] parameter(1)
  ROOT %reduce_sum.923 = bf16[] add(%reduce_sum.921, %reduce_sum.922)
}

%region_429.22062 (reduce_sum.22059: f32[], reduce_sum.22060: f32[]) -> f32[] {
  %reduce_sum.22059 = f32[] parameter(0)
  %reduce_sum.22060 = f32[] parameter(1)
  ROOT %reduce_sum.22061 = f32[] add(%reduce_sum.22059, %reduce_sum.22060)
}

%add.24.clone (x.49: bf16[], y.49: bf16[]) -> bf16[] {
  %x.49 = bf16[] parameter(0)
  %y.49 = bf16[] parameter(1)
  ROOT %add.1468 = bf16[] add(%x.49, %y.49)
}

%region_430.22076 (reduce_sum.22073: f32[], reduce_sum.22074: f32[]) -> f32[] {
  %reduce_sum.22073 = f32[] parameter(0)
  %reduce_sum.22074 = f32[] parameter(1)
  ROOT %reduce_sum.22075 = f32[] add(%reduce_sum.22073, %reduce_sum.22074)
}

%region_430.22076.clone (reduce_sum.924: f32[], reduce_sum.925: f32[]) -> f32[] {
  %reduce_sum.924 = f32[] parameter(0)
  %reduce_sum.925 = f32[] parameter(1)
  ROOT %reduce_sum.926 = f32[] add(%reduce_sum.924, %reduce_sum.925)
}

%add.25.clone (x.51: bf16[], y.51: bf16[]) -> bf16[] {
  %x.51 = bf16[] parameter(0)
  %y.51 = bf16[] parameter(1)
  ROOT %add.1470 = bf16[] add(%x.51, %y.51)
}

%region_431.22086 (reduce_sum.22083: f32[], reduce_sum.22084: f32[]) -> f32[] {
  %reduce_sum.22083 = f32[] parameter(0)
  %reduce_sum.22084 = f32[] parameter(1)
  ROOT %reduce_sum.93 = f32[] add(%reduce_sum.22083, %reduce_sum.22084)
}

%region_431.22086.clone (reduce_sum.927: f32[], reduce_sum.928: f32[]) -> f32[] {
  %reduce_sum.927 = f32[] parameter(0)
  %reduce_sum.928 = f32[] parameter(1)
  ROOT %reduce_sum.929 = f32[] add(%reduce_sum.927, %reduce_sum.928)
}

%add.26.clone (x.53: bf16[], y.53: bf16[]) -> bf16[] {
  %x.53 = bf16[] parameter(0)
  %y.53 = bf16[] parameter(1)
  ROOT %add.1472 = bf16[] add(%x.53, %y.53)
}

%region_432.22097 (reduce_sum.22094: f32[], reduce_sum.22095: f32[]) -> f32[] {
  %reduce_sum.22094 = f32[] parameter(0)
  %reduce_sum.22095 = f32[] parameter(1)
  ROOT %reduce_sum.22096 = f32[] add(%reduce_sum.22094, %reduce_sum.22095)
}

%region_432.22097.clone (reduce_sum.930: f32[], reduce_sum.931: f32[]) -> f32[] {
  %reduce_sum.930 = f32[] parameter(0)
  %reduce_sum.931 = f32[] parameter(1)
  ROOT %reduce_sum.932 = f32[] add(%reduce_sum.930, %reduce_sum.931)
}

%add.27.clone (x.55: bf16[], y.55: bf16[]) -> bf16[] {
  %x.55 = bf16[] parameter(0)
  %y.55 = bf16[] parameter(1)
  ROOT %add.1474 = bf16[] add(%x.55, %y.55)
}

%region_433.22107 (reduce_sum.22104: f32[], reduce_sum.22105: f32[]) -> f32[] {
  %reduce_sum.22104 = f32[] parameter(0)
  %reduce_sum.22105 = f32[] parameter(1)
  ROOT %reduce_sum.22106 = f32[] add(%reduce_sum.22104, %reduce_sum.22105)
}

%region_433.22107.clone (reduce_sum.933: f32[], reduce_sum.934: f32[]) -> f32[] {
  %reduce_sum.933 = f32[] parameter(0)
  %reduce_sum.934 = f32[] parameter(1)
  ROOT %reduce_sum.935 = f32[] add(%reduce_sum.933, %reduce_sum.934)
}

%add.28.clone (x.57: bf16[], y.57: bf16[]) -> bf16[] {
  %x.57 = bf16[] parameter(0)
  %y.57 = bf16[] parameter(1)
  ROOT %add.1476 = bf16[] add(%x.57, %y.57)
}

%region_434.22123 (reduce_sum.22120: f32[], reduce_sum.22121: f32[]) -> f32[] {
  %reduce_sum.22120 = f32[] parameter(0)
  %reduce_sum.22121 = f32[] parameter(1)
  ROOT %reduce_sum.22122 = f32[] add(%reduce_sum.22120, %reduce_sum.22121)
}

%region_434.22123.clone (reduce_sum.936: f32[], reduce_sum.937: f32[]) -> f32[] {
  %reduce_sum.936 = f32[] parameter(0)
  %reduce_sum.937 = f32[] parameter(1)
  ROOT %reduce_sum.938 = f32[] add(%reduce_sum.936, %reduce_sum.937)
}

%add.29.clone (x.59: bf16[], y.59: bf16[]) -> bf16[] {
  %x.59 = bf16[] parameter(0)
  %y.59 = bf16[] parameter(1)
  ROOT %add.1482 = bf16[] add(%x.59, %y.59)
}

%region_435.22132 (reduce_sum.22129: f32[], reduce_sum.22130: f32[]) -> f32[] {
  %reduce_sum.22129 = f32[] parameter(0)
  %reduce_sum.22130 = f32[] parameter(1)
  ROOT %reduce_sum.22131 = f32[] add(%reduce_sum.22129, %reduce_sum.22130)
}

%region_435.22132.clone (reduce_sum.939: f32[], reduce_sum.940: f32[]) -> f32[] {
  %reduce_sum.939 = f32[] parameter(0)
  %reduce_sum.940 = f32[] parameter(1)
  ROOT %reduce_sum.941 = f32[] add(%reduce_sum.939, %reduce_sum.940)
}

%add.30.clone (x.61: bf16[], y.61: bf16[]) -> bf16[] {
  %x.61 = bf16[] parameter(0)
  %y.61 = bf16[] parameter(1)
  ROOT %add.1484 = bf16[] add(%x.61, %y.61)
}

%region_436.22143 (reduce_sum.94: f32[], reduce_sum.22141: f32[]) -> f32[] {
  %reduce_sum.94 = f32[] parameter(0)
  %reduce_sum.22141 = f32[] parameter(1)
  ROOT %reduce_sum.95 = f32[] add(%reduce_sum.94, %reduce_sum.22141)
}

%region_436.22143.clone (reduce_sum.942: f32[], reduce_sum.943: f32[]) -> f32[] {
  %reduce_sum.942 = f32[] parameter(0)
  %reduce_sum.943 = f32[] parameter(1)
  ROOT %reduce_sum.944 = f32[] add(%reduce_sum.942, %reduce_sum.943)
}

%region_437.22150 (reduce_sum.22147: bf16[], reduce_sum.22148: bf16[]) -> bf16[] {
  %reduce_sum.22147 = bf16[] parameter(0)
  %reduce_sum.22148 = bf16[] parameter(1)
  ROOT %reduce_sum.22149 = bf16[] add(%reduce_sum.22147, %reduce_sum.22148)
}

%region_437.22150.clone (reduce_sum.945: bf16[], reduce_sum.946: bf16[]) -> bf16[] {
  %reduce_sum.945 = bf16[] parameter(0)
  %reduce_sum.946 = bf16[] parameter(1)
  ROOT %reduce_sum.947 = bf16[] add(%reduce_sum.945, %reduce_sum.946)
}

%region_438.22157 (reduce_sum.22154: f32[], reduce_sum.22155: f32[]) -> f32[] {
  %reduce_sum.22154 = f32[] parameter(0)
  %reduce_sum.22155 = f32[] parameter(1)
  ROOT %reduce_sum.22156 = f32[] add(%reduce_sum.22154, %reduce_sum.22155)
}

%region_439.22168 (reduce_sum.22165: bf16[], reduce_sum.22166: bf16[]) -> bf16[] {
  %reduce_sum.22165 = bf16[] parameter(0)
  %reduce_sum.22166 = bf16[] parameter(1)
  ROOT %reduce_sum.22167 = bf16[] add(%reduce_sum.22165, %reduce_sum.22166)
}

%region_439.22168.clone (reduce_sum.948: bf16[], reduce_sum.949: bf16[]) -> bf16[] {
  %reduce_sum.948 = bf16[] parameter(0)
  %reduce_sum.949 = bf16[] parameter(1)
  ROOT %reduce_sum.950 = bf16[] add(%reduce_sum.948, %reduce_sum.949)
}

%region_440.22175 (reduce_sum.22172: f32[], reduce_sum.22173: f32[]) -> f32[] {
  %reduce_sum.22172 = f32[] parameter(0)
  %reduce_sum.22173 = f32[] parameter(1)
  ROOT %reduce_sum.22174 = f32[] add(%reduce_sum.22172, %reduce_sum.22173)
}

%add.31.clone (x.63: bf16[], y.63: bf16[]) -> bf16[] {
  %x.63 = bf16[] parameter(0)
  %y.63 = bf16[] parameter(1)
  ROOT %add.1486 = bf16[] add(%x.63, %y.63)
}

%region_441.22189 (reduce_sum.22186: f32[], reduce_sum.22187: f32[]) -> f32[] {
  %reduce_sum.22186 = f32[] parameter(0)
  %reduce_sum.22187 = f32[] parameter(1)
  ROOT %reduce_sum.22188 = f32[] add(%reduce_sum.22186, %reduce_sum.22187)
}

%region_441.22189.clone (reduce_sum.951: f32[], reduce_sum.952: f32[]) -> f32[] {
  %reduce_sum.951 = f32[] parameter(0)
  %reduce_sum.952 = f32[] parameter(1)
  ROOT %reduce_sum.953 = f32[] add(%reduce_sum.951, %reduce_sum.952)
}

%add.32.clone (x.65: bf16[], y.65: bf16[]) -> bf16[] {
  %x.65 = bf16[] parameter(0)
  %y.65 = bf16[] parameter(1)
  ROOT %add.1488 = bf16[] add(%x.65, %y.65)
}

%region_442.22199 (reduce_sum.22196: f32[], reduce_sum.22197: f32[]) -> f32[] {
  %reduce_sum.22196 = f32[] parameter(0)
  %reduce_sum.22197 = f32[] parameter(1)
  ROOT %reduce_sum.22198 = f32[] add(%reduce_sum.22196, %reduce_sum.22197)
}

%region_442.22199.clone (reduce_sum.954: f32[], reduce_sum.955: f32[]) -> f32[] {
  %reduce_sum.954 = f32[] parameter(0)
  %reduce_sum.955 = f32[] parameter(1)
  ROOT %reduce_sum.956 = f32[] add(%reduce_sum.954, %reduce_sum.955)
}

%add.33.clone (x.67: bf16[], y.67: bf16[]) -> bf16[] {
  %x.67 = bf16[] parameter(0)
  %y.67 = bf16[] parameter(1)
  ROOT %add.1490 = bf16[] add(%x.67, %y.67)
}

%region_443.22210 (reduce_sum.22207: f32[], reduce_sum.22208: f32[]) -> f32[] {
  %reduce_sum.22207 = f32[] parameter(0)
  %reduce_sum.22208 = f32[] parameter(1)
  ROOT %reduce_sum.22209 = f32[] add(%reduce_sum.22207, %reduce_sum.22208)
}

%region_443.22210.clone (reduce_sum.957: f32[], reduce_sum.958: f32[]) -> f32[] {
  %reduce_sum.957 = f32[] parameter(0)
  %reduce_sum.958 = f32[] parameter(1)
  ROOT %reduce_sum.959 = f32[] add(%reduce_sum.957, %reduce_sum.958)
}

%add.34.clone (x.69: bf16[], y.69: bf16[]) -> bf16[] {
  %x.69 = bf16[] parameter(0)
  %y.69 = bf16[] parameter(1)
  ROOT %add.1492 = bf16[] add(%x.69, %y.69)
}

%region_444.22220 (reduce_sum.22217: f32[], reduce_sum.22218: f32[]) -> f32[] {
  %reduce_sum.22217 = f32[] parameter(0)
  %reduce_sum.22218 = f32[] parameter(1)
  ROOT %reduce_sum.22219 = f32[] add(%reduce_sum.22217, %reduce_sum.22218)
}

%region_444.22220.clone (reduce_sum.960: f32[], reduce_sum.961: f32[]) -> f32[] {
  %reduce_sum.960 = f32[] parameter(0)
  %reduce_sum.961 = f32[] parameter(1)
  ROOT %reduce_sum.962 = f32[] add(%reduce_sum.960, %reduce_sum.961)
}

%add.35.clone (x.71: bf16[], y.71: bf16[]) -> bf16[] {
  %x.71 = bf16[] parameter(0)
  %y.71 = bf16[] parameter(1)
  ROOT %add.1494 = bf16[] add(%x.71, %y.71)
}

%region_445.22236 (reduce_sum.22233: f32[], reduce_sum.22234: f32[]) -> f32[] {
  %reduce_sum.22233 = f32[] parameter(0)
  %reduce_sum.22234 = f32[] parameter(1)
  ROOT %reduce_sum.22235 = f32[] add(%reduce_sum.22233, %reduce_sum.22234)
}

%region_445.22236.clone (reduce_sum.963: f32[], reduce_sum.964: f32[]) -> f32[] {
  %reduce_sum.963 = f32[] parameter(0)
  %reduce_sum.964 = f32[] parameter(1)
  ROOT %reduce_sum.965 = f32[] add(%reduce_sum.963, %reduce_sum.964)
}

%add.36.clone (x.73: bf16[], y.73: bf16[]) -> bf16[] {
  %x.73 = bf16[] parameter(0)
  %y.73 = bf16[] parameter(1)
  ROOT %add.1496 = bf16[] add(%x.73, %y.73)
}

%region_446.22245 (reduce_sum.22242: f32[], reduce_sum.22243: f32[]) -> f32[] {
  %reduce_sum.22242 = f32[] parameter(0)
  %reduce_sum.22243 = f32[] parameter(1)
  ROOT %reduce_sum.22244 = f32[] add(%reduce_sum.22242, %reduce_sum.22243)
}

%region_446.22245.clone (reduce_sum.966: f32[], reduce_sum.967: f32[]) -> f32[] {
  %reduce_sum.966 = f32[] parameter(0)
  %reduce_sum.967 = f32[] parameter(1)
  ROOT %reduce_sum.968 = f32[] add(%reduce_sum.966, %reduce_sum.967)
}

%add.37.clone (x.75: bf16[], y.75: bf16[]) -> bf16[] {
  %x.75 = bf16[] parameter(0)
  %y.75 = bf16[] parameter(1)
  ROOT %add.1501 = bf16[] add(%x.75, %y.75)
}

%region_447.22256 (reduce_sum.22253: f32[], reduce_sum.22254: f32[]) -> f32[] {
  %reduce_sum.22253 = f32[] parameter(0)
  %reduce_sum.22254 = f32[] parameter(1)
  ROOT %reduce_sum.22255 = f32[] add(%reduce_sum.22253, %reduce_sum.22254)
}

%region_447.22256.clone (reduce_sum.969: f32[], reduce_sum.970: f32[]) -> f32[] {
  %reduce_sum.969 = f32[] parameter(0)
  %reduce_sum.970 = f32[] parameter(1)
  ROOT %reduce_sum.971 = f32[] add(%reduce_sum.969, %reduce_sum.970)
}

%region_448.22263 (reduce_sum.22260: bf16[], reduce_sum.22261: bf16[]) -> bf16[] {
  %reduce_sum.22260 = bf16[] parameter(0)
  %reduce_sum.22261 = bf16[] parameter(1)
  ROOT %reduce_sum.22262 = bf16[] add(%reduce_sum.22260, %reduce_sum.22261)
}

%region_448.22263.clone (reduce_sum.972: bf16[], reduce_sum.973: bf16[]) -> bf16[] {
  %reduce_sum.972 = bf16[] parameter(0)
  %reduce_sum.973 = bf16[] parameter(1)
  ROOT %reduce_sum.974 = bf16[] add(%reduce_sum.972, %reduce_sum.973)
}

%region_449.22270 (reduce_sum.22267: f32[], reduce_sum.22268: f32[]) -> f32[] {
  %reduce_sum.22267 = f32[] parameter(0)
  %reduce_sum.22268 = f32[] parameter(1)
  ROOT %reduce_sum.22269 = f32[] add(%reduce_sum.22267, %reduce_sum.22268)
}

%region_450.22281 (reduce_sum.22278: bf16[], reduce_sum.22279: bf16[]) -> bf16[] {
  %reduce_sum.22278 = bf16[] parameter(0)
  %reduce_sum.22279 = bf16[] parameter(1)
  ROOT %reduce_sum.22280 = bf16[] add(%reduce_sum.22278, %reduce_sum.22279)
}

%region_450.22281.clone (reduce_sum.975: bf16[], reduce_sum.976: bf16[]) -> bf16[] {
  %reduce_sum.975 = bf16[] parameter(0)
  %reduce_sum.976 = bf16[] parameter(1)
  ROOT %reduce_sum.977 = bf16[] add(%reduce_sum.975, %reduce_sum.976)
}

%region_451.22288 (reduce_sum.22285: f32[], reduce_sum.22286: f32[]) -> f32[] {
  %reduce_sum.22285 = f32[] parameter(0)
  %reduce_sum.22286 = f32[] parameter(1)
  ROOT %reduce_sum.22287 = f32[] add(%reduce_sum.22285, %reduce_sum.22286)
}

%add.38.clone (x.77: bf16[], y.77: bf16[]) -> bf16[] {
  %x.77 = bf16[] parameter(0)
  %y.77 = bf16[] parameter(1)
  ROOT %add.1503 = bf16[] add(%x.77, %y.77)
}

%region_452.22302 (reduce_sum.22299: f32[], reduce_sum.22300: f32[]) -> f32[] {
  %reduce_sum.22299 = f32[] parameter(0)
  %reduce_sum.22300 = f32[] parameter(1)
  ROOT %reduce_sum.22301 = f32[] add(%reduce_sum.22299, %reduce_sum.22300)
}

%region_452.22302.clone (reduce_sum.978: f32[], reduce_sum.979: f32[]) -> f32[] {
  %reduce_sum.978 = f32[] parameter(0)
  %reduce_sum.979 = f32[] parameter(1)
  ROOT %reduce_sum.980 = f32[] add(%reduce_sum.978, %reduce_sum.979)
}

%add.39.clone (x.79: bf16[], y.79: bf16[]) -> bf16[] {
  %x.79 = bf16[] parameter(0)
  %y.79 = bf16[] parameter(1)
  ROOT %add.1505 = bf16[] add(%x.79, %y.79)
}

%region_453.22312 (reduce_sum.22309: f32[], reduce_sum.22310: f32[]) -> f32[] {
  %reduce_sum.22309 = f32[] parameter(0)
  %reduce_sum.22310 = f32[] parameter(1)
  ROOT %reduce_sum.22311 = f32[] add(%reduce_sum.22309, %reduce_sum.22310)
}

%region_453.22312.clone (reduce_sum.981: f32[], reduce_sum.982: f32[]) -> f32[] {
  %reduce_sum.981 = f32[] parameter(0)
  %reduce_sum.982 = f32[] parameter(1)
  ROOT %reduce_sum.983 = f32[] add(%reduce_sum.981, %reduce_sum.982)
}

%add.40.clone (x.81: bf16[], y.81: bf16[]) -> bf16[] {
  %x.81 = bf16[] parameter(0)
  %y.81 = bf16[] parameter(1)
  ROOT %add.1507 = bf16[] add(%x.81, %y.81)
}

%region_454.22323 (reduce_sum.22320: f32[], reduce_sum.22321: f32[]) -> f32[] {
  %reduce_sum.22320 = f32[] parameter(0)
  %reduce_sum.22321 = f32[] parameter(1)
  ROOT %reduce_sum.22322 = f32[] add(%reduce_sum.22320, %reduce_sum.22321)
}

%region_454.22323.clone (reduce_sum.984: f32[], reduce_sum.985: f32[]) -> f32[] {
  %reduce_sum.984 = f32[] parameter(0)
  %reduce_sum.985 = f32[] parameter(1)
  ROOT %reduce_sum.986 = f32[] add(%reduce_sum.984, %reduce_sum.985)
}

%add.41.clone (x.83: bf16[], y.83: bf16[]) -> bf16[] {
  %x.83 = bf16[] parameter(0)
  %y.83 = bf16[] parameter(1)
  ROOT %add.1509 = bf16[] add(%x.83, %y.83)
}

%region_455.22333 (reduce_sum.22330: f32[], reduce_sum.22331: f32[]) -> f32[] {
  %reduce_sum.22330 = f32[] parameter(0)
  %reduce_sum.22331 = f32[] parameter(1)
  ROOT %reduce_sum.22332 = f32[] add(%reduce_sum.22330, %reduce_sum.22331)
}

%region_455.22333.clone (reduce_sum.987: f32[], reduce_sum.988: f32[]) -> f32[] {
  %reduce_sum.987 = f32[] parameter(0)
  %reduce_sum.988 = f32[] parameter(1)
  ROOT %reduce_sum.989 = f32[] add(%reduce_sum.987, %reduce_sum.988)
}

%add.42.clone (x.85: bf16[], y.85: bf16[]) -> bf16[] {
  %x.85 = bf16[] parameter(0)
  %y.85 = bf16[] parameter(1)
  ROOT %add.1511 = bf16[] add(%x.85, %y.85)
}

%region_456.22349 (reduce_sum.22346: f32[], reduce_sum.96: f32[]) -> f32[] {
  %reduce_sum.22346 = f32[] parameter(0)
  %reduce_sum.96 = f32[] parameter(1)
  ROOT %reduce_sum.97 = f32[] add(%reduce_sum.22346, %reduce_sum.96)
}

%region_456.22349.clone (reduce_sum.990: f32[], reduce_sum.991: f32[]) -> f32[] {
  %reduce_sum.990 = f32[] parameter(0)
  %reduce_sum.991 = f32[] parameter(1)
  ROOT %reduce_sum.992 = f32[] add(%reduce_sum.990, %reduce_sum.991)
}

%add.43.clone (x.87: bf16[], y.87: bf16[]) -> bf16[] {
  %x.87 = bf16[] parameter(0)
  %y.87 = bf16[] parameter(1)
  ROOT %add.1513 = bf16[] add(%x.87, %y.87)
}

%region_457.22358 (reduce_sum.98: f32[], reduce_sum.99: f32[]) -> f32[] {
  %reduce_sum.98 = f32[] parameter(0)
  %reduce_sum.99 = f32[] parameter(1)
  ROOT %reduce_sum.100 = f32[] add(%reduce_sum.98, %reduce_sum.99)
}

%region_457.22358.clone (reduce_sum.993: f32[], reduce_sum.994: f32[]) -> f32[] {
  %reduce_sum.993 = f32[] parameter(0)
  %reduce_sum.994 = f32[] parameter(1)
  ROOT %reduce_sum.995 = f32[] add(%reduce_sum.993, %reduce_sum.994)
}

%add.44.clone (x.89: bf16[], y.89: bf16[]) -> bf16[] {
  %x.89 = bf16[] parameter(0)
  %y.89 = bf16[] parameter(1)
  ROOT %add.1515 = bf16[] add(%x.89, %y.89)
}

%region_458.22369 (reduce_sum.22366: f32[], reduce_sum.22367: f32[]) -> f32[] {
  %reduce_sum.22366 = f32[] parameter(0)
  %reduce_sum.22367 = f32[] parameter(1)
  ROOT %reduce_sum.22368 = f32[] add(%reduce_sum.22366, %reduce_sum.22367)
}

%region_458.22369.clone (reduce_sum.996: f32[], reduce_sum.997: f32[]) -> f32[] {
  %reduce_sum.996 = f32[] parameter(0)
  %reduce_sum.997 = f32[] parameter(1)
  ROOT %reduce_sum.998 = f32[] add(%reduce_sum.996, %reduce_sum.997)
}

%region_459.22376 (reduce_sum.101: bf16[], reduce_sum.102: bf16[]) -> bf16[] {
  %reduce_sum.101 = bf16[] parameter(0)
  %reduce_sum.102 = bf16[] parameter(1)
  ROOT %reduce_sum.22375 = bf16[] add(%reduce_sum.101, %reduce_sum.102)
}

%region_459.22376.clone (reduce_sum.999: bf16[], reduce_sum.1000: bf16[]) -> bf16[] {
  %reduce_sum.999 = bf16[] parameter(0)
  %reduce_sum.1000 = bf16[] parameter(1)
  ROOT %reduce_sum.1001 = bf16[] add(%reduce_sum.999, %reduce_sum.1000)
}

%region_460.22383 (reduce_sum.22380: f32[], reduce_sum.22381: f32[]) -> f32[] {
  %reduce_sum.22380 = f32[] parameter(0)
  %reduce_sum.22381 = f32[] parameter(1)
  ROOT %reduce_sum.22382 = f32[] add(%reduce_sum.22380, %reduce_sum.22381)
}

%region_461.22394 (reduce_sum.22391: bf16[], reduce_sum.22392: bf16[]) -> bf16[] {
  %reduce_sum.22391 = bf16[] parameter(0)
  %reduce_sum.22392 = bf16[] parameter(1)
  ROOT %reduce_sum.22393 = bf16[] add(%reduce_sum.22391, %reduce_sum.22392)
}

%region_461.22394.clone (reduce_sum.1002: bf16[], reduce_sum.1003: bf16[]) -> bf16[] {
  %reduce_sum.1002 = bf16[] parameter(0)
  %reduce_sum.1003 = bf16[] parameter(1)
  ROOT %reduce_sum.1004 = bf16[] add(%reduce_sum.1002, %reduce_sum.1003)
}

%region_462.22401 (reduce_sum.22398: f32[], reduce_sum.22399: f32[]) -> f32[] {
  %reduce_sum.22398 = f32[] parameter(0)
  %reduce_sum.22399 = f32[] parameter(1)
  ROOT %reduce_sum.22400 = f32[] add(%reduce_sum.22398, %reduce_sum.22399)
}

%add.45.clone (x.91: bf16[], y.91: bf16[]) -> bf16[] {
  %x.91 = bf16[] parameter(0)
  %y.91 = bf16[] parameter(1)
  ROOT %add.1517 = bf16[] add(%x.91, %y.91)
}

%region_463.22415 (reduce_sum.22412: f32[], reduce_sum.22413: f32[]) -> f32[] {
  %reduce_sum.22412 = f32[] parameter(0)
  %reduce_sum.22413 = f32[] parameter(1)
  ROOT %reduce_sum.22414 = f32[] add(%reduce_sum.22412, %reduce_sum.22413)
}

%region_463.22415.clone (reduce_sum.1005: f32[], reduce_sum.1006: f32[]) -> f32[] {
  %reduce_sum.1005 = f32[] parameter(0)
  %reduce_sum.1006 = f32[] parameter(1)
  ROOT %reduce_sum.1007 = f32[] add(%reduce_sum.1005, %reduce_sum.1006)
}

%add.46.clone (x.93: bf16[], y.93: bf16[]) -> bf16[] {
  %x.93 = bf16[] parameter(0)
  %y.93 = bf16[] parameter(1)
  ROOT %add.1522 = bf16[] add(%x.93, %y.93)
}

%region_464.22425 (reduce_sum.22422: f32[], reduce_sum.22423: f32[]) -> f32[] {
  %reduce_sum.22422 = f32[] parameter(0)
  %reduce_sum.22423 = f32[] parameter(1)
  ROOT %reduce_sum.22424 = f32[] add(%reduce_sum.22422, %reduce_sum.22423)
}

%region_464.22425.clone (reduce_sum.1008: f32[], reduce_sum.1009: f32[]) -> f32[] {
  %reduce_sum.1008 = f32[] parameter(0)
  %reduce_sum.1009 = f32[] parameter(1)
  ROOT %reduce_sum.1010 = f32[] add(%reduce_sum.1008, %reduce_sum.1009)
}

%add.47.clone (x.95: bf16[], y.95: bf16[]) -> bf16[] {
  %x.95 = bf16[] parameter(0)
  %y.95 = bf16[] parameter(1)
  ROOT %add.1524 = bf16[] add(%x.95, %y.95)
}

%region_465.22436 (reduce_sum.22433: f32[], reduce_sum.22434: f32[]) -> f32[] {
  %reduce_sum.22433 = f32[] parameter(0)
  %reduce_sum.22434 = f32[] parameter(1)
  ROOT %reduce_sum.103 = f32[] add(%reduce_sum.22433, %reduce_sum.22434)
}

%region_465.22436.clone (reduce_sum.1011: f32[], reduce_sum.1012: f32[]) -> f32[] {
  %reduce_sum.1011 = f32[] parameter(0)
  %reduce_sum.1012 = f32[] parameter(1)
  ROOT %reduce_sum.1013 = f32[] add(%reduce_sum.1011, %reduce_sum.1012)
}

%add.48.clone (x.97: bf16[], y.97: bf16[]) -> bf16[] {
  %x.97 = bf16[] parameter(0)
  %y.97 = bf16[] parameter(1)
  ROOT %add.1526 = bf16[] add(%x.97, %y.97)
}

%region_466.22446 (reduce_sum.104: f32[], reduce_sum.105: f32[]) -> f32[] {
  %reduce_sum.104 = f32[] parameter(0)
  %reduce_sum.105 = f32[] parameter(1)
  ROOT %reduce_sum.106 = f32[] add(%reduce_sum.104, %reduce_sum.105)
}

%region_466.22446.clone (reduce_sum.1014: f32[], reduce_sum.1015: f32[]) -> f32[] {
  %reduce_sum.1014 = f32[] parameter(0)
  %reduce_sum.1015 = f32[] parameter(1)
  ROOT %reduce_sum.1016 = f32[] add(%reduce_sum.1014, %reduce_sum.1015)
}

%add.49.clone (x.99: bf16[], y.99: bf16[]) -> bf16[] {
  %x.99 = bf16[] parameter(0)
  %y.99 = bf16[] parameter(1)
  ROOT %add.1528 = bf16[] add(%x.99, %y.99)
}

%region_467.22462 (reduce_sum.107: f32[], reduce_sum.22460: f32[]) -> f32[] {
  %reduce_sum.107 = f32[] parameter(0)
  %reduce_sum.22460 = f32[] parameter(1)
  ROOT %reduce_sum.22461 = f32[] add(%reduce_sum.107, %reduce_sum.22460)
}

%region_467.22462.clone (reduce_sum.1017: f32[], reduce_sum.1018: f32[]) -> f32[] {
  %reduce_sum.1017 = f32[] parameter(0)
  %reduce_sum.1018 = f32[] parameter(1)
  ROOT %reduce_sum.1019 = f32[] add(%reduce_sum.1017, %reduce_sum.1018)
}

%add.50.clone (x.101: bf16[], y.101: bf16[]) -> bf16[] {
  %x.101 = bf16[] parameter(0)
  %y.101 = bf16[] parameter(1)
  ROOT %add.1530 = bf16[] add(%x.101, %y.101)
}

%region_468.22471 (reduce_sum.22468: f32[], reduce_sum.22469: f32[]) -> f32[] {
  %reduce_sum.22468 = f32[] parameter(0)
  %reduce_sum.22469 = f32[] parameter(1)
  ROOT %reduce_sum.22470 = f32[] add(%reduce_sum.22468, %reduce_sum.22469)
}

%region_468.22471.clone (reduce_sum.1020: f32[], reduce_sum.1021: f32[]) -> f32[] {
  %reduce_sum.1020 = f32[] parameter(0)
  %reduce_sum.1021 = f32[] parameter(1)
  ROOT %reduce_sum.1022 = f32[] add(%reduce_sum.1020, %reduce_sum.1021)
}

%add.51.clone (x.103: bf16[], y.103: bf16[]) -> bf16[] {
  %x.103 = bf16[] parameter(0)
  %y.103 = bf16[] parameter(1)
  ROOT %add.1532 = bf16[] add(%x.103, %y.103)
}

%region_469.22482 (reduce_sum.22479: f32[], reduce_sum.22480: f32[]) -> f32[] {
  %reduce_sum.22479 = f32[] parameter(0)
  %reduce_sum.22480 = f32[] parameter(1)
  ROOT %reduce_sum.22481 = f32[] add(%reduce_sum.22479, %reduce_sum.22480)
}

%region_469.22482.clone (reduce_sum.1023: f32[], reduce_sum.1024: f32[]) -> f32[] {
  %reduce_sum.1023 = f32[] parameter(0)
  %reduce_sum.1024 = f32[] parameter(1)
  ROOT %reduce_sum.1025 = f32[] add(%reduce_sum.1023, %reduce_sum.1024)
}

%region_470.22489 (reduce_sum.22486: bf16[], reduce_sum.22487: bf16[]) -> bf16[] {
  %reduce_sum.22486 = bf16[] parameter(0)
  %reduce_sum.22487 = bf16[] parameter(1)
  ROOT %reduce_sum.22488 = bf16[] add(%reduce_sum.22486, %reduce_sum.22487)
}

%region_470.22489.clone (reduce_sum.1026: bf16[], reduce_sum.1027: bf16[]) -> bf16[] {
  %reduce_sum.1026 = bf16[] parameter(0)
  %reduce_sum.1027 = bf16[] parameter(1)
  ROOT %reduce_sum.1028 = bf16[] add(%reduce_sum.1026, %reduce_sum.1027)
}

%region_471.22496 (reduce_sum.22493: f32[], reduce_sum.22494: f32[]) -> f32[] {
  %reduce_sum.22493 = f32[] parameter(0)
  %reduce_sum.22494 = f32[] parameter(1)
  ROOT %reduce_sum.22495 = f32[] add(%reduce_sum.22493, %reduce_sum.22494)
}

%region_472.22507 (reduce_sum.22504: bf16[], reduce_sum.22505: bf16[]) -> bf16[] {
  %reduce_sum.22504 = bf16[] parameter(0)
  %reduce_sum.22505 = bf16[] parameter(1)
  ROOT %reduce_sum.22506 = bf16[] add(%reduce_sum.22504, %reduce_sum.22505)
}

%region_472.22507.clone (reduce_sum.1029: bf16[], reduce_sum.1030: bf16[]) -> bf16[] {
  %reduce_sum.1029 = bf16[] parameter(0)
  %reduce_sum.1030 = bf16[] parameter(1)
  ROOT %reduce_sum.1031 = bf16[] add(%reduce_sum.1029, %reduce_sum.1030)
}

%region_473.22514 (reduce_sum.22511: f32[], reduce_sum.22512: f32[]) -> f32[] {
  %reduce_sum.22511 = f32[] parameter(0)
  %reduce_sum.22512 = f32[] parameter(1)
  ROOT %reduce_sum.22513 = f32[] add(%reduce_sum.22511, %reduce_sum.22512)
}

%add.52.clone (x.105: bf16[], y.105: bf16[]) -> bf16[] {
  %x.105 = bf16[] parameter(0)
  %y.105 = bf16[] parameter(1)
  ROOT %add.1534 = bf16[] add(%x.105, %y.105)
}

%region_474.22528 (reduce_sum.22525: f32[], reduce_sum.22526: f32[]) -> f32[] {
  %reduce_sum.22525 = f32[] parameter(0)
  %reduce_sum.22526 = f32[] parameter(1)
  ROOT %reduce_sum.22527 = f32[] add(%reduce_sum.22525, %reduce_sum.22526)
}

%region_474.22528.clone (reduce_sum.1032: f32[], reduce_sum.1033: f32[]) -> f32[] {
  %reduce_sum.1032 = f32[] parameter(0)
  %reduce_sum.1033 = f32[] parameter(1)
  ROOT %reduce_sum.1034 = f32[] add(%reduce_sum.1032, %reduce_sum.1033)
}

%add.53.clone (x.107: bf16[], y.107: bf16[]) -> bf16[] {
  %x.107 = bf16[] parameter(0)
  %y.107 = bf16[] parameter(1)
  ROOT %add.1536 = bf16[] add(%x.107, %y.107)
}

%region_475.22538 (reduce_sum.22535: f32[], reduce_sum.22536: f32[]) -> f32[] {
  %reduce_sum.22535 = f32[] parameter(0)
  %reduce_sum.22536 = f32[] parameter(1)
  ROOT %reduce_sum.22537 = f32[] add(%reduce_sum.22535, %reduce_sum.22536)
}

%region_475.22538.clone (reduce_sum.1035: f32[], reduce_sum.1036: f32[]) -> f32[] {
  %reduce_sum.1035 = f32[] parameter(0)
  %reduce_sum.1036 = f32[] parameter(1)
  ROOT %reduce_sum.1037 = f32[] add(%reduce_sum.1035, %reduce_sum.1036)
}

%add.54.clone (x.109: bf16[], y.109: bf16[]) -> bf16[] {
  %x.109 = bf16[] parameter(0)
  %y.109 = bf16[] parameter(1)
  ROOT %add.1538 = bf16[] add(%x.109, %y.109)
}

%region_476.22549 (reduce_sum.22546: f32[], reduce_sum.22547: f32[]) -> f32[] {
  %reduce_sum.22546 = f32[] parameter(0)
  %reduce_sum.22547 = f32[] parameter(1)
  ROOT %reduce_sum.22548 = f32[] add(%reduce_sum.22546, %reduce_sum.22547)
}

%region_476.22549.clone (reduce_sum.1038: f32[], reduce_sum.1039: f32[]) -> f32[] {
  %reduce_sum.1038 = f32[] parameter(0)
  %reduce_sum.1039 = f32[] parameter(1)
  ROOT %reduce_sum.1040 = f32[] add(%reduce_sum.1038, %reduce_sum.1039)
}

%add.55.clone (x.111: bf16[], y.111: bf16[]) -> bf16[] {
  %x.111 = bf16[] parameter(0)
  %y.111 = bf16[] parameter(1)
  ROOT %add.1543 = bf16[] add(%x.111, %y.111)
}

%region_477.22559 (reduce_sum.22556: f32[], reduce_sum.22557: f32[]) -> f32[] {
  %reduce_sum.22556 = f32[] parameter(0)
  %reduce_sum.22557 = f32[] parameter(1)
  ROOT %reduce_sum.22558 = f32[] add(%reduce_sum.22556, %reduce_sum.22557)
}

%region_477.22559.clone (reduce_sum.1041: f32[], reduce_sum.1042: f32[]) -> f32[] {
  %reduce_sum.1041 = f32[] parameter(0)
  %reduce_sum.1042 = f32[] parameter(1)
  ROOT %reduce_sum.1043 = f32[] add(%reduce_sum.1041, %reduce_sum.1042)
}

%add.56.clone (x.113: bf16[], y.113: bf16[]) -> bf16[] {
  %x.113 = bf16[] parameter(0)
  %y.113 = bf16[] parameter(1)
  ROOT %add.1545 = bf16[] add(%x.113, %y.113)
}

%region_478.22575 (reduce_sum.22572: f32[], reduce_sum.108: f32[]) -> f32[] {
  %reduce_sum.22572 = f32[] parameter(0)
  %reduce_sum.108 = f32[] parameter(1)
  ROOT %reduce_sum.22574 = f32[] add(%reduce_sum.22572, %reduce_sum.108)
}

%region_478.22575.clone (reduce_sum.1044: f32[], reduce_sum.1045: f32[]) -> f32[] {
  %reduce_sum.1044 = f32[] parameter(0)
  %reduce_sum.1045 = f32[] parameter(1)
  ROOT %reduce_sum.1046 = f32[] add(%reduce_sum.1044, %reduce_sum.1045)
}

%add.57.clone (x.115: bf16[], y.115: bf16[]) -> bf16[] {
  %x.115 = bf16[] parameter(0)
  %y.115 = bf16[] parameter(1)
  ROOT %add.1547 = bf16[] add(%x.115, %y.115)
}

%region_479.22584 (reduce_sum.109: f32[], reduce_sum.22582: f32[]) -> f32[] {
  %reduce_sum.109 = f32[] parameter(0)
  %reduce_sum.22582 = f32[] parameter(1)
  ROOT %reduce_sum.22583 = f32[] add(%reduce_sum.109, %reduce_sum.22582)
}

%region_479.22584.clone (reduce_sum.1047: f32[], reduce_sum.1048: f32[]) -> f32[] {
  %reduce_sum.1047 = f32[] parameter(0)
  %reduce_sum.1048 = f32[] parameter(1)
  ROOT %reduce_sum.1049 = f32[] add(%reduce_sum.1047, %reduce_sum.1048)
}

%add.58.clone (x.117: bf16[], y.117: bf16[]) -> bf16[] {
  %x.117 = bf16[] parameter(0)
  %y.117 = bf16[] parameter(1)
  ROOT %add.1549 = bf16[] add(%x.117, %y.117)
}

%region_480.22595 (reduce_sum.22592: f32[], reduce_sum.110: f32[]) -> f32[] {
  %reduce_sum.22592 = f32[] parameter(0)
  %reduce_sum.110 = f32[] parameter(1)
  ROOT %reduce_sum.22594 = f32[] add(%reduce_sum.22592, %reduce_sum.110)
}

%region_480.22595.clone (reduce_sum.1050: f32[], reduce_sum.1051: f32[]) -> f32[] {
  %reduce_sum.1050 = f32[] parameter(0)
  %reduce_sum.1051 = f32[] parameter(1)
  ROOT %reduce_sum.1052 = f32[] add(%reduce_sum.1050, %reduce_sum.1051)
}

%region_481.22602 (reduce_sum.22599: bf16[], reduce_sum.22600: bf16[]) -> bf16[] {
  %reduce_sum.22599 = bf16[] parameter(0)
  %reduce_sum.22600 = bf16[] parameter(1)
  ROOT %reduce_sum.22601 = bf16[] add(%reduce_sum.22599, %reduce_sum.22600)
}

%region_481.22602.clone (reduce_sum.1056: bf16[], reduce_sum.1058: bf16[]) -> bf16[] {
  %reduce_sum.1056 = bf16[] parameter(0)
  %reduce_sum.1058 = bf16[] parameter(1)
  ROOT %reduce_sum.1059 = bf16[] add(%reduce_sum.1056, %reduce_sum.1058)
}

%region_482.22609 (reduce_sum.22606: f32[], reduce_sum.22607: f32[]) -> f32[] {
  %reduce_sum.22606 = f32[] parameter(0)
  %reduce_sum.22607 = f32[] parameter(1)
  ROOT %reduce_sum.22608 = f32[] add(%reduce_sum.22606, %reduce_sum.22607)
}

%region_483.22620 (reduce_sum.22617: bf16[], reduce_sum.22618: bf16[]) -> bf16[] {
  %reduce_sum.22617 = bf16[] parameter(0)
  %reduce_sum.22618 = bf16[] parameter(1)
  ROOT %reduce_sum.22619 = bf16[] add(%reduce_sum.22617, %reduce_sum.22618)
}

%region_483.22620.clone (reduce_sum.1060: bf16[], reduce_sum.1061: bf16[]) -> bf16[] {
  %reduce_sum.1060 = bf16[] parameter(0)
  %reduce_sum.1061 = bf16[] parameter(1)
  ROOT %reduce_sum.1062 = bf16[] add(%reduce_sum.1060, %reduce_sum.1061)
}

%region_484.22627 (reduce_sum.22624: f32[], reduce_sum.22625: f32[]) -> f32[] {
  %reduce_sum.22624 = f32[] parameter(0)
  %reduce_sum.22625 = f32[] parameter(1)
  ROOT %reduce_sum.22626 = f32[] add(%reduce_sum.22624, %reduce_sum.22625)
}

%add.59.clone (x.119: bf16[], y.119: bf16[]) -> bf16[] {
  %x.119 = bf16[] parameter(0)
  %y.119 = bf16[] parameter(1)
  ROOT %add.1551 = bf16[] add(%x.119, %y.119)
}

%region_485.22641 (reduce_sum.22638: f32[], reduce_sum.22639: f32[]) -> f32[] {
  %reduce_sum.22638 = f32[] parameter(0)
  %reduce_sum.22639 = f32[] parameter(1)
  ROOT %reduce_sum.22640 = f32[] add(%reduce_sum.22638, %reduce_sum.22639)
}

%region_485.22641.clone (reduce_sum.1063: f32[], reduce_sum.1064: f32[]) -> f32[] {
  %reduce_sum.1063 = f32[] parameter(0)
  %reduce_sum.1064 = f32[] parameter(1)
  ROOT %reduce_sum.1065 = f32[] add(%reduce_sum.1063, %reduce_sum.1064)
}

%add.60.clone (x.121: bf16[], y.121: bf16[]) -> bf16[] {
  %x.121 = bf16[] parameter(0)
  %y.121 = bf16[] parameter(1)
  ROOT %add.1553 = bf16[] add(%x.121, %y.121)
}

%region_486.22651 (reduce_sum.22648: f32[], reduce_sum.22649: f32[]) -> f32[] {
  %reduce_sum.22648 = f32[] parameter(0)
  %reduce_sum.22649 = f32[] parameter(1)
  ROOT %reduce_sum.22650 = f32[] add(%reduce_sum.22648, %reduce_sum.22649)
}

%region_486.22651.clone (reduce_sum.1066: f32[], reduce_sum.1067: f32[]) -> f32[] {
  %reduce_sum.1066 = f32[] parameter(0)
  %reduce_sum.1067 = f32[] parameter(1)
  ROOT %reduce_sum.1068 = f32[] add(%reduce_sum.1066, %reduce_sum.1067)
}

%add.61.clone (x.123: bf16[], y.123: bf16[]) -> bf16[] {
  %x.123 = bf16[] parameter(0)
  %y.123 = bf16[] parameter(1)
  ROOT %add.1555 = bf16[] add(%x.123, %y.123)
}

%region_487.22662 (reduce_sum.22659: f32[], reduce_sum.22660: f32[]) -> f32[] {
  %reduce_sum.22659 = f32[] parameter(0)
  %reduce_sum.22660 = f32[] parameter(1)
  ROOT %reduce_sum.22661 = f32[] add(%reduce_sum.22659, %reduce_sum.22660)
}

%region_487.22662.clone (reduce_sum.1069: f32[], reduce_sum.1070: f32[]) -> f32[] {
  %reduce_sum.1069 = f32[] parameter(0)
  %reduce_sum.1070 = f32[] parameter(1)
  ROOT %reduce_sum.1071 = f32[] add(%reduce_sum.1069, %reduce_sum.1070)
}

%add.62.clone (x.125: bf16[], y.125: bf16[]) -> bf16[] {
  %x.125 = bf16[] parameter(0)
  %y.125 = bf16[] parameter(1)
  ROOT %add.1558 = bf16[] add(%x.125, %y.125)
}

%region_488.22672 (reduce_sum.22669: f32[], reduce_sum.22670: f32[]) -> f32[] {
  %reduce_sum.22669 = f32[] parameter(0)
  %reduce_sum.22670 = f32[] parameter(1)
  ROOT %reduce_sum.22671 = f32[] add(%reduce_sum.22669, %reduce_sum.22670)
}

%region_488.22672.clone (reduce_sum.1072: f32[], reduce_sum.1073: f32[]) -> f32[] {
  %reduce_sum.1072 = f32[] parameter(0)
  %reduce_sum.1073 = f32[] parameter(1)
  ROOT %reduce_sum.1074 = f32[] add(%reduce_sum.1072, %reduce_sum.1073)
}

%add.63.clone (x.127: bf16[], y.127: bf16[]) -> bf16[] {
  %x.127 = bf16[] parameter(0)
  %y.127 = bf16[] parameter(1)
  ROOT %add.1560 = bf16[] add(%x.127, %y.127)
}

%region_489.22688 (reduce_sum.22685: f32[], reduce_sum.22686: f32[]) -> f32[] {
  %reduce_sum.22685 = f32[] parameter(0)
  %reduce_sum.22686 = f32[] parameter(1)
  ROOT %reduce_sum.22687 = f32[] add(%reduce_sum.22685, %reduce_sum.22686)
}

%region_489.22688.clone (reduce_sum.1075: f32[], reduce_sum.1076: f32[]) -> f32[] {
  %reduce_sum.1075 = f32[] parameter(0)
  %reduce_sum.1076 = f32[] parameter(1)
  ROOT %reduce_sum.1077 = f32[] add(%reduce_sum.1075, %reduce_sum.1076)
}

%add.64.clone (x.129: bf16[], y.129: bf16[]) -> bf16[] {
  %x.129 = bf16[] parameter(0)
  %y.129 = bf16[] parameter(1)
  ROOT %add.1565 = bf16[] add(%x.129, %y.129)
}

%region_490.22697 (reduce_sum.22694: f32[], reduce_sum.22695: f32[]) -> f32[] {
  %reduce_sum.22694 = f32[] parameter(0)
  %reduce_sum.22695 = f32[] parameter(1)
  ROOT %reduce_sum.22696 = f32[] add(%reduce_sum.22694, %reduce_sum.22695)
}

%region_490.22697.clone (reduce_sum.1078: f32[], reduce_sum.1079: f32[]) -> f32[] {
  %reduce_sum.1078 = f32[] parameter(0)
  %reduce_sum.1079 = f32[] parameter(1)
  ROOT %reduce_sum.1080 = f32[] add(%reduce_sum.1078, %reduce_sum.1079)
}

%add.65.clone (x.131: bf16[], y.131: bf16[]) -> bf16[] {
  %x.131 = bf16[] parameter(0)
  %y.131 = bf16[] parameter(1)
  ROOT %add.1567 = bf16[] add(%x.131, %y.131)
}

%region_491.22708 (reduce_sum.22705: f32[], reduce_sum.22706: f32[]) -> f32[] {
  %reduce_sum.22705 = f32[] parameter(0)
  %reduce_sum.22706 = f32[] parameter(1)
  ROOT %reduce_sum.22707 = f32[] add(%reduce_sum.22705, %reduce_sum.22706)
}

%region_491.22708.clone (reduce_sum.1081: f32[], reduce_sum.1082: f32[]) -> f32[] {
  %reduce_sum.1081 = f32[] parameter(0)
  %reduce_sum.1082 = f32[] parameter(1)
  ROOT %reduce_sum.1083 = f32[] add(%reduce_sum.1081, %reduce_sum.1082)
}

%region_492.22715 (reduce_sum.22712: bf16[], reduce_sum.22713: bf16[]) -> bf16[] {
  %reduce_sum.22712 = bf16[] parameter(0)
  %reduce_sum.22713 = bf16[] parameter(1)
  ROOT %reduce_sum.22714 = bf16[] add(%reduce_sum.22712, %reduce_sum.22713)
}

%region_492.22715.clone (reduce_sum.1084: bf16[], reduce_sum.1085: bf16[]) -> bf16[] {
  %reduce_sum.1084 = bf16[] parameter(0)
  %reduce_sum.1085 = bf16[] parameter(1)
  ROOT %reduce_sum.1086 = bf16[] add(%reduce_sum.1084, %reduce_sum.1085)
}

%region_493.22722 (reduce_sum.22719: f32[], reduce_sum.22720: f32[]) -> f32[] {
  %reduce_sum.22719 = f32[] parameter(0)
  %reduce_sum.22720 = f32[] parameter(1)
  ROOT %reduce_sum.22721 = f32[] add(%reduce_sum.22719, %reduce_sum.22720)
}

%region_494.22733 (reduce_sum.22730: bf16[], reduce_sum.22731: bf16[]) -> bf16[] {
  %reduce_sum.22730 = bf16[] parameter(0)
  %reduce_sum.22731 = bf16[] parameter(1)
  ROOT %reduce_sum.22732 = bf16[] add(%reduce_sum.22730, %reduce_sum.22731)
}

%region_494.22733.clone (reduce_sum.1087: bf16[], reduce_sum.1088: bf16[]) -> bf16[] {
  %reduce_sum.1087 = bf16[] parameter(0)
  %reduce_sum.1088 = bf16[] parameter(1)
  ROOT %reduce_sum.1089 = bf16[] add(%reduce_sum.1087, %reduce_sum.1088)
}

%region_495.22740 (reduce_sum.22737: f32[], reduce_sum.22738: f32[]) -> f32[] {
  %reduce_sum.22737 = f32[] parameter(0)
  %reduce_sum.22738 = f32[] parameter(1)
  ROOT %reduce_sum.22739 = f32[] add(%reduce_sum.22737, %reduce_sum.22738)
}

%add.66.clone (x.133: bf16[], y.133: bf16[]) -> bf16[] {
  %x.133 = bf16[] parameter(0)
  %y.133 = bf16[] parameter(1)
  ROOT %add.1569 = bf16[] add(%x.133, %y.133)
}

%region_496.22754 (reduce_sum.22751: f32[], reduce_sum.22752: f32[]) -> f32[] {
  %reduce_sum.22751 = f32[] parameter(0)
  %reduce_sum.22752 = f32[] parameter(1)
  ROOT %reduce_sum.22753 = f32[] add(%reduce_sum.22751, %reduce_sum.22752)
}

%region_496.22754.clone (reduce_sum.1090: f32[], reduce_sum.1091: f32[]) -> f32[] {
  %reduce_sum.1090 = f32[] parameter(0)
  %reduce_sum.1091 = f32[] parameter(1)
  ROOT %reduce_sum.1092 = f32[] add(%reduce_sum.1090, %reduce_sum.1091)
}

%add.67.clone (x.135: bf16[], y.135: bf16[]) -> bf16[] {
  %x.135 = bf16[] parameter(0)
  %y.135 = bf16[] parameter(1)
  ROOT %add.1571 = bf16[] add(%x.135, %y.135)
}

%region_497.22764 (reduce_sum.22761: f32[], reduce_sum.22762: f32[]) -> f32[] {
  %reduce_sum.22761 = f32[] parameter(0)
  %reduce_sum.22762 = f32[] parameter(1)
  ROOT %reduce_sum.22763 = f32[] add(%reduce_sum.22761, %reduce_sum.22762)
}

%region_497.22764.clone (reduce_sum.1093: f32[], reduce_sum.1094: f32[]) -> f32[] {
  %reduce_sum.1093 = f32[] parameter(0)
  %reduce_sum.1094 = f32[] parameter(1)
  ROOT %reduce_sum.1095 = f32[] add(%reduce_sum.1093, %reduce_sum.1094)
}

%add.68.clone (x.137: bf16[], y.137: bf16[]) -> bf16[] {
  %x.137 = bf16[] parameter(0)
  %y.137 = bf16[] parameter(1)
  ROOT %add.1573 = bf16[] add(%x.137, %y.137)
}

%region_498.22775 (reduce_sum.22772: f32[], reduce_sum.22773: f32[]) -> f32[] {
  %reduce_sum.22772 = f32[] parameter(0)
  %reduce_sum.22773 = f32[] parameter(1)
  ROOT %reduce_sum.22774 = f32[] add(%reduce_sum.22772, %reduce_sum.22773)
}

%region_498.22775.clone (reduce_sum.1096: f32[], reduce_sum.1097: f32[]) -> f32[] {
  %reduce_sum.1096 = f32[] parameter(0)
  %reduce_sum.1097 = f32[] parameter(1)
  ROOT %reduce_sum.1098 = f32[] add(%reduce_sum.1096, %reduce_sum.1097)
}

%add.69.clone (x.139: bf16[], y.139: bf16[]) -> bf16[] {
  %x.139 = bf16[] parameter(0)
  %y.139 = bf16[] parameter(1)
  ROOT %add.1575 = bf16[] add(%x.139, %y.139)
}

%region_499.22785 (reduce_sum.22782: f32[], reduce_sum.22783: f32[]) -> f32[] {
  %reduce_sum.22782 = f32[] parameter(0)
  %reduce_sum.22783 = f32[] parameter(1)
  ROOT %reduce_sum.22784 = f32[] add(%reduce_sum.22782, %reduce_sum.22783)
}

%region_499.22785.clone (reduce_sum.1099: f32[], reduce_sum.1100: f32[]) -> f32[] {
  %reduce_sum.1099 = f32[] parameter(0)
  %reduce_sum.1100 = f32[] parameter(1)
  ROOT %reduce_sum.1101 = f32[] add(%reduce_sum.1099, %reduce_sum.1100)
}

%add.70.clone (x.141: bf16[], y.141: bf16[]) -> bf16[] {
  %x.141 = bf16[] parameter(0)
  %y.141 = bf16[] parameter(1)
  ROOT %add.1577 = bf16[] add(%x.141, %y.141)
}

%region_500.22801 (reduce_sum.22798: f32[], reduce_sum.22799: f32[]) -> f32[] {
  %reduce_sum.22798 = f32[] parameter(0)
  %reduce_sum.22799 = f32[] parameter(1)
  ROOT %reduce_sum.22800 = f32[] add(%reduce_sum.22798, %reduce_sum.22799)
}

%region_500.22801.clone (reduce_sum.1102: f32[], reduce_sum.1103: f32[]) -> f32[] {
  %reduce_sum.1102 = f32[] parameter(0)
  %reduce_sum.1103 = f32[] parameter(1)
  ROOT %reduce_sum.1104 = f32[] add(%reduce_sum.1102, %reduce_sum.1103)
}

%add.71.clone (x.143: bf16[], y.143: bf16[]) -> bf16[] {
  %x.143 = bf16[] parameter(0)
  %y.143 = bf16[] parameter(1)
  ROOT %add.1579 = bf16[] add(%x.143, %y.143)
}

%region_501.22810 (reduce_sum.22807: f32[], reduce_sum.22808: f32[]) -> f32[] {
  %reduce_sum.22807 = f32[] parameter(0)
  %reduce_sum.22808 = f32[] parameter(1)
  ROOT %reduce_sum.22809 = f32[] add(%reduce_sum.22807, %reduce_sum.22808)
}

%region_501.22810.clone (reduce_sum.1105: f32[], reduce_sum.1106: f32[]) -> f32[] {
  %reduce_sum.1105 = f32[] parameter(0)
  %reduce_sum.1106 = f32[] parameter(1)
  ROOT %reduce_sum.1107 = f32[] add(%reduce_sum.1105, %reduce_sum.1106)
}

%add.72.clone (x.145: bf16[], y.145: bf16[]) -> bf16[] {
  %x.145 = bf16[] parameter(0)
  %y.145 = bf16[] parameter(1)
  ROOT %add.1581 = bf16[] add(%x.145, %y.145)
}

%region_502.22821 (reduce_sum.22818: f32[], reduce_sum.22819: f32[]) -> f32[] {
  %reduce_sum.22818 = f32[] parameter(0)
  %reduce_sum.22819 = f32[] parameter(1)
  ROOT %reduce_sum.22820 = f32[] add(%reduce_sum.22818, %reduce_sum.22819)
}

%region_502.22821.clone (reduce_sum.1108: f32[], reduce_sum.1109: f32[]) -> f32[] {
  %reduce_sum.1108 = f32[] parameter(0)
  %reduce_sum.1109 = f32[] parameter(1)
  ROOT %reduce_sum.1110 = f32[] add(%reduce_sum.1108, %reduce_sum.1109)
}

%region_503.22828 (reduce_sum.22825: bf16[], reduce_sum.22826: bf16[]) -> bf16[] {
  %reduce_sum.22825 = bf16[] parameter(0)
  %reduce_sum.22826 = bf16[] parameter(1)
  ROOT %reduce_sum.22827 = bf16[] add(%reduce_sum.22825, %reduce_sum.22826)
}

%region_503.22828.clone (reduce_sum.1111: bf16[], reduce_sum.1112: bf16[]) -> bf16[] {
  %reduce_sum.1111 = bf16[] parameter(0)
  %reduce_sum.1112 = bf16[] parameter(1)
  ROOT %reduce_sum.1113 = bf16[] add(%reduce_sum.1111, %reduce_sum.1112)
}

%region_504.22835 (reduce_sum.22832: f32[], reduce_sum.22833: f32[]) -> f32[] {
  %reduce_sum.22832 = f32[] parameter(0)
  %reduce_sum.22833 = f32[] parameter(1)
  ROOT %reduce_sum.22834 = f32[] add(%reduce_sum.22832, %reduce_sum.22833)
}

%region_505.22846 (reduce_sum.111: bf16[], reduce_sum.22844: bf16[]) -> bf16[] {
  %reduce_sum.111 = bf16[] parameter(0)
  %reduce_sum.22844 = bf16[] parameter(1)
  ROOT %reduce_sum.22845 = bf16[] add(%reduce_sum.111, %reduce_sum.22844)
}

%region_505.22846.clone (reduce_sum.1114: bf16[], reduce_sum.1115: bf16[]) -> bf16[] {
  %reduce_sum.1114 = bf16[] parameter(0)
  %reduce_sum.1115 = bf16[] parameter(1)
  ROOT %reduce_sum.1116 = bf16[] add(%reduce_sum.1114, %reduce_sum.1115)
}

%region_506.22853 (reduce_sum.22850: f32[], reduce_sum.112: f32[]) -> f32[] {
  %reduce_sum.22850 = f32[] parameter(0)
  %reduce_sum.112 = f32[] parameter(1)
  ROOT %reduce_sum.22852 = f32[] add(%reduce_sum.22850, %reduce_sum.112)
}

%add.73.clone (x.147: bf16[], y.147: bf16[]) -> bf16[] {
  %x.147 = bf16[] parameter(0)
  %y.147 = bf16[] parameter(1)
  ROOT %add.1586 = bf16[] add(%x.147, %y.147)
}

%region_507.22867 (reduce_sum.113: f32[], reduce_sum.114: f32[]) -> f32[] {
  %reduce_sum.113 = f32[] parameter(0)
  %reduce_sum.114 = f32[] parameter(1)
  ROOT %reduce_sum.115 = f32[] add(%reduce_sum.113, %reduce_sum.114)
}

%region_507.22867.clone (reduce_sum.1117: f32[], reduce_sum.1118: f32[]) -> f32[] {
  %reduce_sum.1117 = f32[] parameter(0)
  %reduce_sum.1118 = f32[] parameter(1)
  ROOT %reduce_sum.1119 = f32[] add(%reduce_sum.1117, %reduce_sum.1118)
}

%add.74.clone (x.149: bf16[], y.149: bf16[]) -> bf16[] {
  %x.149 = bf16[] parameter(0)
  %y.149 = bf16[] parameter(1)
  ROOT %add.1588 = bf16[] add(%x.149, %y.149)
}

%region_508.22877 (reduce_sum.22874: f32[], reduce_sum.22875: f32[]) -> f32[] {
  %reduce_sum.22874 = f32[] parameter(0)
  %reduce_sum.22875 = f32[] parameter(1)
  ROOT %reduce_sum.22876 = f32[] add(%reduce_sum.22874, %reduce_sum.22875)
}

%region_508.22877.clone (reduce_sum.1120: f32[], reduce_sum.1121: f32[]) -> f32[] {
  %reduce_sum.1120 = f32[] parameter(0)
  %reduce_sum.1121 = f32[] parameter(1)
  ROOT %reduce_sum.1122 = f32[] add(%reduce_sum.1120, %reduce_sum.1121)
}

%add.75.clone (x.151: bf16[], y.151: bf16[]) -> bf16[] {
  %x.151 = bf16[] parameter(0)
  %y.151 = bf16[] parameter(1)
  ROOT %add.1590 = bf16[] add(%x.151, %y.151)
}

%region_509.22888 (reduce_sum.22885: f32[], reduce_sum.22886: f32[]) -> f32[] {
  %reduce_sum.22885 = f32[] parameter(0)
  %reduce_sum.22886 = f32[] parameter(1)
  ROOT %reduce_sum.22887 = f32[] add(%reduce_sum.22885, %reduce_sum.22886)
}

%region_509.22888.clone (reduce_sum.1123: f32[], reduce_sum.1124: f32[]) -> f32[] {
  %reduce_sum.1123 = f32[] parameter(0)
  %reduce_sum.1124 = f32[] parameter(1)
  ROOT %reduce_sum.1125 = f32[] add(%reduce_sum.1123, %reduce_sum.1124)
}

%add.76.clone (x.153: bf16[], y.153: bf16[]) -> bf16[] {
  %x.153 = bf16[] parameter(0)
  %y.153 = bf16[] parameter(1)
  ROOT %add.1592 = bf16[] add(%x.153, %y.153)
}

%region_510.22898 (reduce_sum.22895: f32[], reduce_sum.22896: f32[]) -> f32[] {
  %reduce_sum.22895 = f32[] parameter(0)
  %reduce_sum.22896 = f32[] parameter(1)
  ROOT %reduce_sum.22897 = f32[] add(%reduce_sum.22895, %reduce_sum.22896)
}

%region_510.22898.clone (reduce_sum.1126: f32[], reduce_sum.1127: f32[]) -> f32[] {
  %reduce_sum.1126 = f32[] parameter(0)
  %reduce_sum.1127 = f32[] parameter(1)
  ROOT %reduce_sum.1128 = f32[] add(%reduce_sum.1126, %reduce_sum.1127)
}

%add.77.clone (x.155: bf16[], y.155: bf16[]) -> bf16[] {
  %x.155 = bf16[] parameter(0)
  %y.155 = bf16[] parameter(1)
  ROOT %add.1594 = bf16[] add(%x.155, %y.155)
}

%region_511.22914 (reduce_sum.22911: f32[], reduce_sum.22912: f32[]) -> f32[] {
  %reduce_sum.22911 = f32[] parameter(0)
  %reduce_sum.22912 = f32[] parameter(1)
  ROOT %reduce_sum.22913 = f32[] add(%reduce_sum.22911, %reduce_sum.22912)
}

%region_511.22914.clone (reduce_sum.1129: f32[], reduce_sum.1130: f32[]) -> f32[] {
  %reduce_sum.1129 = f32[] parameter(0)
  %reduce_sum.1130 = f32[] parameter(1)
  ROOT %reduce_sum.1131 = f32[] add(%reduce_sum.1129, %reduce_sum.1130)
}

%add.78.clone (x.157: bf16[], y.157: bf16[]) -> bf16[] {
  %x.157 = bf16[] parameter(0)
  %y.157 = bf16[] parameter(1)
  ROOT %add.1596 = bf16[] add(%x.157, %y.157)
}

%region_512.22923 (reduce_sum.22920: f32[], reduce_sum.116: f32[]) -> f32[] {
  %reduce_sum.22920 = f32[] parameter(0)
  %reduce_sum.116 = f32[] parameter(1)
  ROOT %reduce_sum.22922 = f32[] add(%reduce_sum.22920, %reduce_sum.116)
}

%region_512.22923.clone (reduce_sum.1132: f32[], reduce_sum.1133: f32[]) -> f32[] {
  %reduce_sum.1132 = f32[] parameter(0)
  %reduce_sum.1133 = f32[] parameter(1)
  ROOT %reduce_sum.1134 = f32[] add(%reduce_sum.1132, %reduce_sum.1133)
}

%add.79.clone (x.159: bf16[], y.159: bf16[]) -> bf16[] {
  %x.159 = bf16[] parameter(0)
  %y.159 = bf16[] parameter(1)
  ROOT %add.1598 = bf16[] add(%x.159, %y.159)
}

%region_513.22934 (reduce_sum.117: f32[], reduce_sum.22932: f32[]) -> f32[] {
  %reduce_sum.117 = f32[] parameter(0)
  %reduce_sum.22932 = f32[] parameter(1)
  ROOT %reduce_sum.22933 = f32[] add(%reduce_sum.117, %reduce_sum.22932)
}

%region_513.22934.clone (reduce_sum.1135: f32[], reduce_sum.1136: f32[]) -> f32[] {
  %reduce_sum.1135 = f32[] parameter(0)
  %reduce_sum.1136 = f32[] parameter(1)
  ROOT %reduce_sum.1137 = f32[] add(%reduce_sum.1135, %reduce_sum.1136)
}

%region_514.22941 (reduce_sum.22938: bf16[], reduce_sum.118: bf16[]) -> bf16[] {
  %reduce_sum.22938 = bf16[] parameter(0)
  %reduce_sum.118 = bf16[] parameter(1)
  ROOT %reduce_sum.22940 = bf16[] add(%reduce_sum.22938, %reduce_sum.118)
}

%region_514.22941.clone (reduce_sum.1138: bf16[], reduce_sum.1139: bf16[]) -> bf16[] {
  %reduce_sum.1138 = bf16[] parameter(0)
  %reduce_sum.1139 = bf16[] parameter(1)
  ROOT %reduce_sum.1140 = bf16[] add(%reduce_sum.1138, %reduce_sum.1139)
}

%region_515.22948 (reduce_sum.22945: f32[], reduce_sum.22946: f32[]) -> f32[] {
  %reduce_sum.22945 = f32[] parameter(0)
  %reduce_sum.22946 = f32[] parameter(1)
  ROOT %reduce_sum.119 = f32[] add(%reduce_sum.22945, %reduce_sum.22946)
}

%region_516.22959 (reduce_sum.22956: bf16[], reduce_sum.22957: bf16[]) -> bf16[] {
  %reduce_sum.22956 = bf16[] parameter(0)
  %reduce_sum.22957 = bf16[] parameter(1)
  ROOT %reduce_sum.22958 = bf16[] add(%reduce_sum.22956, %reduce_sum.22957)
}

%region_516.22959.clone (reduce_sum.1141: bf16[], reduce_sum.1142: bf16[]) -> bf16[] {
  %reduce_sum.1141 = bf16[] parameter(0)
  %reduce_sum.1142 = bf16[] parameter(1)
  ROOT %reduce_sum.1143 = bf16[] add(%reduce_sum.1141, %reduce_sum.1142)
}

%region_517.22966 (reduce_sum.22963: f32[], reduce_sum.22964: f32[]) -> f32[] {
  %reduce_sum.22963 = f32[] parameter(0)
  %reduce_sum.22964 = f32[] parameter(1)
  ROOT %reduce_sum.22965 = f32[] add(%reduce_sum.22963, %reduce_sum.22964)
}

%add.80.clone (x.161: bf16[], y.161: bf16[]) -> bf16[] {
  %x.161 = bf16[] parameter(0)
  %y.161 = bf16[] parameter(1)
  ROOT %add.1600 = bf16[] add(%x.161, %y.161)
}

%region_518.22980 (reduce_sum.22977: f32[], reduce_sum.22978: f32[]) -> f32[] {
  %reduce_sum.22977 = f32[] parameter(0)
  %reduce_sum.22978 = f32[] parameter(1)
  ROOT %reduce_sum.22979 = f32[] add(%reduce_sum.22977, %reduce_sum.22978)
}

%region_518.22980.clone (reduce_sum.1144: f32[], reduce_sum.1145: f32[]) -> f32[] {
  %reduce_sum.1144 = f32[] parameter(0)
  %reduce_sum.1145 = f32[] parameter(1)
  ROOT %reduce_sum.1146 = f32[] add(%reduce_sum.1144, %reduce_sum.1145)
}

%add.81.clone (x.163: bf16[], y.163: bf16[]) -> bf16[] {
  %x.163 = bf16[] parameter(0)
  %y.163 = bf16[] parameter(1)
  ROOT %add.1602 = bf16[] add(%x.163, %y.163)
}

%region_519.22990 (reduce_sum.22987: f32[], reduce_sum.22988: f32[]) -> f32[] {
  %reduce_sum.22987 = f32[] parameter(0)
  %reduce_sum.22988 = f32[] parameter(1)
  ROOT %reduce_sum.22989 = f32[] add(%reduce_sum.22987, %reduce_sum.22988)
}

%region_519.22990.clone (reduce_sum.1147: f32[], reduce_sum.1148: f32[]) -> f32[] {
  %reduce_sum.1147 = f32[] parameter(0)
  %reduce_sum.1148 = f32[] parameter(1)
  ROOT %reduce_sum.1149 = f32[] add(%reduce_sum.1147, %reduce_sum.1148)
}

%add.82.clone (x.165: bf16[], y.165: bf16[]) -> bf16[] {
  %x.165 = bf16[] parameter(0)
  %y.165 = bf16[] parameter(1)
  ROOT %add.1607 = bf16[] add(%x.165, %y.165)
}

%region_520.23001 (reduce_sum.22998: f32[], reduce_sum.22999: f32[]) -> f32[] {
  %reduce_sum.22998 = f32[] parameter(0)
  %reduce_sum.22999 = f32[] parameter(1)
  ROOT %reduce_sum.23000 = f32[] add(%reduce_sum.22998, %reduce_sum.22999)
}

%region_520.23001.clone (reduce_sum.1150: f32[], reduce_sum.1151: f32[]) -> f32[] {
  %reduce_sum.1150 = f32[] parameter(0)
  %reduce_sum.1151 = f32[] parameter(1)
  ROOT %reduce_sum.1152 = f32[] add(%reduce_sum.1150, %reduce_sum.1151)
}

%add.83.clone (x.167: bf16[], y.167: bf16[]) -> bf16[] {
  %x.167 = bf16[] parameter(0)
  %y.167 = bf16[] parameter(1)
  ROOT %add.1609 = bf16[] add(%x.167, %y.167)
}

%region_521.23011 (reduce_sum.23008: f32[], reduce_sum.23009: f32[]) -> f32[] {
  %reduce_sum.23008 = f32[] parameter(0)
  %reduce_sum.23009 = f32[] parameter(1)
  ROOT %reduce_sum.23010 = f32[] add(%reduce_sum.23008, %reduce_sum.23009)
}

%region_521.23011.clone (reduce_sum.1153: f32[], reduce_sum.1154: f32[]) -> f32[] {
  %reduce_sum.1153 = f32[] parameter(0)
  %reduce_sum.1154 = f32[] parameter(1)
  ROOT %reduce_sum.1155 = f32[] add(%reduce_sum.1153, %reduce_sum.1154)
}

%add.84.clone (x.169: bf16[], y.169: bf16[]) -> bf16[] {
  %x.169 = bf16[] parameter(0)
  %y.169 = bf16[] parameter(1)
  ROOT %add.1611 = bf16[] add(%x.169, %y.169)
}

%region_522.23027 (reduce_sum.23024: f32[], reduce_sum.23025: f32[]) -> f32[] {
  %reduce_sum.23024 = f32[] parameter(0)
  %reduce_sum.23025 = f32[] parameter(1)
  ROOT %reduce_sum.23026 = f32[] add(%reduce_sum.23024, %reduce_sum.23025)
}

%region_522.23027.clone (reduce_sum.1156: f32[], reduce_sum.1157: f32[]) -> f32[] {
  %reduce_sum.1156 = f32[] parameter(0)
  %reduce_sum.1157 = f32[] parameter(1)
  ROOT %reduce_sum.1158 = f32[] add(%reduce_sum.1156, %reduce_sum.1157)
}

%add.85.clone (x.171: bf16[], y.171: bf16[]) -> bf16[] {
  %x.171 = bf16[] parameter(0)
  %y.171 = bf16[] parameter(1)
  ROOT %add.1613 = bf16[] add(%x.171, %y.171)
}

%region_523.23036 (reduce_sum.23033: f32[], reduce_sum.23034: f32[]) -> f32[] {
  %reduce_sum.23033 = f32[] parameter(0)
  %reduce_sum.23034 = f32[] parameter(1)
  ROOT %reduce_sum.23035 = f32[] add(%reduce_sum.23033, %reduce_sum.23034)
}

%region_523.23036.clone (reduce_sum.1159: f32[], reduce_sum.1160: f32[]) -> f32[] {
  %reduce_sum.1159 = f32[] parameter(0)
  %reduce_sum.1160 = f32[] parameter(1)
  ROOT %reduce_sum.1161 = f32[] add(%reduce_sum.1159, %reduce_sum.1160)
}

%add.86.clone (x.173: bf16[], y.173: bf16[]) -> bf16[] {
  %x.173 = bf16[] parameter(0)
  %y.173 = bf16[] parameter(1)
  ROOT %add.1616 = bf16[] add(%x.173, %y.173)
}

%region_524.23047 (reduce_sum.23044: f32[], reduce_sum.23045: f32[]) -> f32[] {
  %reduce_sum.23044 = f32[] parameter(0)
  %reduce_sum.23045 = f32[] parameter(1)
  ROOT %reduce_sum.23046 = f32[] add(%reduce_sum.23044, %reduce_sum.23045)
}

%region_524.23047.clone (reduce_sum.1162: f32[], reduce_sum.1163: f32[]) -> f32[] {
  %reduce_sum.1162 = f32[] parameter(0)
  %reduce_sum.1163 = f32[] parameter(1)
  ROOT %reduce_sum.1164 = f32[] add(%reduce_sum.1162, %reduce_sum.1163)
}

%region_525.23054 (reduce_sum.120: bf16[], reduce_sum.121: bf16[]) -> bf16[] {
  %reduce_sum.120 = bf16[] parameter(0)
  %reduce_sum.121 = bf16[] parameter(1)
  ROOT %reduce_sum.122 = bf16[] add(%reduce_sum.120, %reduce_sum.121)
}

%region_525.23054.clone (reduce_sum.1165: bf16[], reduce_sum.1166: bf16[]) -> bf16[] {
  %reduce_sum.1165 = bf16[] parameter(0)
  %reduce_sum.1166 = bf16[] parameter(1)
  ROOT %reduce_sum.1167 = bf16[] add(%reduce_sum.1165, %reduce_sum.1166)
}

%region_526.23061 (reduce_sum.23058: f32[], reduce_sum.23059: f32[]) -> f32[] {
  %reduce_sum.23058 = f32[] parameter(0)
  %reduce_sum.23059 = f32[] parameter(1)
  ROOT %reduce_sum.23060 = f32[] add(%reduce_sum.23058, %reduce_sum.23059)
}

%region_527.23072 (reduce_sum.123: bf16[], reduce_sum.124: bf16[]) -> bf16[] {
  %reduce_sum.123 = bf16[] parameter(0)
  %reduce_sum.124 = bf16[] parameter(1)
  ROOT %reduce_sum.125 = bf16[] add(%reduce_sum.123, %reduce_sum.124)
}

%region_527.23072.clone (reduce_sum.1168: bf16[], reduce_sum.1169: bf16[]) -> bf16[] {
  %reduce_sum.1168 = bf16[] parameter(0)
  %reduce_sum.1169 = bf16[] parameter(1)
  ROOT %reduce_sum.1170 = bf16[] add(%reduce_sum.1168, %reduce_sum.1169)
}

%region_528.23079 (reduce_sum.23076: f32[], reduce_sum.23077: f32[]) -> f32[] {
  %reduce_sum.23076 = f32[] parameter(0)
  %reduce_sum.23077 = f32[] parameter(1)
  ROOT %reduce_sum.23078 = f32[] add(%reduce_sum.23076, %reduce_sum.23077)
}

%add.87.clone (x.175: bf16[], y.175: bf16[]) -> bf16[] {
  %x.175 = bf16[] parameter(0)
  %y.175 = bf16[] parameter(1)
  ROOT %add.1618 = bf16[] add(%x.175, %y.175)
}

%region_529.23093 (reduce_sum.23090: f32[], reduce_sum.23091: f32[]) -> f32[] {
  %reduce_sum.23090 = f32[] parameter(0)
  %reduce_sum.23091 = f32[] parameter(1)
  ROOT %reduce_sum.23092 = f32[] add(%reduce_sum.23090, %reduce_sum.23091)
}

%region_529.23093.clone (reduce_sum.1171: f32[], reduce_sum.1172: f32[]) -> f32[] {
  %reduce_sum.1171 = f32[] parameter(0)
  %reduce_sum.1172 = f32[] parameter(1)
  ROOT %reduce_sum.1173 = f32[] add(%reduce_sum.1171, %reduce_sum.1172)
}

%add.88.clone (x.177: bf16[], y.177: bf16[]) -> bf16[] {
  %x.177 = bf16[] parameter(0)
  %y.177 = bf16[] parameter(1)
  ROOT %add.1620 = bf16[] add(%x.177, %y.177)
}

%region_530.23103 (reduce_sum.23100: f32[], reduce_sum.23101: f32[]) -> f32[] {
  %reduce_sum.23100 = f32[] parameter(0)
  %reduce_sum.23101 = f32[] parameter(1)
  ROOT %reduce_sum.23102 = f32[] add(%reduce_sum.23100, %reduce_sum.23101)
}

%region_530.23103.clone (reduce_sum.1174: f32[], reduce_sum.1175: f32[]) -> f32[] {
  %reduce_sum.1174 = f32[] parameter(0)
  %reduce_sum.1175 = f32[] parameter(1)
  ROOT %reduce_sum.1176 = f32[] add(%reduce_sum.1174, %reduce_sum.1175)
}

%add.89.clone (x.179: bf16[], y.179: bf16[]) -> bf16[] {
  %x.179 = bf16[] parameter(0)
  %y.179 = bf16[] parameter(1)
  ROOT %add.1622 = bf16[] add(%x.179, %y.179)
}

%region_531.23114 (reduce_sum.23111: f32[], reduce_sum.23112: f32[]) -> f32[] {
  %reduce_sum.23111 = f32[] parameter(0)
  %reduce_sum.23112 = f32[] parameter(1)
  ROOT %reduce_sum.23113 = f32[] add(%reduce_sum.23111, %reduce_sum.23112)
}

%region_531.23114.clone (reduce_sum.1177: f32[], reduce_sum.1178: f32[]) -> f32[] {
  %reduce_sum.1177 = f32[] parameter(0)
  %reduce_sum.1178 = f32[] parameter(1)
  ROOT %reduce_sum.1179 = f32[] add(%reduce_sum.1177, %reduce_sum.1178)
}

%add.90.clone (x.181: bf16[], y.181: bf16[]) -> bf16[] {
  %x.181 = bf16[] parameter(0)
  %y.181 = bf16[] parameter(1)
  ROOT %add.1627 = bf16[] add(%x.181, %y.181)
}

%region_532.23124 (reduce_sum.23121: f32[], reduce_sum.126: f32[]) -> f32[] {
  %reduce_sum.23121 = f32[] parameter(0)
  %reduce_sum.126 = f32[] parameter(1)
  ROOT %reduce_sum.127 = f32[] add(%reduce_sum.23121, %reduce_sum.126)
}

%region_532.23124.clone (reduce_sum.1180: f32[], reduce_sum.1181: f32[]) -> f32[] {
  %reduce_sum.1180 = f32[] parameter(0)
  %reduce_sum.1181 = f32[] parameter(1)
  ROOT %reduce_sum.1182 = f32[] add(%reduce_sum.1180, %reduce_sum.1181)
}

%add.91.clone (x.183: bf16[], y.183: bf16[]) -> bf16[] {
  %x.183 = bf16[] parameter(0)
  %y.183 = bf16[] parameter(1)
  ROOT %add.1629 = bf16[] add(%x.183, %y.183)
}

%region_533.23140 (reduce_sum.23137: f32[], reduce_sum.23138: f32[]) -> f32[] {
  %reduce_sum.23137 = f32[] parameter(0)
  %reduce_sum.23138 = f32[] parameter(1)
  ROOT %reduce_sum.23139 = f32[] add(%reduce_sum.23137, %reduce_sum.23138)
}

%region_533.23140.clone (reduce_sum.1183: f32[], reduce_sum.1184: f32[]) -> f32[] {
  %reduce_sum.1183 = f32[] parameter(0)
  %reduce_sum.1184 = f32[] parameter(1)
  ROOT %reduce_sum.1185 = f32[] add(%reduce_sum.1183, %reduce_sum.1184)
}

%add.92.clone (x.185: bf16[], y.185: bf16[]) -> bf16[] {
  %x.185 = bf16[] parameter(0)
  %y.185 = bf16[] parameter(1)
  ROOT %add.1631 = bf16[] add(%x.185, %y.185)
}

%region_534.23149 (reduce_sum.23146: f32[], reduce_sum.23147: f32[]) -> f32[] {
  %reduce_sum.23146 = f32[] parameter(0)
  %reduce_sum.23147 = f32[] parameter(1)
  ROOT %reduce_sum.23148 = f32[] add(%reduce_sum.23146, %reduce_sum.23147)
}

%region_534.23149.clone (reduce_sum.1186: f32[], reduce_sum.1187: f32[]) -> f32[] {
  %reduce_sum.1186 = f32[] parameter(0)
  %reduce_sum.1187 = f32[] parameter(1)
  ROOT %reduce_sum.1188 = f32[] add(%reduce_sum.1186, %reduce_sum.1187)
}

%add.93.clone (x.187: bf16[], y.187: bf16[]) -> bf16[] {
  %x.187 = bf16[] parameter(0)
  %y.187 = bf16[] parameter(1)
  ROOT %add.1633 = bf16[] add(%x.187, %y.187)
}

%region_535.23160 (reduce_sum.23157: f32[], reduce_sum.23158: f32[]) -> f32[] {
  %reduce_sum.23157 = f32[] parameter(0)
  %reduce_sum.23158 = f32[] parameter(1)
  ROOT %reduce_sum.23159 = f32[] add(%reduce_sum.23157, %reduce_sum.23158)
}

%region_535.23160.clone (reduce_sum.1189: f32[], reduce_sum.1190: f32[]) -> f32[] {
  %reduce_sum.1189 = f32[] parameter(0)
  %reduce_sum.1190 = f32[] parameter(1)
  ROOT %reduce_sum.1191 = f32[] add(%reduce_sum.1189, %reduce_sum.1190)
}

%region_536.23167 (reduce_sum.23164: bf16[], reduce_sum.23165: bf16[]) -> bf16[] {
  %reduce_sum.23164 = bf16[] parameter(0)
  %reduce_sum.23165 = bf16[] parameter(1)
  ROOT %reduce_sum.23166 = bf16[] add(%reduce_sum.23164, %reduce_sum.23165)
}

%region_536.23167.clone (reduce_sum.1192: bf16[], reduce_sum.1193: bf16[]) -> bf16[] {
  %reduce_sum.1192 = bf16[] parameter(0)
  %reduce_sum.1193 = bf16[] parameter(1)
  ROOT %reduce_sum.1194 = bf16[] add(%reduce_sum.1192, %reduce_sum.1193)
}

%region_537.23174 (reduce_sum.23171: f32[], reduce_sum.23172: f32[]) -> f32[] {
  %reduce_sum.23171 = f32[] parameter(0)
  %reduce_sum.23172 = f32[] parameter(1)
  ROOT %reduce_sum.23173 = f32[] add(%reduce_sum.23171, %reduce_sum.23172)
}

%region_538.23185 (reduce_sum.23182: bf16[], reduce_sum.23183: bf16[]) -> bf16[] {
  %reduce_sum.23182 = bf16[] parameter(0)
  %reduce_sum.23183 = bf16[] parameter(1)
  ROOT %reduce_sum.23184 = bf16[] add(%reduce_sum.23182, %reduce_sum.23183)
}

%region_538.23185.clone (reduce_sum.1195: bf16[], reduce_sum.1196: bf16[]) -> bf16[] {
  %reduce_sum.1195 = bf16[] parameter(0)
  %reduce_sum.1196 = bf16[] parameter(1)
  ROOT %reduce_sum.1197 = bf16[] add(%reduce_sum.1195, %reduce_sum.1196)
}

%region_539.23192 (reduce_sum.23189: f32[], reduce_sum.23190: f32[]) -> f32[] {
  %reduce_sum.23189 = f32[] parameter(0)
  %reduce_sum.23190 = f32[] parameter(1)
  ROOT %reduce_sum.23191 = f32[] add(%reduce_sum.23189, %reduce_sum.23190)
}

%add.94.clone (x.189: bf16[], y.189: bf16[]) -> bf16[] {
  %x.189 = bf16[] parameter(0)
  %y.189 = bf16[] parameter(1)
  ROOT %add.1635 = bf16[] add(%x.189, %y.189)
}

%region_540.23206 (reduce_sum.23203: f32[], reduce_sum.23204: f32[]) -> f32[] {
  %reduce_sum.23203 = f32[] parameter(0)
  %reduce_sum.23204 = f32[] parameter(1)
  ROOT %reduce_sum.23205 = f32[] add(%reduce_sum.23203, %reduce_sum.23204)
}

%region_540.23206.clone (reduce_sum.1198: f32[], reduce_sum.1199: f32[]) -> f32[] {
  %reduce_sum.1198 = f32[] parameter(0)
  %reduce_sum.1199 = f32[] parameter(1)
  ROOT %reduce_sum.1200 = f32[] add(%reduce_sum.1198, %reduce_sum.1199)
}

%add.95.clone (x.191: bf16[], y.191: bf16[]) -> bf16[] {
  %x.191 = bf16[] parameter(0)
  %y.191 = bf16[] parameter(1)
  ROOT %add.1637 = bf16[] add(%x.191, %y.191)
}

%region_541.23216 (reduce_sum.23213: f32[], reduce_sum.23214: f32[]) -> f32[] {
  %reduce_sum.23213 = f32[] parameter(0)
  %reduce_sum.23214 = f32[] parameter(1)
  ROOT %reduce_sum.23215 = f32[] add(%reduce_sum.23213, %reduce_sum.23214)
}

%region_541.23216.clone (reduce_sum.1201: f32[], reduce_sum.1202: f32[]) -> f32[] {
  %reduce_sum.1201 = f32[] parameter(0)
  %reduce_sum.1202 = f32[] parameter(1)
  ROOT %reduce_sum.1203 = f32[] add(%reduce_sum.1201, %reduce_sum.1202)
}

%add.96.clone (x.193: bf16[], y.193: bf16[]) -> bf16[] {
  %x.193 = bf16[] parameter(0)
  %y.193 = bf16[] parameter(1)
  ROOT %add.1639 = bf16[] add(%x.193, %y.193)
}

%region_542.23227 (reduce_sum.23224: f32[], reduce_sum.23225: f32[]) -> f32[] {
  %reduce_sum.23224 = f32[] parameter(0)
  %reduce_sum.23225 = f32[] parameter(1)
  ROOT %reduce_sum.23226 = f32[] add(%reduce_sum.23224, %reduce_sum.23225)
}

%region_542.23227.clone (reduce_sum.1204: f32[], reduce_sum.1205: f32[]) -> f32[] {
  %reduce_sum.1204 = f32[] parameter(0)
  %reduce_sum.1205 = f32[] parameter(1)
  ROOT %reduce_sum.1206 = f32[] add(%reduce_sum.1204, %reduce_sum.1205)
}

%add.97.clone (x.195: bf16[], y.195: bf16[]) -> bf16[] {
  %x.195 = bf16[] parameter(0)
  %y.195 = bf16[] parameter(1)
  ROOT %add.1641 = bf16[] add(%x.195, %y.195)
}

%region_543.23237 (reduce_sum.23234: f32[], reduce_sum.23235: f32[]) -> f32[] {
  %reduce_sum.23234 = f32[] parameter(0)
  %reduce_sum.23235 = f32[] parameter(1)
  ROOT %reduce_sum.23236 = f32[] add(%reduce_sum.23234, %reduce_sum.23235)
}

%region_543.23237.clone (reduce_sum.1207: f32[], reduce_sum.1208: f32[]) -> f32[] {
  %reduce_sum.1207 = f32[] parameter(0)
  %reduce_sum.1208 = f32[] parameter(1)
  ROOT %reduce_sum.1209 = f32[] add(%reduce_sum.1207, %reduce_sum.1208)
}

%add.98.clone (x.197: bf16[], y.197: bf16[]) -> bf16[] {
  %x.197 = bf16[] parameter(0)
  %y.197 = bf16[] parameter(1)
  ROOT %add.1643 = bf16[] add(%x.197, %y.197)
}

%region_544.23253 (reduce_sum.23250: f32[], reduce_sum.23251: f32[]) -> f32[] {
  %reduce_sum.23250 = f32[] parameter(0)
  %reduce_sum.23251 = f32[] parameter(1)
  ROOT %reduce_sum.23252 = f32[] add(%reduce_sum.23250, %reduce_sum.23251)
}

%region_544.23253.clone (reduce_sum.1210: f32[], reduce_sum.1211: f32[]) -> f32[] {
  %reduce_sum.1210 = f32[] parameter(0)
  %reduce_sum.1211 = f32[] parameter(1)
  ROOT %reduce_sum.1212 = f32[] add(%reduce_sum.1210, %reduce_sum.1211)
}

%add.99.clone (x.199: bf16[], y.199: bf16[]) -> bf16[] {
  %x.199 = bf16[] parameter(0)
  %y.199 = bf16[] parameter(1)
  ROOT %add.1648 = bf16[] add(%x.199, %y.199)
}

%region_545.23262 (reduce_sum.23259: f32[], reduce_sum.23260: f32[]) -> f32[] {
  %reduce_sum.23259 = f32[] parameter(0)
  %reduce_sum.23260 = f32[] parameter(1)
  ROOT %reduce_sum.23261 = f32[] add(%reduce_sum.23259, %reduce_sum.23260)
}

%region_545.23262.clone (reduce_sum.1213: f32[], reduce_sum.1214: f32[]) -> f32[] {
  %reduce_sum.1213 = f32[] parameter(0)
  %reduce_sum.1214 = f32[] parameter(1)
  ROOT %reduce_sum.1215 = f32[] add(%reduce_sum.1213, %reduce_sum.1214)
}

%add.100.clone (x.201: bf16[], y.201: bf16[]) -> bf16[] {
  %x.201 = bf16[] parameter(0)
  %y.201 = bf16[] parameter(1)
  ROOT %add.1650 = bf16[] add(%x.201, %y.201)
}

%region_546.23273 (reduce_sum.23270: f32[], reduce_sum.23271: f32[]) -> f32[] {
  %reduce_sum.23270 = f32[] parameter(0)
  %reduce_sum.23271 = f32[] parameter(1)
  ROOT %reduce_sum.23272 = f32[] add(%reduce_sum.23270, %reduce_sum.23271)
}

%region_546.23273.clone (reduce_sum.1216: f32[], reduce_sum.1217: f32[]) -> f32[] {
  %reduce_sum.1216 = f32[] parameter(0)
  %reduce_sum.1217 = f32[] parameter(1)
  ROOT %reduce_sum.1218 = f32[] add(%reduce_sum.1216, %reduce_sum.1217)
}

%region_547.23280 (reduce_sum.23277: bf16[], reduce_sum.23278: bf16[]) -> bf16[] {
  %reduce_sum.23277 = bf16[] parameter(0)
  %reduce_sum.23278 = bf16[] parameter(1)
  ROOT %reduce_sum.23279 = bf16[] add(%reduce_sum.23277, %reduce_sum.23278)
}

%region_547.23280.clone (reduce_sum.1219: bf16[], reduce_sum.1220: bf16[]) -> bf16[] {
  %reduce_sum.1219 = bf16[] parameter(0)
  %reduce_sum.1220 = bf16[] parameter(1)
  ROOT %reduce_sum.1221 = bf16[] add(%reduce_sum.1219, %reduce_sum.1220)
}

%region_548.23287 (reduce_sum.23284: f32[], reduce_sum.23285: f32[]) -> f32[] {
  %reduce_sum.23284 = f32[] parameter(0)
  %reduce_sum.23285 = f32[] parameter(1)
  ROOT %reduce_sum.23286 = f32[] add(%reduce_sum.23284, %reduce_sum.23285)
}

%region_549.23298 (reduce_sum.23295: bf16[], reduce_sum.23296: bf16[]) -> bf16[] {
  %reduce_sum.23295 = bf16[] parameter(0)
  %reduce_sum.23296 = bf16[] parameter(1)
  ROOT %reduce_sum.23297 = bf16[] add(%reduce_sum.23295, %reduce_sum.23296)
}

%region_549.23298.clone (reduce_sum.1222: bf16[], reduce_sum.1223: bf16[]) -> bf16[] {
  %reduce_sum.1222 = bf16[] parameter(0)
  %reduce_sum.1223 = bf16[] parameter(1)
  ROOT %reduce_sum.1224 = bf16[] add(%reduce_sum.1222, %reduce_sum.1223)
}

%region_550.23305 (reduce_sum.23302: f32[], reduce_sum.23303: f32[]) -> f32[] {
  %reduce_sum.23302 = f32[] parameter(0)
  %reduce_sum.23303 = f32[] parameter(1)
  ROOT %reduce_sum.23304 = f32[] add(%reduce_sum.23302, %reduce_sum.23303)
}

%add.101.clone (x.203: bf16[], y.203: bf16[]) -> bf16[] {
  %x.203 = bf16[] parameter(0)
  %y.203 = bf16[] parameter(1)
  ROOT %add.1653 = bf16[] add(%x.203, %y.203)
}

%region_551.23319 (reduce_sum.23316: f32[], reduce_sum.23317: f32[]) -> f32[] {
  %reduce_sum.23316 = f32[] parameter(0)
  %reduce_sum.23317 = f32[] parameter(1)
  ROOT %reduce_sum.23318 = f32[] add(%reduce_sum.23316, %reduce_sum.23317)
}

%region_551.23319.clone (reduce_sum.1225: f32[], reduce_sum.1226: f32[]) -> f32[] {
  %reduce_sum.1225 = f32[] parameter(0)
  %reduce_sum.1226 = f32[] parameter(1)
  ROOT %reduce_sum.1227 = f32[] add(%reduce_sum.1225, %reduce_sum.1226)
}

%add.102.clone (x.205: bf16[], y.205: bf16[]) -> bf16[] {
  %x.205 = bf16[] parameter(0)
  %y.205 = bf16[] parameter(1)
  ROOT %add.1655 = bf16[] add(%x.205, %y.205)
}

%region_552.23329 (reduce_sum.23326: f32[], reduce_sum.23327: f32[]) -> f32[] {
  %reduce_sum.23326 = f32[] parameter(0)
  %reduce_sum.23327 = f32[] parameter(1)
  ROOT %reduce_sum.23328 = f32[] add(%reduce_sum.23326, %reduce_sum.23327)
}

%region_552.23329.clone (reduce_sum.1228: f32[], reduce_sum.1229: f32[]) -> f32[] {
  %reduce_sum.1228 = f32[] parameter(0)
  %reduce_sum.1229 = f32[] parameter(1)
  ROOT %reduce_sum.1230 = f32[] add(%reduce_sum.1228, %reduce_sum.1229)
}

%add.103.clone (x.207: bf16[], y.207: bf16[]) -> bf16[] {
  %x.207 = bf16[] parameter(0)
  %y.207 = bf16[] parameter(1)
  ROOT %add.1657 = bf16[] add(%x.207, %y.207)
}

%region_553.23340 (reduce_sum.23337: f32[], reduce_sum.23338: f32[]) -> f32[] {
  %reduce_sum.23337 = f32[] parameter(0)
  %reduce_sum.23338 = f32[] parameter(1)
  ROOT %reduce_sum.128 = f32[] add(%reduce_sum.23337, %reduce_sum.23338)
}

%region_553.23340.clone (reduce_sum.1231: f32[], reduce_sum.1232: f32[]) -> f32[] {
  %reduce_sum.1231 = f32[] parameter(0)
  %reduce_sum.1232 = f32[] parameter(1)
  ROOT %reduce_sum.1233 = f32[] add(%reduce_sum.1231, %reduce_sum.1232)
}

%add.104.clone (x.209: bf16[], y.209: bf16[]) -> bf16[] {
  %x.209 = bf16[] parameter(0)
  %y.209 = bf16[] parameter(1)
  ROOT %add.1659 = bf16[] add(%x.209, %y.209)
}

%region_554.23350 (reduce_sum.23347: f32[], reduce_sum.23348: f32[]) -> f32[] {
  %reduce_sum.23347 = f32[] parameter(0)
  %reduce_sum.23348 = f32[] parameter(1)
  ROOT %reduce_sum.23349 = f32[] add(%reduce_sum.23347, %reduce_sum.23348)
}

%region_554.23350.clone (reduce_sum.1234: f32[], reduce_sum.1235: f32[]) -> f32[] {
  %reduce_sum.1234 = f32[] parameter(0)
  %reduce_sum.1235 = f32[] parameter(1)
  ROOT %reduce_sum.1236 = f32[] add(%reduce_sum.1234, %reduce_sum.1235)
}

%add.105.clone (x.211: bf16[], y.211: bf16[]) -> bf16[] {
  %x.211 = bf16[] parameter(0)
  %y.211 = bf16[] parameter(1)
  ROOT %add.1661 = bf16[] add(%x.211, %y.211)
}

%region_555.23366 (reduce_sum.23363: f32[], reduce_sum.23364: f32[]) -> f32[] {
  %reduce_sum.23363 = f32[] parameter(0)
  %reduce_sum.23364 = f32[] parameter(1)
  ROOT %reduce_sum.23365 = f32[] add(%reduce_sum.23363, %reduce_sum.23364)
}

%region_555.23366.clone (reduce_sum.1237: f32[], reduce_sum.1238: f32[]) -> f32[] {
  %reduce_sum.1237 = f32[] parameter(0)
  %reduce_sum.1238 = f32[] parameter(1)
  ROOT %reduce_sum.1239 = f32[] add(%reduce_sum.1237, %reduce_sum.1238)
}

%add.106.clone (x.213: bf16[], y.213: bf16[]) -> bf16[] {
  %x.213 = bf16[] parameter(0)
  %y.213 = bf16[] parameter(1)
  ROOT %add.1664 = bf16[] add(%x.213, %y.213)
}

%region_556.23375 (reduce_sum.23372: f32[], reduce_sum.23373: f32[]) -> f32[] {
  %reduce_sum.23372 = f32[] parameter(0)
  %reduce_sum.23373 = f32[] parameter(1)
  ROOT %reduce_sum.23374 = f32[] add(%reduce_sum.23372, %reduce_sum.23373)
}

%region_556.23375.clone (reduce_sum.1240: f32[], reduce_sum.1241: f32[]) -> f32[] {
  %reduce_sum.1240 = f32[] parameter(0)
  %reduce_sum.1241 = f32[] parameter(1)
  ROOT %reduce_sum.1242 = f32[] add(%reduce_sum.1240, %reduce_sum.1241)
}

%add.107.clone (x.215: bf16[], y.215: bf16[]) -> bf16[] {
  %x.215 = bf16[] parameter(0)
  %y.215 = bf16[] parameter(1)
  ROOT %add.1669 = bf16[] add(%x.215, %y.215)
}

%region_557.23386 (reduce_sum.23383: f32[], reduce_sum.23384: f32[]) -> f32[] {
  %reduce_sum.23383 = f32[] parameter(0)
  %reduce_sum.23384 = f32[] parameter(1)
  ROOT %reduce_sum.23385 = f32[] add(%reduce_sum.23383, %reduce_sum.23384)
}

%region_557.23386.clone (reduce_sum.1243: f32[], reduce_sum.1244: f32[]) -> f32[] {
  %reduce_sum.1243 = f32[] parameter(0)
  %reduce_sum.1244 = f32[] parameter(1)
  ROOT %reduce_sum.1245 = f32[] add(%reduce_sum.1243, %reduce_sum.1244)
}

%region_558.23393 (reduce_sum.23390: bf16[], reduce_sum.23391: bf16[]) -> bf16[] {
  %reduce_sum.23390 = bf16[] parameter(0)
  %reduce_sum.23391 = bf16[] parameter(1)
  ROOT %reduce_sum.23392 = bf16[] add(%reduce_sum.23390, %reduce_sum.23391)
}

%region_558.23393.clone (reduce_sum.1246: bf16[], reduce_sum.1247: bf16[]) -> bf16[] {
  %reduce_sum.1246 = bf16[] parameter(0)
  %reduce_sum.1247 = bf16[] parameter(1)
  ROOT %reduce_sum.1248 = bf16[] add(%reduce_sum.1246, %reduce_sum.1247)
}

%region_559.23400 (reduce_sum.23397: f32[], reduce_sum.23398: f32[]) -> f32[] {
  %reduce_sum.23397 = f32[] parameter(0)
  %reduce_sum.23398 = f32[] parameter(1)
  ROOT %reduce_sum.23399 = f32[] add(%reduce_sum.23397, %reduce_sum.23398)
}

%region_560.23411 (reduce_sum.23408: bf16[], reduce_sum.129: bf16[]) -> bf16[] {
  %reduce_sum.23408 = bf16[] parameter(0)
  %reduce_sum.129 = bf16[] parameter(1)
  ROOT %reduce_sum.130 = bf16[] add(%reduce_sum.23408, %reduce_sum.129)
}

%region_560.23411.clone (reduce_sum.1249: bf16[], reduce_sum.1250: bf16[]) -> bf16[] {
  %reduce_sum.1249 = bf16[] parameter(0)
  %reduce_sum.1250 = bf16[] parameter(1)
  ROOT %reduce_sum.1251 = bf16[] add(%reduce_sum.1249, %reduce_sum.1250)
}

%region_561.23418 (reduce_sum.23415: f32[], reduce_sum.23416: f32[]) -> f32[] {
  %reduce_sum.23415 = f32[] parameter(0)
  %reduce_sum.23416 = f32[] parameter(1)
  ROOT %reduce_sum.23417 = f32[] add(%reduce_sum.23415, %reduce_sum.23416)
}

%add.108.clone (x.217: bf16[], y.217: bf16[]) -> bf16[] {
  %x.217 = bf16[] parameter(0)
  %y.217 = bf16[] parameter(1)
  ROOT %add.1671 = bf16[] add(%x.217, %y.217)
}

%region_562.23432 (reduce_sum.131: f32[], reduce_sum.23430: f32[]) -> f32[] {
  %reduce_sum.131 = f32[] parameter(0)
  %reduce_sum.23430 = f32[] parameter(1)
  ROOT %reduce_sum.132 = f32[] add(%reduce_sum.131, %reduce_sum.23430)
}

%region_562.23432.clone (reduce_sum.1252: f32[], reduce_sum.1253: f32[]) -> f32[] {
  %reduce_sum.1252 = f32[] parameter(0)
  %reduce_sum.1253 = f32[] parameter(1)
  ROOT %reduce_sum.1254 = f32[] add(%reduce_sum.1252, %reduce_sum.1253)
}

%add.109.clone (x.219: bf16[], y.219: bf16[]) -> bf16[] {
  %x.219 = bf16[] parameter(0)
  %y.219 = bf16[] parameter(1)
  ROOT %add.1673 = bf16[] add(%x.219, %y.219)
}

%region_563.23442 (reduce_sum.133: f32[], reduce_sum.134: f32[]) -> f32[] {
  %reduce_sum.133 = f32[] parameter(0)
  %reduce_sum.134 = f32[] parameter(1)
  ROOT %reduce_sum.135 = f32[] add(%reduce_sum.133, %reduce_sum.134)
}

%region_563.23442.clone (reduce_sum.1255: f32[], reduce_sum.1256: f32[]) -> f32[] {
  %reduce_sum.1255 = f32[] parameter(0)
  %reduce_sum.1256 = f32[] parameter(1)
  ROOT %reduce_sum.1257 = f32[] add(%reduce_sum.1255, %reduce_sum.1256)
}

%add.110.clone (x.221: bf16[], y.221: bf16[]) -> bf16[] {
  %x.221 = bf16[] parameter(0)
  %y.221 = bf16[] parameter(1)
  ROOT %add.1675 = bf16[] add(%x.221, %y.221)
}

%region_564.23453 (reduce_sum.23450: f32[], reduce_sum.23451: f32[]) -> f32[] {
  %reduce_sum.23450 = f32[] parameter(0)
  %reduce_sum.23451 = f32[] parameter(1)
  ROOT %reduce_sum.23452 = f32[] add(%reduce_sum.23450, %reduce_sum.23451)
}

%region_564.23453.clone (reduce_sum.1258: f32[], reduce_sum.1259: f32[]) -> f32[] {
  %reduce_sum.1258 = f32[] parameter(0)
  %reduce_sum.1259 = f32[] parameter(1)
  ROOT %reduce_sum.1260 = f32[] add(%reduce_sum.1258, %reduce_sum.1259)
}

%add.111.clone (x.223: bf16[], y.223: bf16[]) -> bf16[] {
  %x.223 = bf16[] parameter(0)
  %y.223 = bf16[] parameter(1)
  ROOT %add.1677 = bf16[] add(%x.223, %y.223)
}

%region_565.23463 (reduce_sum.23460: f32[], reduce_sum.23461: f32[]) -> f32[] {
  %reduce_sum.23460 = f32[] parameter(0)
  %reduce_sum.23461 = f32[] parameter(1)
  ROOT %reduce_sum.23462 = f32[] add(%reduce_sum.23460, %reduce_sum.23461)
}

%region_565.23463.clone (reduce_sum.1261: f32[], reduce_sum.1262: f32[]) -> f32[] {
  %reduce_sum.1261 = f32[] parameter(0)
  %reduce_sum.1262 = f32[] parameter(1)
  ROOT %reduce_sum.1263 = f32[] add(%reduce_sum.1261, %reduce_sum.1262)
}

%add.112.clone (x.225: bf16[], y.225: bf16[]) -> bf16[] {
  %x.225 = bf16[] parameter(0)
  %y.225 = bf16[] parameter(1)
  ROOT %add.1679 = bf16[] add(%x.225, %y.225)
}

%region_566.23479 (reduce_sum.23476: f32[], reduce_sum.23477: f32[]) -> f32[] {
  %reduce_sum.23476 = f32[] parameter(0)
  %reduce_sum.23477 = f32[] parameter(1)
  ROOT %reduce_sum.23478 = f32[] add(%reduce_sum.23476, %reduce_sum.23477)
}

%region_566.23479.clone (reduce_sum.1264: f32[], reduce_sum.1265: f32[]) -> f32[] {
  %reduce_sum.1264 = f32[] parameter(0)
  %reduce_sum.1265 = f32[] parameter(1)
  ROOT %reduce_sum.1266 = f32[] add(%reduce_sum.1264, %reduce_sum.1265)
}

%add.113.clone (x.227: bf16[], y.227: bf16[]) -> bf16[] {
  %x.227 = bf16[] parameter(0)
  %y.227 = bf16[] parameter(1)
  ROOT %add.1681 = bf16[] add(%x.227, %y.227)
}

%region_567.23488 (reduce_sum.23485: f32[], reduce_sum.23486: f32[]) -> f32[] {
  %reduce_sum.23485 = f32[] parameter(0)
  %reduce_sum.23486 = f32[] parameter(1)
  ROOT %reduce_sum.23487 = f32[] add(%reduce_sum.23485, %reduce_sum.23486)
}

%region_567.23488.clone (reduce_sum.1267: f32[], reduce_sum.1268: f32[]) -> f32[] {
  %reduce_sum.1267 = f32[] parameter(0)
  %reduce_sum.1268 = f32[] parameter(1)
  ROOT %reduce_sum.1269 = f32[] add(%reduce_sum.1267, %reduce_sum.1268)
}

%add.114.clone (x.229: bf16[], y.229: bf16[]) -> bf16[] {
  %x.229 = bf16[] parameter(0)
  %y.229 = bf16[] parameter(1)
  ROOT %add.1683 = bf16[] add(%x.229, %y.229)
}

%region_568.23499 (reduce_sum.23496: f32[], reduce_sum.23497: f32[]) -> f32[] {
  %reduce_sum.23496 = f32[] parameter(0)
  %reduce_sum.23497 = f32[] parameter(1)
  ROOT %reduce_sum.23498 = f32[] add(%reduce_sum.23496, %reduce_sum.23497)
}

%region_568.23499.clone (reduce_sum.1270: f32[], reduce_sum.1271: f32[]) -> f32[] {
  %reduce_sum.1270 = f32[] parameter(0)
  %reduce_sum.1271 = f32[] parameter(1)
  ROOT %reduce_sum.1272 = f32[] add(%reduce_sum.1270, %reduce_sum.1271)
}

%region_569.23506 (reduce_sum.23503: bf16[], reduce_sum.23504: bf16[]) -> bf16[] {
  %reduce_sum.23503 = bf16[] parameter(0)
  %reduce_sum.23504 = bf16[] parameter(1)
  ROOT %reduce_sum.23505 = bf16[] add(%reduce_sum.23503, %reduce_sum.23504)
}

%region_569.23506.clone (reduce_sum.1273: bf16[], reduce_sum.1274: bf16[]) -> bf16[] {
  %reduce_sum.1273 = bf16[] parameter(0)
  %reduce_sum.1274 = bf16[] parameter(1)
  ROOT %reduce_sum.1275 = bf16[] add(%reduce_sum.1273, %reduce_sum.1274)
}

%region_570.23513 (reduce_sum.23510: f32[], reduce_sum.23511: f32[]) -> f32[] {
  %reduce_sum.23510 = f32[] parameter(0)
  %reduce_sum.23511 = f32[] parameter(1)
  ROOT %reduce_sum.23512 = f32[] add(%reduce_sum.23510, %reduce_sum.23511)
}

%region_571.23524 (reduce_sum.23521: bf16[], reduce_sum.23522: bf16[]) -> bf16[] {
  %reduce_sum.23521 = bf16[] parameter(0)
  %reduce_sum.23522 = bf16[] parameter(1)
  ROOT %reduce_sum.23523 = bf16[] add(%reduce_sum.23521, %reduce_sum.23522)
}

%region_571.23524.clone (reduce_sum.1276: bf16[], reduce_sum.1277: bf16[]) -> bf16[] {
  %reduce_sum.1276 = bf16[] parameter(0)
  %reduce_sum.1277 = bf16[] parameter(1)
  ROOT %reduce_sum.1278 = bf16[] add(%reduce_sum.1276, %reduce_sum.1277)
}

%region_572.23531 (reduce_sum.23528: f32[], reduce_sum.23529: f32[]) -> f32[] {
  %reduce_sum.23528 = f32[] parameter(0)
  %reduce_sum.23529 = f32[] parameter(1)
  ROOT %reduce_sum.23530 = f32[] add(%reduce_sum.23528, %reduce_sum.23529)
}

%add.115.clone (x.231: bf16[], y.231: bf16[]) -> bf16[] {
  %x.231 = bf16[] parameter(0)
  %y.231 = bf16[] parameter(1)
  ROOT %add.1685 = bf16[] add(%x.231, %y.231)
}

%region_573.23545 (reduce_sum.23542: f32[], reduce_sum.136: f32[]) -> f32[] {
  %reduce_sum.23542 = f32[] parameter(0)
  %reduce_sum.136 = f32[] parameter(1)
  ROOT %reduce_sum.137 = f32[] add(%reduce_sum.23542, %reduce_sum.136)
}

%region_573.23545.clone (reduce_sum.1279: f32[], reduce_sum.1280: f32[]) -> f32[] {
  %reduce_sum.1279 = f32[] parameter(0)
  %reduce_sum.1280 = f32[] parameter(1)
  ROOT %reduce_sum.1281 = f32[] add(%reduce_sum.1279, %reduce_sum.1280)
}

%add.116.clone (x.233: bf16[], y.233: bf16[]) -> bf16[] {
  %x.233 = bf16[] parameter(0)
  %y.233 = bf16[] parameter(1)
  ROOT %add.1690 = bf16[] add(%x.233, %y.233)
}

%region_574.23555 (reduce_sum.23552: f32[], reduce_sum.138: f32[]) -> f32[] {
  %reduce_sum.23552 = f32[] parameter(0)
  %reduce_sum.138 = f32[] parameter(1)
  ROOT %reduce_sum.139 = f32[] add(%reduce_sum.23552, %reduce_sum.138)
}

%region_574.23555.clone (reduce_sum.1282: f32[], reduce_sum.1283: f32[]) -> f32[] {
  %reduce_sum.1282 = f32[] parameter(0)
  %reduce_sum.1283 = f32[] parameter(1)
  ROOT %reduce_sum.1284 = f32[] add(%reduce_sum.1282, %reduce_sum.1283)
}

%add.117.clone (x.235: bf16[], y.235: bf16[]) -> bf16[] {
  %x.235 = bf16[] parameter(0)
  %y.235 = bf16[] parameter(1)
  ROOT %add.1692 = bf16[] add(%x.235, %y.235)
}

%region_575.23566 (reduce_sum.140: f32[], reduce_sum.23564: f32[]) -> f32[] {
  %reduce_sum.140 = f32[] parameter(0)
  %reduce_sum.23564 = f32[] parameter(1)
  ROOT %reduce_sum.141 = f32[] add(%reduce_sum.140, %reduce_sum.23564)
}

%region_575.23566.clone (reduce_sum.1285: f32[], reduce_sum.1286: f32[]) -> f32[] {
  %reduce_sum.1285 = f32[] parameter(0)
  %reduce_sum.1286 = f32[] parameter(1)
  ROOT %reduce_sum.1287 = f32[] add(%reduce_sum.1285, %reduce_sum.1286)
}

%add.118.clone (x.237: bf16[], y.237: bf16[]) -> bf16[] {
  %x.237 = bf16[] parameter(0)
  %y.237 = bf16[] parameter(1)
  ROOT %add.1694 = bf16[] add(%x.237, %y.237)
}

%region_576.23576 (reduce_sum.142: f32[], reduce_sum.143: f32[]) -> f32[] {
  %reduce_sum.142 = f32[] parameter(0)
  %reduce_sum.143 = f32[] parameter(1)
  ROOT %reduce_sum.144 = f32[] add(%reduce_sum.142, %reduce_sum.143)
}

%region_576.23576.clone (reduce_sum.1288: f32[], reduce_sum.1289: f32[]) -> f32[] {
  %reduce_sum.1288 = f32[] parameter(0)
  %reduce_sum.1289 = f32[] parameter(1)
  ROOT %reduce_sum.1290 = f32[] add(%reduce_sum.1288, %reduce_sum.1289)
}

%add.119.clone (x.239: bf16[], y.239: bf16[]) -> bf16[] {
  %x.239 = bf16[] parameter(0)
  %y.239 = bf16[] parameter(1)
  ROOT %add.1696 = bf16[] add(%x.239, %y.239)
}

%region_577.23592 (reduce_sum.23589: f32[], reduce_sum.23590: f32[]) -> f32[] {
  %reduce_sum.23589 = f32[] parameter(0)
  %reduce_sum.23590 = f32[] parameter(1)
  ROOT %reduce_sum.23591 = f32[] add(%reduce_sum.23589, %reduce_sum.23590)
}

%region_577.23592.clone (reduce_sum.1291: f32[], reduce_sum.1292: f32[]) -> f32[] {
  %reduce_sum.1291 = f32[] parameter(0)
  %reduce_sum.1292 = f32[] parameter(1)
  ROOT %reduce_sum.1293 = f32[] add(%reduce_sum.1291, %reduce_sum.1292)
}

%add.120.clone (x.241: bf16[], y.241: bf16[]) -> bf16[] {
  %x.241 = bf16[] parameter(0)
  %y.241 = bf16[] parameter(1)
  ROOT %add.1698 = bf16[] add(%x.241, %y.241)
}

%region_578.23601 (reduce_sum.23598: f32[], reduce_sum.23599: f32[]) -> f32[] {
  %reduce_sum.23598 = f32[] parameter(0)
  %reduce_sum.23599 = f32[] parameter(1)
  ROOT %reduce_sum.23600 = f32[] add(%reduce_sum.23598, %reduce_sum.23599)
}

%region_578.23601.clone (reduce_sum.1294: f32[], reduce_sum.1295: f32[]) -> f32[] {
  %reduce_sum.1294 = f32[] parameter(0)
  %reduce_sum.1295 = f32[] parameter(1)
  ROOT %reduce_sum.1299 = f32[] add(%reduce_sum.1294, %reduce_sum.1295)
}

%add.121.clone (x.243: bf16[], y.243: bf16[]) -> bf16[] {
  %x.243 = bf16[] parameter(0)
  %y.243 = bf16[] parameter(1)
  ROOT %add.1700 = bf16[] add(%x.243, %y.243)
}

%region_579.23612 (reduce_sum.23609: f32[], reduce_sum.23610: f32[]) -> f32[] {
  %reduce_sum.23609 = f32[] parameter(0)
  %reduce_sum.23610 = f32[] parameter(1)
  ROOT %reduce_sum.23611 = f32[] add(%reduce_sum.23609, %reduce_sum.23610)
}

%region_579.23612.clone (reduce_sum.1301: f32[], reduce_sum.1302: f32[]) -> f32[] {
  %reduce_sum.1301 = f32[] parameter(0)
  %reduce_sum.1302 = f32[] parameter(1)
  ROOT %reduce_sum.1303 = f32[] add(%reduce_sum.1301, %reduce_sum.1302)
}

%region_580.23619 (reduce_sum.145: bf16[], reduce_sum.23617: bf16[]) -> bf16[] {
  %reduce_sum.145 = bf16[] parameter(0)
  %reduce_sum.23617 = bf16[] parameter(1)
  ROOT %reduce_sum.146 = bf16[] add(%reduce_sum.145, %reduce_sum.23617)
}

%region_580.23619.clone (reduce_sum.1307: bf16[], reduce_sum.1309: bf16[]) -> bf16[] {
  %reduce_sum.1307 = bf16[] parameter(0)
  %reduce_sum.1309 = bf16[] parameter(1)
  ROOT %reduce_sum.1310 = bf16[] add(%reduce_sum.1307, %reduce_sum.1309)
}

%region_581.23626 (reduce_sum.23623: f32[], reduce_sum.23624: f32[]) -> f32[] {
  %reduce_sum.23623 = f32[] parameter(0)
  %reduce_sum.23624 = f32[] parameter(1)
  ROOT %reduce_sum.23625 = f32[] add(%reduce_sum.23623, %reduce_sum.23624)
}

%region_582.23637 (reduce_sum.23634: bf16[], reduce_sum.23635: bf16[]) -> bf16[] {
  %reduce_sum.23634 = bf16[] parameter(0)
  %reduce_sum.23635 = bf16[] parameter(1)
  ROOT %reduce_sum.23636 = bf16[] add(%reduce_sum.23634, %reduce_sum.23635)
}

%region_582.23637.clone (reduce_sum.1311: bf16[], reduce_sum.1312: bf16[]) -> bf16[] {
  %reduce_sum.1311 = bf16[] parameter(0)
  %reduce_sum.1312 = bf16[] parameter(1)
  ROOT %reduce_sum.1313 = bf16[] add(%reduce_sum.1311, %reduce_sum.1312)
}

%region_583.23644 (reduce_sum.23641: f32[], reduce_sum.23642: f32[]) -> f32[] {
  %reduce_sum.23641 = f32[] parameter(0)
  %reduce_sum.23642 = f32[] parameter(1)
  ROOT %reduce_sum.23643 = f32[] add(%reduce_sum.23641, %reduce_sum.23642)
}

%add.122.clone (x.245: bf16[], y.245: bf16[]) -> bf16[] {
  %x.245 = bf16[] parameter(0)
  %y.245 = bf16[] parameter(1)
  ROOT %add.1702 = bf16[] add(%x.245, %y.245)
}

%region_584.23658 (reduce_sum.23655: f32[], reduce_sum.23656: f32[]) -> f32[] {
  %reduce_sum.23655 = f32[] parameter(0)
  %reduce_sum.23656 = f32[] parameter(1)
  ROOT %reduce_sum.23657 = f32[] add(%reduce_sum.23655, %reduce_sum.23656)
}

%region_584.23658.clone (reduce_sum.1314: f32[], reduce_sum.1315: f32[]) -> f32[] {
  %reduce_sum.1314 = f32[] parameter(0)
  %reduce_sum.1315 = f32[] parameter(1)
  ROOT %reduce_sum.1316 = f32[] add(%reduce_sum.1314, %reduce_sum.1315)
}

%add.123.clone (x.247: bf16[], y.247: bf16[]) -> bf16[] {
  %x.247 = bf16[] parameter(0)
  %y.247 = bf16[] parameter(1)
  ROOT %add.1704 = bf16[] add(%x.247, %y.247)
}

%region_585.23668 (reduce_sum.23665: f32[], reduce_sum.23666: f32[]) -> f32[] {
  %reduce_sum.23665 = f32[] parameter(0)
  %reduce_sum.23666 = f32[] parameter(1)
  ROOT %reduce_sum.23667 = f32[] add(%reduce_sum.23665, %reduce_sum.23666)
}

%region_585.23668.clone (reduce_sum.1317: f32[], reduce_sum.1318: f32[]) -> f32[] {
  %reduce_sum.1317 = f32[] parameter(0)
  %reduce_sum.1318 = f32[] parameter(1)
  ROOT %reduce_sum.1319 = f32[] add(%reduce_sum.1317, %reduce_sum.1318)
}

%add.124.clone (x.249: bf16[], y.249: bf16[]) -> bf16[] {
  %x.249 = bf16[] parameter(0)
  %y.249 = bf16[] parameter(1)
  ROOT %add.1706 = bf16[] add(%x.249, %y.249)
}

%region_586.23679 (reduce_sum.23676: f32[], reduce_sum.23677: f32[]) -> f32[] {
  %reduce_sum.23676 = f32[] parameter(0)
  %reduce_sum.23677 = f32[] parameter(1)
  ROOT %reduce_sum.23678 = f32[] add(%reduce_sum.23676, %reduce_sum.23677)
}

%region_586.23679.clone (reduce_sum.1320: f32[], reduce_sum.1321: f32[]) -> f32[] {
  %reduce_sum.1320 = f32[] parameter(0)
  %reduce_sum.1321 = f32[] parameter(1)
  ROOT %reduce_sum.1322 = f32[] add(%reduce_sum.1320, %reduce_sum.1321)
}

%add.125.clone (x.251: bf16[], y.251: bf16[]) -> bf16[] {
  %x.251 = bf16[] parameter(0)
  %y.251 = bf16[] parameter(1)
  ROOT %add.1711 = bf16[] add(%x.251, %y.251)
}

%region_587.23689 (reduce_sum.23686: f32[], reduce_sum.23687: f32[]) -> f32[] {
  %reduce_sum.23686 = f32[] parameter(0)
  %reduce_sum.23687 = f32[] parameter(1)
  ROOT %reduce_sum.23688 = f32[] add(%reduce_sum.23686, %reduce_sum.23687)
}

%region_587.23689.clone (reduce_sum.1323: f32[], reduce_sum.1324: f32[]) -> f32[] {
  %reduce_sum.1323 = f32[] parameter(0)
  %reduce_sum.1324 = f32[] parameter(1)
  ROOT %reduce_sum.1325 = f32[] add(%reduce_sum.1323, %reduce_sum.1324)
}

%add.126.clone (x.253: bf16[], y.253: bf16[]) -> bf16[] {
  %x.253 = bf16[] parameter(0)
  %y.253 = bf16[] parameter(1)
  ROOT %add.1713 = bf16[] add(%x.253, %y.253)
}

%region_588.23705 (reduce_sum.23702: f32[], reduce_sum.23703: f32[]) -> f32[] {
  %reduce_sum.23702 = f32[] parameter(0)
  %reduce_sum.23703 = f32[] parameter(1)
  ROOT %reduce_sum.23704 = f32[] add(%reduce_sum.23702, %reduce_sum.23703)
}

%region_588.23705.clone (reduce_sum.1326: f32[], reduce_sum.1327: f32[]) -> f32[] {
  %reduce_sum.1326 = f32[] parameter(0)
  %reduce_sum.1327 = f32[] parameter(1)
  ROOT %reduce_sum.1331 = f32[] add(%reduce_sum.1326, %reduce_sum.1327)
}

%add.127.clone (x.255: bf16[], y.255: bf16[]) -> bf16[] {
  %x.255 = bf16[] parameter(0)
  %y.255 = bf16[] parameter(1)
  ROOT %add.1715 = bf16[] add(%x.255, %y.255)
}

%region_589.23714 (reduce_sum.23711: f32[], reduce_sum.23712: f32[]) -> f32[] {
  %reduce_sum.23711 = f32[] parameter(0)
  %reduce_sum.23712 = f32[] parameter(1)
  ROOT %reduce_sum.23713 = f32[] add(%reduce_sum.23711, %reduce_sum.23712)
}

%region_589.23714.clone (reduce_sum.1333: f32[], reduce_sum.1334: f32[]) -> f32[] {
  %reduce_sum.1333 = f32[] parameter(0)
  %reduce_sum.1334 = f32[] parameter(1)
  ROOT %reduce_sum.1335 = f32[] add(%reduce_sum.1333, %reduce_sum.1334)
}

%add.128.clone (x.257: bf16[], y.257: bf16[]) -> bf16[] {
  %x.257 = bf16[] parameter(0)
  %y.257 = bf16[] parameter(1)
  ROOT %add.1717 = bf16[] add(%x.257, %y.257)
}

%region_590.23725 (reduce_sum.23722: f32[], reduce_sum.23723: f32[]) -> f32[] {
  %reduce_sum.23722 = f32[] parameter(0)
  %reduce_sum.23723 = f32[] parameter(1)
  ROOT %reduce_sum.23724 = f32[] add(%reduce_sum.23722, %reduce_sum.23723)
}

%region_590.23725.clone (reduce_sum.1336: f32[], reduce_sum.1337: f32[]) -> f32[] {
  %reduce_sum.1336 = f32[] parameter(0)
  %reduce_sum.1337 = f32[] parameter(1)
  ROOT %reduce_sum.1338 = f32[] add(%reduce_sum.1336, %reduce_sum.1337)
}

%region_591.23732 (reduce_sum.23729: bf16[], reduce_sum.23730: bf16[]) -> bf16[] {
  %reduce_sum.23729 = bf16[] parameter(0)
  %reduce_sum.23730 = bf16[] parameter(1)
  ROOT %reduce_sum.23731 = bf16[] add(%reduce_sum.23729, %reduce_sum.23730)
}

%region_591.23732.clone (reduce_sum.1339: bf16[], reduce_sum.1340: bf16[]) -> bf16[] {
  %reduce_sum.1339 = bf16[] parameter(0)
  %reduce_sum.1340 = bf16[] parameter(1)
  ROOT %reduce_sum.1341 = bf16[] add(%reduce_sum.1339, %reduce_sum.1340)
}

%region_592.23739 (reduce_sum.23736: f32[], reduce_sum.23737: f32[]) -> f32[] {
  %reduce_sum.23736 = f32[] parameter(0)
  %reduce_sum.23737 = f32[] parameter(1)
  ROOT %reduce_sum.23738 = f32[] add(%reduce_sum.23736, %reduce_sum.23737)
}

%region_593.23750 (reduce_sum.23747: bf16[], reduce_sum.23748: bf16[]) -> bf16[] {
  %reduce_sum.23747 = bf16[] parameter(0)
  %reduce_sum.23748 = bf16[] parameter(1)
  ROOT %reduce_sum.23749 = bf16[] add(%reduce_sum.23747, %reduce_sum.23748)
}

%region_593.23750.clone (reduce_sum.1342: bf16[], reduce_sum.1343: bf16[]) -> bf16[] {
  %reduce_sum.1342 = bf16[] parameter(0)
  %reduce_sum.1343 = bf16[] parameter(1)
  ROOT %reduce_sum.1344 = bf16[] add(%reduce_sum.1342, %reduce_sum.1343)
}

%region_594.23757 (reduce_sum.23754: f32[], reduce_sum.23755: f32[]) -> f32[] {
  %reduce_sum.23754 = f32[] parameter(0)
  %reduce_sum.23755 = f32[] parameter(1)
  ROOT %reduce_sum.23756 = f32[] add(%reduce_sum.23754, %reduce_sum.23755)
}

%add.129.clone (x.259: bf16[], y.259: bf16[]) -> bf16[] {
  %x.259 = bf16[] parameter(0)
  %y.259 = bf16[] parameter(1)
  ROOT %add.1719 = bf16[] add(%x.259, %y.259)
}

%region_595.23771 (reduce_sum.23768: f32[], reduce_sum.23769: f32[]) -> f32[] {
  %reduce_sum.23768 = f32[] parameter(0)
  %reduce_sum.23769 = f32[] parameter(1)
  ROOT %reduce_sum.23770 = f32[] add(%reduce_sum.23768, %reduce_sum.23769)
}

%region_595.23771.clone (reduce_sum.1345: f32[], reduce_sum.1346: f32[]) -> f32[] {
  %reduce_sum.1345 = f32[] parameter(0)
  %reduce_sum.1346 = f32[] parameter(1)
  ROOT %reduce_sum.1347 = f32[] add(%reduce_sum.1345, %reduce_sum.1346)
}

%add.130.clone (x.261: bf16[], y.261: bf16[]) -> bf16[] {
  %x.261 = bf16[] parameter(0)
  %y.261 = bf16[] parameter(1)
  ROOT %add.1721 = bf16[] add(%x.261, %y.261)
}

%region_596.23781 (reduce_sum.23778: f32[], reduce_sum.23779: f32[]) -> f32[] {
  %reduce_sum.23778 = f32[] parameter(0)
  %reduce_sum.23779 = f32[] parameter(1)
  ROOT %reduce_sum.23780 = f32[] add(%reduce_sum.23778, %reduce_sum.23779)
}

%region_596.23781.clone (reduce_sum.1348: f32[], reduce_sum.1349: f32[]) -> f32[] {
  %reduce_sum.1348 = f32[] parameter(0)
  %reduce_sum.1349 = f32[] parameter(1)
  ROOT %reduce_sum.1350 = f32[] add(%reduce_sum.1348, %reduce_sum.1349)
}

%add.131.clone (x.263: bf16[], y.263: bf16[]) -> bf16[] {
  %x.263 = bf16[] parameter(0)
  %y.263 = bf16[] parameter(1)
  ROOT %add.1723 = bf16[] add(%x.263, %y.263)
}

%region_597.23792 (reduce_sum.23789: f32[], reduce_sum.23790: f32[]) -> f32[] {
  %reduce_sum.23789 = f32[] parameter(0)
  %reduce_sum.23790 = f32[] parameter(1)
  ROOT %reduce_sum.23791 = f32[] add(%reduce_sum.23789, %reduce_sum.23790)
}

%region_597.23792.clone (reduce_sum.1351: f32[], reduce_sum.1352: f32[]) -> f32[] {
  %reduce_sum.1351 = f32[] parameter(0)
  %reduce_sum.1352 = f32[] parameter(1)
  ROOT %reduce_sum.1353 = f32[] add(%reduce_sum.1351, %reduce_sum.1352)
}

%add.132.clone (x.265: bf16[], y.265: bf16[]) -> bf16[] {
  %x.265 = bf16[] parameter(0)
  %y.265 = bf16[] parameter(1)
  ROOT %add.1726 = bf16[] add(%x.265, %y.265)
}

%region_598.23802 (reduce_sum.23799: f32[], reduce_sum.23800: f32[]) -> f32[] {
  %reduce_sum.23799 = f32[] parameter(0)
  %reduce_sum.23800 = f32[] parameter(1)
  ROOT %reduce_sum.23801 = f32[] add(%reduce_sum.23799, %reduce_sum.23800)
}

%region_598.23802.clone (reduce_sum.1354: f32[], reduce_sum.1355: f32[]) -> f32[] {
  %reduce_sum.1354 = f32[] parameter(0)
  %reduce_sum.1355 = f32[] parameter(1)
  ROOT %reduce_sum.1356 = f32[] add(%reduce_sum.1354, %reduce_sum.1355)
}

%add.133.clone (x.267: bf16[], y.267: bf16[]) -> bf16[] {
  %x.267 = bf16[] parameter(0)
  %y.267 = bf16[] parameter(1)
  ROOT %add.1728 = bf16[] add(%x.267, %y.267)
}

%region_599.23818 (reduce_sum.23815: f32[], reduce_sum.23816: f32[]) -> f32[] {
  %reduce_sum.23815 = f32[] parameter(0)
  %reduce_sum.23816 = f32[] parameter(1)
  ROOT %reduce_sum.23817 = f32[] add(%reduce_sum.23815, %reduce_sum.23816)
}

%region_599.23818.clone (reduce_sum.1357: f32[], reduce_sum.1358: f32[]) -> f32[] {
  %reduce_sum.1357 = f32[] parameter(0)
  %reduce_sum.1358 = f32[] parameter(1)
  ROOT %reduce_sum.1359 = f32[] add(%reduce_sum.1357, %reduce_sum.1358)
}

%add.134.clone (x.269: bf16[], y.269: bf16[]) -> bf16[] {
  %x.269 = bf16[] parameter(0)
  %y.269 = bf16[] parameter(1)
  ROOT %add.1733 = bf16[] add(%x.269, %y.269)
}

%region_600.23827 (reduce_sum.147: f32[], reduce_sum.148: f32[]) -> f32[] {
  %reduce_sum.147 = f32[] parameter(0)
  %reduce_sum.148 = f32[] parameter(1)
  ROOT %reduce_sum.23826 = f32[] add(%reduce_sum.147, %reduce_sum.148)
}

%region_600.23827.clone (reduce_sum.1360: f32[], reduce_sum.1361: f32[]) -> f32[] {
  %reduce_sum.1360 = f32[] parameter(0)
  %reduce_sum.1361 = f32[] parameter(1)
  ROOT %reduce_sum.1362 = f32[] add(%reduce_sum.1360, %reduce_sum.1361)
}

%add.135.clone (x.271: bf16[], y.271: bf16[]) -> bf16[] {
  %x.271 = bf16[] parameter(0)
  %y.271 = bf16[] parameter(1)
  ROOT %add.1735 = bf16[] add(%x.271, %y.271)
}

%region_601.23838 (reduce_sum.149: f32[], reduce_sum.23836: f32[]) -> f32[] {
  %reduce_sum.149 = f32[] parameter(0)
  %reduce_sum.23836 = f32[] parameter(1)
  ROOT %reduce_sum.23837 = f32[] add(%reduce_sum.149, %reduce_sum.23836)
}

%region_601.23838.clone (reduce_sum.1363: f32[], reduce_sum.1364: f32[]) -> f32[] {
  %reduce_sum.1363 = f32[] parameter(0)
  %reduce_sum.1364 = f32[] parameter(1)
  ROOT %reduce_sum.1365 = f32[] add(%reduce_sum.1363, %reduce_sum.1364)
}

%region_602.23845 (reduce_sum.23842: bf16[], reduce_sum.23843: bf16[]) -> bf16[] {
  %reduce_sum.23842 = bf16[] parameter(0)
  %reduce_sum.23843 = bf16[] parameter(1)
  ROOT %reduce_sum.23844 = bf16[] add(%reduce_sum.23842, %reduce_sum.23843)
}

%region_602.23845.clone (reduce_sum.1366: bf16[], reduce_sum.1367: bf16[]) -> bf16[] {
  %reduce_sum.1366 = bf16[] parameter(0)
  %reduce_sum.1367 = bf16[] parameter(1)
  ROOT %reduce_sum.1368 = bf16[] add(%reduce_sum.1366, %reduce_sum.1367)
}

%region_603.23852 (reduce_sum.150: f32[], reduce_sum.151: f32[]) -> f32[] {
  %reduce_sum.150 = f32[] parameter(0)
  %reduce_sum.151 = f32[] parameter(1)
  ROOT %reduce_sum.23851 = f32[] add(%reduce_sum.150, %reduce_sum.151)
}

%region_604.23863 (reduce_sum.23860: bf16[], reduce_sum.23861: bf16[]) -> bf16[] {
  %reduce_sum.23860 = bf16[] parameter(0)
  %reduce_sum.23861 = bf16[] parameter(1)
  ROOT %reduce_sum.23862 = bf16[] add(%reduce_sum.23860, %reduce_sum.23861)
}

%region_604.23863.clone (reduce_sum.1369: bf16[], reduce_sum.1370: bf16[]) -> bf16[] {
  %reduce_sum.1369 = bf16[] parameter(0)
  %reduce_sum.1370 = bf16[] parameter(1)
  ROOT %reduce_sum.1371 = bf16[] add(%reduce_sum.1369, %reduce_sum.1370)
}

%region_605.23870 (reduce_sum.23867: f32[], reduce_sum.23868: f32[]) -> f32[] {
  %reduce_sum.23867 = f32[] parameter(0)
  %reduce_sum.23868 = f32[] parameter(1)
  ROOT %reduce_sum.23869 = f32[] add(%reduce_sum.23867, %reduce_sum.23868)
}

%add.136.clone (x.273: bf16[], y.273: bf16[]) -> bf16[] {
  %x.273 = bf16[] parameter(0)
  %y.273 = bf16[] parameter(1)
  ROOT %add.1737 = bf16[] add(%x.273, %y.273)
}

%region_606.23884 (reduce_sum.23881: f32[], reduce_sum.23882: f32[]) -> f32[] {
  %reduce_sum.23881 = f32[] parameter(0)
  %reduce_sum.23882 = f32[] parameter(1)
  ROOT %reduce_sum.23883 = f32[] add(%reduce_sum.23881, %reduce_sum.23882)
}

%region_606.23884.clone (reduce_sum.1372: f32[], reduce_sum.1373: f32[]) -> f32[] {
  %reduce_sum.1372 = f32[] parameter(0)
  %reduce_sum.1373 = f32[] parameter(1)
  ROOT %reduce_sum.1374 = f32[] add(%reduce_sum.1372, %reduce_sum.1373)
}

%add.137.clone (x.275: bf16[], y.275: bf16[]) -> bf16[] {
  %x.275 = bf16[] parameter(0)
  %y.275 = bf16[] parameter(1)
  ROOT %add.1739 = bf16[] add(%x.275, %y.275)
}

%region_607.23894 (reduce_sum.23891: f32[], reduce_sum.23892: f32[]) -> f32[] {
  %reduce_sum.23891 = f32[] parameter(0)
  %reduce_sum.23892 = f32[] parameter(1)
  ROOT %reduce_sum.23893 = f32[] add(%reduce_sum.23891, %reduce_sum.23892)
}

%region_607.23894.clone (reduce_sum.1378: f32[], reduce_sum.1380: f32[]) -> f32[] {
  %reduce_sum.1378 = f32[] parameter(0)
  %reduce_sum.1380 = f32[] parameter(1)
  ROOT %reduce_sum.1381 = f32[] add(%reduce_sum.1378, %reduce_sum.1380)
}

%add.138.clone (x.277: bf16[], y.277: bf16[]) -> bf16[] {
  %x.277 = bf16[] parameter(0)
  %y.277 = bf16[] parameter(1)
  ROOT %add.1741 = bf16[] add(%x.277, %y.277)
}

%region_608.23905 (reduce_sum.152: f32[], reduce_sum.153: f32[]) -> f32[] {
  %reduce_sum.152 = f32[] parameter(0)
  %reduce_sum.153 = f32[] parameter(1)
  ROOT %reduce_sum.23904 = f32[] add(%reduce_sum.152, %reduce_sum.153)
}

%region_608.23905.clone (reduce_sum.1382: f32[], reduce_sum.1383: f32[]) -> f32[] {
  %reduce_sum.1382 = f32[] parameter(0)
  %reduce_sum.1383 = f32[] parameter(1)
  ROOT %reduce_sum.1384 = f32[] add(%reduce_sum.1382, %reduce_sum.1383)
}

%add.139.clone (x.279: bf16[], y.279: bf16[]) -> bf16[] {
  %x.279 = bf16[] parameter(0)
  %y.279 = bf16[] parameter(1)
  ROOT %add.1743 = bf16[] add(%x.279, %y.279)
}

%region_609.23915 (reduce_sum.154: f32[], reduce_sum.155: f32[]) -> f32[] {
  %reduce_sum.154 = f32[] parameter(0)
  %reduce_sum.155 = f32[] parameter(1)
  ROOT %reduce_sum.23914 = f32[] add(%reduce_sum.154, %reduce_sum.155)
}

%region_609.23915.clone (reduce_sum.1385: f32[], reduce_sum.1386: f32[]) -> f32[] {
  %reduce_sum.1385 = f32[] parameter(0)
  %reduce_sum.1386 = f32[] parameter(1)
  ROOT %reduce_sum.1387 = f32[] add(%reduce_sum.1385, %reduce_sum.1386)
}

%add.140.clone (x.281: bf16[], y.281: bf16[]) -> bf16[] {
  %x.281 = bf16[] parameter(0)
  %y.281 = bf16[] parameter(1)
  ROOT %add.1745 = bf16[] add(%x.281, %y.281)
}

%region_610.23931 (reduce_sum.23928: f32[], reduce_sum.23929: f32[]) -> f32[] {
  %reduce_sum.23928 = f32[] parameter(0)
  %reduce_sum.23929 = f32[] parameter(1)
  ROOT %reduce_sum.23930 = f32[] add(%reduce_sum.23928, %reduce_sum.23929)
}

%region_610.23931.clone (reduce_sum.1388: f32[], reduce_sum.1389: f32[]) -> f32[] {
  %reduce_sum.1388 = f32[] parameter(0)
  %reduce_sum.1389 = f32[] parameter(1)
  ROOT %reduce_sum.1390 = f32[] add(%reduce_sum.1388, %reduce_sum.1389)
}

%add.141.clone (x.283: bf16[], y.283: bf16[]) -> bf16[] {
  %x.283 = bf16[] parameter(0)
  %y.283 = bf16[] parameter(1)
  ROOT %add.1747 = bf16[] add(%x.283, %y.283)
}

%region_611.23940 (reduce_sum.23937: f32[], reduce_sum.23938: f32[]) -> f32[] {
  %reduce_sum.23937 = f32[] parameter(0)
  %reduce_sum.23938 = f32[] parameter(1)
  ROOT %reduce_sum.23939 = f32[] add(%reduce_sum.23937, %reduce_sum.23938)
}

%region_611.23940.clone (reduce_sum.1391: f32[], reduce_sum.1392: f32[]) -> f32[] {
  %reduce_sum.1391 = f32[] parameter(0)
  %reduce_sum.1392 = f32[] parameter(1)
  ROOT %reduce_sum.1393 = f32[] add(%reduce_sum.1391, %reduce_sum.1392)
}

%add.142.clone (x.285: bf16[], y.285: bf16[]) -> bf16[] {
  %x.285 = bf16[] parameter(0)
  %y.285 = bf16[] parameter(1)
  ROOT %add.1749 = bf16[] add(%x.285, %y.285)
}

%region_612.23951 (reduce_sum.23948: f32[], reduce_sum.23949: f32[]) -> f32[] {
  %reduce_sum.23948 = f32[] parameter(0)
  %reduce_sum.23949 = f32[] parameter(1)
  ROOT %reduce_sum.23950 = f32[] add(%reduce_sum.23948, %reduce_sum.23949)
}

%region_612.23951.clone (reduce_sum.1394: f32[], reduce_sum.1395: f32[]) -> f32[] {
  %reduce_sum.1394 = f32[] parameter(0)
  %reduce_sum.1395 = f32[] parameter(1)
  ROOT %reduce_sum.1396 = f32[] add(%reduce_sum.1394, %reduce_sum.1395)
}

%region_613.23958 (reduce_sum.23955: bf16[], reduce_sum.23956: bf16[]) -> bf16[] {
  %reduce_sum.23955 = bf16[] parameter(0)
  %reduce_sum.23956 = bf16[] parameter(1)
  ROOT %reduce_sum.23957 = bf16[] add(%reduce_sum.23955, %reduce_sum.23956)
}

%region_613.23958.clone (reduce_sum.1397: bf16[], reduce_sum.1398: bf16[]) -> bf16[] {
  %reduce_sum.1397 = bf16[] parameter(0)
  %reduce_sum.1398 = bf16[] parameter(1)
  ROOT %reduce_sum.1399 = bf16[] add(%reduce_sum.1397, %reduce_sum.1398)
}

%region_614.23965 (reduce_sum.23962: f32[], reduce_sum.23963: f32[]) -> f32[] {
  %reduce_sum.23962 = f32[] parameter(0)
  %reduce_sum.23963 = f32[] parameter(1)
  ROOT %reduce_sum.23964 = f32[] add(%reduce_sum.23962, %reduce_sum.23963)
}

%region_615.23976 (reduce_sum.23973: bf16[], reduce_sum.23974: bf16[]) -> bf16[] {
  %reduce_sum.23973 = bf16[] parameter(0)
  %reduce_sum.23974 = bf16[] parameter(1)
  ROOT %reduce_sum.23975 = bf16[] add(%reduce_sum.23973, %reduce_sum.23974)
}

%region_615.23976.clone (reduce_sum.1400: bf16[], reduce_sum.1401: bf16[]) -> bf16[] {
  %reduce_sum.1400 = bf16[] parameter(0)
  %reduce_sum.1401 = bf16[] parameter(1)
  ROOT %reduce_sum.1402 = bf16[] add(%reduce_sum.1400, %reduce_sum.1401)
}

%region_616.23983 (reduce_sum.23980: f32[], reduce_sum.23981: f32[]) -> f32[] {
  %reduce_sum.23980 = f32[] parameter(0)
  %reduce_sum.23981 = f32[] parameter(1)
  ROOT %reduce_sum.23982 = f32[] add(%reduce_sum.23980, %reduce_sum.23981)
}

%add.143.clone (x.287: bf16[], y.287: bf16[]) -> bf16[] {
  %x.287 = bf16[] parameter(0)
  %y.287 = bf16[] parameter(1)
  ROOT %add.1754 = bf16[] add(%x.287, %y.287)
}

%region_617.23997 (reduce_sum.23994: f32[], reduce_sum.23995: f32[]) -> f32[] {
  %reduce_sum.23994 = f32[] parameter(0)
  %reduce_sum.23995 = f32[] parameter(1)
  ROOT %reduce_sum.23996 = f32[] add(%reduce_sum.23994, %reduce_sum.23995)
}

%region_617.23997.clone (reduce_sum.1403: f32[], reduce_sum.1404: f32[]) -> f32[] {
  %reduce_sum.1403 = f32[] parameter(0)
  %reduce_sum.1404 = f32[] parameter(1)
  ROOT %reduce_sum.1405 = f32[] add(%reduce_sum.1403, %reduce_sum.1404)
}

%add.144.clone (x.289: bf16[], y.289: bf16[]) -> bf16[] {
  %x.289 = bf16[] parameter(0)
  %y.289 = bf16[] parameter(1)
  ROOT %add.1756 = bf16[] add(%x.289, %y.289)
}

%region_618.24007 (reduce_sum.24004: f32[], reduce_sum.24005: f32[]) -> f32[] {
  %reduce_sum.24004 = f32[] parameter(0)
  %reduce_sum.24005 = f32[] parameter(1)
  ROOT %reduce_sum.24006 = f32[] add(%reduce_sum.24004, %reduce_sum.24005)
}

%region_618.24007.clone (reduce_sum.1406: f32[], reduce_sum.1407: f32[]) -> f32[] {
  %reduce_sum.1406 = f32[] parameter(0)
  %reduce_sum.1407 = f32[] parameter(1)
  ROOT %reduce_sum.1408 = f32[] add(%reduce_sum.1406, %reduce_sum.1407)
}

%add.145.clone (x.291: bf16[], y.291: bf16[]) -> bf16[] {
  %x.291 = bf16[] parameter(0)
  %y.291 = bf16[] parameter(1)
  ROOT %add.1758 = bf16[] add(%x.291, %y.291)
}

%region_619.24018 (reduce_sum.24015: f32[], reduce_sum.24016: f32[]) -> f32[] {
  %reduce_sum.24015 = f32[] parameter(0)
  %reduce_sum.24016 = f32[] parameter(1)
  ROOT %reduce_sum.24017 = f32[] add(%reduce_sum.24015, %reduce_sum.24016)
}

%region_619.24018.clone (reduce_sum.1409: f32[], reduce_sum.1410: f32[]) -> f32[] {
  %reduce_sum.1409 = f32[] parameter(0)
  %reduce_sum.1410 = f32[] parameter(1)
  ROOT %reduce_sum.1411 = f32[] add(%reduce_sum.1409, %reduce_sum.1410)
}

%add.146.clone (x.293: bf16[], y.293: bf16[]) -> bf16[] {
  %x.293 = bf16[] parameter(0)
  %y.293 = bf16[] parameter(1)
  ROOT %add.1760 = bf16[] add(%x.293, %y.293)
}

%region_620.24028 (reduce_sum.24025: f32[], reduce_sum.24026: f32[]) -> f32[] {
  %reduce_sum.24025 = f32[] parameter(0)
  %reduce_sum.24026 = f32[] parameter(1)
  ROOT %reduce_sum.24027 = f32[] add(%reduce_sum.24025, %reduce_sum.24026)
}

%region_620.24028.clone (reduce_sum.1412: f32[], reduce_sum.1413: f32[]) -> f32[] {
  %reduce_sum.1412 = f32[] parameter(0)
  %reduce_sum.1413 = f32[] parameter(1)
  ROOT %reduce_sum.1414 = f32[] add(%reduce_sum.1412, %reduce_sum.1413)
}

%add.147.clone (x.295: bf16[], y.295: bf16[]) -> bf16[] {
  %x.295 = bf16[] parameter(0)
  %y.295 = bf16[] parameter(1)
  ROOT %add.1763 = bf16[] add(%x.295, %y.295)
}

%region_621.24044 (reduce_sum.24041: f32[], reduce_sum.24042: f32[]) -> f32[] {
  %reduce_sum.24041 = f32[] parameter(0)
  %reduce_sum.24042 = f32[] parameter(1)
  ROOT %reduce_sum.24043 = f32[] add(%reduce_sum.24041, %reduce_sum.24042)
}

%region_621.24044.clone (reduce_sum.1415: f32[], reduce_sum.1416: f32[]) -> f32[] {
  %reduce_sum.1415 = f32[] parameter(0)
  %reduce_sum.1416 = f32[] parameter(1)
  ROOT %reduce_sum.1417 = f32[] add(%reduce_sum.1415, %reduce_sum.1416)
}

%add.148.clone (x.297: bf16[], y.297: bf16[]) -> bf16[] {
  %x.297 = bf16[] parameter(0)
  %y.297 = bf16[] parameter(1)
  ROOT %add.1765 = bf16[] add(%x.297, %y.297)
}

%region_622.24053 (reduce_sum.24050: f32[], reduce_sum.24051: f32[]) -> f32[] {
  %reduce_sum.24050 = f32[] parameter(0)
  %reduce_sum.24051 = f32[] parameter(1)
  ROOT %reduce_sum.24052 = f32[] add(%reduce_sum.24050, %reduce_sum.24051)
}

%region_622.24053.clone (reduce_sum.1418: f32[], reduce_sum.1419: f32[]) -> f32[] {
  %reduce_sum.1418 = f32[] parameter(0)
  %reduce_sum.1419 = f32[] parameter(1)
  ROOT %reduce_sum.1420 = f32[] add(%reduce_sum.1418, %reduce_sum.1419)
}

%add.149.clone (x.299: bf16[], y.299: bf16[]) -> bf16[] {
  %x.299 = bf16[] parameter(0)
  %y.299 = bf16[] parameter(1)
  ROOT %add.1767 = bf16[] add(%x.299, %y.299)
}

%region_623.24064 (reduce_sum.24061: f32[], reduce_sum.24062: f32[]) -> f32[] {
  %reduce_sum.24061 = f32[] parameter(0)
  %reduce_sum.24062 = f32[] parameter(1)
  ROOT %reduce_sum.24063 = f32[] add(%reduce_sum.24061, %reduce_sum.24062)
}

%region_623.24064.clone (reduce_sum.1421: f32[], reduce_sum.1422: f32[]) -> f32[] {
  %reduce_sum.1421 = f32[] parameter(0)
  %reduce_sum.1422 = f32[] parameter(1)
  ROOT %reduce_sum.1423 = f32[] add(%reduce_sum.1421, %reduce_sum.1422)
}

%region_624.24071 (reduce_sum.24068: bf16[], reduce_sum.156: bf16[]) -> bf16[] {
  %reduce_sum.24068 = bf16[] parameter(0)
  %reduce_sum.156 = bf16[] parameter(1)
  ROOT %reduce_sum.24070 = bf16[] add(%reduce_sum.24068, %reduce_sum.156)
}

%region_624.24071.clone (reduce_sum.1424: bf16[], reduce_sum.1425: bf16[]) -> bf16[] {
  %reduce_sum.1424 = bf16[] parameter(0)
  %reduce_sum.1425 = bf16[] parameter(1)
  ROOT %reduce_sum.1426 = bf16[] add(%reduce_sum.1424, %reduce_sum.1425)
}

%region_625.24078 (reduce_sum.24075: f32[], reduce_sum.24076: f32[]) -> f32[] {
  %reduce_sum.24075 = f32[] parameter(0)
  %reduce_sum.24076 = f32[] parameter(1)
  ROOT %reduce_sum.24077 = f32[] add(%reduce_sum.24075, %reduce_sum.24076)
}

%region_626.24089 (reduce_sum.24086: bf16[], reduce_sum.24087: bf16[]) -> bf16[] {
  %reduce_sum.24086 = bf16[] parameter(0)
  %reduce_sum.24087 = bf16[] parameter(1)
  ROOT %reduce_sum.24088 = bf16[] add(%reduce_sum.24086, %reduce_sum.24087)
}

%region_626.24089.clone (reduce_sum.1427: bf16[], reduce_sum.1428: bf16[]) -> bf16[] {
  %reduce_sum.1427 = bf16[] parameter(0)
  %reduce_sum.1428 = bf16[] parameter(1)
  ROOT %reduce_sum.1429 = bf16[] add(%reduce_sum.1427, %reduce_sum.1428)
}

%region_627.24096 (reduce_sum.24093: f32[], reduce_sum.24094: f32[]) -> f32[] {
  %reduce_sum.24093 = f32[] parameter(0)
  %reduce_sum.24094 = f32[] parameter(1)
  ROOT %reduce_sum.24095 = f32[] add(%reduce_sum.24093, %reduce_sum.24094)
}

%add.150.clone (x.301: bf16[], y.301: bf16[]) -> bf16[] {
  %x.301 = bf16[] parameter(0)
  %y.301 = bf16[] parameter(1)
  ROOT %add.1769 = bf16[] add(%x.301, %y.301)
}

%region_628.24110 (reduce_sum.157: f32[], reduce_sum.158: f32[]) -> f32[] {
  %reduce_sum.157 = f32[] parameter(0)
  %reduce_sum.158 = f32[] parameter(1)
  ROOT %reduce_sum.24109 = f32[] add(%reduce_sum.157, %reduce_sum.158)
}

%region_628.24110.clone (reduce_sum.1430: f32[], reduce_sum.1431: f32[]) -> f32[] {
  %reduce_sum.1430 = f32[] parameter(0)
  %reduce_sum.1431 = f32[] parameter(1)
  ROOT %reduce_sum.1432 = f32[] add(%reduce_sum.1430, %reduce_sum.1431)
}

%add.151.clone (x.303: bf16[], y.303: bf16[]) -> bf16[] {
  %x.303 = bf16[] parameter(0)
  %y.303 = bf16[] parameter(1)
  ROOT %add.1774 = bf16[] add(%x.303, %y.303)
}

%region_629.24120 (reduce_sum.24117: f32[], reduce_sum.24118: f32[]) -> f32[] {
  %reduce_sum.24117 = f32[] parameter(0)
  %reduce_sum.24118 = f32[] parameter(1)
  ROOT %reduce_sum.24119 = f32[] add(%reduce_sum.24117, %reduce_sum.24118)
}

%region_629.24120.clone (reduce_sum.1433: f32[], reduce_sum.1434: f32[]) -> f32[] {
  %reduce_sum.1433 = f32[] parameter(0)
  %reduce_sum.1434 = f32[] parameter(1)
  ROOT %reduce_sum.1435 = f32[] add(%reduce_sum.1433, %reduce_sum.1434)
}

%add.152.clone (x.305: bf16[], y.305: bf16[]) -> bf16[] {
  %x.305 = bf16[] parameter(0)
  %y.305 = bf16[] parameter(1)
  ROOT %add.1776 = bf16[] add(%x.305, %y.305)
}

%region_630.24131 (reduce_sum.24128: f32[], reduce_sum.24129: f32[]) -> f32[] {
  %reduce_sum.24128 = f32[] parameter(0)
  %reduce_sum.24129 = f32[] parameter(1)
  ROOT %reduce_sum.24130 = f32[] add(%reduce_sum.24128, %reduce_sum.24129)
}

%region_630.24131.clone (reduce_sum.1436: f32[], reduce_sum.1437: f32[]) -> f32[] {
  %reduce_sum.1436 = f32[] parameter(0)
  %reduce_sum.1437 = f32[] parameter(1)
  ROOT %reduce_sum.1438 = f32[] add(%reduce_sum.1436, %reduce_sum.1437)
}

%add.153.clone (x.307: bf16[], y.307: bf16[]) -> bf16[] {
  %x.307 = bf16[] parameter(0)
  %y.307 = bf16[] parameter(1)
  ROOT %add.1778 = bf16[] add(%x.307, %y.307)
}

%region_631.24141 (reduce_sum.24138: f32[], reduce_sum.24139: f32[]) -> f32[] {
  %reduce_sum.24138 = f32[] parameter(0)
  %reduce_sum.24139 = f32[] parameter(1)
  ROOT %reduce_sum.24140 = f32[] add(%reduce_sum.24138, %reduce_sum.24139)
}

%region_631.24141.clone (reduce_sum.1439: f32[], reduce_sum.1440: f32[]) -> f32[] {
  %reduce_sum.1439 = f32[] parameter(0)
  %reduce_sum.1440 = f32[] parameter(1)
  ROOT %reduce_sum.1441 = f32[] add(%reduce_sum.1439, %reduce_sum.1440)
}

%add.154.clone (x.309: bf16[], y.309: bf16[]) -> bf16[] {
  %x.309 = bf16[] parameter(0)
  %y.309 = bf16[] parameter(1)
  ROOT %add.1780 = bf16[] add(%x.309, %y.309)
}

%region_632.24157 (reduce_sum.24154: f32[], reduce_sum.24155: f32[]) -> f32[] {
  %reduce_sum.24154 = f32[] parameter(0)
  %reduce_sum.24155 = f32[] parameter(1)
  ROOT %reduce_sum.24156 = f32[] add(%reduce_sum.24154, %reduce_sum.24155)
}

%region_632.24157.clone (reduce_sum.1442: f32[], reduce_sum.1443: f32[]) -> f32[] {
  %reduce_sum.1442 = f32[] parameter(0)
  %reduce_sum.1443 = f32[] parameter(1)
  ROOT %reduce_sum.1444 = f32[] add(%reduce_sum.1442, %reduce_sum.1443)
}

%add.155.clone (x.311: bf16[], y.311: bf16[]) -> bf16[] {
  %x.311 = bf16[] parameter(0)
  %y.311 = bf16[] parameter(1)
  ROOT %add.1782 = bf16[] add(%x.311, %y.311)
}

%region_633.24166 (reduce_sum.24163: f32[], reduce_sum.24164: f32[]) -> f32[] {
  %reduce_sum.24163 = f32[] parameter(0)
  %reduce_sum.24164 = f32[] parameter(1)
  ROOT %reduce_sum.24165 = f32[] add(%reduce_sum.24163, %reduce_sum.24164)
}

%region_633.24166.clone (reduce_sum.1445: f32[], reduce_sum.1446: f32[]) -> f32[] {
  %reduce_sum.1445 = f32[] parameter(0)
  %reduce_sum.1446 = f32[] parameter(1)
  ROOT %reduce_sum.1447 = f32[] add(%reduce_sum.1445, %reduce_sum.1446)
}

%add.156.clone (x.313: bf16[], y.313: bf16[]) -> bf16[] {
  %x.313 = bf16[] parameter(0)
  %y.313 = bf16[] parameter(1)
  ROOT %add.1784 = bf16[] add(%x.313, %y.313)
}

%region_634.24177 (reduce_sum.24174: f32[], reduce_sum.24175: f32[]) -> f32[] {
  %reduce_sum.24174 = f32[] parameter(0)
  %reduce_sum.24175 = f32[] parameter(1)
  ROOT %reduce_sum.24176 = f32[] add(%reduce_sum.24174, %reduce_sum.24175)
}

%region_634.24177.clone (reduce_sum.1448: f32[], reduce_sum.1449: f32[]) -> f32[] {
  %reduce_sum.1448 = f32[] parameter(0)
  %reduce_sum.1449 = f32[] parameter(1)
  ROOT %reduce_sum.1450 = f32[] add(%reduce_sum.1448, %reduce_sum.1449)
}

%region_635.24184 (reduce_sum.24181: bf16[], reduce_sum.24182: bf16[]) -> bf16[] {
  %reduce_sum.24181 = bf16[] parameter(0)
  %reduce_sum.24182 = bf16[] parameter(1)
  ROOT %reduce_sum.24183 = bf16[] add(%reduce_sum.24181, %reduce_sum.24182)
}

%region_635.24184.clone (reduce_sum.1451: bf16[], reduce_sum.1452: bf16[]) -> bf16[] {
  %reduce_sum.1451 = bf16[] parameter(0)
  %reduce_sum.1452 = bf16[] parameter(1)
  ROOT %reduce_sum.1453 = bf16[] add(%reduce_sum.1451, %reduce_sum.1452)
}

%region_636.24191 (reduce_sum.24188: f32[], reduce_sum.24189: f32[]) -> f32[] {
  %reduce_sum.24188 = f32[] parameter(0)
  %reduce_sum.24189 = f32[] parameter(1)
  ROOT %reduce_sum.24190 = f32[] add(%reduce_sum.24188, %reduce_sum.24189)
}

%region_637.24202 (reduce_sum.24199: bf16[], reduce_sum.24200: bf16[]) -> bf16[] {
  %reduce_sum.24199 = bf16[] parameter(0)
  %reduce_sum.24200 = bf16[] parameter(1)
  ROOT %reduce_sum.24201 = bf16[] add(%reduce_sum.24199, %reduce_sum.24200)
}

%region_637.24202.clone (reduce_sum.1454: bf16[], reduce_sum.1455: bf16[]) -> bf16[] {
  %reduce_sum.1454 = bf16[] parameter(0)
  %reduce_sum.1455 = bf16[] parameter(1)
  ROOT %reduce_sum.1456 = bf16[] add(%reduce_sum.1454, %reduce_sum.1455)
}

%region_638.24209 (reduce_sum.24206: f32[], reduce_sum.24207: f32[]) -> f32[] {
  %reduce_sum.24206 = f32[] parameter(0)
  %reduce_sum.24207 = f32[] parameter(1)
  ROOT %reduce_sum.24208 = f32[] add(%reduce_sum.24206, %reduce_sum.24207)
}

%add.157.clone (x.315: bf16[], y.315: bf16[]) -> bf16[] {
  %x.315 = bf16[] parameter(0)
  %y.315 = bf16[] parameter(1)
  ROOT %add.1786 = bf16[] add(%x.315, %y.315)
}

%region_639.24223 (reduce_sum.24220: f32[], reduce_sum.24221: f32[]) -> f32[] {
  %reduce_sum.24220 = f32[] parameter(0)
  %reduce_sum.24221 = f32[] parameter(1)
  ROOT %reduce_sum.24222 = f32[] add(%reduce_sum.24220, %reduce_sum.24221)
}

%region_639.24223.clone (reduce_sum.1457: f32[], reduce_sum.1458: f32[]) -> f32[] {
  %reduce_sum.1457 = f32[] parameter(0)
  %reduce_sum.1458 = f32[] parameter(1)
  ROOT %reduce_sum.1459 = f32[] add(%reduce_sum.1457, %reduce_sum.1458)
}

%add.158.clone (x.317: bf16[], y.317: bf16[]) -> bf16[] {
  %x.317 = bf16[] parameter(0)
  %y.317 = bf16[] parameter(1)
  ROOT %add.1788 = bf16[] add(%x.317, %y.317)
}

%region_640.24233 (reduce_sum.24230: f32[], reduce_sum.24231: f32[]) -> f32[] {
  %reduce_sum.24230 = f32[] parameter(0)
  %reduce_sum.24231 = f32[] parameter(1)
  ROOT %reduce_sum.24232 = f32[] add(%reduce_sum.24230, %reduce_sum.24231)
}

%region_640.24233.clone (reduce_sum.1460: f32[], reduce_sum.1461: f32[]) -> f32[] {
  %reduce_sum.1460 = f32[] parameter(0)
  %reduce_sum.1461 = f32[] parameter(1)
  ROOT %reduce_sum.1462 = f32[] add(%reduce_sum.1460, %reduce_sum.1461)
}

%add.159.clone (x.319: bf16[], y.319: bf16[]) -> bf16[] {
  %x.319 = bf16[] parameter(0)
  %y.319 = bf16[] parameter(1)
  ROOT %add.1790 = bf16[] add(%x.319, %y.319)
}

%region_641.24244 (reduce_sum.24241: f32[], reduce_sum.24242: f32[]) -> f32[] {
  %reduce_sum.24241 = f32[] parameter(0)
  %reduce_sum.24242 = f32[] parameter(1)
  ROOT %reduce_sum.24243 = f32[] add(%reduce_sum.24241, %reduce_sum.24242)
}

%region_641.24244.clone (reduce_sum.1463: f32[], reduce_sum.1464: f32[]) -> f32[] {
  %reduce_sum.1463 = f32[] parameter(0)
  %reduce_sum.1464 = f32[] parameter(1)
  ROOT %reduce_sum.1465 = f32[] add(%reduce_sum.1463, %reduce_sum.1464)
}

%add.160.clone (x.321: bf16[], y.321: bf16[]) -> bf16[] {
  %x.321 = bf16[] parameter(0)
  %y.321 = bf16[] parameter(1)
  ROOT %add.1795 = bf16[] add(%x.321, %y.321)
}

%region_642.24254 (reduce_sum.24251: f32[], reduce_sum.24252: f32[]) -> f32[] {
  %reduce_sum.24251 = f32[] parameter(0)
  %reduce_sum.24252 = f32[] parameter(1)
  ROOT %reduce_sum.24253 = f32[] add(%reduce_sum.24251, %reduce_sum.24252)
}

%region_642.24254.clone (reduce_sum.1466: f32[], reduce_sum.1467: f32[]) -> f32[] {
  %reduce_sum.1466 = f32[] parameter(0)
  %reduce_sum.1467 = f32[] parameter(1)
  ROOT %reduce_sum.1468 = f32[] add(%reduce_sum.1466, %reduce_sum.1467)
}

%add.161.clone (x.323: bf16[], y.323: bf16[]) -> bf16[] {
  %x.323 = bf16[] parameter(0)
  %y.323 = bf16[] parameter(1)
  ROOT %add.1797 = bf16[] add(%x.323, %y.323)
}

%region_643.24270 (reduce_sum.24267: f32[], reduce_sum.24268: f32[]) -> f32[] {
  %reduce_sum.24267 = f32[] parameter(0)
  %reduce_sum.24268 = f32[] parameter(1)
  ROOT %reduce_sum.24269 = f32[] add(%reduce_sum.24267, %reduce_sum.24268)
}

%region_643.24270.clone (reduce_sum.1469: f32[], reduce_sum.1470: f32[]) -> f32[] {
  %reduce_sum.1469 = f32[] parameter(0)
  %reduce_sum.1470 = f32[] parameter(1)
  ROOT %reduce_sum.1471 = f32[] add(%reduce_sum.1469, %reduce_sum.1470)
}

%add.162.clone (x.325: bf16[], y.325: bf16[]) -> bf16[] {
  %x.325 = bf16[] parameter(0)
  %y.325 = bf16[] parameter(1)
  ROOT %add.1799 = bf16[] add(%x.325, %y.325)
}

%region_644.24279 (reduce_sum.24276: f32[], reduce_sum.24277: f32[]) -> f32[] {
  %reduce_sum.24276 = f32[] parameter(0)
  %reduce_sum.24277 = f32[] parameter(1)
  ROOT %reduce_sum.24278 = f32[] add(%reduce_sum.24276, %reduce_sum.24277)
}

%region_644.24279.clone (reduce_sum.1472: f32[], reduce_sum.1473: f32[]) -> f32[] {
  %reduce_sum.1472 = f32[] parameter(0)
  %reduce_sum.1473 = f32[] parameter(1)
  ROOT %reduce_sum.1474 = f32[] add(%reduce_sum.1472, %reduce_sum.1473)
}

%add.163.clone (x.327: bf16[], y.327: bf16[]) -> bf16[] {
  %x.327 = bf16[] parameter(0)
  %y.327 = bf16[] parameter(1)
  ROOT %add.1802 = bf16[] add(%x.327, %y.327)
}

%region_645.24290 (reduce_sum.24287: f32[], reduce_sum.24288: f32[]) -> f32[] {
  %reduce_sum.24287 = f32[] parameter(0)
  %reduce_sum.24288 = f32[] parameter(1)
  ROOT %reduce_sum.24289 = f32[] add(%reduce_sum.24287, %reduce_sum.24288)
}

%region_645.24290.clone (reduce_sum.1475: f32[], reduce_sum.1476: f32[]) -> f32[] {
  %reduce_sum.1475 = f32[] parameter(0)
  %reduce_sum.1476 = f32[] parameter(1)
  ROOT %reduce_sum.1477 = f32[] add(%reduce_sum.1475, %reduce_sum.1476)
}

%region_646.24297 (reduce_sum.24294: bf16[], reduce_sum.24295: bf16[]) -> bf16[] {
  %reduce_sum.24294 = bf16[] parameter(0)
  %reduce_sum.24295 = bf16[] parameter(1)
  ROOT %reduce_sum.24296 = bf16[] add(%reduce_sum.24294, %reduce_sum.24295)
}

%region_646.24297.clone (reduce_sum.1478: bf16[], reduce_sum.1479: bf16[]) -> bf16[] {
  %reduce_sum.1478 = bf16[] parameter(0)
  %reduce_sum.1479 = bf16[] parameter(1)
  ROOT %reduce_sum.1480 = bf16[] add(%reduce_sum.1478, %reduce_sum.1479)
}

%region_647.24304 (reduce_sum.24301: f32[], reduce_sum.24302: f32[]) -> f32[] {
  %reduce_sum.24301 = f32[] parameter(0)
  %reduce_sum.24302 = f32[] parameter(1)
  ROOT %reduce_sum.24303 = f32[] add(%reduce_sum.24301, %reduce_sum.24302)
}

%region_648.24315 (reduce_sum.24312: bf16[], reduce_sum.24313: bf16[]) -> bf16[] {
  %reduce_sum.24312 = bf16[] parameter(0)
  %reduce_sum.24313 = bf16[] parameter(1)
  ROOT %reduce_sum.24314 = bf16[] add(%reduce_sum.24312, %reduce_sum.24313)
}

%region_648.24315.clone (reduce_sum.1481: bf16[], reduce_sum.1482: bf16[]) -> bf16[] {
  %reduce_sum.1481 = bf16[] parameter(0)
  %reduce_sum.1482 = bf16[] parameter(1)
  ROOT %reduce_sum.1483 = bf16[] add(%reduce_sum.1481, %reduce_sum.1482)
}

%region_649.24322 (reduce_sum.159: f32[], reduce_sum.24320: f32[]) -> f32[] {
  %reduce_sum.159 = f32[] parameter(0)
  %reduce_sum.24320 = f32[] parameter(1)
  ROOT %reduce_sum.24321 = f32[] add(%reduce_sum.159, %reduce_sum.24320)
}

%add.164.clone (x.329: bf16[], y.329: bf16[]) -> bf16[] {
  %x.329 = bf16[] parameter(0)
  %y.329 = bf16[] parameter(1)
  ROOT %add.1804 = bf16[] add(%x.329, %y.329)
}

%region_650.24336 (reduce_sum.24333: f32[], reduce_sum.24334: f32[]) -> f32[] {
  %reduce_sum.24333 = f32[] parameter(0)
  %reduce_sum.24334 = f32[] parameter(1)
  ROOT %reduce_sum.24335 = f32[] add(%reduce_sum.24333, %reduce_sum.24334)
}

%region_650.24336.clone (reduce_sum.1484: f32[], reduce_sum.1485: f32[]) -> f32[] {
  %reduce_sum.1484 = f32[] parameter(0)
  %reduce_sum.1485 = f32[] parameter(1)
  ROOT %reduce_sum.1486 = f32[] add(%reduce_sum.1484, %reduce_sum.1485)
}

%add.165.clone (x.331: bf16[], y.331: bf16[]) -> bf16[] {
  %x.331 = bf16[] parameter(0)
  %y.331 = bf16[] parameter(1)
  ROOT %add.1806 = bf16[] add(%x.331, %y.331)
}

%region_651.24346 (reduce_sum.24343: f32[], reduce_sum.160: f32[]) -> f32[] {
  %reduce_sum.24343 = f32[] parameter(0)
  %reduce_sum.160 = f32[] parameter(1)
  ROOT %reduce_sum.24345 = f32[] add(%reduce_sum.24343, %reduce_sum.160)
}

%region_651.24346.clone (reduce_sum.1487: f32[], reduce_sum.1488: f32[]) -> f32[] {
  %reduce_sum.1487 = f32[] parameter(0)
  %reduce_sum.1488 = f32[] parameter(1)
  ROOT %reduce_sum.1489 = f32[] add(%reduce_sum.1487, %reduce_sum.1488)
}

%add.166.clone (x.333: bf16[], y.333: bf16[]) -> bf16[] {
  %x.333 = bf16[] parameter(0)
  %y.333 = bf16[] parameter(1)
  ROOT %add.1808 = bf16[] add(%x.333, %y.333)
}

%region_652.24357 (reduce_sum.24354: f32[], reduce_sum.24355: f32[]) -> f32[] {
  %reduce_sum.24354 = f32[] parameter(0)
  %reduce_sum.24355 = f32[] parameter(1)
  ROOT %reduce_sum.24356 = f32[] add(%reduce_sum.24354, %reduce_sum.24355)
}

%region_652.24357.clone (reduce_sum.1490: f32[], reduce_sum.1491: f32[]) -> f32[] {
  %reduce_sum.1490 = f32[] parameter(0)
  %reduce_sum.1491 = f32[] parameter(1)
  ROOT %reduce_sum.1492 = f32[] add(%reduce_sum.1490, %reduce_sum.1491)
}

%add.167.clone (x.335: bf16[], y.335: bf16[]) -> bf16[] {
  %x.335 = bf16[] parameter(0)
  %y.335 = bf16[] parameter(1)
  ROOT %add.1810 = bf16[] add(%x.335, %y.335)
}

%region_653.24367 (reduce_sum.24364: f32[], reduce_sum.24365: f32[]) -> f32[] {
  %reduce_sum.24364 = f32[] parameter(0)
  %reduce_sum.24365 = f32[] parameter(1)
  ROOT %reduce_sum.24366 = f32[] add(%reduce_sum.24364, %reduce_sum.24365)
}

%region_653.24367.clone (reduce_sum.1493: f32[], reduce_sum.1494: f32[]) -> f32[] {
  %reduce_sum.1493 = f32[] parameter(0)
  %reduce_sum.1494 = f32[] parameter(1)
  ROOT %reduce_sum.1495 = f32[] add(%reduce_sum.1493, %reduce_sum.1494)
}

%add.168.clone (x.337: bf16[], y.337: bf16[]) -> bf16[] {
  %x.337 = bf16[] parameter(0)
  %y.337 = bf16[] parameter(1)
  ROOT %add.1812 = bf16[] add(%x.337, %y.337)
}

%region_654.24383 (reduce_sum.24380: f32[], reduce_sum.24381: f32[]) -> f32[] {
  %reduce_sum.24380 = f32[] parameter(0)
  %reduce_sum.24381 = f32[] parameter(1)
  ROOT %reduce_sum.24382 = f32[] add(%reduce_sum.24380, %reduce_sum.24381)
}

%region_654.24383.clone (reduce_sum.1496: f32[], reduce_sum.1497: f32[]) -> f32[] {
  %reduce_sum.1496 = f32[] parameter(0)
  %reduce_sum.1497 = f32[] parameter(1)
  ROOT %reduce_sum.1498 = f32[] add(%reduce_sum.1496, %reduce_sum.1497)
}

%add.169.clone (x.339: bf16[], y.339: bf16[]) -> bf16[] {
  %x.339 = bf16[] parameter(0)
  %y.339 = bf16[] parameter(1)
  ROOT %add.1817 = bf16[] add(%x.339, %y.339)
}

%region_655.24392 (reduce_sum.24389: f32[], reduce_sum.24390: f32[]) -> f32[] {
  %reduce_sum.24389 = f32[] parameter(0)
  %reduce_sum.24390 = f32[] parameter(1)
  ROOT %reduce_sum.24391 = f32[] add(%reduce_sum.24389, %reduce_sum.24390)
}

%region_655.24392.clone (reduce_sum.1499: f32[], reduce_sum.1500: f32[]) -> f32[] {
  %reduce_sum.1499 = f32[] parameter(0)
  %reduce_sum.1500 = f32[] parameter(1)
  ROOT %reduce_sum.1501 = f32[] add(%reduce_sum.1499, %reduce_sum.1500)
}

%add.170.clone (x.341: bf16[], y.341: bf16[]) -> bf16[] {
  %x.341 = bf16[] parameter(0)
  %y.341 = bf16[] parameter(1)
  ROOT %add.1819 = bf16[] add(%x.341, %y.341)
}

%region_656.24403 (reduce_sum.24400: f32[], reduce_sum.24401: f32[]) -> f32[] {
  %reduce_sum.24400 = f32[] parameter(0)
  %reduce_sum.24401 = f32[] parameter(1)
  ROOT %reduce_sum.24402 = f32[] add(%reduce_sum.24400, %reduce_sum.24401)
}

%region_656.24403.clone (reduce_sum.1502: f32[], reduce_sum.1503: f32[]) -> f32[] {
  %reduce_sum.1502 = f32[] parameter(0)
  %reduce_sum.1503 = f32[] parameter(1)
  ROOT %reduce_sum.1504 = f32[] add(%reduce_sum.1502, %reduce_sum.1503)
}

%region_657.24410 (reduce_sum.161: bf16[], reduce_sum.24408: bf16[]) -> bf16[] {
  %reduce_sum.161 = bf16[] parameter(0)
  %reduce_sum.24408 = bf16[] parameter(1)
  ROOT %reduce_sum.24409 = bf16[] add(%reduce_sum.161, %reduce_sum.24408)
}

%region_657.24410.clone (reduce_sum.1505: bf16[], reduce_sum.1506: bf16[]) -> bf16[] {
  %reduce_sum.1505 = bf16[] parameter(0)
  %reduce_sum.1506 = bf16[] parameter(1)
  ROOT %reduce_sum.1507 = bf16[] add(%reduce_sum.1505, %reduce_sum.1506)
}

%region_658.24417 (reduce_sum.24414: f32[], reduce_sum.162: f32[]) -> f32[] {
  %reduce_sum.24414 = f32[] parameter(0)
  %reduce_sum.162 = f32[] parameter(1)
  ROOT %reduce_sum.24416 = f32[] add(%reduce_sum.24414, %reduce_sum.162)
}

%region_659.24428 (reduce_sum.163: bf16[], reduce_sum.24426: bf16[]) -> bf16[] {
  %reduce_sum.163 = bf16[] parameter(0)
  %reduce_sum.24426 = bf16[] parameter(1)
  ROOT %reduce_sum.164 = bf16[] add(%reduce_sum.163, %reduce_sum.24426)
}

%region_659.24428.clone (reduce_sum.1508: bf16[], reduce_sum.1509: bf16[]) -> bf16[] {
  %reduce_sum.1508 = bf16[] parameter(0)
  %reduce_sum.1509 = bf16[] parameter(1)
  ROOT %reduce_sum.1510 = bf16[] add(%reduce_sum.1508, %reduce_sum.1509)
}

%region_660.24435 (reduce_sum.24432: f32[], reduce_sum.24433: f32[]) -> f32[] {
  %reduce_sum.24432 = f32[] parameter(0)
  %reduce_sum.24433 = f32[] parameter(1)
  ROOT %reduce_sum.24434 = f32[] add(%reduce_sum.24432, %reduce_sum.24433)
}

%add.171.clone (x.343: bf16[], y.343: bf16[]) -> bf16[] {
  %x.343 = bf16[] parameter(0)
  %y.343 = bf16[] parameter(1)
  ROOT %add.1821 = bf16[] add(%x.343, %y.343)
}

%region_661.24449 (reduce_sum.24446: f32[], reduce_sum.24447: f32[]) -> f32[] {
  %reduce_sum.24446 = f32[] parameter(0)
  %reduce_sum.24447 = f32[] parameter(1)
  ROOT %reduce_sum.24448 = f32[] add(%reduce_sum.24446, %reduce_sum.24447)
}

%region_661.24449.clone (reduce_sum.1511: f32[], reduce_sum.1512: f32[]) -> f32[] {
  %reduce_sum.1511 = f32[] parameter(0)
  %reduce_sum.1512 = f32[] parameter(1)
  ROOT %reduce_sum.1513 = f32[] add(%reduce_sum.1511, %reduce_sum.1512)
}

%add.172.clone (x.345: bf16[], y.345: bf16[]) -> bf16[] {
  %x.345 = bf16[] parameter(0)
  %y.345 = bf16[] parameter(1)
  ROOT %add.1823 = bf16[] add(%x.345, %y.345)
}

%region_662.24459 (reduce_sum.24456: f32[], reduce_sum.24457: f32[]) -> f32[] {
  %reduce_sum.24456 = f32[] parameter(0)
  %reduce_sum.24457 = f32[] parameter(1)
  ROOT %reduce_sum.24458 = f32[] add(%reduce_sum.24456, %reduce_sum.24457)
}

%region_662.24459.clone (reduce_sum.1514: f32[], reduce_sum.1515: f32[]) -> f32[] {
  %reduce_sum.1514 = f32[] parameter(0)
  %reduce_sum.1515 = f32[] parameter(1)
  ROOT %reduce_sum.1516 = f32[] add(%reduce_sum.1514, %reduce_sum.1515)
}

%add.173.clone (x.347: bf16[], y.347: bf16[]) -> bf16[] {
  %x.347 = bf16[] parameter(0)
  %y.347 = bf16[] parameter(1)
  ROOT %add.1825 = bf16[] add(%x.347, %y.347)
}

%region_663.24470 (reduce_sum.24467: f32[], reduce_sum.24468: f32[]) -> f32[] {
  %reduce_sum.24467 = f32[] parameter(0)
  %reduce_sum.24468 = f32[] parameter(1)
  ROOT %reduce_sum.24469 = f32[] add(%reduce_sum.24467, %reduce_sum.24468)
}

%region_663.24470.clone (reduce_sum.1517: f32[], reduce_sum.1518: f32[]) -> f32[] {
  %reduce_sum.1517 = f32[] parameter(0)
  %reduce_sum.1518 = f32[] parameter(1)
  ROOT %reduce_sum.1519 = f32[] add(%reduce_sum.1517, %reduce_sum.1518)
}

%add.174.clone (x.349: bf16[], y.349: bf16[]) -> bf16[] {
  %x.349 = bf16[] parameter(0)
  %y.349 = bf16[] parameter(1)
  ROOT %add.1827 = bf16[] add(%x.349, %y.349)
}

%region_664.24480 (reduce_sum.24477: f32[], reduce_sum.24478: f32[]) -> f32[] {
  %reduce_sum.24477 = f32[] parameter(0)
  %reduce_sum.24478 = f32[] parameter(1)
  ROOT %reduce_sum.24479 = f32[] add(%reduce_sum.24477, %reduce_sum.24478)
}

%region_664.24480.clone (reduce_sum.1520: f32[], reduce_sum.1521: f32[]) -> f32[] {
  %reduce_sum.1520 = f32[] parameter(0)
  %reduce_sum.1521 = f32[] parameter(1)
  ROOT %reduce_sum.1522 = f32[] add(%reduce_sum.1520, %reduce_sum.1521)
}

%add.175.clone (x.351: bf16[], y.351: bf16[]) -> bf16[] {
  %x.351 = bf16[] parameter(0)
  %y.351 = bf16[] parameter(1)
  ROOT %add.1829 = bf16[] add(%x.351, %y.351)
}

%region_665.24496 (reduce_sum.24493: f32[], reduce_sum.24494: f32[]) -> f32[] {
  %reduce_sum.24493 = f32[] parameter(0)
  %reduce_sum.24494 = f32[] parameter(1)
  ROOT %reduce_sum.24495 = f32[] add(%reduce_sum.24493, %reduce_sum.24494)
}

%region_665.24496.clone (reduce_sum.1523: f32[], reduce_sum.1524: f32[]) -> f32[] {
  %reduce_sum.1523 = f32[] parameter(0)
  %reduce_sum.1524 = f32[] parameter(1)
  ROOT %reduce_sum.1525 = f32[] add(%reduce_sum.1523, %reduce_sum.1524)
}

%add.176.clone (x.353: bf16[], y.353: bf16[]) -> bf16[] {
  %x.353 = bf16[] parameter(0)
  %y.353 = bf16[] parameter(1)
  ROOT %add.1831 = bf16[] add(%x.353, %y.353)
}

%region_666.24505 (reduce_sum.24502: f32[], reduce_sum.24503: f32[]) -> f32[] {
  %reduce_sum.24502 = f32[] parameter(0)
  %reduce_sum.24503 = f32[] parameter(1)
  ROOT %reduce_sum.24504 = f32[] add(%reduce_sum.24502, %reduce_sum.24503)
}

%region_666.24505.clone (reduce_sum.1526: f32[], reduce_sum.1527: f32[]) -> f32[] {
  %reduce_sum.1526 = f32[] parameter(0)
  %reduce_sum.1527 = f32[] parameter(1)
  ROOT %reduce_sum.1528 = f32[] add(%reduce_sum.1526, %reduce_sum.1527)
}

%add.177.clone (x.355: bf16[], y.355: bf16[]) -> bf16[] {
  %x.355 = bf16[] parameter(0)
  %y.355 = bf16[] parameter(1)
  ROOT %add.1833 = bf16[] add(%x.355, %y.355)
}

%region_667.24516 (reduce_sum.24513: f32[], reduce_sum.24514: f32[]) -> f32[] {
  %reduce_sum.24513 = f32[] parameter(0)
  %reduce_sum.24514 = f32[] parameter(1)
  ROOT %reduce_sum.24515 = f32[] add(%reduce_sum.24513, %reduce_sum.24514)
}

%region_667.24516.clone (reduce_sum.1529: f32[], reduce_sum.1530: f32[]) -> f32[] {
  %reduce_sum.1529 = f32[] parameter(0)
  %reduce_sum.1530 = f32[] parameter(1)
  ROOT %reduce_sum.1531 = f32[] add(%reduce_sum.1529, %reduce_sum.1530)
}

%region_668.24523 (reduce_sum.24520: bf16[], reduce_sum.24521: bf16[]) -> bf16[] {
  %reduce_sum.24520 = bf16[] parameter(0)
  %reduce_sum.24521 = bf16[] parameter(1)
  ROOT %reduce_sum.24522 = bf16[] add(%reduce_sum.24520, %reduce_sum.24521)
}

%region_668.24523.clone (reduce_sum.1532: bf16[], reduce_sum.1533: bf16[]) -> bf16[] {
  %reduce_sum.1532 = bf16[] parameter(0)
  %reduce_sum.1533 = bf16[] parameter(1)
  ROOT %reduce_sum.1534 = bf16[] add(%reduce_sum.1532, %reduce_sum.1533)
}

%region_669.24530 (reduce_sum.165: f32[], reduce_sum.166: f32[]) -> f32[] {
  %reduce_sum.165 = f32[] parameter(0)
  %reduce_sum.166 = f32[] parameter(1)
  ROOT %reduce_sum.167 = f32[] add(%reduce_sum.165, %reduce_sum.166)
}

%region_670.24541 (reduce_sum.168: bf16[], reduce_sum.169: bf16[]) -> bf16[] {
  %reduce_sum.168 = bf16[] parameter(0)
  %reduce_sum.169 = bf16[] parameter(1)
  ROOT %reduce_sum.24540 = bf16[] add(%reduce_sum.168, %reduce_sum.169)
}

%region_670.24541.clone (reduce_sum.1535: bf16[], reduce_sum.1536: bf16[]) -> bf16[] {
  %reduce_sum.1535 = bf16[] parameter(0)
  %reduce_sum.1536 = bf16[] parameter(1)
  ROOT %reduce_sum.1537 = bf16[] add(%reduce_sum.1535, %reduce_sum.1536)
}

%region_671.24548 (reduce_sum.170: f32[], reduce_sum.171: f32[]) -> f32[] {
  %reduce_sum.170 = f32[] parameter(0)
  %reduce_sum.171 = f32[] parameter(1)
  ROOT %reduce_sum.172 = f32[] add(%reduce_sum.170, %reduce_sum.171)
}

%add.178.clone (x.357: bf16[], y.357: bf16[]) -> bf16[] {
  %x.357 = bf16[] parameter(0)
  %y.357 = bf16[] parameter(1)
  ROOT %add.1839 = bf16[] add(%x.357, %y.357)
}

%region_672.24562 (reduce_sum.173: f32[], reduce_sum.24560: f32[]) -> f32[] {
  %reduce_sum.173 = f32[] parameter(0)
  %reduce_sum.24560 = f32[] parameter(1)
  ROOT %reduce_sum.174 = f32[] add(%reduce_sum.173, %reduce_sum.24560)
}

%region_672.24562.clone (reduce_sum.1538: f32[], reduce_sum.1539: f32[]) -> f32[] {
  %reduce_sum.1538 = f32[] parameter(0)
  %reduce_sum.1539 = f32[] parameter(1)
  ROOT %reduce_sum.1540 = f32[] add(%reduce_sum.1538, %reduce_sum.1539)
}

%add.179.clone (x.359: bf16[], y.359: bf16[]) -> bf16[] {
  %x.359 = bf16[] parameter(0)
  %y.359 = bf16[] parameter(1)
  ROOT %add.1841 = bf16[] add(%x.359, %y.359)
}

%region_673.24572 (reduce_sum.24569: f32[], reduce_sum.24570: f32[]) -> f32[] {
  %reduce_sum.24569 = f32[] parameter(0)
  %reduce_sum.24570 = f32[] parameter(1)
  ROOT %reduce_sum.24571 = f32[] add(%reduce_sum.24569, %reduce_sum.24570)
}

%region_673.24572.clone (reduce_sum.1541: f32[], reduce_sum.1542: f32[]) -> f32[] {
  %reduce_sum.1541 = f32[] parameter(0)
  %reduce_sum.1542 = f32[] parameter(1)
  ROOT %reduce_sum.1543 = f32[] add(%reduce_sum.1541, %reduce_sum.1542)
}

%add.180.clone (x.361: bf16[], y.361: bf16[]) -> bf16[] {
  %x.361 = bf16[] parameter(0)
  %y.361 = bf16[] parameter(1)
  ROOT %add.1843 = bf16[] add(%x.361, %y.361)
}

%region_674.24583 (reduce_sum.24580: f32[], reduce_sum.24581: f32[]) -> f32[] {
  %reduce_sum.24580 = f32[] parameter(0)
  %reduce_sum.24581 = f32[] parameter(1)
  ROOT %reduce_sum.24582 = f32[] add(%reduce_sum.24580, %reduce_sum.24581)
}

%region_674.24583.clone (reduce_sum.1544: f32[], reduce_sum.1545: f32[]) -> f32[] {
  %reduce_sum.1544 = f32[] parameter(0)
  %reduce_sum.1545 = f32[] parameter(1)
  ROOT %reduce_sum.1546 = f32[] add(%reduce_sum.1544, %reduce_sum.1545)
}

%add.181.clone (x.363: bf16[], y.363: bf16[]) -> bf16[] {
  %x.363 = bf16[] parameter(0)
  %y.363 = bf16[] parameter(1)
  ROOT %add.1845 = bf16[] add(%x.363, %y.363)
}

%region_675.24593 (reduce_sum.24590: f32[], reduce_sum.24591: f32[]) -> f32[] {
  %reduce_sum.24590 = f32[] parameter(0)
  %reduce_sum.24591 = f32[] parameter(1)
  ROOT %reduce_sum.24592 = f32[] add(%reduce_sum.24590, %reduce_sum.24591)
}

%region_675.24593.clone (reduce_sum.1547: f32[], reduce_sum.1548: f32[]) -> f32[] {
  %reduce_sum.1547 = f32[] parameter(0)
  %reduce_sum.1548 = f32[] parameter(1)
  ROOT %reduce_sum.1549 = f32[] add(%reduce_sum.1547, %reduce_sum.1548)
}

%add.182.clone (x.365: bf16[], y.365: bf16[]) -> bf16[] {
  %x.365 = bf16[] parameter(0)
  %y.365 = bf16[] parameter(1)
  ROOT %add.1847 = bf16[] add(%x.365, %y.365)
}

%region_676.24609 (reduce_sum.24606: f32[], reduce_sum.24607: f32[]) -> f32[] {
  %reduce_sum.24606 = f32[] parameter(0)
  %reduce_sum.24607 = f32[] parameter(1)
  ROOT %reduce_sum.24608 = f32[] add(%reduce_sum.24606, %reduce_sum.24607)
}

%region_676.24609.clone (reduce_sum.1550: f32[], reduce_sum.1551: f32[]) -> f32[] {
  %reduce_sum.1550 = f32[] parameter(0)
  %reduce_sum.1551 = f32[] parameter(1)
  ROOT %reduce_sum.1552 = f32[] add(%reduce_sum.1550, %reduce_sum.1551)
}

%add.183.clone (x.367: bf16[], y.367: bf16[]) -> bf16[] {
  %x.367 = bf16[] parameter(0)
  %y.367 = bf16[] parameter(1)
  ROOT %add.1849 = bf16[] add(%x.367, %y.367)
}

%region_677.24618 (reduce_sum.24615: f32[], reduce_sum.24616: f32[]) -> f32[] {
  %reduce_sum.24615 = f32[] parameter(0)
  %reduce_sum.24616 = f32[] parameter(1)
  ROOT %reduce_sum.24617 = f32[] add(%reduce_sum.24615, %reduce_sum.24616)
}

%region_677.24618.clone (reduce_sum.1553: f32[], reduce_sum.1554: f32[]) -> f32[] {
  %reduce_sum.1553 = f32[] parameter(0)
  %reduce_sum.1554 = f32[] parameter(1)
  ROOT %reduce_sum.1555 = f32[] add(%reduce_sum.1553, %reduce_sum.1554)
}

%add.184.clone (x.369: bf16[], y.369: bf16[]) -> bf16[] {
  %x.369 = bf16[] parameter(0)
  %y.369 = bf16[] parameter(1)
  ROOT %add.1851 = bf16[] add(%x.369, %y.369)
}

%region_678.24629 (reduce_sum.24626: f32[], reduce_sum.24627: f32[]) -> f32[] {
  %reduce_sum.24626 = f32[] parameter(0)
  %reduce_sum.24627 = f32[] parameter(1)
  ROOT %reduce_sum.24628 = f32[] add(%reduce_sum.24626, %reduce_sum.24627)
}

%region_678.24629.clone (reduce_sum.1556: f32[], reduce_sum.1557: f32[]) -> f32[] {
  %reduce_sum.1556 = f32[] parameter(0)
  %reduce_sum.1557 = f32[] parameter(1)
  ROOT %reduce_sum.1558 = f32[] add(%reduce_sum.1556, %reduce_sum.1557)
}

%region_679.24636 (reduce_sum.24633: bf16[], reduce_sum.24634: bf16[]) -> bf16[] {
  %reduce_sum.24633 = bf16[] parameter(0)
  %reduce_sum.24634 = bf16[] parameter(1)
  ROOT %reduce_sum.24635 = bf16[] add(%reduce_sum.24633, %reduce_sum.24634)
}

%region_679.24636.clone (reduce_sum.1559: bf16[], reduce_sum.1560: bf16[]) -> bf16[] {
  %reduce_sum.1559 = bf16[] parameter(0)
  %reduce_sum.1560 = bf16[] parameter(1)
  ROOT %reduce_sum.1561 = bf16[] add(%reduce_sum.1559, %reduce_sum.1560)
}

%region_680.24643 (reduce_sum.24640: f32[], reduce_sum.24641: f32[]) -> f32[] {
  %reduce_sum.24640 = f32[] parameter(0)
  %reduce_sum.24641 = f32[] parameter(1)
  ROOT %reduce_sum.24642 = f32[] add(%reduce_sum.24640, %reduce_sum.24641)
}

%region_681.24654 (reduce_sum.24651: bf16[], reduce_sum.24652: bf16[]) -> bf16[] {
  %reduce_sum.24651 = bf16[] parameter(0)
  %reduce_sum.24652 = bf16[] parameter(1)
  ROOT %reduce_sum.24653 = bf16[] add(%reduce_sum.24651, %reduce_sum.24652)
}

%region_681.24654.clone (reduce_sum.1562: bf16[], reduce_sum.1563: bf16[]) -> bf16[] {
  %reduce_sum.1562 = bf16[] parameter(0)
  %reduce_sum.1563 = bf16[] parameter(1)
  ROOT %reduce_sum.1564 = bf16[] add(%reduce_sum.1562, %reduce_sum.1563)
}

%region_682.24661 (reduce_sum.24658: f32[], reduce_sum.24659: f32[]) -> f32[] {
  %reduce_sum.24658 = f32[] parameter(0)
  %reduce_sum.24659 = f32[] parameter(1)
  ROOT %reduce_sum.24660 = f32[] add(%reduce_sum.24658, %reduce_sum.24659)
}

%add.185.clone (x.371: bf16[], y.371: bf16[]) -> bf16[] {
  %x.371 = bf16[] parameter(0)
  %y.371 = bf16[] parameter(1)
  ROOT %add.1853 = bf16[] add(%x.371, %y.371)
}

%region_683.24675 (reduce_sum.24672: f32[], reduce_sum.24673: f32[]) -> f32[] {
  %reduce_sum.24672 = f32[] parameter(0)
  %reduce_sum.24673 = f32[] parameter(1)
  ROOT %reduce_sum.24674 = f32[] add(%reduce_sum.24672, %reduce_sum.24673)
}

%region_683.24675.clone (reduce_sum.1565: f32[], reduce_sum.1566: f32[]) -> f32[] {
  %reduce_sum.1565 = f32[] parameter(0)
  %reduce_sum.1566 = f32[] parameter(1)
  ROOT %reduce_sum.1567 = f32[] add(%reduce_sum.1565, %reduce_sum.1566)
}

%add.186.clone (x.373: bf16[], y.373: bf16[]) -> bf16[] {
  %x.373 = bf16[] parameter(0)
  %y.373 = bf16[] parameter(1)
  ROOT %add.1858 = bf16[] add(%x.373, %y.373)
}

%region_684.24685 (reduce_sum.24682: f32[], reduce_sum.24683: f32[]) -> f32[] {
  %reduce_sum.24682 = f32[] parameter(0)
  %reduce_sum.24683 = f32[] parameter(1)
  ROOT %reduce_sum.24684 = f32[] add(%reduce_sum.24682, %reduce_sum.24683)
}

%region_684.24685.clone (reduce_sum.1568: f32[], reduce_sum.1569: f32[]) -> f32[] {
  %reduce_sum.1568 = f32[] parameter(0)
  %reduce_sum.1569 = f32[] parameter(1)
  ROOT %reduce_sum.1570 = f32[] add(%reduce_sum.1568, %reduce_sum.1569)
}

%add.187.clone (x.375: bf16[], y.375: bf16[]) -> bf16[] {
  %x.375 = bf16[] parameter(0)
  %y.375 = bf16[] parameter(1)
  ROOT %add.1860 = bf16[] add(%x.375, %y.375)
}

%region_685.24696 (reduce_sum.24693: f32[], reduce_sum.24694: f32[]) -> f32[] {
  %reduce_sum.24693 = f32[] parameter(0)
  %reduce_sum.24694 = f32[] parameter(1)
  ROOT %reduce_sum.24695 = f32[] add(%reduce_sum.24693, %reduce_sum.24694)
}

%region_685.24696.clone (reduce_sum.1571: f32[], reduce_sum.1572: f32[]) -> f32[] {
  %reduce_sum.1571 = f32[] parameter(0)
  %reduce_sum.1572 = f32[] parameter(1)
  ROOT %reduce_sum.1573 = f32[] add(%reduce_sum.1571, %reduce_sum.1572)
}

%add.188.clone (x.377: bf16[], y.377: bf16[]) -> bf16[] {
  %x.377 = bf16[] parameter(0)
  %y.377 = bf16[] parameter(1)
  ROOT %add.1862 = bf16[] add(%x.377, %y.377)
}

%region_686.24706 (reduce_sum.24703: f32[], reduce_sum.24704: f32[]) -> f32[] {
  %reduce_sum.24703 = f32[] parameter(0)
  %reduce_sum.24704 = f32[] parameter(1)
  ROOT %reduce_sum.24705 = f32[] add(%reduce_sum.24703, %reduce_sum.24704)
}

%region_686.24706.clone (reduce_sum.1574: f32[], reduce_sum.1575: f32[]) -> f32[] {
  %reduce_sum.1574 = f32[] parameter(0)
  %reduce_sum.1575 = f32[] parameter(1)
  ROOT %reduce_sum.1576 = f32[] add(%reduce_sum.1574, %reduce_sum.1575)
}

%add.189.clone (x.379: bf16[], y.379: bf16[]) -> bf16[] {
  %x.379 = bf16[] parameter(0)
  %y.379 = bf16[] parameter(1)
  ROOT %add.1864 = bf16[] add(%x.379, %y.379)
}

%region_687.24722 (reduce_sum.24719: f32[], reduce_sum.24720: f32[]) -> f32[] {
  %reduce_sum.24719 = f32[] parameter(0)
  %reduce_sum.24720 = f32[] parameter(1)
  ROOT %reduce_sum.24721 = f32[] add(%reduce_sum.24719, %reduce_sum.24720)
}

%region_687.24722.clone (reduce_sum.1577: f32[], reduce_sum.1578: f32[]) -> f32[] {
  %reduce_sum.1577 = f32[] parameter(0)
  %reduce_sum.1578 = f32[] parameter(1)
  ROOT %reduce_sum.1579 = f32[] add(%reduce_sum.1577, %reduce_sum.1578)
}

%add.190.clone (x.381: bf16[], y.381: bf16[]) -> bf16[] {
  %x.381 = bf16[] parameter(0)
  %y.381 = bf16[] parameter(1)
  ROOT %add.1866 = bf16[] add(%x.381, %y.381)
}

%region_688.24731 (reduce_sum.24728: f32[], reduce_sum.24729: f32[]) -> f32[] {
  %reduce_sum.24728 = f32[] parameter(0)
  %reduce_sum.24729 = f32[] parameter(1)
  ROOT %reduce_sum.24730 = f32[] add(%reduce_sum.24728, %reduce_sum.24729)
}

%region_688.24731.clone (reduce_sum.1580: f32[], reduce_sum.1581: f32[]) -> f32[] {
  %reduce_sum.1580 = f32[] parameter(0)
  %reduce_sum.1581 = f32[] parameter(1)
  ROOT %reduce_sum.1582 = f32[] add(%reduce_sum.1580, %reduce_sum.1581)
}

%add.191.clone (x.383: bf16[], y.383: bf16[]) -> bf16[] {
  %x.383 = bf16[] parameter(0)
  %y.383 = bf16[] parameter(1)
  ROOT %add.1868 = bf16[] add(%x.383, %y.383)
}

%region_689.24742 (reduce_sum.24739: f32[], reduce_sum.24740: f32[]) -> f32[] {
  %reduce_sum.24739 = f32[] parameter(0)
  %reduce_sum.24740 = f32[] parameter(1)
  ROOT %reduce_sum.24741 = f32[] add(%reduce_sum.24739, %reduce_sum.24740)
}

%region_689.24742.clone (reduce_sum.1583: f32[], reduce_sum.1584: f32[]) -> f32[] {
  %reduce_sum.1583 = f32[] parameter(0)
  %reduce_sum.1584 = f32[] parameter(1)
  ROOT %reduce_sum.1585 = f32[] add(%reduce_sum.1583, %reduce_sum.1584)
}

%region_690.24749 (reduce_sum.24746: bf16[], reduce_sum.24747: bf16[]) -> bf16[] {
  %reduce_sum.24746 = bf16[] parameter(0)
  %reduce_sum.24747 = bf16[] parameter(1)
  ROOT %reduce_sum.24748 = bf16[] add(%reduce_sum.24746, %reduce_sum.24747)
}

%region_690.24749.clone (reduce_sum.1589: bf16[], reduce_sum.1591: bf16[]) -> bf16[] {
  %reduce_sum.1589 = bf16[] parameter(0)
  %reduce_sum.1591 = bf16[] parameter(1)
  ROOT %reduce_sum.1592 = bf16[] add(%reduce_sum.1589, %reduce_sum.1591)
}

%region_691.24756 (reduce_sum.24753: f32[], reduce_sum.24754: f32[]) -> f32[] {
  %reduce_sum.24753 = f32[] parameter(0)
  %reduce_sum.24754 = f32[] parameter(1)
  ROOT %reduce_sum.24755 = f32[] add(%reduce_sum.24753, %reduce_sum.24754)
}

%region_692.24767 (reduce_sum.24764: bf16[], reduce_sum.24765: bf16[]) -> bf16[] {
  %reduce_sum.24764 = bf16[] parameter(0)
  %reduce_sum.24765 = bf16[] parameter(1)
  ROOT %reduce_sum.24766 = bf16[] add(%reduce_sum.24764, %reduce_sum.24765)
}

%region_692.24767.clone (reduce_sum.1593: bf16[], reduce_sum.1597: bf16[]) -> bf16[] {
  %reduce_sum.1593 = bf16[] parameter(0)
  %reduce_sum.1597 = bf16[] parameter(1)
  ROOT %reduce_sum.1599 = bf16[] add(%reduce_sum.1593, %reduce_sum.1597)
}

%region_693.24774 (reduce_sum.24771: f32[], reduce_sum.24772: f32[]) -> f32[] {
  %reduce_sum.24771 = f32[] parameter(0)
  %reduce_sum.24772 = f32[] parameter(1)
  ROOT %reduce_sum.24773 = f32[] add(%reduce_sum.24771, %reduce_sum.24772)
}

%add.192.clone (x.385: bf16[], y.385: bf16[]) -> bf16[] {
  %x.385 = bf16[] parameter(0)
  %y.385 = bf16[] parameter(1)
  ROOT %add.1870 = bf16[] add(%x.385, %y.385)
}

%region_694.24788 (reduce_sum.24785: f32[], reduce_sum.24786: f32[]) -> f32[] {
  %reduce_sum.24785 = f32[] parameter(0)
  %reduce_sum.24786 = f32[] parameter(1)
  ROOT %reduce_sum.24787 = f32[] add(%reduce_sum.24785, %reduce_sum.24786)
}

%region_694.24788.clone (reduce_sum.1600: f32[], reduce_sum.1601: f32[]) -> f32[] {
  %reduce_sum.1600 = f32[] parameter(0)
  %reduce_sum.1601 = f32[] parameter(1)
  ROOT %reduce_sum.1602 = f32[] add(%reduce_sum.1600, %reduce_sum.1601)
}

%add.193.clone (x.387: bf16[], y.387: bf16[]) -> bf16[] {
  %x.387 = bf16[] parameter(0)
  %y.387 = bf16[] parameter(1)
  ROOT %add.1872 = bf16[] add(%x.387, %y.387)
}

%region_695.24798 (reduce_sum.24795: f32[], reduce_sum.24796: f32[]) -> f32[] {
  %reduce_sum.24795 = f32[] parameter(0)
  %reduce_sum.24796 = f32[] parameter(1)
  ROOT %reduce_sum.24797 = f32[] add(%reduce_sum.24795, %reduce_sum.24796)
}

%region_695.24798.clone (reduce_sum.1603: f32[], reduce_sum.1604: f32[]) -> f32[] {
  %reduce_sum.1603 = f32[] parameter(0)
  %reduce_sum.1604 = f32[] parameter(1)
  ROOT %reduce_sum.1605 = f32[] add(%reduce_sum.1603, %reduce_sum.1604)
}

%add.194.clone (x.389: bf16[], y.389: bf16[]) -> bf16[] {
  %x.389 = bf16[] parameter(0)
  %y.389 = bf16[] parameter(1)
  ROOT %add.1874 = bf16[] add(%x.389, %y.389)
}

%region_696.24809 (reduce_sum.24806: f32[], reduce_sum.175: f32[]) -> f32[] {
  %reduce_sum.24806 = f32[] parameter(0)
  %reduce_sum.175 = f32[] parameter(1)
  ROOT %reduce_sum.176 = f32[] add(%reduce_sum.24806, %reduce_sum.175)
}

%region_696.24809.clone (reduce_sum.1606: f32[], reduce_sum.1607: f32[]) -> f32[] {
  %reduce_sum.1606 = f32[] parameter(0)
  %reduce_sum.1607 = f32[] parameter(1)
  ROOT %reduce_sum.1608 = f32[] add(%reduce_sum.1606, %reduce_sum.1607)
}

%add.195.clone (x.391: bf16[], y.391: bf16[]) -> bf16[] {
  %x.391 = bf16[] parameter(0)
  %y.391 = bf16[] parameter(1)
  ROOT %add.1879 = bf16[] add(%x.391, %y.391)
}

%region_697.24819 (reduce_sum.177: f32[], reduce_sum.178: f32[]) -> f32[] {
  %reduce_sum.177 = f32[] parameter(0)
  %reduce_sum.178 = f32[] parameter(1)
  ROOT %reduce_sum.24818 = f32[] add(%reduce_sum.177, %reduce_sum.178)
}

%region_697.24819.clone (reduce_sum.1609: f32[], reduce_sum.1610: f32[]) -> f32[] {
  %reduce_sum.1609 = f32[] parameter(0)
  %reduce_sum.1610 = f32[] parameter(1)
  ROOT %reduce_sum.1611 = f32[] add(%reduce_sum.1609, %reduce_sum.1610)
}

%add.196.clone (x.393: bf16[], y.393: bf16[]) -> bf16[] {
  %x.393 = bf16[] parameter(0)
  %y.393 = bf16[] parameter(1)
  ROOT %add.1881 = bf16[] add(%x.393, %y.393)
}

%region_698.24835 (reduce_sum.179: f32[], reduce_sum.180: f32[]) -> f32[] {
  %reduce_sum.179 = f32[] parameter(0)
  %reduce_sum.180 = f32[] parameter(1)
  ROOT %reduce_sum.181 = f32[] add(%reduce_sum.179, %reduce_sum.180)
}

%region_698.24835.clone (reduce_sum.1612: f32[], reduce_sum.1613: f32[]) -> f32[] {
  %reduce_sum.1612 = f32[] parameter(0)
  %reduce_sum.1613 = f32[] parameter(1)
  ROOT %reduce_sum.1614 = f32[] add(%reduce_sum.1612, %reduce_sum.1613)
}

%add.197.clone (x.395: bf16[], y.395: bf16[]) -> bf16[] {
  %x.395 = bf16[] parameter(0)
  %y.395 = bf16[] parameter(1)
  ROOT %add.1883 = bf16[] add(%x.395, %y.395)
}

%region_699.24844 (reduce_sum.24841: f32[], reduce_sum.24842: f32[]) -> f32[] {
  %reduce_sum.24841 = f32[] parameter(0)
  %reduce_sum.24842 = f32[] parameter(1)
  ROOT %reduce_sum.24843 = f32[] add(%reduce_sum.24841, %reduce_sum.24842)
}

%region_699.24844.clone (reduce_sum.1615: f32[], reduce_sum.1616: f32[]) -> f32[] {
  %reduce_sum.1615 = f32[] parameter(0)
  %reduce_sum.1616 = f32[] parameter(1)
  ROOT %reduce_sum.1617 = f32[] add(%reduce_sum.1615, %reduce_sum.1616)
}

%add.198.clone (x.397: bf16[], y.397: bf16[]) -> bf16[] {
  %x.397 = bf16[] parameter(0)
  %y.397 = bf16[] parameter(1)
  ROOT %add.1885 = bf16[] add(%x.397, %y.397)
}

%region_700.24855 (reduce_sum.24852: f32[], reduce_sum.24853: f32[]) -> f32[] {
  %reduce_sum.24852 = f32[] parameter(0)
  %reduce_sum.24853 = f32[] parameter(1)
  ROOT %reduce_sum.24854 = f32[] add(%reduce_sum.24852, %reduce_sum.24853)
}

%region_700.24855.clone (reduce_sum.1621: f32[], reduce_sum.1623: f32[]) -> f32[] {
  %reduce_sum.1621 = f32[] parameter(0)
  %reduce_sum.1623 = f32[] parameter(1)
  ROOT %reduce_sum.1624 = f32[] add(%reduce_sum.1621, %reduce_sum.1623)
}

%region_701.24862 (reduce_sum.24859: bf16[], reduce_sum.24860: bf16[]) -> bf16[] {
  %reduce_sum.24859 = bf16[] parameter(0)
  %reduce_sum.24860 = bf16[] parameter(1)
  ROOT %reduce_sum.24861 = bf16[] add(%reduce_sum.24859, %reduce_sum.24860)
}

%region_701.24862.clone (reduce_sum.1625: bf16[], reduce_sum.1626: bf16[]) -> bf16[] {
  %reduce_sum.1625 = bf16[] parameter(0)
  %reduce_sum.1626 = bf16[] parameter(1)
  ROOT %reduce_sum.1627 = bf16[] add(%reduce_sum.1625, %reduce_sum.1626)
}

%region_702.24869 (reduce_sum.24866: f32[], reduce_sum.24867: f32[]) -> f32[] {
  %reduce_sum.24866 = f32[] parameter(0)
  %reduce_sum.24867 = f32[] parameter(1)
  ROOT %reduce_sum.24868 = f32[] add(%reduce_sum.24866, %reduce_sum.24867)
}

%region_703.24880 (reduce_sum.24877: bf16[], reduce_sum.24878: bf16[]) -> bf16[] {
  %reduce_sum.24877 = bf16[] parameter(0)
  %reduce_sum.24878 = bf16[] parameter(1)
  ROOT %reduce_sum.24879 = bf16[] add(%reduce_sum.24877, %reduce_sum.24878)
}

%region_703.24880.clone (reduce_sum.1628: bf16[], reduce_sum.1629: bf16[]) -> bf16[] {
  %reduce_sum.1628 = bf16[] parameter(0)
  %reduce_sum.1629 = bf16[] parameter(1)
  ROOT %reduce_sum.1630 = bf16[] add(%reduce_sum.1628, %reduce_sum.1629)
}

%region_704.24887 (reduce_sum.24884: f32[], reduce_sum.182: f32[]) -> f32[] {
  %reduce_sum.24884 = f32[] parameter(0)
  %reduce_sum.182 = f32[] parameter(1)
  ROOT %reduce_sum.183 = f32[] add(%reduce_sum.24884, %reduce_sum.182)
}

%add.199.clone (x.399: bf16[], y.399: bf16[]) -> bf16[] {
  %x.399 = bf16[] parameter(0)
  %y.399 = bf16[] parameter(1)
  ROOT %add.1887 = bf16[] add(%x.399, %y.399)
}

%region_705.24901 (reduce_sum.24898: f32[], reduce_sum.184: f32[]) -> f32[] {
  %reduce_sum.24898 = f32[] parameter(0)
  %reduce_sum.184 = f32[] parameter(1)
  ROOT %reduce_sum.24900 = f32[] add(%reduce_sum.24898, %reduce_sum.184)
}

%region_705.24901.clone (reduce_sum.1631: f32[], reduce_sum.1632: f32[]) -> f32[] {
  %reduce_sum.1631 = f32[] parameter(0)
  %reduce_sum.1632 = f32[] parameter(1)
  ROOT %reduce_sum.1633 = f32[] add(%reduce_sum.1631, %reduce_sum.1632)
}

%add.200.clone (x.401: bf16[], y.401: bf16[]) -> bf16[] {
  %x.401 = bf16[] parameter(0)
  %y.401 = bf16[] parameter(1)
  ROOT %add.1889 = bf16[] add(%x.401, %y.401)
}

%region_706.24911 (reduce_sum.24908: f32[], reduce_sum.24909: f32[]) -> f32[] {
  %reduce_sum.24908 = f32[] parameter(0)
  %reduce_sum.24909 = f32[] parameter(1)
  ROOT %reduce_sum.24910 = f32[] add(%reduce_sum.24908, %reduce_sum.24909)
}

%region_706.24911.clone (reduce_sum.1634: f32[], reduce_sum.1635: f32[]) -> f32[] {
  %reduce_sum.1634 = f32[] parameter(0)
  %reduce_sum.1635 = f32[] parameter(1)
  ROOT %reduce_sum.1636 = f32[] add(%reduce_sum.1634, %reduce_sum.1635)
}

%add.201.clone (x.403: bf16[], y.403: bf16[]) -> bf16[] {
  %x.403 = bf16[] parameter(0)
  %y.403 = bf16[] parameter(1)
  ROOT %add.1891 = bf16[] add(%x.403, %y.403)
}

%region_707.24922 (reduce_sum.185: f32[], reduce_sum.24920: f32[]) -> f32[] {
  %reduce_sum.185 = f32[] parameter(0)
  %reduce_sum.24920 = f32[] parameter(1)
  ROOT %reduce_sum.24921 = f32[] add(%reduce_sum.185, %reduce_sum.24920)
}

%region_707.24922.clone (reduce_sum.1637: f32[], reduce_sum.1638: f32[]) -> f32[] {
  %reduce_sum.1637 = f32[] parameter(0)
  %reduce_sum.1638 = f32[] parameter(1)
  ROOT %reduce_sum.1639 = f32[] add(%reduce_sum.1637, %reduce_sum.1638)
}

%add.202.clone (x.405: bf16[], y.405: bf16[]) -> bf16[] {
  %x.405 = bf16[] parameter(0)
  %y.405 = bf16[] parameter(1)
  ROOT %add.1893 = bf16[] add(%x.405, %y.405)
}

%region_708.24932 (reduce_sum.24929: f32[], reduce_sum.24930: f32[]) -> f32[] {
  %reduce_sum.24929 = f32[] parameter(0)
  %reduce_sum.24930 = f32[] parameter(1)
  ROOT %reduce_sum.24931 = f32[] add(%reduce_sum.24929, %reduce_sum.24930)
}

%region_708.24932.clone (reduce_sum.1640: f32[], reduce_sum.1641: f32[]) -> f32[] {
  %reduce_sum.1640 = f32[] parameter(0)
  %reduce_sum.1641 = f32[] parameter(1)
  ROOT %reduce_sum.1642 = f32[] add(%reduce_sum.1640, %reduce_sum.1641)
}

%add.203.clone (x.407: bf16[], y.407: bf16[]) -> bf16[] {
  %x.407 = bf16[] parameter(0)
  %y.407 = bf16[] parameter(1)
  ROOT %add.1895 = bf16[] add(%x.407, %y.407)
}

%region_709.24948 (reduce_sum.24945: f32[], reduce_sum.24946: f32[]) -> f32[] {
  %reduce_sum.24945 = f32[] parameter(0)
  %reduce_sum.24946 = f32[] parameter(1)
  ROOT %reduce_sum.24947 = f32[] add(%reduce_sum.24945, %reduce_sum.24946)
}

%region_709.24948.clone (reduce_sum.1643: f32[], reduce_sum.1644: f32[]) -> f32[] {
  %reduce_sum.1643 = f32[] parameter(0)
  %reduce_sum.1644 = f32[] parameter(1)
  ROOT %reduce_sum.1645 = f32[] add(%reduce_sum.1643, %reduce_sum.1644)
}

%add.204.clone (x.409: bf16[], y.409: bf16[]) -> bf16[] {
  %x.409 = bf16[] parameter(0)
  %y.409 = bf16[] parameter(1)
  ROOT %add.1901 = bf16[] add(%x.409, %y.409)
}

%region_710.24957 (reduce_sum.24954: f32[], reduce_sum.24955: f32[]) -> f32[] {
  %reduce_sum.24954 = f32[] parameter(0)
  %reduce_sum.24955 = f32[] parameter(1)
  ROOT %reduce_sum.24956 = f32[] add(%reduce_sum.24954, %reduce_sum.24955)
}

%region_710.24957.clone (reduce_sum.1646: f32[], reduce_sum.1647: f32[]) -> f32[] {
  %reduce_sum.1646 = f32[] parameter(0)
  %reduce_sum.1647 = f32[] parameter(1)
  ROOT %reduce_sum.1648 = f32[] add(%reduce_sum.1646, %reduce_sum.1647)
}

%add.205.clone (x.411: bf16[], y.411: bf16[]) -> bf16[] {
  %x.411 = bf16[] parameter(0)
  %y.411 = bf16[] parameter(1)
  ROOT %add.1903 = bf16[] add(%x.411, %y.411)
}

%region_711.24968 (reduce_sum.24965: f32[], reduce_sum.24966: f32[]) -> f32[] {
  %reduce_sum.24965 = f32[] parameter(0)
  %reduce_sum.24966 = f32[] parameter(1)
  ROOT %reduce_sum.24967 = f32[] add(%reduce_sum.24965, %reduce_sum.24966)
}

%region_711.24968.clone (reduce_sum.1649: f32[], reduce_sum.1650: f32[]) -> f32[] {
  %reduce_sum.1649 = f32[] parameter(0)
  %reduce_sum.1650 = f32[] parameter(1)
  ROOT %reduce_sum.1651 = f32[] add(%reduce_sum.1649, %reduce_sum.1650)
}

%region_712.24975 (reduce_sum.24972: bf16[], reduce_sum.24973: bf16[]) -> bf16[] {
  %reduce_sum.24972 = bf16[] parameter(0)
  %reduce_sum.24973 = bf16[] parameter(1)
  ROOT %reduce_sum.24974 = bf16[] add(%reduce_sum.24972, %reduce_sum.24973)
}

%region_712.24975.clone (reduce_sum.1652: bf16[], reduce_sum.1653: bf16[]) -> bf16[] {
  %reduce_sum.1652 = bf16[] parameter(0)
  %reduce_sum.1653 = bf16[] parameter(1)
  ROOT %reduce_sum.1654 = bf16[] add(%reduce_sum.1652, %reduce_sum.1653)
}

%region_713.24982 (reduce_sum.24979: f32[], reduce_sum.24980: f32[]) -> f32[] {
  %reduce_sum.24979 = f32[] parameter(0)
  %reduce_sum.24980 = f32[] parameter(1)
  ROOT %reduce_sum.24981 = f32[] add(%reduce_sum.24979, %reduce_sum.24980)
}

%region_714.24993 (reduce_sum.24990: bf16[], reduce_sum.24991: bf16[]) -> bf16[] {
  %reduce_sum.24990 = bf16[] parameter(0)
  %reduce_sum.24991 = bf16[] parameter(1)
  ROOT %reduce_sum.24992 = bf16[] add(%reduce_sum.24990, %reduce_sum.24991)
}

%region_714.24993.clone (reduce_sum.1655: bf16[], reduce_sum.1659: bf16[]) -> bf16[] {
  %reduce_sum.1655 = bf16[] parameter(0)
  %reduce_sum.1659 = bf16[] parameter(1)
  ROOT %reduce_sum.1661 = bf16[] add(%reduce_sum.1655, %reduce_sum.1659)
}

%region_715.25000 (reduce_sum.24997: f32[], reduce_sum.24998: f32[]) -> f32[] {
  %reduce_sum.24997 = f32[] parameter(0)
  %reduce_sum.24998 = f32[] parameter(1)
  ROOT %reduce_sum.24999 = f32[] add(%reduce_sum.24997, %reduce_sum.24998)
}

%add.206.clone (x.413: bf16[], y.413: bf16[]) -> bf16[] {
  %x.413 = bf16[] parameter(0)
  %y.413 = bf16[] parameter(1)
  ROOT %add.1905 = bf16[] add(%x.413, %y.413)
}

%region_716.25014 (reduce_sum.25011: f32[], reduce_sum.25012: f32[]) -> f32[] {
  %reduce_sum.25011 = f32[] parameter(0)
  %reduce_sum.25012 = f32[] parameter(1)
  ROOT %reduce_sum.25013 = f32[] add(%reduce_sum.25011, %reduce_sum.25012)
}

%region_716.25014.clone (reduce_sum.1662: f32[], reduce_sum.1663: f32[]) -> f32[] {
  %reduce_sum.1662 = f32[] parameter(0)
  %reduce_sum.1663 = f32[] parameter(1)
  ROOT %reduce_sum.1664 = f32[] add(%reduce_sum.1662, %reduce_sum.1663)
}

%add.207.clone (x.415: bf16[], y.415: bf16[]) -> bf16[] {
  %x.415 = bf16[] parameter(0)
  %y.415 = bf16[] parameter(1)
  ROOT %add.1908 = bf16[] add(%x.415, %y.415)
}

%region_717.25024 (reduce_sum.186: f32[], reduce_sum.25022: f32[]) -> f32[] {
  %reduce_sum.186 = f32[] parameter(0)
  %reduce_sum.25022 = f32[] parameter(1)
  ROOT %reduce_sum.187 = f32[] add(%reduce_sum.186, %reduce_sum.25022)
}

%region_717.25024.clone (reduce_sum.1665: f32[], reduce_sum.1666: f32[]) -> f32[] {
  %reduce_sum.1665 = f32[] parameter(0)
  %reduce_sum.1666 = f32[] parameter(1)
  ROOT %reduce_sum.1667 = f32[] add(%reduce_sum.1665, %reduce_sum.1666)
}

%add.208.clone (x.417: bf16[], y.417: bf16[]) -> bf16[] {
  %x.417 = bf16[] parameter(0)
  %y.417 = bf16[] parameter(1)
  ROOT %add.1910 = bf16[] add(%x.417, %y.417)
}

%region_718.25035 (reduce_sum.25032: f32[], reduce_sum.188: f32[]) -> f32[] {
  %reduce_sum.25032 = f32[] parameter(0)
  %reduce_sum.188 = f32[] parameter(1)
  ROOT %reduce_sum.25034 = f32[] add(%reduce_sum.25032, %reduce_sum.188)
}

%region_718.25035.clone (reduce_sum.1668: f32[], reduce_sum.1669: f32[]) -> f32[] {
  %reduce_sum.1668 = f32[] parameter(0)
  %reduce_sum.1669 = f32[] parameter(1)
  ROOT %reduce_sum.1670 = f32[] add(%reduce_sum.1668, %reduce_sum.1669)
}

%add.209.clone (x.419: bf16[], y.419: bf16[]) -> bf16[] {
  %x.419 = bf16[] parameter(0)
  %y.419 = bf16[] parameter(1)
  ROOT %add.1912 = bf16[] add(%x.419, %y.419)
}

%region_719.25045 (reduce_sum.25042: f32[], reduce_sum.25043: f32[]) -> f32[] {
  %reduce_sum.25042 = f32[] parameter(0)
  %reduce_sum.25043 = f32[] parameter(1)
  ROOT %reduce_sum.25044 = f32[] add(%reduce_sum.25042, %reduce_sum.25043)
}

%region_719.25045.clone (reduce_sum.1671: f32[], reduce_sum.1672: f32[]) -> f32[] {
  %reduce_sum.1671 = f32[] parameter(0)
  %reduce_sum.1672 = f32[] parameter(1)
  ROOT %reduce_sum.1673 = f32[] add(%reduce_sum.1671, %reduce_sum.1672)
}

%add.210.clone (x.421: bf16[], y.421: bf16[]) -> bf16[] {
  %x.421 = bf16[] parameter(0)
  %y.421 = bf16[] parameter(1)
  ROOT %add.1914 = bf16[] add(%x.421, %y.421)
}

%region_720.25061 (reduce_sum.25058: f32[], reduce_sum.25059: f32[]) -> f32[] {
  %reduce_sum.25058 = f32[] parameter(0)
  %reduce_sum.25059 = f32[] parameter(1)
  ROOT %reduce_sum.25060 = f32[] add(%reduce_sum.25058, %reduce_sum.25059)
}

%region_720.25061.clone (reduce_sum.1674: f32[], reduce_sum.1675: f32[]) -> f32[] {
  %reduce_sum.1674 = f32[] parameter(0)
  %reduce_sum.1675 = f32[] parameter(1)
  ROOT %reduce_sum.1676 = f32[] add(%reduce_sum.1674, %reduce_sum.1675)
}

%add.211.clone (x.423: bf16[], y.423: bf16[]) -> bf16[] {
  %x.423 = bf16[] parameter(0)
  %y.423 = bf16[] parameter(1)
  ROOT %add.1916 = bf16[] add(%x.423, %y.423)
}

%region_721.25070 (reduce_sum.25067: f32[], reduce_sum.25068: f32[]) -> f32[] {
  %reduce_sum.25067 = f32[] parameter(0)
  %reduce_sum.25068 = f32[] parameter(1)
  ROOT %reduce_sum.25069 = f32[] add(%reduce_sum.25067, %reduce_sum.25068)
}

%region_721.25070.clone (reduce_sum.1677: f32[], reduce_sum.1678: f32[]) -> f32[] {
  %reduce_sum.1677 = f32[] parameter(0)
  %reduce_sum.1678 = f32[] parameter(1)
  ROOT %reduce_sum.1679 = f32[] add(%reduce_sum.1677, %reduce_sum.1678)
}

%add.212.clone (x.425: bf16[], y.425: bf16[]) -> bf16[] {
  %x.425 = bf16[] parameter(0)
  %y.425 = bf16[] parameter(1)
  ROOT %add.1921 = bf16[] add(%x.425, %y.425)
}

%region_722.25081 (reduce_sum.25078: f32[], reduce_sum.25079: f32[]) -> f32[] {
  %reduce_sum.25078 = f32[] parameter(0)
  %reduce_sum.25079 = f32[] parameter(1)
  ROOT %reduce_sum.25080 = f32[] add(%reduce_sum.25078, %reduce_sum.25079)
}

%region_722.25081.clone (reduce_sum.1680: f32[], reduce_sum.1681: f32[]) -> f32[] {
  %reduce_sum.1680 = f32[] parameter(0)
  %reduce_sum.1681 = f32[] parameter(1)
  ROOT %reduce_sum.1682 = f32[] add(%reduce_sum.1680, %reduce_sum.1681)
}

%region_723.25088 (reduce_sum.25085: bf16[], reduce_sum.25086: bf16[]) -> bf16[] {
  %reduce_sum.25085 = bf16[] parameter(0)
  %reduce_sum.25086 = bf16[] parameter(1)
  ROOT %reduce_sum.25087 = bf16[] add(%reduce_sum.25085, %reduce_sum.25086)
}

%region_723.25088.clone (reduce_sum.1683: bf16[], reduce_sum.1684: bf16[]) -> bf16[] {
  %reduce_sum.1683 = bf16[] parameter(0)
  %reduce_sum.1684 = bf16[] parameter(1)
  ROOT %reduce_sum.1685 = bf16[] add(%reduce_sum.1683, %reduce_sum.1684)
}

%region_724.25095 (reduce_sum.189: f32[], reduce_sum.25093: f32[]) -> f32[] {
  %reduce_sum.189 = f32[] parameter(0)
  %reduce_sum.25093 = f32[] parameter(1)
  ROOT %reduce_sum.190 = f32[] add(%reduce_sum.189, %reduce_sum.25093)
}

%region_725.25106 (reduce_sum.25103: bf16[], reduce_sum.25104: bf16[]) -> bf16[] {
  %reduce_sum.25103 = bf16[] parameter(0)
  %reduce_sum.25104 = bf16[] parameter(1)
  ROOT %reduce_sum.25105 = bf16[] add(%reduce_sum.25103, %reduce_sum.25104)
}

%region_725.25106.clone (reduce_sum.1686: bf16[], reduce_sum.1687: bf16[]) -> bf16[] {
  %reduce_sum.1686 = bf16[] parameter(0)
  %reduce_sum.1687 = bf16[] parameter(1)
  ROOT %reduce_sum.1688 = bf16[] add(%reduce_sum.1686, %reduce_sum.1687)
}

%region_726.25113 (reduce_sum.25110: f32[], reduce_sum.25111: f32[]) -> f32[] {
  %reduce_sum.25110 = f32[] parameter(0)
  %reduce_sum.25111 = f32[] parameter(1)
  ROOT %reduce_sum.25112 = f32[] add(%reduce_sum.25110, %reduce_sum.25111)
}

%add.213.clone (x.427: bf16[], y.427: bf16[]) -> bf16[] {
  %x.427 = bf16[] parameter(0)
  %y.427 = bf16[] parameter(1)
  ROOT %add.1923 = bf16[] add(%x.427, %y.427)
}

%region_727.25127 (reduce_sum.25124: f32[], reduce_sum.25125: f32[]) -> f32[] {
  %reduce_sum.25124 = f32[] parameter(0)
  %reduce_sum.25125 = f32[] parameter(1)
  ROOT %reduce_sum.25126 = f32[] add(%reduce_sum.25124, %reduce_sum.25125)
}

%region_727.25127.clone (reduce_sum.1689: f32[], reduce_sum.1690: f32[]) -> f32[] {
  %reduce_sum.1689 = f32[] parameter(0)
  %reduce_sum.1690 = f32[] parameter(1)
  ROOT %reduce_sum.1691 = f32[] add(%reduce_sum.1689, %reduce_sum.1690)
}

%add.214.clone (x.429: bf16[], y.429: bf16[]) -> bf16[] {
  %x.429 = bf16[] parameter(0)
  %y.429 = bf16[] parameter(1)
  ROOT %add.1925 = bf16[] add(%x.429, %y.429)
}

%region_728.25137 (reduce_sum.25134: f32[], reduce_sum.25135: f32[]) -> f32[] {
  %reduce_sum.25134 = f32[] parameter(0)
  %reduce_sum.25135 = f32[] parameter(1)
  ROOT %reduce_sum.25136 = f32[] add(%reduce_sum.25134, %reduce_sum.25135)
}

%region_728.25137.clone (reduce_sum.1692: f32[], reduce_sum.1693: f32[]) -> f32[] {
  %reduce_sum.1692 = f32[] parameter(0)
  %reduce_sum.1693 = f32[] parameter(1)
  ROOT %reduce_sum.1694 = f32[] add(%reduce_sum.1692, %reduce_sum.1693)
}

%add.215.clone (x.431: bf16[], y.431: bf16[]) -> bf16[] {
  %x.431 = bf16[] parameter(0)
  %y.431 = bf16[] parameter(1)
  ROOT %add.1927 = bf16[] add(%x.431, %y.431)
}

%region_729.25148 (reduce_sum.25145: f32[], reduce_sum.25146: f32[]) -> f32[] {
  %reduce_sum.25145 = f32[] parameter(0)
  %reduce_sum.25146 = f32[] parameter(1)
  ROOT %reduce_sum.25147 = f32[] add(%reduce_sum.25145, %reduce_sum.25146)
}

%region_729.25148.clone (reduce_sum.1695: f32[], reduce_sum.1696: f32[]) -> f32[] {
  %reduce_sum.1695 = f32[] parameter(0)
  %reduce_sum.1696 = f32[] parameter(1)
  ROOT %reduce_sum.1697 = f32[] add(%reduce_sum.1695, %reduce_sum.1696)
}

%add.216.clone (x.433: bf16[], y.433: bf16[]) -> bf16[] {
  %x.433 = bf16[] parameter(0)
  %y.433 = bf16[] parameter(1)
  ROOT %add.1929 = bf16[] add(%x.433, %y.433)
}

%region_730.25158 (reduce_sum.25155: f32[], reduce_sum.25156: f32[]) -> f32[] {
  %reduce_sum.25155 = f32[] parameter(0)
  %reduce_sum.25156 = f32[] parameter(1)
  ROOT %reduce_sum.25157 = f32[] add(%reduce_sum.25155, %reduce_sum.25156)
}

%region_730.25158.clone (reduce_sum.1698: f32[], reduce_sum.1699: f32[]) -> f32[] {
  %reduce_sum.1698 = f32[] parameter(0)
  %reduce_sum.1699 = f32[] parameter(1)
  ROOT %reduce_sum.1700 = f32[] add(%reduce_sum.1698, %reduce_sum.1699)
}

%add.217.clone (x.435: bf16[], y.435: bf16[]) -> bf16[] {
  %x.435 = bf16[] parameter(0)
  %y.435 = bf16[] parameter(1)
  ROOT %add.1931 = bf16[] add(%x.435, %y.435)
}

%region_731.25174 (reduce_sum.25171: f32[], reduce_sum.25172: f32[]) -> f32[] {
  %reduce_sum.25171 = f32[] parameter(0)
  %reduce_sum.25172 = f32[] parameter(1)
  ROOT %reduce_sum.25173 = f32[] add(%reduce_sum.25171, %reduce_sum.25172)
}

%region_731.25174.clone (reduce_sum.1701: f32[], reduce_sum.1702: f32[]) -> f32[] {
  %reduce_sum.1701 = f32[] parameter(0)
  %reduce_sum.1702 = f32[] parameter(1)
  ROOT %reduce_sum.1703 = f32[] add(%reduce_sum.1701, %reduce_sum.1702)
}

%add.218.clone (x.437: bf16[], y.437: bf16[]) -> bf16[] {
  %x.437 = bf16[] parameter(0)
  %y.437 = bf16[] parameter(1)
  ROOT %add.1934 = bf16[] add(%x.437, %y.437)
}

%region_732.25183 (reduce_sum.25180: f32[], reduce_sum.25181: f32[]) -> f32[] {
  %reduce_sum.25180 = f32[] parameter(0)
  %reduce_sum.25181 = f32[] parameter(1)
  ROOT %reduce_sum.25182 = f32[] add(%reduce_sum.25180, %reduce_sum.25181)
}

%region_732.25183.clone (reduce_sum.1704: f32[], reduce_sum.1705: f32[]) -> f32[] {
  %reduce_sum.1704 = f32[] parameter(0)
  %reduce_sum.1705 = f32[] parameter(1)
  ROOT %reduce_sum.1706 = f32[] add(%reduce_sum.1704, %reduce_sum.1705)
}

%add.219.clone (x.439: bf16[], y.439: bf16[]) -> bf16[] {
  %x.439 = bf16[] parameter(0)
  %y.439 = bf16[] parameter(1)
  ROOT %add.1936 = bf16[] add(%x.439, %y.439)
}

%region_733.25194 (reduce_sum.25191: f32[], reduce_sum.25192: f32[]) -> f32[] {
  %reduce_sum.25191 = f32[] parameter(0)
  %reduce_sum.25192 = f32[] parameter(1)
  ROOT %reduce_sum.25193 = f32[] add(%reduce_sum.25191, %reduce_sum.25192)
}

%region_733.25194.clone (reduce_sum.1707: f32[], reduce_sum.1708: f32[]) -> f32[] {
  %reduce_sum.1707 = f32[] parameter(0)
  %reduce_sum.1708 = f32[] parameter(1)
  ROOT %reduce_sum.1709 = f32[] add(%reduce_sum.1707, %reduce_sum.1708)
}

%region_734.25201 (reduce_sum.25198: bf16[], reduce_sum.25199: bf16[]) -> bf16[] {
  %reduce_sum.25198 = bf16[] parameter(0)
  %reduce_sum.25199 = bf16[] parameter(1)
  ROOT %reduce_sum.25200 = bf16[] add(%reduce_sum.25198, %reduce_sum.25199)
}

%region_734.25201.clone (reduce_sum.1710: bf16[], reduce_sum.1711: bf16[]) -> bf16[] {
  %reduce_sum.1710 = bf16[] parameter(0)
  %reduce_sum.1711 = bf16[] parameter(1)
  ROOT %reduce_sum.1712 = bf16[] add(%reduce_sum.1710, %reduce_sum.1711)
}

%region_735.25208 (reduce_sum.25205: f32[], reduce_sum.25206: f32[]) -> f32[] {
  %reduce_sum.25205 = f32[] parameter(0)
  %reduce_sum.25206 = f32[] parameter(1)
  ROOT %reduce_sum.25207 = f32[] add(%reduce_sum.25205, %reduce_sum.25206)
}

%region_736.25219 (reduce_sum.25216: bf16[], reduce_sum.25217: bf16[]) -> bf16[] {
  %reduce_sum.25216 = bf16[] parameter(0)
  %reduce_sum.25217 = bf16[] parameter(1)
  ROOT %reduce_sum.25218 = bf16[] add(%reduce_sum.25216, %reduce_sum.25217)
}

%region_736.25219.clone (reduce_sum.1713: bf16[], reduce_sum.1714: bf16[]) -> bf16[] {
  %reduce_sum.1713 = bf16[] parameter(0)
  %reduce_sum.1714 = bf16[] parameter(1)
  ROOT %reduce_sum.1715 = bf16[] add(%reduce_sum.1713, %reduce_sum.1714)
}

%region_737.25226 (reduce_sum.25223: f32[], reduce_sum.25224: f32[]) -> f32[] {
  %reduce_sum.25223 = f32[] parameter(0)
  %reduce_sum.25224 = f32[] parameter(1)
  ROOT %reduce_sum.25225 = f32[] add(%reduce_sum.25223, %reduce_sum.25224)
}

%add.220.clone (x.441: bf16[], y.441: bf16[]) -> bf16[] {
  %x.441 = bf16[] parameter(0)
  %y.441 = bf16[] parameter(1)
  ROOT %add.1938 = bf16[] add(%x.441, %y.441)
}

%region_738.25240 (reduce_sum.25237: f32[], reduce_sum.25238: f32[]) -> f32[] {
  %reduce_sum.25237 = f32[] parameter(0)
  %reduce_sum.25238 = f32[] parameter(1)
  ROOT %reduce_sum.25239 = f32[] add(%reduce_sum.25237, %reduce_sum.25238)
}

%region_738.25240.clone (reduce_sum.1716: f32[], reduce_sum.1717: f32[]) -> f32[] {
  %reduce_sum.1716 = f32[] parameter(0)
  %reduce_sum.1717 = f32[] parameter(1)
  ROOT %reduce_sum.1718 = f32[] add(%reduce_sum.1716, %reduce_sum.1717)
}

%add.221.clone (x.443: bf16[], y.443: bf16[]) -> bf16[] {
  %x.443 = bf16[] parameter(0)
  %y.443 = bf16[] parameter(1)
  ROOT %add.1943 = bf16[] add(%x.443, %y.443)
}

%region_739.25250 (reduce_sum.25247: f32[], reduce_sum.25248: f32[]) -> f32[] {
  %reduce_sum.25247 = f32[] parameter(0)
  %reduce_sum.25248 = f32[] parameter(1)
  ROOT %reduce_sum.25249 = f32[] add(%reduce_sum.25247, %reduce_sum.25248)
}

%region_739.25250.clone (reduce_sum.1719: f32[], reduce_sum.1720: f32[]) -> f32[] {
  %reduce_sum.1719 = f32[] parameter(0)
  %reduce_sum.1720 = f32[] parameter(1)
  ROOT %reduce_sum.1721 = f32[] add(%reduce_sum.1719, %reduce_sum.1720)
}

%add.222.clone (x.445: bf16[], y.445: bf16[]) -> bf16[] {
  %x.445 = bf16[] parameter(0)
  %y.445 = bf16[] parameter(1)
  ROOT %add.1946 = bf16[] add(%x.445, %y.445)
}

%region_740.25261 (reduce_sum.25258: f32[], reduce_sum.25259: f32[]) -> f32[] {
  %reduce_sum.25258 = f32[] parameter(0)
  %reduce_sum.25259 = f32[] parameter(1)
  ROOT %reduce_sum.25260 = f32[] add(%reduce_sum.25258, %reduce_sum.25259)
}

%region_740.25261.clone (reduce_sum.1722: f32[], reduce_sum.1723: f32[]) -> f32[] {
  %reduce_sum.1722 = f32[] parameter(0)
  %reduce_sum.1723 = f32[] parameter(1)
  ROOT %reduce_sum.1724 = f32[] add(%reduce_sum.1722, %reduce_sum.1723)
}

%add.223.clone (x.447: bf16[], y.447: bf16[]) -> bf16[] {
  %x.447 = bf16[] parameter(0)
  %y.447 = bf16[] parameter(1)
  ROOT %add.1948 = bf16[] add(%x.447, %y.447)
}

%region_741.25271 (reduce_sum.25268: f32[], reduce_sum.25269: f32[]) -> f32[] {
  %reduce_sum.25268 = f32[] parameter(0)
  %reduce_sum.25269 = f32[] parameter(1)
  ROOT %reduce_sum.25270 = f32[] add(%reduce_sum.25268, %reduce_sum.25269)
}

%region_741.25271.clone (reduce_sum.1725: f32[], reduce_sum.1726: f32[]) -> f32[] {
  %reduce_sum.1725 = f32[] parameter(0)
  %reduce_sum.1726 = f32[] parameter(1)
  ROOT %reduce_sum.1727 = f32[] add(%reduce_sum.1725, %reduce_sum.1726)
}

%add.224.clone (x.449: bf16[], y.449: bf16[]) -> bf16[] {
  %x.449 = bf16[] parameter(0)
  %y.449 = bf16[] parameter(1)
  ROOT %add.1950 = bf16[] add(%x.449, %y.449)
}

%region_742.25280 (reduce_sum.25277: f32[], reduce_sum.25278: f32[]) -> f32[] {
  %reduce_sum.25277 = f32[] parameter(0)
  %reduce_sum.25278 = f32[] parameter(1)
  ROOT %reduce_sum.25279 = f32[] add(%reduce_sum.25277, %reduce_sum.25278)
}

%region_742.25280.clone (reduce_sum.1728: f32[], reduce_sum.1729: f32[]) -> f32[] {
  %reduce_sum.1728 = f32[] parameter(0)
  %reduce_sum.1729 = f32[] parameter(1)
  ROOT %reduce_sum.1730 = f32[] add(%reduce_sum.1728, %reduce_sum.1729)
}

%region_743.25293 (reduce_sum.25290: f32[], reduce_sum.25291: f32[]) -> f32[] {
  %reduce_sum.25290 = f32[] parameter(0)
  %reduce_sum.25291 = f32[] parameter(1)
  ROOT %reduce_sum.25292 = f32[] add(%reduce_sum.25290, %reduce_sum.25291)
}

%add.225.clone (x.451: bf16[], y.451: bf16[]) -> bf16[] {
  %x.451 = bf16[] parameter(0)
  %y.451 = bf16[] parameter(1)
  ROOT %add.1952 = bf16[] add(%x.451, %y.451)
}

%region_744.25314 (reduce_sum.191: f32[], reduce_sum.25312: f32[]) -> f32[] {
  %reduce_sum.191 = f32[] parameter(0)
  %reduce_sum.25312 = f32[] parameter(1)
  ROOT %reduce_sum.25313 = f32[] add(%reduce_sum.191, %reduce_sum.25312)
}

%region_744.25314.clone (reduce_sum.1731: f32[], reduce_sum.1732: f32[]) -> f32[] {
  %reduce_sum.1731 = f32[] parameter(0)
  %reduce_sum.1732 = f32[] parameter(1)
  ROOT %reduce_sum.1733 = f32[] add(%reduce_sum.1731, %reduce_sum.1732)
}

%region_745.30657 (reduce_sum.30654: f32[], reduce_sum.30655: f32[]) -> f32[] {
  %reduce_sum.30654 = f32[] parameter(0)
  %reduce_sum.30655 = f32[] parameter(1)
  ROOT %reduce_sum.30656 = f32[] add(%reduce_sum.30654, %reduce_sum.30655)
}

%region_746.30663 (reduce_sum.30660: f32[], reduce_sum.30661: f32[]) -> f32[] {
  %reduce_sum.30660 = f32[] parameter(0)
  %reduce_sum.30661 = f32[] parameter(1)
  ROOT %reduce_sum.30662 = f32[] add(%reduce_sum.30660, %reduce_sum.30661)
}

%region_746.30663.clone (reduce_sum.1734: f32[], reduce_sum.1735: f32[]) -> f32[] {
  %reduce_sum.1734 = f32[] parameter(0)
  %reduce_sum.1735 = f32[] parameter(1)
  ROOT %reduce_sum.1736 = f32[] add(%reduce_sum.1734, %reduce_sum.1735)
}

%region_747.30670 (reduce_sum.30667: f32[], reduce_sum.30668: f32[]) -> f32[] {
  %reduce_sum.30667 = f32[] parameter(0)
  %reduce_sum.30668 = f32[] parameter(1)
  ROOT %reduce_sum.30669 = f32[] add(%reduce_sum.30667, %reduce_sum.30668)
}

%region_747.30670.clone (reduce_sum.1737: f32[], reduce_sum.1738: f32[]) -> f32[] {
  %reduce_sum.1737 = f32[] parameter(0)
  %reduce_sum.1738 = f32[] parameter(1)
  ROOT %reduce_sum.1739 = f32[] add(%reduce_sum.1737, %reduce_sum.1738)
}

%region_748.30677 (reduce_sum.30674: f32[], reduce_sum.30675: f32[]) -> f32[] {
  %reduce_sum.30674 = f32[] parameter(0)
  %reduce_sum.30675 = f32[] parameter(1)
  ROOT %reduce_sum.30676 = f32[] add(%reduce_sum.30674, %reduce_sum.30675)
}

%region_748.30677.clone (reduce_sum.1740: f32[], reduce_sum.1741: f32[]) -> f32[] {
  %reduce_sum.1740 = f32[] parameter(0)
  %reduce_sum.1741 = f32[] parameter(1)
  ROOT %reduce_sum.1742 = f32[] add(%reduce_sum.1740, %reduce_sum.1741)
}

%region_749.30684 (reduce_sum.30681: f32[], reduce_sum.30682: f32[]) -> f32[] {
  %reduce_sum.30681 = f32[] parameter(0)
  %reduce_sum.30682 = f32[] parameter(1)
  ROOT %reduce_sum.30683 = f32[] add(%reduce_sum.30681, %reduce_sum.30682)
}

%region_750.30691 (reduce_sum.30688: f32[], reduce_sum.30689: f32[]) -> f32[] {
  %reduce_sum.30688 = f32[] parameter(0)
  %reduce_sum.30689 = f32[] parameter(1)
  ROOT %reduce_sum.30690 = f32[] add(%reduce_sum.30688, %reduce_sum.30689)
}

%region_751.30698 (reduce_sum.30695: f32[], reduce_sum.30696: f32[]) -> f32[] {
  %reduce_sum.30695 = f32[] parameter(0)
  %reduce_sum.30696 = f32[] parameter(1)
  ROOT %reduce_sum.30697 = f32[] add(%reduce_sum.30695, %reduce_sum.30696)
}

%region_751.30698.clone (reduce_sum.1743: f32[], reduce_sum.1744: f32[]) -> f32[] {
  %reduce_sum.1743 = f32[] parameter(0)
  %reduce_sum.1744 = f32[] parameter(1)
  ROOT %reduce_sum.1745 = f32[] add(%reduce_sum.1743, %reduce_sum.1744)
}

%region_752.30705 (reduce_sum.30702: f32[], reduce_sum.30703: f32[]) -> f32[] {
  %reduce_sum.30702 = f32[] parameter(0)
  %reduce_sum.30703 = f32[] parameter(1)
  ROOT %reduce_sum.30704 = f32[] add(%reduce_sum.30702, %reduce_sum.30703)
}

%region_752.30705.clone (reduce_sum.1746: f32[], reduce_sum.1747: f32[]) -> f32[] {
  %reduce_sum.1746 = f32[] parameter(0)
  %reduce_sum.1747 = f32[] parameter(1)
  ROOT %reduce_sum.1748 = f32[] add(%reduce_sum.1746, %reduce_sum.1747)
}

%region_753.30712 (reduce_sum.30709: f32[], reduce_sum.30710: f32[]) -> f32[] {
  %reduce_sum.30709 = f32[] parameter(0)
  %reduce_sum.30710 = f32[] parameter(1)
  ROOT %reduce_sum.30711 = f32[] add(%reduce_sum.30709, %reduce_sum.30710)
}

%region_753.30712.clone (reduce_sum.1749: f32[], reduce_sum.1750: f32[]) -> f32[] {
  %reduce_sum.1749 = f32[] parameter(0)
  %reduce_sum.1750 = f32[] parameter(1)
  ROOT %reduce_sum.1751 = f32[] add(%reduce_sum.1749, %reduce_sum.1750)
}

%region_754.30719 (reduce_sum.30716: f32[], reduce_sum.30717: f32[]) -> f32[] {
  %reduce_sum.30716 = f32[] parameter(0)
  %reduce_sum.30717 = f32[] parameter(1)
  ROOT %reduce_sum.30718 = f32[] add(%reduce_sum.30716, %reduce_sum.30717)
}

%region_754.30719.clone (reduce_sum.1752: f32[], reduce_sum.1753: f32[]) -> f32[] {
  %reduce_sum.1752 = f32[] parameter(0)
  %reduce_sum.1753 = f32[] parameter(1)
  ROOT %reduce_sum.1754 = f32[] add(%reduce_sum.1752, %reduce_sum.1753)
}

%region_755.30726 (reduce_sum.30723: f32[], reduce_sum.30724: f32[]) -> f32[] {
  %reduce_sum.30723 = f32[] parameter(0)
  %reduce_sum.30724 = f32[] parameter(1)
  ROOT %reduce_sum.30725 = f32[] add(%reduce_sum.30723, %reduce_sum.30724)
}

%region_755.30726.clone (reduce_sum.1755: f32[], reduce_sum.1756: f32[]) -> f32[] {
  %reduce_sum.1755 = f32[] parameter(0)
  %reduce_sum.1756 = f32[] parameter(1)
  ROOT %reduce_sum.1757 = f32[] add(%reduce_sum.1755, %reduce_sum.1756)
}

%region_756.30733 (reduce_sum.30730: f32[], reduce_sum.30731: f32[]) -> f32[] {
  %reduce_sum.30730 = f32[] parameter(0)
  %reduce_sum.30731 = f32[] parameter(1)
  ROOT %reduce_sum.30732 = f32[] add(%reduce_sum.30730, %reduce_sum.30731)
}

%region_756.30733.clone (reduce_sum.1758: f32[], reduce_sum.1759: f32[]) -> f32[] {
  %reduce_sum.1758 = f32[] parameter(0)
  %reduce_sum.1759 = f32[] parameter(1)
  ROOT %reduce_sum.1760 = f32[] add(%reduce_sum.1758, %reduce_sum.1759)
}

%region_757.30740 (reduce_sum.30737: f32[], reduce_sum.30738: f32[]) -> f32[] {
  %reduce_sum.30737 = f32[] parameter(0)
  %reduce_sum.30738 = f32[] parameter(1)
  ROOT %reduce_sum.30739 = f32[] add(%reduce_sum.30737, %reduce_sum.30738)
}

%region_757.30740.clone (reduce_sum.1761: f32[], reduce_sum.1762: f32[]) -> f32[] {
  %reduce_sum.1761 = f32[] parameter(0)
  %reduce_sum.1762 = f32[] parameter(1)
  ROOT %reduce_sum.1763 = f32[] add(%reduce_sum.1761, %reduce_sum.1762)
}

%region_758.30747 (reduce_sum.30744: f32[], reduce_sum.30745: f32[]) -> f32[] {
  %reduce_sum.30744 = f32[] parameter(0)
  %reduce_sum.30745 = f32[] parameter(1)
  ROOT %reduce_sum.30746 = f32[] add(%reduce_sum.30744, %reduce_sum.30745)
}

%region_759.30754 (reduce_sum.30751: f32[], reduce_sum.30752: f32[]) -> f32[] {
  %reduce_sum.30751 = f32[] parameter(0)
  %reduce_sum.30752 = f32[] parameter(1)
  ROOT %reduce_sum.30753 = f32[] add(%reduce_sum.30751, %reduce_sum.30752)
}

%region_760.30761 (reduce_sum.30758: f32[], reduce_sum.30759: f32[]) -> f32[] {
  %reduce_sum.30758 = f32[] parameter(0)
  %reduce_sum.30759 = f32[] parameter(1)
  ROOT %reduce_sum.30760 = f32[] add(%reduce_sum.30758, %reduce_sum.30759)
}

%region_760.30761.clone (reduce_sum.1764: f32[], reduce_sum.1765: f32[]) -> f32[] {
  %reduce_sum.1764 = f32[] parameter(0)
  %reduce_sum.1765 = f32[] parameter(1)
  ROOT %reduce_sum.1766 = f32[] add(%reduce_sum.1764, %reduce_sum.1765)
}

%region_761.30768 (reduce_sum.30765: f32[], reduce_sum.30766: f32[]) -> f32[] {
  %reduce_sum.30765 = f32[] parameter(0)
  %reduce_sum.30766 = f32[] parameter(1)
  ROOT %reduce_sum.30767 = f32[] add(%reduce_sum.30765, %reduce_sum.30766)
}

%region_761.30768.clone (reduce_sum.1767: f32[], reduce_sum.1768: f32[]) -> f32[] {
  %reduce_sum.1767 = f32[] parameter(0)
  %reduce_sum.1768 = f32[] parameter(1)
  ROOT %reduce_sum.1769 = f32[] add(%reduce_sum.1767, %reduce_sum.1768)
}

%region_762.30775 (reduce_sum.30772: f32[], reduce_sum.30773: f32[]) -> f32[] {
  %reduce_sum.30772 = f32[] parameter(0)
  %reduce_sum.30773 = f32[] parameter(1)
  ROOT %reduce_sum.30774 = f32[] add(%reduce_sum.30772, %reduce_sum.30773)
}

%region_762.30775.clone (reduce_sum.1770: f32[], reduce_sum.1771: f32[]) -> f32[] {
  %reduce_sum.1770 = f32[] parameter(0)
  %reduce_sum.1771 = f32[] parameter(1)
  ROOT %reduce_sum.1772 = f32[] add(%reduce_sum.1770, %reduce_sum.1771)
}

%region_763.30782 (reduce_sum.30779: f32[], reduce_sum.30780: f32[]) -> f32[] {
  %reduce_sum.30779 = f32[] parameter(0)
  %reduce_sum.30780 = f32[] parameter(1)
  ROOT %reduce_sum.30781 = f32[] add(%reduce_sum.30779, %reduce_sum.30780)
}

%region_763.30782.clone (reduce_sum.1773: f32[], reduce_sum.1774: f32[]) -> f32[] {
  %reduce_sum.1773 = f32[] parameter(0)
  %reduce_sum.1774 = f32[] parameter(1)
  ROOT %reduce_sum.1775 = f32[] add(%reduce_sum.1773, %reduce_sum.1774)
}

%region_764.30789 (reduce_sum.30786: f32[], reduce_sum.30787: f32[]) -> f32[] {
  %reduce_sum.30786 = f32[] parameter(0)
  %reduce_sum.30787 = f32[] parameter(1)
  ROOT %reduce_sum.30788 = f32[] add(%reduce_sum.30786, %reduce_sum.30787)
}

%region_764.30789.clone (reduce_sum.1776: f32[], reduce_sum.1777: f32[]) -> f32[] {
  %reduce_sum.1776 = f32[] parameter(0)
  %reduce_sum.1777 = f32[] parameter(1)
  ROOT %reduce_sum.1778 = f32[] add(%reduce_sum.1776, %reduce_sum.1777)
}

%region_765.30796 (reduce_sum.30793: f32[], reduce_sum.30794: f32[]) -> f32[] {
  %reduce_sum.30793 = f32[] parameter(0)
  %reduce_sum.30794 = f32[] parameter(1)
  ROOT %reduce_sum.30795 = f32[] add(%reduce_sum.30793, %reduce_sum.30794)
}

%region_765.30796.clone (reduce_sum.1779: f32[], reduce_sum.1780: f32[]) -> f32[] {
  %reduce_sum.1779 = f32[] parameter(0)
  %reduce_sum.1780 = f32[] parameter(1)
  ROOT %reduce_sum.1781 = f32[] add(%reduce_sum.1779, %reduce_sum.1780)
}

%region_766.30803 (reduce_sum.30800: f32[], reduce_sum.30801: f32[]) -> f32[] {
  %reduce_sum.30800 = f32[] parameter(0)
  %reduce_sum.30801 = f32[] parameter(1)
  ROOT %reduce_sum.30802 = f32[] add(%reduce_sum.30800, %reduce_sum.30801)
}

%region_766.30803.clone (reduce_sum.1782: f32[], reduce_sum.1783: f32[]) -> f32[] {
  %reduce_sum.1782 = f32[] parameter(0)
  %reduce_sum.1783 = f32[] parameter(1)
  ROOT %reduce_sum.1784 = f32[] add(%reduce_sum.1782, %reduce_sum.1783)
}

%region_767.30810 (reduce_sum.30807: f32[], reduce_sum.30808: f32[]) -> f32[] {
  %reduce_sum.30807 = f32[] parameter(0)
  %reduce_sum.30808 = f32[] parameter(1)
  ROOT %reduce_sum.30809 = f32[] add(%reduce_sum.30807, %reduce_sum.30808)
}

%region_768.30817 (reduce_sum.30814: f32[], reduce_sum.30815: f32[]) -> f32[] {
  %reduce_sum.30814 = f32[] parameter(0)
  %reduce_sum.30815 = f32[] parameter(1)
  ROOT %reduce_sum.30816 = f32[] add(%reduce_sum.30814, %reduce_sum.30815)
}

%region_769.30824 (reduce_sum.30821: f32[], reduce_sum.30822: f32[]) -> f32[] {
  %reduce_sum.30821 = f32[] parameter(0)
  %reduce_sum.30822 = f32[] parameter(1)
  ROOT %reduce_sum.30823 = f32[] add(%reduce_sum.30821, %reduce_sum.30822)
}

%region_769.30824.clone (reduce_sum.1785: f32[], reduce_sum.1786: f32[]) -> f32[] {
  %reduce_sum.1785 = f32[] parameter(0)
  %reduce_sum.1786 = f32[] parameter(1)
  ROOT %reduce_sum.1787 = f32[] add(%reduce_sum.1785, %reduce_sum.1786)
}

%region_770.30831 (reduce_sum.30828: f32[], reduce_sum.30829: f32[]) -> f32[] {
  %reduce_sum.30828 = f32[] parameter(0)
  %reduce_sum.30829 = f32[] parameter(1)
  ROOT %reduce_sum.30830 = f32[] add(%reduce_sum.30828, %reduce_sum.30829)
}

%region_770.30831.clone (reduce_sum.1788: f32[], reduce_sum.1789: f32[]) -> f32[] {
  %reduce_sum.1788 = f32[] parameter(0)
  %reduce_sum.1789 = f32[] parameter(1)
  ROOT %reduce_sum.1790 = f32[] add(%reduce_sum.1788, %reduce_sum.1789)
}

%region_771.30838 (reduce_sum.30835: f32[], reduce_sum.30836: f32[]) -> f32[] {
  %reduce_sum.30835 = f32[] parameter(0)
  %reduce_sum.30836 = f32[] parameter(1)
  ROOT %reduce_sum.30837 = f32[] add(%reduce_sum.30835, %reduce_sum.30836)
}

%region_771.30838.clone (reduce_sum.1791: f32[], reduce_sum.1792: f32[]) -> f32[] {
  %reduce_sum.1791 = f32[] parameter(0)
  %reduce_sum.1792 = f32[] parameter(1)
  ROOT %reduce_sum.1793 = f32[] add(%reduce_sum.1791, %reduce_sum.1792)
}

%region_772.30845 (reduce_sum.30842: f32[], reduce_sum.30843: f32[]) -> f32[] {
  %reduce_sum.30842 = f32[] parameter(0)
  %reduce_sum.30843 = f32[] parameter(1)
  ROOT %reduce_sum.30844 = f32[] add(%reduce_sum.30842, %reduce_sum.30843)
}

%region_772.30845.clone (reduce_sum.1794: f32[], reduce_sum.1795: f32[]) -> f32[] {
  %reduce_sum.1794 = f32[] parameter(0)
  %reduce_sum.1795 = f32[] parameter(1)
  ROOT %reduce_sum.1796 = f32[] add(%reduce_sum.1794, %reduce_sum.1795)
}

%region_773.30852 (reduce_sum.30849: f32[], reduce_sum.30850: f32[]) -> f32[] {
  %reduce_sum.30849 = f32[] parameter(0)
  %reduce_sum.30850 = f32[] parameter(1)
  ROOT %reduce_sum.30851 = f32[] add(%reduce_sum.30849, %reduce_sum.30850)
}

%region_773.30852.clone (reduce_sum.1797: f32[], reduce_sum.1798: f32[]) -> f32[] {
  %reduce_sum.1797 = f32[] parameter(0)
  %reduce_sum.1798 = f32[] parameter(1)
  ROOT %reduce_sum.1799 = f32[] add(%reduce_sum.1797, %reduce_sum.1798)
}

%region_774.30859 (reduce_sum.30856: f32[], reduce_sum.30857: f32[]) -> f32[] {
  %reduce_sum.30856 = f32[] parameter(0)
  %reduce_sum.30857 = f32[] parameter(1)
  ROOT %reduce_sum.30858 = f32[] add(%reduce_sum.30856, %reduce_sum.30857)
}

%region_774.30859.clone (reduce_sum.1800: f32[], reduce_sum.1801: f32[]) -> f32[] {
  %reduce_sum.1800 = f32[] parameter(0)
  %reduce_sum.1801 = f32[] parameter(1)
  ROOT %reduce_sum.1802 = f32[] add(%reduce_sum.1800, %reduce_sum.1801)
}

%region_775.30866 (reduce_sum.30863: f32[], reduce_sum.30864: f32[]) -> f32[] {
  %reduce_sum.30863 = f32[] parameter(0)
  %reduce_sum.30864 = f32[] parameter(1)
  ROOT %reduce_sum.30865 = f32[] add(%reduce_sum.30863, %reduce_sum.30864)
}

%region_775.30866.clone (reduce_sum.1803: f32[], reduce_sum.1804: f32[]) -> f32[] {
  %reduce_sum.1803 = f32[] parameter(0)
  %reduce_sum.1804 = f32[] parameter(1)
  ROOT %reduce_sum.1805 = f32[] add(%reduce_sum.1803, %reduce_sum.1804)
}

%region_776.30873 (reduce_sum.30870: f32[], reduce_sum.30871: f32[]) -> f32[] {
  %reduce_sum.30870 = f32[] parameter(0)
  %reduce_sum.30871 = f32[] parameter(1)
  ROOT %reduce_sum.30872 = f32[] add(%reduce_sum.30870, %reduce_sum.30871)
}

%region_777.30880 (reduce_sum.30877: f32[], reduce_sum.30878: f32[]) -> f32[] {
  %reduce_sum.30877 = f32[] parameter(0)
  %reduce_sum.30878 = f32[] parameter(1)
  ROOT %reduce_sum.30879 = f32[] add(%reduce_sum.30877, %reduce_sum.30878)
}

%region_778.30887 (reduce_sum.30884: f32[], reduce_sum.30885: f32[]) -> f32[] {
  %reduce_sum.30884 = f32[] parameter(0)
  %reduce_sum.30885 = f32[] parameter(1)
  ROOT %reduce_sum.30886 = f32[] add(%reduce_sum.30884, %reduce_sum.30885)
}

%region_778.30887.clone (reduce_sum.1806: f32[], reduce_sum.1807: f32[]) -> f32[] {
  %reduce_sum.1806 = f32[] parameter(0)
  %reduce_sum.1807 = f32[] parameter(1)
  ROOT %reduce_sum.1808 = f32[] add(%reduce_sum.1806, %reduce_sum.1807)
}

%region_779.30894 (reduce_sum.30891: f32[], reduce_sum.30892: f32[]) -> f32[] {
  %reduce_sum.30891 = f32[] parameter(0)
  %reduce_sum.30892 = f32[] parameter(1)
  ROOT %reduce_sum.30893 = f32[] add(%reduce_sum.30891, %reduce_sum.30892)
}

%region_779.30894.clone (reduce_sum.1809: f32[], reduce_sum.1810: f32[]) -> f32[] {
  %reduce_sum.1809 = f32[] parameter(0)
  %reduce_sum.1810 = f32[] parameter(1)
  ROOT %reduce_sum.1811 = f32[] add(%reduce_sum.1809, %reduce_sum.1810)
}

%region_780.30901 (reduce_sum.30898: f32[], reduce_sum.30899: f32[]) -> f32[] {
  %reduce_sum.30898 = f32[] parameter(0)
  %reduce_sum.30899 = f32[] parameter(1)
  ROOT %reduce_sum.30900 = f32[] add(%reduce_sum.30898, %reduce_sum.30899)
}

%region_780.30901.clone (reduce_sum.1812: f32[], reduce_sum.1813: f32[]) -> f32[] {
  %reduce_sum.1812 = f32[] parameter(0)
  %reduce_sum.1813 = f32[] parameter(1)
  ROOT %reduce_sum.1814 = f32[] add(%reduce_sum.1812, %reduce_sum.1813)
}

%region_781.30908 (reduce_sum.30905: f32[], reduce_sum.30906: f32[]) -> f32[] {
  %reduce_sum.30905 = f32[] parameter(0)
  %reduce_sum.30906 = f32[] parameter(1)
  ROOT %reduce_sum.30907 = f32[] add(%reduce_sum.30905, %reduce_sum.30906)
}

%region_781.30908.clone (reduce_sum.1815: f32[], reduce_sum.1816: f32[]) -> f32[] {
  %reduce_sum.1815 = f32[] parameter(0)
  %reduce_sum.1816 = f32[] parameter(1)
  ROOT %reduce_sum.1817 = f32[] add(%reduce_sum.1815, %reduce_sum.1816)
}

%region_782.30915 (reduce_sum.30912: f32[], reduce_sum.30913: f32[]) -> f32[] {
  %reduce_sum.30912 = f32[] parameter(0)
  %reduce_sum.30913 = f32[] parameter(1)
  ROOT %reduce_sum.30914 = f32[] add(%reduce_sum.30912, %reduce_sum.30913)
}

%region_782.30915.clone (reduce_sum.1818: f32[], reduce_sum.1819: f32[]) -> f32[] {
  %reduce_sum.1818 = f32[] parameter(0)
  %reduce_sum.1819 = f32[] parameter(1)
  ROOT %reduce_sum.1820 = f32[] add(%reduce_sum.1818, %reduce_sum.1819)
}

%region_783.30922 (reduce_sum.30919: f32[], reduce_sum.30920: f32[]) -> f32[] {
  %reduce_sum.30919 = f32[] parameter(0)
  %reduce_sum.30920 = f32[] parameter(1)
  ROOT %reduce_sum.30921 = f32[] add(%reduce_sum.30919, %reduce_sum.30920)
}

%region_783.30922.clone (reduce_sum.1821: f32[], reduce_sum.1822: f32[]) -> f32[] {
  %reduce_sum.1821 = f32[] parameter(0)
  %reduce_sum.1822 = f32[] parameter(1)
  ROOT %reduce_sum.1823 = f32[] add(%reduce_sum.1821, %reduce_sum.1822)
}

%region_784.30929 (reduce_sum.30926: f32[], reduce_sum.30927: f32[]) -> f32[] {
  %reduce_sum.30926 = f32[] parameter(0)
  %reduce_sum.30927 = f32[] parameter(1)
  ROOT %reduce_sum.30928 = f32[] add(%reduce_sum.30926, %reduce_sum.30927)
}

%region_784.30929.clone (reduce_sum.1824: f32[], reduce_sum.1825: f32[]) -> f32[] {
  %reduce_sum.1824 = f32[] parameter(0)
  %reduce_sum.1825 = f32[] parameter(1)
  ROOT %reduce_sum.1826 = f32[] add(%reduce_sum.1824, %reduce_sum.1825)
}

%region_785.30936 (reduce_sum.30933: f32[], reduce_sum.30934: f32[]) -> f32[] {
  %reduce_sum.30933 = f32[] parameter(0)
  %reduce_sum.30934 = f32[] parameter(1)
  ROOT %reduce_sum.30935 = f32[] add(%reduce_sum.30933, %reduce_sum.30934)
}

%region_786.30943 (reduce_sum.30940: f32[], reduce_sum.30941: f32[]) -> f32[] {
  %reduce_sum.30940 = f32[] parameter(0)
  %reduce_sum.30941 = f32[] parameter(1)
  ROOT %reduce_sum.30942 = f32[] add(%reduce_sum.30940, %reduce_sum.30941)
}

%region_787.30950 (reduce_sum.30947: f32[], reduce_sum.30948: f32[]) -> f32[] {
  %reduce_sum.30947 = f32[] parameter(0)
  %reduce_sum.30948 = f32[] parameter(1)
  ROOT %reduce_sum.30949 = f32[] add(%reduce_sum.30947, %reduce_sum.30948)
}

%region_787.30950.clone (reduce_sum.1827: f32[], reduce_sum.1828: f32[]) -> f32[] {
  %reduce_sum.1827 = f32[] parameter(0)
  %reduce_sum.1828 = f32[] parameter(1)
  ROOT %reduce_sum.1829 = f32[] add(%reduce_sum.1827, %reduce_sum.1828)
}

%region_788.30957 (reduce_sum.30954: f32[], reduce_sum.30955: f32[]) -> f32[] {
  %reduce_sum.30954 = f32[] parameter(0)
  %reduce_sum.30955 = f32[] parameter(1)
  ROOT %reduce_sum.30956 = f32[] add(%reduce_sum.30954, %reduce_sum.30955)
}

%region_788.30957.clone (reduce_sum.1830: f32[], reduce_sum.1831: f32[]) -> f32[] {
  %reduce_sum.1830 = f32[] parameter(0)
  %reduce_sum.1831 = f32[] parameter(1)
  ROOT %reduce_sum.1832 = f32[] add(%reduce_sum.1830, %reduce_sum.1831)
}

%region_789.30964 (reduce_sum.30961: f32[], reduce_sum.30962: f32[]) -> f32[] {
  %reduce_sum.30961 = f32[] parameter(0)
  %reduce_sum.30962 = f32[] parameter(1)
  ROOT %reduce_sum.30963 = f32[] add(%reduce_sum.30961, %reduce_sum.30962)
}

%region_789.30964.clone (reduce_sum.1833: f32[], reduce_sum.1834: f32[]) -> f32[] {
  %reduce_sum.1833 = f32[] parameter(0)
  %reduce_sum.1834 = f32[] parameter(1)
  ROOT %reduce_sum.1835 = f32[] add(%reduce_sum.1833, %reduce_sum.1834)
}

%region_790.30971 (reduce_sum.30968: f32[], reduce_sum.30969: f32[]) -> f32[] {
  %reduce_sum.30968 = f32[] parameter(0)
  %reduce_sum.30969 = f32[] parameter(1)
  ROOT %reduce_sum.30970 = f32[] add(%reduce_sum.30968, %reduce_sum.30969)
}

%region_790.30971.clone (reduce_sum.1836: f32[], reduce_sum.1837: f32[]) -> f32[] {
  %reduce_sum.1836 = f32[] parameter(0)
  %reduce_sum.1837 = f32[] parameter(1)
  ROOT %reduce_sum.1838 = f32[] add(%reduce_sum.1836, %reduce_sum.1837)
}

%region_791.30978 (reduce_sum.30975: f32[], reduce_sum.30976: f32[]) -> f32[] {
  %reduce_sum.30975 = f32[] parameter(0)
  %reduce_sum.30976 = f32[] parameter(1)
  ROOT %reduce_sum.30977 = f32[] add(%reduce_sum.30975, %reduce_sum.30976)
}

%region_791.30978.clone (reduce_sum.1839: f32[], reduce_sum.1840: f32[]) -> f32[] {
  %reduce_sum.1839 = f32[] parameter(0)
  %reduce_sum.1840 = f32[] parameter(1)
  ROOT %reduce_sum.1841 = f32[] add(%reduce_sum.1839, %reduce_sum.1840)
}

%region_792.30985 (reduce_sum.30982: f32[], reduce_sum.30983: f32[]) -> f32[] {
  %reduce_sum.30982 = f32[] parameter(0)
  %reduce_sum.30983 = f32[] parameter(1)
  ROOT %reduce_sum.30984 = f32[] add(%reduce_sum.30982, %reduce_sum.30983)
}

%region_792.30985.clone (reduce_sum.1842: f32[], reduce_sum.1843: f32[]) -> f32[] {
  %reduce_sum.1842 = f32[] parameter(0)
  %reduce_sum.1843 = f32[] parameter(1)
  ROOT %reduce_sum.1844 = f32[] add(%reduce_sum.1842, %reduce_sum.1843)
}

%region_793.30992 (reduce_sum.30989: f32[], reduce_sum.30990: f32[]) -> f32[] {
  %reduce_sum.30989 = f32[] parameter(0)
  %reduce_sum.30990 = f32[] parameter(1)
  ROOT %reduce_sum.30991 = f32[] add(%reduce_sum.30989, %reduce_sum.30990)
}

%region_793.30992.clone (reduce_sum.1845: f32[], reduce_sum.1846: f32[]) -> f32[] {
  %reduce_sum.1845 = f32[] parameter(0)
  %reduce_sum.1846 = f32[] parameter(1)
  ROOT %reduce_sum.1847 = f32[] add(%reduce_sum.1845, %reduce_sum.1846)
}

%region_794.30999 (reduce_sum.30996: f32[], reduce_sum.30997: f32[]) -> f32[] {
  %reduce_sum.30996 = f32[] parameter(0)
  %reduce_sum.30997 = f32[] parameter(1)
  ROOT %reduce_sum.30998 = f32[] add(%reduce_sum.30996, %reduce_sum.30997)
}

%region_795.31006 (reduce_sum.31003: f32[], reduce_sum.31004: f32[]) -> f32[] {
  %reduce_sum.31003 = f32[] parameter(0)
  %reduce_sum.31004 = f32[] parameter(1)
  ROOT %reduce_sum.31005 = f32[] add(%reduce_sum.31003, %reduce_sum.31004)
}

%region_796.31013 (reduce_sum.31010: f32[], reduce_sum.31011: f32[]) -> f32[] {
  %reduce_sum.31010 = f32[] parameter(0)
  %reduce_sum.31011 = f32[] parameter(1)
  ROOT %reduce_sum.31012 = f32[] add(%reduce_sum.31010, %reduce_sum.31011)
}

%region_796.31013.clone (reduce_sum.1848: f32[], reduce_sum.1849: f32[]) -> f32[] {
  %reduce_sum.1848 = f32[] parameter(0)
  %reduce_sum.1849 = f32[] parameter(1)
  ROOT %reduce_sum.1850 = f32[] add(%reduce_sum.1848, %reduce_sum.1849)
}

%region_797.31020 (reduce_sum.31017: f32[], reduce_sum.31018: f32[]) -> f32[] {
  %reduce_sum.31017 = f32[] parameter(0)
  %reduce_sum.31018 = f32[] parameter(1)
  ROOT %reduce_sum.31019 = f32[] add(%reduce_sum.31017, %reduce_sum.31018)
}

%region_797.31020.clone (reduce_sum.1851: f32[], reduce_sum.1852: f32[]) -> f32[] {
  %reduce_sum.1851 = f32[] parameter(0)
  %reduce_sum.1852 = f32[] parameter(1)
  ROOT %reduce_sum.1853 = f32[] add(%reduce_sum.1851, %reduce_sum.1852)
}

%region_798.31027 (reduce_sum.31024: f32[], reduce_sum.31025: f32[]) -> f32[] {
  %reduce_sum.31024 = f32[] parameter(0)
  %reduce_sum.31025 = f32[] parameter(1)
  ROOT %reduce_sum.31026 = f32[] add(%reduce_sum.31024, %reduce_sum.31025)
}

%region_798.31027.clone (reduce_sum.1854: f32[], reduce_sum.1855: f32[]) -> f32[] {
  %reduce_sum.1854 = f32[] parameter(0)
  %reduce_sum.1855 = f32[] parameter(1)
  ROOT %reduce_sum.1856 = f32[] add(%reduce_sum.1854, %reduce_sum.1855)
}

%region_799.31034 (reduce_sum.31031: f32[], reduce_sum.31032: f32[]) -> f32[] {
  %reduce_sum.31031 = f32[] parameter(0)
  %reduce_sum.31032 = f32[] parameter(1)
  ROOT %reduce_sum.31033 = f32[] add(%reduce_sum.31031, %reduce_sum.31032)
}

%region_799.31034.clone (reduce_sum.1857: f32[], reduce_sum.1858: f32[]) -> f32[] {
  %reduce_sum.1857 = f32[] parameter(0)
  %reduce_sum.1858 = f32[] parameter(1)
  ROOT %reduce_sum.1859 = f32[] add(%reduce_sum.1857, %reduce_sum.1858)
}

%region_800.31041 (reduce_sum.31038: f32[], reduce_sum.31039: f32[]) -> f32[] {
  %reduce_sum.31038 = f32[] parameter(0)
  %reduce_sum.31039 = f32[] parameter(1)
  ROOT %reduce_sum.31040 = f32[] add(%reduce_sum.31038, %reduce_sum.31039)
}

%region_800.31041.clone (reduce_sum.1860: f32[], reduce_sum.1861: f32[]) -> f32[] {
  %reduce_sum.1860 = f32[] parameter(0)
  %reduce_sum.1861 = f32[] parameter(1)
  ROOT %reduce_sum.1862 = f32[] add(%reduce_sum.1860, %reduce_sum.1861)
}

%region_801.31048 (reduce_sum.31045: f32[], reduce_sum.31046: f32[]) -> f32[] {
  %reduce_sum.31045 = f32[] parameter(0)
  %reduce_sum.31046 = f32[] parameter(1)
  ROOT %reduce_sum.31047 = f32[] add(%reduce_sum.31045, %reduce_sum.31046)
}

%region_801.31048.clone (reduce_sum.1863: f32[], reduce_sum.1864: f32[]) -> f32[] {
  %reduce_sum.1863 = f32[] parameter(0)
  %reduce_sum.1864 = f32[] parameter(1)
  ROOT %reduce_sum.1865 = f32[] add(%reduce_sum.1863, %reduce_sum.1864)
}

%region_802.31055 (reduce_sum.31052: f32[], reduce_sum.31053: f32[]) -> f32[] {
  %reduce_sum.31052 = f32[] parameter(0)
  %reduce_sum.31053 = f32[] parameter(1)
  ROOT %reduce_sum.31054 = f32[] add(%reduce_sum.31052, %reduce_sum.31053)
}

%region_802.31055.clone (reduce_sum.1866: f32[], reduce_sum.1870: f32[]) -> f32[] {
  %reduce_sum.1866 = f32[] parameter(0)
  %reduce_sum.1870 = f32[] parameter(1)
  ROOT %reduce_sum.1872 = f32[] add(%reduce_sum.1866, %reduce_sum.1870)
}

%region_803.31062 (reduce_sum.31059: f32[], reduce_sum.31060: f32[]) -> f32[] {
  %reduce_sum.31059 = f32[] parameter(0)
  %reduce_sum.31060 = f32[] parameter(1)
  ROOT %reduce_sum.31061 = f32[] add(%reduce_sum.31059, %reduce_sum.31060)
}

%region_804.31069 (reduce_sum.31066: f32[], reduce_sum.31067: f32[]) -> f32[] {
  %reduce_sum.31066 = f32[] parameter(0)
  %reduce_sum.31067 = f32[] parameter(1)
  ROOT %reduce_sum.31068 = f32[] add(%reduce_sum.31066, %reduce_sum.31067)
}

%region_805.31076 (reduce_sum.31073: f32[], reduce_sum.31074: f32[]) -> f32[] {
  %reduce_sum.31073 = f32[] parameter(0)
  %reduce_sum.31074 = f32[] parameter(1)
  ROOT %reduce_sum.31075 = f32[] add(%reduce_sum.31073, %reduce_sum.31074)
}

%region_805.31076.clone (reduce_sum.1873: f32[], reduce_sum.1874: f32[]) -> f32[] {
  %reduce_sum.1873 = f32[] parameter(0)
  %reduce_sum.1874 = f32[] parameter(1)
  ROOT %reduce_sum.1878 = f32[] add(%reduce_sum.1873, %reduce_sum.1874)
}

%region_806.31083 (reduce_sum.31080: f32[], reduce_sum.31081: f32[]) -> f32[] {
  %reduce_sum.31080 = f32[] parameter(0)
  %reduce_sum.31081 = f32[] parameter(1)
  ROOT %reduce_sum.31082 = f32[] add(%reduce_sum.31080, %reduce_sum.31081)
}

%region_806.31083.clone (reduce_sum.1880: f32[], reduce_sum.1881: f32[]) -> f32[] {
  %reduce_sum.1880 = f32[] parameter(0)
  %reduce_sum.1881 = f32[] parameter(1)
  ROOT %reduce_sum.1882 = f32[] add(%reduce_sum.1880, %reduce_sum.1881)
}

%region_807.31090 (reduce_sum.31087: f32[], reduce_sum.31088: f32[]) -> f32[] {
  %reduce_sum.31087 = f32[] parameter(0)
  %reduce_sum.31088 = f32[] parameter(1)
  ROOT %reduce_sum.31089 = f32[] add(%reduce_sum.31087, %reduce_sum.31088)
}

%region_807.31090.clone (reduce_sum.1883: f32[], reduce_sum.1884: f32[]) -> f32[] {
  %reduce_sum.1883 = f32[] parameter(0)
  %reduce_sum.1884 = f32[] parameter(1)
  ROOT %reduce_sum.1885 = f32[] add(%reduce_sum.1883, %reduce_sum.1884)
}

%region_808.31097 (reduce_sum.31094: f32[], reduce_sum.31095: f32[]) -> f32[] {
  %reduce_sum.31094 = f32[] parameter(0)
  %reduce_sum.31095 = f32[] parameter(1)
  ROOT %reduce_sum.31096 = f32[] add(%reduce_sum.31094, %reduce_sum.31095)
}

%region_808.31097.clone (reduce_sum.1886: f32[], reduce_sum.1887: f32[]) -> f32[] {
  %reduce_sum.1886 = f32[] parameter(0)
  %reduce_sum.1887 = f32[] parameter(1)
  ROOT %reduce_sum.1888 = f32[] add(%reduce_sum.1886, %reduce_sum.1887)
}

%region_809.31104 (reduce_sum.31101: f32[], reduce_sum.31102: f32[]) -> f32[] {
  %reduce_sum.31101 = f32[] parameter(0)
  %reduce_sum.31102 = f32[] parameter(1)
  ROOT %reduce_sum.31103 = f32[] add(%reduce_sum.31101, %reduce_sum.31102)
}

%region_809.31104.clone (reduce_sum.1889: f32[], reduce_sum.1890: f32[]) -> f32[] {
  %reduce_sum.1889 = f32[] parameter(0)
  %reduce_sum.1890 = f32[] parameter(1)
  ROOT %reduce_sum.1891 = f32[] add(%reduce_sum.1889, %reduce_sum.1890)
}

%region_810.31111 (reduce_sum.31108: f32[], reduce_sum.31109: f32[]) -> f32[] {
  %reduce_sum.31108 = f32[] parameter(0)
  %reduce_sum.31109 = f32[] parameter(1)
  ROOT %reduce_sum.31110 = f32[] add(%reduce_sum.31108, %reduce_sum.31109)
}

%region_810.31111.clone (reduce_sum.1892: f32[], reduce_sum.1893: f32[]) -> f32[] {
  %reduce_sum.1892 = f32[] parameter(0)
  %reduce_sum.1893 = f32[] parameter(1)
  ROOT %reduce_sum.1894 = f32[] add(%reduce_sum.1892, %reduce_sum.1893)
}

%region_811.31118 (reduce_sum.31115: f32[], reduce_sum.31116: f32[]) -> f32[] {
  %reduce_sum.31115 = f32[] parameter(0)
  %reduce_sum.31116 = f32[] parameter(1)
  ROOT %reduce_sum.31117 = f32[] add(%reduce_sum.31115, %reduce_sum.31116)
}

%region_811.31118.clone (reduce_sum.1895: f32[], reduce_sum.1896: f32[]) -> f32[] {
  %reduce_sum.1895 = f32[] parameter(0)
  %reduce_sum.1896 = f32[] parameter(1)
  ROOT %reduce_sum.1897 = f32[] add(%reduce_sum.1895, %reduce_sum.1896)
}

%region_812.31125 (reduce_sum.31122: f32[], reduce_sum.31123: f32[]) -> f32[] {
  %reduce_sum.31122 = f32[] parameter(0)
  %reduce_sum.31123 = f32[] parameter(1)
  ROOT %reduce_sum.31124 = f32[] add(%reduce_sum.31122, %reduce_sum.31123)
}

%region_813.31132 (reduce_sum.31129: f32[], reduce_sum.31130: f32[]) -> f32[] {
  %reduce_sum.31129 = f32[] parameter(0)
  %reduce_sum.31130 = f32[] parameter(1)
  ROOT %reduce_sum.31131 = f32[] add(%reduce_sum.31129, %reduce_sum.31130)
}

%region_814.31139 (reduce_sum.31136: f32[], reduce_sum.31137: f32[]) -> f32[] {
  %reduce_sum.31136 = f32[] parameter(0)
  %reduce_sum.31137 = f32[] parameter(1)
  ROOT %reduce_sum.31138 = f32[] add(%reduce_sum.31136, %reduce_sum.31137)
}

%region_814.31139.clone (reduce_sum.1898: f32[], reduce_sum.1902: f32[]) -> f32[] {
  %reduce_sum.1898 = f32[] parameter(0)
  %reduce_sum.1902 = f32[] parameter(1)
  ROOT %reduce_sum.1904 = f32[] add(%reduce_sum.1898, %reduce_sum.1902)
}

%region_815.31146 (reduce_sum.31143: f32[], reduce_sum.31144: f32[]) -> f32[] {
  %reduce_sum.31143 = f32[] parameter(0)
  %reduce_sum.31144 = f32[] parameter(1)
  ROOT %reduce_sum.31145 = f32[] add(%reduce_sum.31143, %reduce_sum.31144)
}

%region_815.31146.clone (reduce_sum.1905: f32[], reduce_sum.1906: f32[]) -> f32[] {
  %reduce_sum.1905 = f32[] parameter(0)
  %reduce_sum.1906 = f32[] parameter(1)
  ROOT %reduce_sum.1907 = f32[] add(%reduce_sum.1905, %reduce_sum.1906)
}

%region_816.31153 (reduce_sum.31150: f32[], reduce_sum.31151: f32[]) -> f32[] {
  %reduce_sum.31150 = f32[] parameter(0)
  %reduce_sum.31151 = f32[] parameter(1)
  ROOT %reduce_sum.31152 = f32[] add(%reduce_sum.31150, %reduce_sum.31151)
}

%region_816.31153.clone (reduce_sum.1908: f32[], reduce_sum.1909: f32[]) -> f32[] {
  %reduce_sum.1908 = f32[] parameter(0)
  %reduce_sum.1909 = f32[] parameter(1)
  ROOT %reduce_sum.1910 = f32[] add(%reduce_sum.1908, %reduce_sum.1909)
}

%region_817.31160 (reduce_sum.31157: f32[], reduce_sum.31158: f32[]) -> f32[] {
  %reduce_sum.31157 = f32[] parameter(0)
  %reduce_sum.31158 = f32[] parameter(1)
  ROOT %reduce_sum.31159 = f32[] add(%reduce_sum.31157, %reduce_sum.31158)
}

%region_817.31160.clone (reduce_sum.1911: f32[], reduce_sum.1912: f32[]) -> f32[] {
  %reduce_sum.1911 = f32[] parameter(0)
  %reduce_sum.1912 = f32[] parameter(1)
  ROOT %reduce_sum.1913 = f32[] add(%reduce_sum.1911, %reduce_sum.1912)
}

%region_818.31167 (reduce_sum.31164: f32[], reduce_sum.31165: f32[]) -> f32[] {
  %reduce_sum.31164 = f32[] parameter(0)
  %reduce_sum.31165 = f32[] parameter(1)
  ROOT %reduce_sum.31166 = f32[] add(%reduce_sum.31164, %reduce_sum.31165)
}

%region_818.31167.clone (reduce_sum.1914: f32[], reduce_sum.1915: f32[]) -> f32[] {
  %reduce_sum.1914 = f32[] parameter(0)
  %reduce_sum.1915 = f32[] parameter(1)
  ROOT %reduce_sum.1916 = f32[] add(%reduce_sum.1914, %reduce_sum.1915)
}

%region_819.31174 (reduce_sum.31171: f32[], reduce_sum.31172: f32[]) -> f32[] {
  %reduce_sum.31171 = f32[] parameter(0)
  %reduce_sum.31172 = f32[] parameter(1)
  ROOT %reduce_sum.31173 = f32[] add(%reduce_sum.31171, %reduce_sum.31172)
}

%region_819.31174.clone (reduce_sum.1917: f32[], reduce_sum.1918: f32[]) -> f32[] {
  %reduce_sum.1917 = f32[] parameter(0)
  %reduce_sum.1918 = f32[] parameter(1)
  ROOT %reduce_sum.1919 = f32[] add(%reduce_sum.1917, %reduce_sum.1918)
}

%region_820.31181 (reduce_sum.31178: f32[], reduce_sum.31179: f32[]) -> f32[] {
  %reduce_sum.31178 = f32[] parameter(0)
  %reduce_sum.31179 = f32[] parameter(1)
  ROOT %reduce_sum.31180 = f32[] add(%reduce_sum.31178, %reduce_sum.31179)
}

%region_820.31181.clone (reduce_sum.1920: f32[], reduce_sum.1921: f32[]) -> f32[] {
  %reduce_sum.1920 = f32[] parameter(0)
  %reduce_sum.1921 = f32[] parameter(1)
  ROOT %reduce_sum.1922 = f32[] add(%reduce_sum.1920, %reduce_sum.1921)
}

%region_821.31188 (reduce_sum.31185: f32[], reduce_sum.31186: f32[]) -> f32[] {
  %reduce_sum.31185 = f32[] parameter(0)
  %reduce_sum.31186 = f32[] parameter(1)
  ROOT %reduce_sum.31187 = f32[] add(%reduce_sum.31185, %reduce_sum.31186)
}

%region_822.31195 (reduce_sum.31192: f32[], reduce_sum.31193: f32[]) -> f32[] {
  %reduce_sum.31192 = f32[] parameter(0)
  %reduce_sum.31193 = f32[] parameter(1)
  ROOT %reduce_sum.31194 = f32[] add(%reduce_sum.31192, %reduce_sum.31193)
}

%region_823.31202 (reduce_sum.31199: f32[], reduce_sum.31200: f32[]) -> f32[] {
  %reduce_sum.31199 = f32[] parameter(0)
  %reduce_sum.31200 = f32[] parameter(1)
  ROOT %reduce_sum.31201 = f32[] add(%reduce_sum.31199, %reduce_sum.31200)
}

%region_823.31202.clone (reduce_sum.1923: f32[], reduce_sum.1924: f32[]) -> f32[] {
  %reduce_sum.1923 = f32[] parameter(0)
  %reduce_sum.1924 = f32[] parameter(1)
  ROOT %reduce_sum.1925 = f32[] add(%reduce_sum.1923, %reduce_sum.1924)
}

%region_824.31209 (reduce_sum.31206: f32[], reduce_sum.31207: f32[]) -> f32[] {
  %reduce_sum.31206 = f32[] parameter(0)
  %reduce_sum.31207 = f32[] parameter(1)
  ROOT %reduce_sum.31208 = f32[] add(%reduce_sum.31206, %reduce_sum.31207)
}

%region_824.31209.clone (reduce_sum.1926: f32[], reduce_sum.1927: f32[]) -> f32[] {
  %reduce_sum.1926 = f32[] parameter(0)
  %reduce_sum.1927 = f32[] parameter(1)
  ROOT %reduce_sum.1928 = f32[] add(%reduce_sum.1926, %reduce_sum.1927)
}

%region_825.31216 (reduce_sum.31213: f32[], reduce_sum.31214: f32[]) -> f32[] {
  %reduce_sum.31213 = f32[] parameter(0)
  %reduce_sum.31214 = f32[] parameter(1)
  ROOT %reduce_sum.31215 = f32[] add(%reduce_sum.31213, %reduce_sum.31214)
}

%region_825.31216.clone (reduce_sum.1929: f32[], reduce_sum.1930: f32[]) -> f32[] {
  %reduce_sum.1929 = f32[] parameter(0)
  %reduce_sum.1930 = f32[] parameter(1)
  ROOT %reduce_sum.1931 = f32[] add(%reduce_sum.1929, %reduce_sum.1930)
}

%region_826.31223 (reduce_sum.31220: f32[], reduce_sum.31221: f32[]) -> f32[] {
  %reduce_sum.31220 = f32[] parameter(0)
  %reduce_sum.31221 = f32[] parameter(1)
  ROOT %reduce_sum.31222 = f32[] add(%reduce_sum.31220, %reduce_sum.31221)
}

%region_826.31223.clone (reduce_sum.1932: f32[], reduce_sum.1933: f32[]) -> f32[] {
  %reduce_sum.1932 = f32[] parameter(0)
  %reduce_sum.1933 = f32[] parameter(1)
  ROOT %reduce_sum.1934 = f32[] add(%reduce_sum.1932, %reduce_sum.1933)
}

%region_827.31230 (reduce_sum.31227: f32[], reduce_sum.31228: f32[]) -> f32[] {
  %reduce_sum.31227 = f32[] parameter(0)
  %reduce_sum.31228 = f32[] parameter(1)
  ROOT %reduce_sum.31229 = f32[] add(%reduce_sum.31227, %reduce_sum.31228)
}

%region_827.31230.clone (reduce_sum.1935: f32[], reduce_sum.1936: f32[]) -> f32[] {
  %reduce_sum.1935 = f32[] parameter(0)
  %reduce_sum.1936 = f32[] parameter(1)
  ROOT %reduce_sum.1940 = f32[] add(%reduce_sum.1935, %reduce_sum.1936)
}

%region_828.31237 (reduce_sum.31234: f32[], reduce_sum.31235: f32[]) -> f32[] {
  %reduce_sum.31234 = f32[] parameter(0)
  %reduce_sum.31235 = f32[] parameter(1)
  ROOT %reduce_sum.31236 = f32[] add(%reduce_sum.31234, %reduce_sum.31235)
}

%region_828.31237.clone (reduce_sum.1942: f32[], reduce_sum.1943: f32[]) -> f32[] {
  %reduce_sum.1942 = f32[] parameter(0)
  %reduce_sum.1943 = f32[] parameter(1)
  ROOT %reduce_sum.1944 = f32[] add(%reduce_sum.1942, %reduce_sum.1943)
}

%region_829.31244 (reduce_sum.31241: f32[], reduce_sum.31242: f32[]) -> f32[] {
  %reduce_sum.31241 = f32[] parameter(0)
  %reduce_sum.31242 = f32[] parameter(1)
  ROOT %reduce_sum.31243 = f32[] add(%reduce_sum.31241, %reduce_sum.31242)
}

%region_829.31244.clone (reduce_sum.1945: f32[], reduce_sum.1946: f32[]) -> f32[] {
  %reduce_sum.1945 = f32[] parameter(0)
  %reduce_sum.1946 = f32[] parameter(1)
  ROOT %reduce_sum.1947 = f32[] add(%reduce_sum.1945, %reduce_sum.1946)
}

%region_830.31251 (reduce_sum.31248: f32[], reduce_sum.31249: f32[]) -> f32[] {
  %reduce_sum.31248 = f32[] parameter(0)
  %reduce_sum.31249 = f32[] parameter(1)
  ROOT %reduce_sum.31250 = f32[] add(%reduce_sum.31248, %reduce_sum.31249)
}

%region_831.31258 (reduce_sum.31255: f32[], reduce_sum.31256: f32[]) -> f32[] {
  %reduce_sum.31255 = f32[] parameter(0)
  %reduce_sum.31256 = f32[] parameter(1)
  ROOT %reduce_sum.31257 = f32[] add(%reduce_sum.31255, %reduce_sum.31256)
}

%region_832.31265 (reduce_sum.31262: f32[], reduce_sum.31263: f32[]) -> f32[] {
  %reduce_sum.31262 = f32[] parameter(0)
  %reduce_sum.31263 = f32[] parameter(1)
  ROOT %reduce_sum.31264 = f32[] add(%reduce_sum.31262, %reduce_sum.31263)
}

%region_832.31265.clone (reduce_sum.1948: f32[], reduce_sum.1949: f32[]) -> f32[] {
  %reduce_sum.1948 = f32[] parameter(0)
  %reduce_sum.1949 = f32[] parameter(1)
  ROOT %reduce_sum.1950 = f32[] add(%reduce_sum.1948, %reduce_sum.1949)
}

%region_833.31272 (reduce_sum.31269: f32[], reduce_sum.31270: f32[]) -> f32[] {
  %reduce_sum.31269 = f32[] parameter(0)
  %reduce_sum.31270 = f32[] parameter(1)
  ROOT %reduce_sum.31271 = f32[] add(%reduce_sum.31269, %reduce_sum.31270)
}

%region_833.31272.clone (reduce_sum.1951: f32[], reduce_sum.1952: f32[]) -> f32[] {
  %reduce_sum.1951 = f32[] parameter(0)
  %reduce_sum.1952 = f32[] parameter(1)
  ROOT %reduce_sum.1953 = f32[] add(%reduce_sum.1951, %reduce_sum.1952)
}

%region_834.31279 (reduce_sum.31276: f32[], reduce_sum.31277: f32[]) -> f32[] {
  %reduce_sum.31276 = f32[] parameter(0)
  %reduce_sum.31277 = f32[] parameter(1)
  ROOT %reduce_sum.31278 = f32[] add(%reduce_sum.31276, %reduce_sum.31277)
}

%region_834.31279.clone (reduce_sum.1954: f32[], reduce_sum.1955: f32[]) -> f32[] {
  %reduce_sum.1954 = f32[] parameter(0)
  %reduce_sum.1955 = f32[] parameter(1)
  ROOT %reduce_sum.1956 = f32[] add(%reduce_sum.1954, %reduce_sum.1955)
}

%region_835.31286 (reduce_sum.31283: f32[], reduce_sum.31284: f32[]) -> f32[] {
  %reduce_sum.31283 = f32[] parameter(0)
  %reduce_sum.31284 = f32[] parameter(1)
  ROOT %reduce_sum.31285 = f32[] add(%reduce_sum.31283, %reduce_sum.31284)
}

%region_835.31286.clone (reduce_sum.1957: f32[], reduce_sum.1958: f32[]) -> f32[] {
  %reduce_sum.1957 = f32[] parameter(0)
  %reduce_sum.1958 = f32[] parameter(1)
  ROOT %reduce_sum.1959 = f32[] add(%reduce_sum.1957, %reduce_sum.1958)
}

%region_836.31293 (reduce_sum.31290: f32[], reduce_sum.31291: f32[]) -> f32[] {
  %reduce_sum.31290 = f32[] parameter(0)
  %reduce_sum.31291 = f32[] parameter(1)
  ROOT %reduce_sum.31292 = f32[] add(%reduce_sum.31290, %reduce_sum.31291)
}

%region_836.31293.clone (reduce_sum.1960: f32[], reduce_sum.1961: f32[]) -> f32[] {
  %reduce_sum.1960 = f32[] parameter(0)
  %reduce_sum.1961 = f32[] parameter(1)
  ROOT %reduce_sum.1962 = f32[] add(%reduce_sum.1960, %reduce_sum.1961)
}

%region_837.31300 (reduce_sum.31297: f32[], reduce_sum.31298: f32[]) -> f32[] {
  %reduce_sum.31297 = f32[] parameter(0)
  %reduce_sum.31298 = f32[] parameter(1)
  ROOT %reduce_sum.31299 = f32[] add(%reduce_sum.31297, %reduce_sum.31298)
}

%region_837.31300.clone (reduce_sum.1963: f32[], reduce_sum.1964: f32[]) -> f32[] {
  %reduce_sum.1963 = f32[] parameter(0)
  %reduce_sum.1964 = f32[] parameter(1)
  ROOT %reduce_sum.1965 = f32[] add(%reduce_sum.1963, %reduce_sum.1964)
}

%region_838.31307 (reduce_sum.31304: f32[], reduce_sum.31305: f32[]) -> f32[] {
  %reduce_sum.31304 = f32[] parameter(0)
  %reduce_sum.31305 = f32[] parameter(1)
  ROOT %reduce_sum.31306 = f32[] add(%reduce_sum.31304, %reduce_sum.31305)
}

%region_838.31307.clone (reduce_sum.1966: f32[], reduce_sum.1967: f32[]) -> f32[] {
  %reduce_sum.1966 = f32[] parameter(0)
  %reduce_sum.1967 = f32[] parameter(1)
  ROOT %reduce_sum.1968 = f32[] add(%reduce_sum.1966, %reduce_sum.1967)
}

%region_839.31314 (reduce_sum.31311: f32[], reduce_sum.31312: f32[]) -> f32[] {
  %reduce_sum.31311 = f32[] parameter(0)
  %reduce_sum.31312 = f32[] parameter(1)
  ROOT %reduce_sum.31313 = f32[] add(%reduce_sum.31311, %reduce_sum.31312)
}

%region_840.31321 (reduce_sum.31318: f32[], reduce_sum.31319: f32[]) -> f32[] {
  %reduce_sum.31318 = f32[] parameter(0)
  %reduce_sum.31319 = f32[] parameter(1)
  ROOT %reduce_sum.31320 = f32[] add(%reduce_sum.31318, %reduce_sum.31319)
}

%region_841.31328 (reduce_sum.31325: f32[], reduce_sum.31326: f32[]) -> f32[] {
  %reduce_sum.31325 = f32[] parameter(0)
  %reduce_sum.31326 = f32[] parameter(1)
  ROOT %reduce_sum.31327 = f32[] add(%reduce_sum.31325, %reduce_sum.31326)
}

%region_841.31328.clone (reduce_sum.1969: f32[], reduce_sum.1970: f32[]) -> f32[] {
  %reduce_sum.1969 = f32[] parameter(0)
  %reduce_sum.1970 = f32[] parameter(1)
  ROOT %reduce_sum.1971 = f32[] add(%reduce_sum.1969, %reduce_sum.1970)
}

%region_842.31335 (reduce_sum.31332: f32[], reduce_sum.31333: f32[]) -> f32[] {
  %reduce_sum.31332 = f32[] parameter(0)
  %reduce_sum.31333 = f32[] parameter(1)
  ROOT %reduce_sum.31334 = f32[] add(%reduce_sum.31332, %reduce_sum.31333)
}

%region_842.31335.clone (reduce_sum.1972: f32[], reduce_sum.1973: f32[]) -> f32[] {
  %reduce_sum.1972 = f32[] parameter(0)
  %reduce_sum.1973 = f32[] parameter(1)
  ROOT %reduce_sum.1974 = f32[] add(%reduce_sum.1972, %reduce_sum.1973)
}

%region_843.31342 (reduce_sum.31339: f32[], reduce_sum.31340: f32[]) -> f32[] {
  %reduce_sum.31339 = f32[] parameter(0)
  %reduce_sum.31340 = f32[] parameter(1)
  ROOT %reduce_sum.31341 = f32[] add(%reduce_sum.31339, %reduce_sum.31340)
}

%region_843.31342.clone (reduce_sum.1975: f32[], reduce_sum.1976: f32[]) -> f32[] {
  %reduce_sum.1975 = f32[] parameter(0)
  %reduce_sum.1976 = f32[] parameter(1)
  ROOT %reduce_sum.1977 = f32[] add(%reduce_sum.1975, %reduce_sum.1976)
}

%region_844.31349 (reduce_sum.31346: f32[], reduce_sum.31347: f32[]) -> f32[] {
  %reduce_sum.31346 = f32[] parameter(0)
  %reduce_sum.31347 = f32[] parameter(1)
  ROOT %reduce_sum.31348 = f32[] add(%reduce_sum.31346, %reduce_sum.31347)
}

%region_844.31349.clone (reduce_sum.1978: f32[], reduce_sum.1979: f32[]) -> f32[] {
  %reduce_sum.1978 = f32[] parameter(0)
  %reduce_sum.1979 = f32[] parameter(1)
  ROOT %reduce_sum.1980 = f32[] add(%reduce_sum.1978, %reduce_sum.1979)
}

%region_845.31356 (reduce_sum.31353: f32[], reduce_sum.31354: f32[]) -> f32[] {
  %reduce_sum.31353 = f32[] parameter(0)
  %reduce_sum.31354 = f32[] parameter(1)
  ROOT %reduce_sum.31355 = f32[] add(%reduce_sum.31353, %reduce_sum.31354)
}

%region_845.31356.clone (reduce_sum.1981: f32[], reduce_sum.1982: f32[]) -> f32[] {
  %reduce_sum.1981 = f32[] parameter(0)
  %reduce_sum.1982 = f32[] parameter(1)
  ROOT %reduce_sum.1983 = f32[] add(%reduce_sum.1981, %reduce_sum.1982)
}

%region_846.31363 (reduce_sum.31360: f32[], reduce_sum.31361: f32[]) -> f32[] {
  %reduce_sum.31360 = f32[] parameter(0)
  %reduce_sum.31361 = f32[] parameter(1)
  ROOT %reduce_sum.31362 = f32[] add(%reduce_sum.31360, %reduce_sum.31361)
}

%region_846.31363.clone (reduce_sum.1984: f32[], reduce_sum.1985: f32[]) -> f32[] {
  %reduce_sum.1984 = f32[] parameter(0)
  %reduce_sum.1985 = f32[] parameter(1)
  ROOT %reduce_sum.1986 = f32[] add(%reduce_sum.1984, %reduce_sum.1985)
}

%region_847.31370 (reduce_sum.31367: f32[], reduce_sum.31368: f32[]) -> f32[] {
  %reduce_sum.31367 = f32[] parameter(0)
  %reduce_sum.31368 = f32[] parameter(1)
  ROOT %reduce_sum.31369 = f32[] add(%reduce_sum.31367, %reduce_sum.31368)
}

%region_847.31370.clone (reduce_sum.1987: f32[], reduce_sum.1988: f32[]) -> f32[] {
  %reduce_sum.1987 = f32[] parameter(0)
  %reduce_sum.1988 = f32[] parameter(1)
  ROOT %reduce_sum.1989 = f32[] add(%reduce_sum.1987, %reduce_sum.1988)
}

%region_848.31377 (reduce_sum.31374: f32[], reduce_sum.31375: f32[]) -> f32[] {
  %reduce_sum.31374 = f32[] parameter(0)
  %reduce_sum.31375 = f32[] parameter(1)
  ROOT %reduce_sum.31376 = f32[] add(%reduce_sum.31374, %reduce_sum.31375)
}

%region_849.31384 (reduce_sum.31381: f32[], reduce_sum.31382: f32[]) -> f32[] {
  %reduce_sum.31381 = f32[] parameter(0)
  %reduce_sum.31382 = f32[] parameter(1)
  ROOT %reduce_sum.31383 = f32[] add(%reduce_sum.31381, %reduce_sum.31382)
}

%region_850.31391 (reduce_sum.31388: f32[], reduce_sum.31389: f32[]) -> f32[] {
  %reduce_sum.31388 = f32[] parameter(0)
  %reduce_sum.31389 = f32[] parameter(1)
  ROOT %reduce_sum.31390 = f32[] add(%reduce_sum.31388, %reduce_sum.31389)
}

%region_850.31391.clone (reduce_sum.1990: f32[], reduce_sum.1991: f32[]) -> f32[] {
  %reduce_sum.1990 = f32[] parameter(0)
  %reduce_sum.1991 = f32[] parameter(1)
  ROOT %reduce_sum.1992 = f32[] add(%reduce_sum.1990, %reduce_sum.1991)
}

%region_851.31398 (reduce_sum.31395: f32[], reduce_sum.31396: f32[]) -> f32[] {
  %reduce_sum.31395 = f32[] parameter(0)
  %reduce_sum.31396 = f32[] parameter(1)
  ROOT %reduce_sum.31397 = f32[] add(%reduce_sum.31395, %reduce_sum.31396)
}

%region_851.31398.clone (reduce_sum.1993: f32[], reduce_sum.1994: f32[]) -> f32[] {
  %reduce_sum.1993 = f32[] parameter(0)
  %reduce_sum.1994 = f32[] parameter(1)
  ROOT %reduce_sum.1995 = f32[] add(%reduce_sum.1993, %reduce_sum.1994)
}

%region_852.31405 (reduce_sum.31402: f32[], reduce_sum.31403: f32[]) -> f32[] {
  %reduce_sum.31402 = f32[] parameter(0)
  %reduce_sum.31403 = f32[] parameter(1)
  ROOT %reduce_sum.31404 = f32[] add(%reduce_sum.31402, %reduce_sum.31403)
}

%region_852.31405.clone (reduce_sum.1996: f32[], reduce_sum.1997: f32[]) -> f32[] {
  %reduce_sum.1996 = f32[] parameter(0)
  %reduce_sum.1997 = f32[] parameter(1)
  ROOT %reduce_sum.1998 = f32[] add(%reduce_sum.1996, %reduce_sum.1997)
}

%region_853.31412 (reduce_sum.31409: f32[], reduce_sum.31410: f32[]) -> f32[] {
  %reduce_sum.31409 = f32[] parameter(0)
  %reduce_sum.31410 = f32[] parameter(1)
  ROOT %reduce_sum.31411 = f32[] add(%reduce_sum.31409, %reduce_sum.31410)
}

%region_853.31412.clone (reduce_sum.1999: f32[], reduce_sum.2000: f32[]) -> f32[] {
  %reduce_sum.1999 = f32[] parameter(0)
  %reduce_sum.2000 = f32[] parameter(1)
  ROOT %reduce_sum.2001 = f32[] add(%reduce_sum.1999, %reduce_sum.2000)
}

%region_854.31419 (reduce_sum.31416: f32[], reduce_sum.31417: f32[]) -> f32[] {
  %reduce_sum.31416 = f32[] parameter(0)
  %reduce_sum.31417 = f32[] parameter(1)
  ROOT %reduce_sum.31418 = f32[] add(%reduce_sum.31416, %reduce_sum.31417)
}

%region_854.31419.clone (reduce_sum.2002: f32[], reduce_sum.2003: f32[]) -> f32[] {
  %reduce_sum.2002 = f32[] parameter(0)
  %reduce_sum.2003 = f32[] parameter(1)
  ROOT %reduce_sum.2004 = f32[] add(%reduce_sum.2002, %reduce_sum.2003)
}

%region_855.31426 (reduce_sum.31423: f32[], reduce_sum.31424: f32[]) -> f32[] {
  %reduce_sum.31423 = f32[] parameter(0)
  %reduce_sum.31424 = f32[] parameter(1)
  ROOT %reduce_sum.31425 = f32[] add(%reduce_sum.31423, %reduce_sum.31424)
}

%region_855.31426.clone (reduce_sum.2005: f32[], reduce_sum.2006: f32[]) -> f32[] {
  %reduce_sum.2005 = f32[] parameter(0)
  %reduce_sum.2006 = f32[] parameter(1)
  ROOT %reduce_sum.2007 = f32[] add(%reduce_sum.2005, %reduce_sum.2006)
}

%region_856.31433 (reduce_sum.31430: f32[], reduce_sum.31431: f32[]) -> f32[] {
  %reduce_sum.31430 = f32[] parameter(0)
  %reduce_sum.31431 = f32[] parameter(1)
  ROOT %reduce_sum.31432 = f32[] add(%reduce_sum.31430, %reduce_sum.31431)
}

%region_856.31433.clone (reduce_sum.2008: f32[], reduce_sum.2009: f32[]) -> f32[] {
  %reduce_sum.2008 = f32[] parameter(0)
  %reduce_sum.2009 = f32[] parameter(1)
  ROOT %reduce_sum.2010 = f32[] add(%reduce_sum.2008, %reduce_sum.2009)
}

%region_857.31440 (reduce_sum.31437: f32[], reduce_sum.31438: f32[]) -> f32[] {
  %reduce_sum.31437 = f32[] parameter(0)
  %reduce_sum.31438 = f32[] parameter(1)
  ROOT %reduce_sum.31439 = f32[] add(%reduce_sum.31437, %reduce_sum.31438)
}

%region_858.31447 (reduce_sum.31444: f32[], reduce_sum.31445: f32[]) -> f32[] {
  %reduce_sum.31444 = f32[] parameter(0)
  %reduce_sum.31445 = f32[] parameter(1)
  ROOT %reduce_sum.31446 = f32[] add(%reduce_sum.31444, %reduce_sum.31445)
}

%region_859.31454 (reduce_sum.31451: f32[], reduce_sum.31452: f32[]) -> f32[] {
  %reduce_sum.31451 = f32[] parameter(0)
  %reduce_sum.31452 = f32[] parameter(1)
  ROOT %reduce_sum.31453 = f32[] add(%reduce_sum.31451, %reduce_sum.31452)
}

%region_859.31454.clone (reduce_sum.2011: f32[], reduce_sum.2012: f32[]) -> f32[] {
  %reduce_sum.2011 = f32[] parameter(0)
  %reduce_sum.2012 = f32[] parameter(1)
  ROOT %reduce_sum.2013 = f32[] add(%reduce_sum.2011, %reduce_sum.2012)
}

%region_860.31461 (reduce_sum.31458: f32[], reduce_sum.31459: f32[]) -> f32[] {
  %reduce_sum.31458 = f32[] parameter(0)
  %reduce_sum.31459 = f32[] parameter(1)
  ROOT %reduce_sum.31460 = f32[] add(%reduce_sum.31458, %reduce_sum.31459)
}

%region_860.31461.clone (reduce_sum.2014: f32[], reduce_sum.2015: f32[]) -> f32[] {
  %reduce_sum.2014 = f32[] parameter(0)
  %reduce_sum.2015 = f32[] parameter(1)
  ROOT %reduce_sum.2016 = f32[] add(%reduce_sum.2014, %reduce_sum.2015)
}

%region_861.31468 (reduce_sum.31465: f32[], reduce_sum.31466: f32[]) -> f32[] {
  %reduce_sum.31465 = f32[] parameter(0)
  %reduce_sum.31466 = f32[] parameter(1)
  ROOT %reduce_sum.31467 = f32[] add(%reduce_sum.31465, %reduce_sum.31466)
}

%region_861.31468.clone (reduce_sum.2017: f32[], reduce_sum.2018: f32[]) -> f32[] {
  %reduce_sum.2017 = f32[] parameter(0)
  %reduce_sum.2018 = f32[] parameter(1)
  ROOT %reduce_sum.2019 = f32[] add(%reduce_sum.2017, %reduce_sum.2018)
}

%region_862.31475 (reduce_sum.31472: f32[], reduce_sum.31473: f32[]) -> f32[] {
  %reduce_sum.31472 = f32[] parameter(0)
  %reduce_sum.31473 = f32[] parameter(1)
  ROOT %reduce_sum.31474 = f32[] add(%reduce_sum.31472, %reduce_sum.31473)
}

%region_862.31475.clone (reduce_sum.2020: f32[], reduce_sum.2021: f32[]) -> f32[] {
  %reduce_sum.2020 = f32[] parameter(0)
  %reduce_sum.2021 = f32[] parameter(1)
  ROOT %reduce_sum.2022 = f32[] add(%reduce_sum.2020, %reduce_sum.2021)
}

%region_863.31482 (reduce_sum.31479: f32[], reduce_sum.31480: f32[]) -> f32[] {
  %reduce_sum.31479 = f32[] parameter(0)
  %reduce_sum.31480 = f32[] parameter(1)
  ROOT %reduce_sum.31481 = f32[] add(%reduce_sum.31479, %reduce_sum.31480)
}

%region_863.31482.clone (reduce_sum.2023: f32[], reduce_sum.2024: f32[]) -> f32[] {
  %reduce_sum.2023 = f32[] parameter(0)
  %reduce_sum.2024 = f32[] parameter(1)
  ROOT %reduce_sum.2025 = f32[] add(%reduce_sum.2023, %reduce_sum.2024)
}

%region_864.31489 (reduce_sum.31486: f32[], reduce_sum.31487: f32[]) -> f32[] {
  %reduce_sum.31486 = f32[] parameter(0)
  %reduce_sum.31487 = f32[] parameter(1)
  ROOT %reduce_sum.31488 = f32[] add(%reduce_sum.31486, %reduce_sum.31487)
}

%region_864.31489.clone (reduce_sum.2026: f32[], reduce_sum.2027: f32[]) -> f32[] {
  %reduce_sum.2026 = f32[] parameter(0)
  %reduce_sum.2027 = f32[] parameter(1)
  ROOT %reduce_sum.2028 = f32[] add(%reduce_sum.2026, %reduce_sum.2027)
}

%region_865.31496 (reduce_sum.31493: f32[], reduce_sum.31494: f32[]) -> f32[] {
  %reduce_sum.31493 = f32[] parameter(0)
  %reduce_sum.31494 = f32[] parameter(1)
  ROOT %reduce_sum.31495 = f32[] add(%reduce_sum.31493, %reduce_sum.31494)
}

%region_865.31496.clone (reduce_sum.2029: f32[], reduce_sum.2030: f32[]) -> f32[] {
  %reduce_sum.2029 = f32[] parameter(0)
  %reduce_sum.2030 = f32[] parameter(1)
  ROOT %reduce_sum.2031 = f32[] add(%reduce_sum.2029, %reduce_sum.2030)
}

%region_866.31503 (reduce_sum.31500: f32[], reduce_sum.31501: f32[]) -> f32[] {
  %reduce_sum.31500 = f32[] parameter(0)
  %reduce_sum.31501 = f32[] parameter(1)
  ROOT %reduce_sum.31502 = f32[] add(%reduce_sum.31500, %reduce_sum.31501)
}

%region_867.31510 (reduce_sum.31507: f32[], reduce_sum.31508: f32[]) -> f32[] {
  %reduce_sum.31507 = f32[] parameter(0)
  %reduce_sum.31508 = f32[] parameter(1)
  ROOT %reduce_sum.31509 = f32[] add(%reduce_sum.31507, %reduce_sum.31508)
}

%region_868.31517 (reduce_sum.31514: f32[], reduce_sum.31515: f32[]) -> f32[] {
  %reduce_sum.31514 = f32[] parameter(0)
  %reduce_sum.31515 = f32[] parameter(1)
  ROOT %reduce_sum.31516 = f32[] add(%reduce_sum.31514, %reduce_sum.31515)
}

%region_868.31517.clone (reduce_sum.2032: f32[], reduce_sum.2033: f32[]) -> f32[] {
  %reduce_sum.2032 = f32[] parameter(0)
  %reduce_sum.2033 = f32[] parameter(1)
  ROOT %reduce_sum.2034 = f32[] add(%reduce_sum.2032, %reduce_sum.2033)
}

%region_869.31524 (reduce_sum.31521: f32[], reduce_sum.31522: f32[]) -> f32[] {
  %reduce_sum.31521 = f32[] parameter(0)
  %reduce_sum.31522 = f32[] parameter(1)
  ROOT %reduce_sum.31523 = f32[] add(%reduce_sum.31521, %reduce_sum.31522)
}

%region_869.31524.clone (reduce_sum.2035: f32[], reduce_sum.2036: f32[]) -> f32[] {
  %reduce_sum.2035 = f32[] parameter(0)
  %reduce_sum.2036 = f32[] parameter(1)
  ROOT %reduce_sum.2037 = f32[] add(%reduce_sum.2035, %reduce_sum.2036)
}

%region_870.31531 (reduce_sum.31528: f32[], reduce_sum.31529: f32[]) -> f32[] {
  %reduce_sum.31528 = f32[] parameter(0)
  %reduce_sum.31529 = f32[] parameter(1)
  ROOT %reduce_sum.31530 = f32[] add(%reduce_sum.31528, %reduce_sum.31529)
}

%region_870.31531.clone (reduce_sum.2038: f32[], reduce_sum.2039: f32[]) -> f32[] {
  %reduce_sum.2038 = f32[] parameter(0)
  %reduce_sum.2039 = f32[] parameter(1)
  ROOT %reduce_sum.2040 = f32[] add(%reduce_sum.2038, %reduce_sum.2039)
}

%region_871.31538 (reduce_sum.31535: f32[], reduce_sum.31536: f32[]) -> f32[] {
  %reduce_sum.31535 = f32[] parameter(0)
  %reduce_sum.31536 = f32[] parameter(1)
  ROOT %reduce_sum.31537 = f32[] add(%reduce_sum.31535, %reduce_sum.31536)
}

%region_871.31538.clone (reduce_sum.2041: f32[], reduce_sum.2042: f32[]) -> f32[] {
  %reduce_sum.2041 = f32[] parameter(0)
  %reduce_sum.2042 = f32[] parameter(1)
  ROOT %reduce_sum.2043 = f32[] add(%reduce_sum.2041, %reduce_sum.2042)
}

%region_872.31545 (reduce_sum.31542: f32[], reduce_sum.31543: f32[]) -> f32[] {
  %reduce_sum.31542 = f32[] parameter(0)
  %reduce_sum.31543 = f32[] parameter(1)
  ROOT %reduce_sum.31544 = f32[] add(%reduce_sum.31542, %reduce_sum.31543)
}

%region_872.31545.clone (reduce_sum.2044: f32[], reduce_sum.2045: f32[]) -> f32[] {
  %reduce_sum.2044 = f32[] parameter(0)
  %reduce_sum.2045 = f32[] parameter(1)
  ROOT %reduce_sum.2046 = f32[] add(%reduce_sum.2044, %reduce_sum.2045)
}

%region_873.31552 (reduce_sum.31549: f32[], reduce_sum.31550: f32[]) -> f32[] {
  %reduce_sum.31549 = f32[] parameter(0)
  %reduce_sum.31550 = f32[] parameter(1)
  ROOT %reduce_sum.31551 = f32[] add(%reduce_sum.31549, %reduce_sum.31550)
}

%region_873.31552.clone (reduce_sum.2047: f32[], reduce_sum.2048: f32[]) -> f32[] {
  %reduce_sum.2047 = f32[] parameter(0)
  %reduce_sum.2048 = f32[] parameter(1)
  ROOT %reduce_sum.2049 = f32[] add(%reduce_sum.2047, %reduce_sum.2048)
}

%region_874.31559 (reduce_sum.31556: f32[], reduce_sum.31557: f32[]) -> f32[] {
  %reduce_sum.31556 = f32[] parameter(0)
  %reduce_sum.31557 = f32[] parameter(1)
  ROOT %reduce_sum.31558 = f32[] add(%reduce_sum.31556, %reduce_sum.31557)
}

%region_874.31559.clone (reduce_sum.2050: f32[], reduce_sum.2051: f32[]) -> f32[] {
  %reduce_sum.2050 = f32[] parameter(0)
  %reduce_sum.2051 = f32[] parameter(1)
  ROOT %reduce_sum.2052 = f32[] add(%reduce_sum.2050, %reduce_sum.2051)
}

%region_875.31566 (reduce_sum.31563: f32[], reduce_sum.31564: f32[]) -> f32[] {
  %reduce_sum.31563 = f32[] parameter(0)
  %reduce_sum.31564 = f32[] parameter(1)
  ROOT %reduce_sum.31565 = f32[] add(%reduce_sum.31563, %reduce_sum.31564)
}

%region_876.31573 (reduce_sum.31570: f32[], reduce_sum.31571: f32[]) -> f32[] {
  %reduce_sum.31570 = f32[] parameter(0)
  %reduce_sum.31571 = f32[] parameter(1)
  ROOT %reduce_sum.31572 = f32[] add(%reduce_sum.31570, %reduce_sum.31571)
}

%region_877.31580 (reduce_sum.31577: f32[], reduce_sum.31578: f32[]) -> f32[] {
  %reduce_sum.31577 = f32[] parameter(0)
  %reduce_sum.31578 = f32[] parameter(1)
  ROOT %reduce_sum.31579 = f32[] add(%reduce_sum.31577, %reduce_sum.31578)
}

%region_877.31580.clone (reduce_sum.2053: f32[], reduce_sum.2054: f32[]) -> f32[] {
  %reduce_sum.2053 = f32[] parameter(0)
  %reduce_sum.2054 = f32[] parameter(1)
  ROOT %reduce_sum.2055 = f32[] add(%reduce_sum.2053, %reduce_sum.2054)
}

%region_878.31587 (reduce_sum.31584: f32[], reduce_sum.31585: f32[]) -> f32[] {
  %reduce_sum.31584 = f32[] parameter(0)
  %reduce_sum.31585 = f32[] parameter(1)
  ROOT %reduce_sum.31586 = f32[] add(%reduce_sum.31584, %reduce_sum.31585)
}

%region_878.31587.clone (reduce_sum.2056: f32[], reduce_sum.2057: f32[]) -> f32[] {
  %reduce_sum.2056 = f32[] parameter(0)
  %reduce_sum.2057 = f32[] parameter(1)
  ROOT %reduce_sum.2058 = f32[] add(%reduce_sum.2056, %reduce_sum.2057)
}

%region_879.31594 (reduce_sum.31591: f32[], reduce_sum.31592: f32[]) -> f32[] {
  %reduce_sum.31591 = f32[] parameter(0)
  %reduce_sum.31592 = f32[] parameter(1)
  ROOT %reduce_sum.31593 = f32[] add(%reduce_sum.31591, %reduce_sum.31592)
}

%region_879.31594.clone (reduce_sum.2059: f32[], reduce_sum.2060: f32[]) -> f32[] {
  %reduce_sum.2059 = f32[] parameter(0)
  %reduce_sum.2060 = f32[] parameter(1)
  ROOT %reduce_sum.2061 = f32[] add(%reduce_sum.2059, %reduce_sum.2060)
}

%region_880.31601 (reduce_sum.31598: f32[], reduce_sum.31599: f32[]) -> f32[] {
  %reduce_sum.31598 = f32[] parameter(0)
  %reduce_sum.31599 = f32[] parameter(1)
  ROOT %reduce_sum.31600 = f32[] add(%reduce_sum.31598, %reduce_sum.31599)
}

%region_880.31601.clone (reduce_sum.2062: f32[], reduce_sum.2063: f32[]) -> f32[] {
  %reduce_sum.2062 = f32[] parameter(0)
  %reduce_sum.2063 = f32[] parameter(1)
  ROOT %reduce_sum.2064 = f32[] add(%reduce_sum.2062, %reduce_sum.2063)
}

%region_881.31608 (reduce_sum.31605: f32[], reduce_sum.31606: f32[]) -> f32[] {
  %reduce_sum.31605 = f32[] parameter(0)
  %reduce_sum.31606 = f32[] parameter(1)
  ROOT %reduce_sum.31607 = f32[] add(%reduce_sum.31605, %reduce_sum.31606)
}

%region_881.31608.clone (reduce_sum.2065: f32[], reduce_sum.2066: f32[]) -> f32[] {
  %reduce_sum.2065 = f32[] parameter(0)
  %reduce_sum.2066 = f32[] parameter(1)
  ROOT %reduce_sum.2067 = f32[] add(%reduce_sum.2065, %reduce_sum.2066)
}

%region_882.31615 (reduce_sum.31612: f32[], reduce_sum.31613: f32[]) -> f32[] {
  %reduce_sum.31612 = f32[] parameter(0)
  %reduce_sum.31613 = f32[] parameter(1)
  ROOT %reduce_sum.31614 = f32[] add(%reduce_sum.31612, %reduce_sum.31613)
}

%region_882.31615.clone (reduce_sum.2068: f32[], reduce_sum.2069: f32[]) -> f32[] {
  %reduce_sum.2068 = f32[] parameter(0)
  %reduce_sum.2069 = f32[] parameter(1)
  ROOT %reduce_sum.2070 = f32[] add(%reduce_sum.2068, %reduce_sum.2069)
}

%region_883.31622 (reduce_sum.31619: f32[], reduce_sum.31620: f32[]) -> f32[] {
  %reduce_sum.31619 = f32[] parameter(0)
  %reduce_sum.31620 = f32[] parameter(1)
  ROOT %reduce_sum.31621 = f32[] add(%reduce_sum.31619, %reduce_sum.31620)
}

%region_883.31622.clone (reduce_sum.2071: f32[], reduce_sum.2072: f32[]) -> f32[] {
  %reduce_sum.2071 = f32[] parameter(0)
  %reduce_sum.2072 = f32[] parameter(1)
  ROOT %reduce_sum.2073 = f32[] add(%reduce_sum.2071, %reduce_sum.2072)
}

%region_884.31629 (reduce_sum.31626: f32[], reduce_sum.31627: f32[]) -> f32[] {
  %reduce_sum.31626 = f32[] parameter(0)
  %reduce_sum.31627 = f32[] parameter(1)
  ROOT %reduce_sum.31628 = f32[] add(%reduce_sum.31626, %reduce_sum.31627)
}

%region_885.31636 (reduce_sum.31633: f32[], reduce_sum.31634: f32[]) -> f32[] {
  %reduce_sum.31633 = f32[] parameter(0)
  %reduce_sum.31634 = f32[] parameter(1)
  ROOT %reduce_sum.31635 = f32[] add(%reduce_sum.31633, %reduce_sum.31634)
}

%region_886.31643 (reduce_sum.31640: f32[], reduce_sum.31641: f32[]) -> f32[] {
  %reduce_sum.31640 = f32[] parameter(0)
  %reduce_sum.31641 = f32[] parameter(1)
  ROOT %reduce_sum.31642 = f32[] add(%reduce_sum.31640, %reduce_sum.31641)
}

%region_886.31643.clone (reduce_sum.2074: f32[], reduce_sum.2075: f32[]) -> f32[] {
  %reduce_sum.2074 = f32[] parameter(0)
  %reduce_sum.2075 = f32[] parameter(1)
  ROOT %reduce_sum.2076 = f32[] add(%reduce_sum.2074, %reduce_sum.2075)
}

%region_887.31650 (reduce_sum.31647: f32[], reduce_sum.31648: f32[]) -> f32[] {
  %reduce_sum.31647 = f32[] parameter(0)
  %reduce_sum.31648 = f32[] parameter(1)
  ROOT %reduce_sum.31649 = f32[] add(%reduce_sum.31647, %reduce_sum.31648)
}

%region_887.31650.clone (reduce_sum.2077: f32[], reduce_sum.2078: f32[]) -> f32[] {
  %reduce_sum.2077 = f32[] parameter(0)
  %reduce_sum.2078 = f32[] parameter(1)
  ROOT %reduce_sum.2079 = f32[] add(%reduce_sum.2077, %reduce_sum.2078)
}

%region_888.31657 (reduce_sum.31654: f32[], reduce_sum.31655: f32[]) -> f32[] {
  %reduce_sum.31654 = f32[] parameter(0)
  %reduce_sum.31655 = f32[] parameter(1)
  ROOT %reduce_sum.31656 = f32[] add(%reduce_sum.31654, %reduce_sum.31655)
}

%region_888.31657.clone (reduce_sum.2080: f32[], reduce_sum.2081: f32[]) -> f32[] {
  %reduce_sum.2080 = f32[] parameter(0)
  %reduce_sum.2081 = f32[] parameter(1)
  ROOT %reduce_sum.2082 = f32[] add(%reduce_sum.2080, %reduce_sum.2081)
}

%region_889.31664 (reduce_sum.31661: f32[], reduce_sum.31662: f32[]) -> f32[] {
  %reduce_sum.31661 = f32[] parameter(0)
  %reduce_sum.31662 = f32[] parameter(1)
  ROOT %reduce_sum.31663 = f32[] add(%reduce_sum.31661, %reduce_sum.31662)
}

%region_889.31664.clone (reduce_sum.2083: f32[], reduce_sum.2084: f32[]) -> f32[] {
  %reduce_sum.2083 = f32[] parameter(0)
  %reduce_sum.2084 = f32[] parameter(1)
  ROOT %reduce_sum.2085 = f32[] add(%reduce_sum.2083, %reduce_sum.2084)
}

%region_890.31671 (reduce_sum.31668: f32[], reduce_sum.31669: f32[]) -> f32[] {
  %reduce_sum.31668 = f32[] parameter(0)
  %reduce_sum.31669 = f32[] parameter(1)
  ROOT %reduce_sum.31670 = f32[] add(%reduce_sum.31668, %reduce_sum.31669)
}

%region_890.31671.clone (reduce_sum.2086: f32[], reduce_sum.2087: f32[]) -> f32[] {
  %reduce_sum.2086 = f32[] parameter(0)
  %reduce_sum.2087 = f32[] parameter(1)
  ROOT %reduce_sum.2088 = f32[] add(%reduce_sum.2086, %reduce_sum.2087)
}

%region_891.31678 (reduce_sum.31675: f32[], reduce_sum.31676: f32[]) -> f32[] {
  %reduce_sum.31675 = f32[] parameter(0)
  %reduce_sum.31676 = f32[] parameter(1)
  ROOT %reduce_sum.31677 = f32[] add(%reduce_sum.31675, %reduce_sum.31676)
}

%region_891.31678.clone (reduce_sum.2089: f32[], reduce_sum.2090: f32[]) -> f32[] {
  %reduce_sum.2089 = f32[] parameter(0)
  %reduce_sum.2090 = f32[] parameter(1)
  ROOT %reduce_sum.2091 = f32[] add(%reduce_sum.2089, %reduce_sum.2090)
}

%region_892.31685 (reduce_sum.31682: f32[], reduce_sum.31683: f32[]) -> f32[] {
  %reduce_sum.31682 = f32[] parameter(0)
  %reduce_sum.31683 = f32[] parameter(1)
  ROOT %reduce_sum.31684 = f32[] add(%reduce_sum.31682, %reduce_sum.31683)
}

%region_892.31685.clone (reduce_sum.2092: f32[], reduce_sum.2093: f32[]) -> f32[] {
  %reduce_sum.2092 = f32[] parameter(0)
  %reduce_sum.2093 = f32[] parameter(1)
  ROOT %reduce_sum.2094 = f32[] add(%reduce_sum.2092, %reduce_sum.2093)
}

%region_893.31692 (reduce_sum.31689: f32[], reduce_sum.31690: f32[]) -> f32[] {
  %reduce_sum.31689 = f32[] parameter(0)
  %reduce_sum.31690 = f32[] parameter(1)
  ROOT %reduce_sum.31691 = f32[] add(%reduce_sum.31689, %reduce_sum.31690)
}

%region_894.31699 (reduce_sum.31696: f32[], reduce_sum.31697: f32[]) -> f32[] {
  %reduce_sum.31696 = f32[] parameter(0)
  %reduce_sum.31697 = f32[] parameter(1)
  ROOT %reduce_sum.31698 = f32[] add(%reduce_sum.31696, %reduce_sum.31697)
}

%region_895.31706 (reduce_sum.31703: f32[], reduce_sum.31704: f32[]) -> f32[] {
  %reduce_sum.31703 = f32[] parameter(0)
  %reduce_sum.31704 = f32[] parameter(1)
  ROOT %reduce_sum.31705 = f32[] add(%reduce_sum.31703, %reduce_sum.31704)
}

%region_895.31706.clone (reduce_sum.2095: f32[], reduce_sum.2096: f32[]) -> f32[] {
  %reduce_sum.2095 = f32[] parameter(0)
  %reduce_sum.2096 = f32[] parameter(1)
  ROOT %reduce_sum.2097 = f32[] add(%reduce_sum.2095, %reduce_sum.2096)
}

%region_896.31713 (reduce_sum.31710: f32[], reduce_sum.31711: f32[]) -> f32[] {
  %reduce_sum.31710 = f32[] parameter(0)
  %reduce_sum.31711 = f32[] parameter(1)
  ROOT %reduce_sum.31712 = f32[] add(%reduce_sum.31710, %reduce_sum.31711)
}

%region_896.31713.clone (reduce_sum.2098: f32[], reduce_sum.2099: f32[]) -> f32[] {
  %reduce_sum.2098 = f32[] parameter(0)
  %reduce_sum.2099 = f32[] parameter(1)
  ROOT %reduce_sum.2100 = f32[] add(%reduce_sum.2098, %reduce_sum.2099)
}

%region_897.31720 (reduce_sum.31717: f32[], reduce_sum.31718: f32[]) -> f32[] {
  %reduce_sum.31717 = f32[] parameter(0)
  %reduce_sum.31718 = f32[] parameter(1)
  ROOT %reduce_sum.31719 = f32[] add(%reduce_sum.31717, %reduce_sum.31718)
}

%region_897.31720.clone (reduce_sum.2101: f32[], reduce_sum.2102: f32[]) -> f32[] {
  %reduce_sum.2101 = f32[] parameter(0)
  %reduce_sum.2102 = f32[] parameter(1)
  ROOT %reduce_sum.2103 = f32[] add(%reduce_sum.2101, %reduce_sum.2102)
}

%region_898.31727 (reduce_sum.31724: f32[], reduce_sum.31725: f32[]) -> f32[] {
  %reduce_sum.31724 = f32[] parameter(0)
  %reduce_sum.31725 = f32[] parameter(1)
  ROOT %reduce_sum.31726 = f32[] add(%reduce_sum.31724, %reduce_sum.31725)
}

%region_898.31727.clone (reduce_sum.2104: f32[], reduce_sum.2105: f32[]) -> f32[] {
  %reduce_sum.2104 = f32[] parameter(0)
  %reduce_sum.2105 = f32[] parameter(1)
  ROOT %reduce_sum.2106 = f32[] add(%reduce_sum.2104, %reduce_sum.2105)
}

%region_899.31734 (reduce_sum.31731: f32[], reduce_sum.31732: f32[]) -> f32[] {
  %reduce_sum.31731 = f32[] parameter(0)
  %reduce_sum.31732 = f32[] parameter(1)
  ROOT %reduce_sum.31733 = f32[] add(%reduce_sum.31731, %reduce_sum.31732)
}

%region_899.31734.clone (reduce_sum.2107: f32[], reduce_sum.2108: f32[]) -> f32[] {
  %reduce_sum.2107 = f32[] parameter(0)
  %reduce_sum.2108 = f32[] parameter(1)
  ROOT %reduce_sum.2109 = f32[] add(%reduce_sum.2107, %reduce_sum.2108)
}

%region_900.31741 (reduce_sum.31738: f32[], reduce_sum.31739: f32[]) -> f32[] {
  %reduce_sum.31738 = f32[] parameter(0)
  %reduce_sum.31739 = f32[] parameter(1)
  ROOT %reduce_sum.31740 = f32[] add(%reduce_sum.31738, %reduce_sum.31739)
}

%region_900.31741.clone (reduce_sum.2110: f32[], reduce_sum.2111: f32[]) -> f32[] {
  %reduce_sum.2110 = f32[] parameter(0)
  %reduce_sum.2111 = f32[] parameter(1)
  ROOT %reduce_sum.2112 = f32[] add(%reduce_sum.2110, %reduce_sum.2111)
}

%region_901.31748 (reduce_sum.31745: f32[], reduce_sum.31746: f32[]) -> f32[] {
  %reduce_sum.31745 = f32[] parameter(0)
  %reduce_sum.31746 = f32[] parameter(1)
  ROOT %reduce_sum.31747 = f32[] add(%reduce_sum.31745, %reduce_sum.31746)
}

%region_901.31748.clone (reduce_sum.2113: f32[], reduce_sum.2114: f32[]) -> f32[] {
  %reduce_sum.2113 = f32[] parameter(0)
  %reduce_sum.2114 = f32[] parameter(1)
  ROOT %reduce_sum.2115 = f32[] add(%reduce_sum.2113, %reduce_sum.2114)
}

%region_902.31755 (reduce_sum.31752: f32[], reduce_sum.31753: f32[]) -> f32[] {
  %reduce_sum.31752 = f32[] parameter(0)
  %reduce_sum.31753 = f32[] parameter(1)
  ROOT %reduce_sum.31754 = f32[] add(%reduce_sum.31752, %reduce_sum.31753)
}

%region_903.31762 (reduce_sum.31759: f32[], reduce_sum.31760: f32[]) -> f32[] {
  %reduce_sum.31759 = f32[] parameter(0)
  %reduce_sum.31760 = f32[] parameter(1)
  ROOT %reduce_sum.31761 = f32[] add(%reduce_sum.31759, %reduce_sum.31760)
}

%region_904.31769 (reduce_sum.31766: f32[], reduce_sum.31767: f32[]) -> f32[] {
  %reduce_sum.31766 = f32[] parameter(0)
  %reduce_sum.31767 = f32[] parameter(1)
  ROOT %reduce_sum.31768 = f32[] add(%reduce_sum.31766, %reduce_sum.31767)
}

%region_904.31769.clone (reduce_sum.2116: f32[], reduce_sum.2117: f32[]) -> f32[] {
  %reduce_sum.2116 = f32[] parameter(0)
  %reduce_sum.2117 = f32[] parameter(1)
  ROOT %reduce_sum.2118 = f32[] add(%reduce_sum.2116, %reduce_sum.2117)
}

%region_905.31776 (reduce_sum.31773: f32[], reduce_sum.31774: f32[]) -> f32[] {
  %reduce_sum.31773 = f32[] parameter(0)
  %reduce_sum.31774 = f32[] parameter(1)
  ROOT %reduce_sum.31775 = f32[] add(%reduce_sum.31773, %reduce_sum.31774)
}

%region_905.31776.clone (reduce_sum.2119: f32[], reduce_sum.2120: f32[]) -> f32[] {
  %reduce_sum.2119 = f32[] parameter(0)
  %reduce_sum.2120 = f32[] parameter(1)
  ROOT %reduce_sum.2121 = f32[] add(%reduce_sum.2119, %reduce_sum.2120)
}

%region_906.31783 (reduce_sum.31780: f32[], reduce_sum.31781: f32[]) -> f32[] {
  %reduce_sum.31780 = f32[] parameter(0)
  %reduce_sum.31781 = f32[] parameter(1)
  ROOT %reduce_sum.31782 = f32[] add(%reduce_sum.31780, %reduce_sum.31781)
}

%region_906.31783.clone (reduce_sum.2122: f32[], reduce_sum.2123: f32[]) -> f32[] {
  %reduce_sum.2122 = f32[] parameter(0)
  %reduce_sum.2123 = f32[] parameter(1)
  ROOT %reduce_sum.2124 = f32[] add(%reduce_sum.2122, %reduce_sum.2123)
}

%region_907.31790 (reduce_sum.31787: f32[], reduce_sum.31788: f32[]) -> f32[] {
  %reduce_sum.31787 = f32[] parameter(0)
  %reduce_sum.31788 = f32[] parameter(1)
  ROOT %reduce_sum.31789 = f32[] add(%reduce_sum.31787, %reduce_sum.31788)
}

%region_907.31790.clone (reduce_sum.2125: f32[], reduce_sum.2126: f32[]) -> f32[] {
  %reduce_sum.2125 = f32[] parameter(0)
  %reduce_sum.2126 = f32[] parameter(1)
  ROOT %reduce_sum.2127 = f32[] add(%reduce_sum.2125, %reduce_sum.2126)
}

%region_908.31797 (reduce_sum.31794: f32[], reduce_sum.31795: f32[]) -> f32[] {
  %reduce_sum.31794 = f32[] parameter(0)
  %reduce_sum.31795 = f32[] parameter(1)
  ROOT %reduce_sum.31796 = f32[] add(%reduce_sum.31794, %reduce_sum.31795)
}

%region_908.31797.clone (reduce_sum.2128: f32[], reduce_sum.2129: f32[]) -> f32[] {
  %reduce_sum.2128 = f32[] parameter(0)
  %reduce_sum.2129 = f32[] parameter(1)
  ROOT %reduce_sum.2130 = f32[] add(%reduce_sum.2128, %reduce_sum.2129)
}

%region_909.31804 (reduce_sum.31801: f32[], reduce_sum.31802: f32[]) -> f32[] {
  %reduce_sum.31801 = f32[] parameter(0)
  %reduce_sum.31802 = f32[] parameter(1)
  ROOT %reduce_sum.31803 = f32[] add(%reduce_sum.31801, %reduce_sum.31802)
}

%region_909.31804.clone (reduce_sum.2131: f32[], reduce_sum.2132: f32[]) -> f32[] {
  %reduce_sum.2131 = f32[] parameter(0)
  %reduce_sum.2132 = f32[] parameter(1)
  ROOT %reduce_sum.2133 = f32[] add(%reduce_sum.2131, %reduce_sum.2132)
}

%region_910.31811 (reduce_sum.31808: f32[], reduce_sum.31809: f32[]) -> f32[] {
  %reduce_sum.31808 = f32[] parameter(0)
  %reduce_sum.31809 = f32[] parameter(1)
  ROOT %reduce_sum.31810 = f32[] add(%reduce_sum.31808, %reduce_sum.31809)
}

%region_910.31811.clone (reduce_sum.2134: f32[], reduce_sum.2135: f32[]) -> f32[] {
  %reduce_sum.2134 = f32[] parameter(0)
  %reduce_sum.2135 = f32[] parameter(1)
  ROOT %reduce_sum.2136 = f32[] add(%reduce_sum.2134, %reduce_sum.2135)
}

%region_911.31818 (reduce_sum.31815: f32[], reduce_sum.31816: f32[]) -> f32[] {
  %reduce_sum.31815 = f32[] parameter(0)
  %reduce_sum.31816 = f32[] parameter(1)
  ROOT %reduce_sum.31817 = f32[] add(%reduce_sum.31815, %reduce_sum.31816)
}

%region_912.31825 (reduce_sum.31822: f32[], reduce_sum.31823: f32[]) -> f32[] {
  %reduce_sum.31822 = f32[] parameter(0)
  %reduce_sum.31823 = f32[] parameter(1)
  ROOT %reduce_sum.31824 = f32[] add(%reduce_sum.31822, %reduce_sum.31823)
}

%region_913.31832 (reduce_sum.31829: f32[], reduce_sum.31830: f32[]) -> f32[] {
  %reduce_sum.31829 = f32[] parameter(0)
  %reduce_sum.31830 = f32[] parameter(1)
  ROOT %reduce_sum.31831 = f32[] add(%reduce_sum.31829, %reduce_sum.31830)
}

%region_913.31832.clone (reduce_sum.2137: f32[], reduce_sum.2138: f32[]) -> f32[] {
  %reduce_sum.2137 = f32[] parameter(0)
  %reduce_sum.2138 = f32[] parameter(1)
  ROOT %reduce_sum.2139 = f32[] add(%reduce_sum.2137, %reduce_sum.2138)
}

%region_914.31839 (reduce_sum.31836: f32[], reduce_sum.31837: f32[]) -> f32[] {
  %reduce_sum.31836 = f32[] parameter(0)
  %reduce_sum.31837 = f32[] parameter(1)
  ROOT %reduce_sum.31838 = f32[] add(%reduce_sum.31836, %reduce_sum.31837)
}

%region_914.31839.clone (reduce_sum.2140: f32[], reduce_sum.2141: f32[]) -> f32[] {
  %reduce_sum.2140 = f32[] parameter(0)
  %reduce_sum.2141 = f32[] parameter(1)
  ROOT %reduce_sum.2142 = f32[] add(%reduce_sum.2140, %reduce_sum.2141)
}

%region_915.31846 (reduce_sum.31843: f32[], reduce_sum.31844: f32[]) -> f32[] {
  %reduce_sum.31843 = f32[] parameter(0)
  %reduce_sum.31844 = f32[] parameter(1)
  ROOT %reduce_sum.31845 = f32[] add(%reduce_sum.31843, %reduce_sum.31844)
}

%region_915.31846.clone (reduce_sum.2143: f32[], reduce_sum.2144: f32[]) -> f32[] {
  %reduce_sum.2143 = f32[] parameter(0)
  %reduce_sum.2144 = f32[] parameter(1)
  ROOT %reduce_sum.2145 = f32[] add(%reduce_sum.2143, %reduce_sum.2144)
}

%region_916.31853 (reduce_sum.31850: f32[], reduce_sum.31851: f32[]) -> f32[] {
  %reduce_sum.31850 = f32[] parameter(0)
  %reduce_sum.31851 = f32[] parameter(1)
  ROOT %reduce_sum.31852 = f32[] add(%reduce_sum.31850, %reduce_sum.31851)
}

%region_916.31853.clone (reduce_sum.2146: f32[], reduce_sum.2147: f32[]) -> f32[] {
  %reduce_sum.2146 = f32[] parameter(0)
  %reduce_sum.2147 = f32[] parameter(1)
  ROOT %reduce_sum.2151 = f32[] add(%reduce_sum.2146, %reduce_sum.2147)
}

%region_917.31860 (reduce_sum.31857: f32[], reduce_sum.31858: f32[]) -> f32[] {
  %reduce_sum.31857 = f32[] parameter(0)
  %reduce_sum.31858 = f32[] parameter(1)
  ROOT %reduce_sum.31859 = f32[] add(%reduce_sum.31857, %reduce_sum.31858)
}

%region_917.31860.clone (reduce_sum.2153: f32[], reduce_sum.2154: f32[]) -> f32[] {
  %reduce_sum.2153 = f32[] parameter(0)
  %reduce_sum.2154 = f32[] parameter(1)
  ROOT %reduce_sum.2155 = f32[] add(%reduce_sum.2153, %reduce_sum.2154)
}

%region_918.31867 (reduce_sum.31864: f32[], reduce_sum.31865: f32[]) -> f32[] {
  %reduce_sum.31864 = f32[] parameter(0)
  %reduce_sum.31865 = f32[] parameter(1)
  ROOT %reduce_sum.31866 = f32[] add(%reduce_sum.31864, %reduce_sum.31865)
}

%region_918.31867.clone (reduce_sum.2159: f32[], reduce_sum.2161: f32[]) -> f32[] {
  %reduce_sum.2159 = f32[] parameter(0)
  %reduce_sum.2161 = f32[] parameter(1)
  ROOT %reduce_sum.2162 = f32[] add(%reduce_sum.2159, %reduce_sum.2161)
}

%region_919.31874 (reduce_sum.31871: f32[], reduce_sum.31872: f32[]) -> f32[] {
  %reduce_sum.31871 = f32[] parameter(0)
  %reduce_sum.31872 = f32[] parameter(1)
  ROOT %reduce_sum.31873 = f32[] add(%reduce_sum.31871, %reduce_sum.31872)
}

%region_919.31874.clone (reduce_sum.2163: f32[], reduce_sum.2164: f32[]) -> f32[] {
  %reduce_sum.2163 = f32[] parameter(0)
  %reduce_sum.2164 = f32[] parameter(1)
  ROOT %reduce_sum.2165 = f32[] add(%reduce_sum.2163, %reduce_sum.2164)
}

%region_920.31881 (reduce_sum.31878: f32[], reduce_sum.31879: f32[]) -> f32[] {
  %reduce_sum.31878 = f32[] parameter(0)
  %reduce_sum.31879 = f32[] parameter(1)
  ROOT %reduce_sum.31880 = f32[] add(%reduce_sum.31878, %reduce_sum.31879)
}

%region_921.31888 (reduce_sum.31885: f32[], reduce_sum.31886: f32[]) -> f32[] {
  %reduce_sum.31885 = f32[] parameter(0)
  %reduce_sum.31886 = f32[] parameter(1)
  ROOT %reduce_sum.31887 = f32[] add(%reduce_sum.31885, %reduce_sum.31886)
}

%region_922.31895 (reduce_sum.31892: f32[], reduce_sum.31893: f32[]) -> f32[] {
  %reduce_sum.31892 = f32[] parameter(0)
  %reduce_sum.31893 = f32[] parameter(1)
  ROOT %reduce_sum.31894 = f32[] add(%reduce_sum.31892, %reduce_sum.31893)
}

%region_922.31895.clone (reduce_sum.2166: f32[], reduce_sum.2167: f32[]) -> f32[] {
  %reduce_sum.2166 = f32[] parameter(0)
  %reduce_sum.2167 = f32[] parameter(1)
  ROOT %reduce_sum.2168 = f32[] add(%reduce_sum.2166, %reduce_sum.2167)
}

%region_923.31902 (reduce_sum.31899: f32[], reduce_sum.31900: f32[]) -> f32[] {
  %reduce_sum.31899 = f32[] parameter(0)
  %reduce_sum.31900 = f32[] parameter(1)
  ROOT %reduce_sum.31901 = f32[] add(%reduce_sum.31899, %reduce_sum.31900)
}

%region_923.31902.clone (reduce_sum.2169: f32[], reduce_sum.2170: f32[]) -> f32[] {
  %reduce_sum.2169 = f32[] parameter(0)
  %reduce_sum.2170 = f32[] parameter(1)
  ROOT %reduce_sum.2171 = f32[] add(%reduce_sum.2169, %reduce_sum.2170)
}

%region_924.31909 (reduce_sum.31906: f32[], reduce_sum.31907: f32[]) -> f32[] {
  %reduce_sum.31906 = f32[] parameter(0)
  %reduce_sum.31907 = f32[] parameter(1)
  ROOT %reduce_sum.31908 = f32[] add(%reduce_sum.31906, %reduce_sum.31907)
}

%region_924.31909.clone (reduce_sum.2172: f32[], reduce_sum.2173: f32[]) -> f32[] {
  %reduce_sum.2172 = f32[] parameter(0)
  %reduce_sum.2173 = f32[] parameter(1)
  ROOT %reduce_sum.2174 = f32[] add(%reduce_sum.2172, %reduce_sum.2173)
}

%region_925.31916 (reduce_sum.31913: f32[], reduce_sum.31914: f32[]) -> f32[] {
  %reduce_sum.31913 = f32[] parameter(0)
  %reduce_sum.31914 = f32[] parameter(1)
  ROOT %reduce_sum.31915 = f32[] add(%reduce_sum.31913, %reduce_sum.31914)
}

%region_925.31916.clone (reduce_sum.2175: f32[], reduce_sum.2176: f32[]) -> f32[] {
  %reduce_sum.2175 = f32[] parameter(0)
  %reduce_sum.2176 = f32[] parameter(1)
  ROOT %reduce_sum.2177 = f32[] add(%reduce_sum.2175, %reduce_sum.2176)
}

%region_926.31923 (reduce_sum.31920: f32[], reduce_sum.31921: f32[]) -> f32[] {
  %reduce_sum.31920 = f32[] parameter(0)
  %reduce_sum.31921 = f32[] parameter(1)
  ROOT %reduce_sum.31922 = f32[] add(%reduce_sum.31920, %reduce_sum.31921)
}

%region_926.31923.clone (reduce_sum.2178: f32[], reduce_sum.2179: f32[]) -> f32[] {
  %reduce_sum.2178 = f32[] parameter(0)
  %reduce_sum.2179 = f32[] parameter(1)
  ROOT %reduce_sum.2183 = f32[] add(%reduce_sum.2178, %reduce_sum.2179)
}

%region_927.31930 (reduce_sum.31927: f32[], reduce_sum.31928: f32[]) -> f32[] {
  %reduce_sum.31927 = f32[] parameter(0)
  %reduce_sum.31928 = f32[] parameter(1)
  ROOT %reduce_sum.31929 = f32[] add(%reduce_sum.31927, %reduce_sum.31928)
}

%region_927.31930.clone (reduce_sum.2185: f32[], reduce_sum.2186: f32[]) -> f32[] {
  %reduce_sum.2185 = f32[] parameter(0)
  %reduce_sum.2186 = f32[] parameter(1)
  ROOT %reduce_sum.2187 = f32[] add(%reduce_sum.2185, %reduce_sum.2186)
}

%region_928.31937 (reduce_sum.31934: f32[], reduce_sum.31935: f32[]) -> f32[] {
  %reduce_sum.31934 = f32[] parameter(0)
  %reduce_sum.31935 = f32[] parameter(1)
  ROOT %reduce_sum.31936 = f32[] add(%reduce_sum.31934, %reduce_sum.31935)
}

%region_928.31937.clone (reduce_sum.2188: f32[], reduce_sum.2189: f32[]) -> f32[] {
  %reduce_sum.2188 = f32[] parameter(0)
  %reduce_sum.2189 = f32[] parameter(1)
  ROOT %reduce_sum.2190 = f32[] add(%reduce_sum.2188, %reduce_sum.2189)
}

%region_929.31944 (reduce_sum.31941: f32[], reduce_sum.31942: f32[]) -> f32[] {
  %reduce_sum.31941 = f32[] parameter(0)
  %reduce_sum.31942 = f32[] parameter(1)
  ROOT %reduce_sum.31943 = f32[] add(%reduce_sum.31941, %reduce_sum.31942)
}

%region_930.31951 (reduce_sum.31948: f32[], reduce_sum.31949: f32[]) -> f32[] {
  %reduce_sum.31948 = f32[] parameter(0)
  %reduce_sum.31949 = f32[] parameter(1)
  ROOT %reduce_sum.31950 = f32[] add(%reduce_sum.31948, %reduce_sum.31949)
}

%region_931.31958 (reduce_sum.31955: f32[], reduce_sum.31956: f32[]) -> f32[] {
  %reduce_sum.31955 = f32[] parameter(0)
  %reduce_sum.31956 = f32[] parameter(1)
  ROOT %reduce_sum.31957 = f32[] add(%reduce_sum.31955, %reduce_sum.31956)
}

%region_931.31958.clone (reduce_sum.2191: f32[], reduce_sum.2192: f32[]) -> f32[] {
  %reduce_sum.2191 = f32[] parameter(0)
  %reduce_sum.2192 = f32[] parameter(1)
  ROOT %reduce_sum.2193 = f32[] add(%reduce_sum.2191, %reduce_sum.2192)
}

%region_932.31965 (reduce_sum.31962: f32[], reduce_sum.31963: f32[]) -> f32[] {
  %reduce_sum.31962 = f32[] parameter(0)
  %reduce_sum.31963 = f32[] parameter(1)
  ROOT %reduce_sum.31964 = f32[] add(%reduce_sum.31962, %reduce_sum.31963)
}

%region_932.31965.clone (reduce_sum.2194: f32[], reduce_sum.2195: f32[]) -> f32[] {
  %reduce_sum.2194 = f32[] parameter(0)
  %reduce_sum.2195 = f32[] parameter(1)
  ROOT %reduce_sum.2196 = f32[] add(%reduce_sum.2194, %reduce_sum.2195)
}

%region_933.31972 (reduce_sum.31969: f32[], reduce_sum.31970: f32[]) -> f32[] {
  %reduce_sum.31969 = f32[] parameter(0)
  %reduce_sum.31970 = f32[] parameter(1)
  ROOT %reduce_sum.31971 = f32[] add(%reduce_sum.31969, %reduce_sum.31970)
}

%region_933.31972.clone (reduce_sum.2197: f32[], reduce_sum.2198: f32[]) -> f32[] {
  %reduce_sum.2197 = f32[] parameter(0)
  %reduce_sum.2198 = f32[] parameter(1)
  ROOT %reduce_sum.2199 = f32[] add(%reduce_sum.2197, %reduce_sum.2198)
}

%region_934.31979 (reduce_sum.31976: f32[], reduce_sum.31977: f32[]) -> f32[] {
  %reduce_sum.31976 = f32[] parameter(0)
  %reduce_sum.31977 = f32[] parameter(1)
  ROOT %reduce_sum.31978 = f32[] add(%reduce_sum.31976, %reduce_sum.31977)
}

%region_934.31979.clone (reduce_sum.2200: f32[], reduce_sum.2201: f32[]) -> f32[] {
  %reduce_sum.2200 = f32[] parameter(0)
  %reduce_sum.2201 = f32[] parameter(1)
  ROOT %reduce_sum.2202 = f32[] add(%reduce_sum.2200, %reduce_sum.2201)
}

%region_935.31986 (reduce_sum.31983: f32[], reduce_sum.31984: f32[]) -> f32[] {
  %reduce_sum.31983 = f32[] parameter(0)
  %reduce_sum.31984 = f32[] parameter(1)
  ROOT %reduce_sum.31985 = f32[] add(%reduce_sum.31983, %reduce_sum.31984)
}

%region_935.31986.clone (reduce_sum.2203: f32[], reduce_sum.2204: f32[]) -> f32[] {
  %reduce_sum.2203 = f32[] parameter(0)
  %reduce_sum.2204 = f32[] parameter(1)
  ROOT %reduce_sum.2205 = f32[] add(%reduce_sum.2203, %reduce_sum.2204)
}

%region_936.31993 (reduce_sum.31990: f32[], reduce_sum.31991: f32[]) -> f32[] {
  %reduce_sum.31990 = f32[] parameter(0)
  %reduce_sum.31991 = f32[] parameter(1)
  ROOT %reduce_sum.31992 = f32[] add(%reduce_sum.31990, %reduce_sum.31991)
}

%region_936.31993.clone (reduce_sum.2206: f32[], reduce_sum.2207: f32[]) -> f32[] {
  %reduce_sum.2206 = f32[] parameter(0)
  %reduce_sum.2207 = f32[] parameter(1)
  ROOT %reduce_sum.2208 = f32[] add(%reduce_sum.2206, %reduce_sum.2207)
}

%region_937.32000 (reduce_sum.31997: f32[], reduce_sum.31998: f32[]) -> f32[] {
  %reduce_sum.31997 = f32[] parameter(0)
  %reduce_sum.31998 = f32[] parameter(1)
  ROOT %reduce_sum.31999 = f32[] add(%reduce_sum.31997, %reduce_sum.31998)
}

%region_937.32000.clone (reduce_sum.2209: f32[], reduce_sum.2210: f32[]) -> f32[] {
  %reduce_sum.2209 = f32[] parameter(0)
  %reduce_sum.2210 = f32[] parameter(1)
  ROOT %reduce_sum.2211 = f32[] add(%reduce_sum.2209, %reduce_sum.2210)
}

%region_938.32007 (reduce_sum.32004: f32[], reduce_sum.32005: f32[]) -> f32[] {
  %reduce_sum.32004 = f32[] parameter(0)
  %reduce_sum.32005 = f32[] parameter(1)
  ROOT %reduce_sum.32006 = f32[] add(%reduce_sum.32004, %reduce_sum.32005)
}

%region_939.32014 (reduce_sum.32011: f32[], reduce_sum.32012: f32[]) -> f32[] {
  %reduce_sum.32011 = f32[] parameter(0)
  %reduce_sum.32012 = f32[] parameter(1)
  ROOT %reduce_sum.32013 = f32[] add(%reduce_sum.32011, %reduce_sum.32012)
}

%region_940.32021 (reduce_sum.32018: f32[], reduce_sum.32019: f32[]) -> f32[] {
  %reduce_sum.32018 = f32[] parameter(0)
  %reduce_sum.32019 = f32[] parameter(1)
  ROOT %reduce_sum.32020 = f32[] add(%reduce_sum.32018, %reduce_sum.32019)
}

%region_940.32021.clone (reduce_sum.2212: f32[], reduce_sum.2213: f32[]) -> f32[] {
  %reduce_sum.2212 = f32[] parameter(0)
  %reduce_sum.2213 = f32[] parameter(1)
  ROOT %reduce_sum.2214 = f32[] add(%reduce_sum.2212, %reduce_sum.2213)
}

%region_941.32028 (reduce_sum.32025: f32[], reduce_sum.32026: f32[]) -> f32[] {
  %reduce_sum.32025 = f32[] parameter(0)
  %reduce_sum.32026 = f32[] parameter(1)
  ROOT %reduce_sum.32027 = f32[] add(%reduce_sum.32025, %reduce_sum.32026)
}

%region_941.32028.clone (reduce_sum.2215: f32[], reduce_sum.2216: f32[]) -> f32[] {
  %reduce_sum.2215 = f32[] parameter(0)
  %reduce_sum.2216 = f32[] parameter(1)
  ROOT %reduce_sum.2217 = f32[] add(%reduce_sum.2215, %reduce_sum.2216)
}

%region_942.32035 (reduce_sum.32032: f32[], reduce_sum.32033: f32[]) -> f32[] {
  %reduce_sum.32032 = f32[] parameter(0)
  %reduce_sum.32033 = f32[] parameter(1)
  ROOT %reduce_sum.32034 = f32[] add(%reduce_sum.32032, %reduce_sum.32033)
}

%region_942.32035.clone (reduce_sum.2221: f32[], reduce_sum.2223: f32[]) -> f32[] {
  %reduce_sum.2221 = f32[] parameter(0)
  %reduce_sum.2223 = f32[] parameter(1)
  ROOT %reduce_sum.2224 = f32[] add(%reduce_sum.2221, %reduce_sum.2223)
}

%region_943.32042 (reduce_sum.32039: f32[], reduce_sum.32040: f32[]) -> f32[] {
  %reduce_sum.32039 = f32[] parameter(0)
  %reduce_sum.32040 = f32[] parameter(1)
  ROOT %reduce_sum.32041 = f32[] add(%reduce_sum.32039, %reduce_sum.32040)
}

%region_943.32042.clone (reduce_sum.2225: f32[], reduce_sum.2226: f32[]) -> f32[] {
  %reduce_sum.2225 = f32[] parameter(0)
  %reduce_sum.2226 = f32[] parameter(1)
  ROOT %reduce_sum.2227 = f32[] add(%reduce_sum.2225, %reduce_sum.2226)
}

%region_944.32049 (reduce_sum.32046: f32[], reduce_sum.32047: f32[]) -> f32[] {
  %reduce_sum.32046 = f32[] parameter(0)
  %reduce_sum.32047 = f32[] parameter(1)
  ROOT %reduce_sum.32048 = f32[] add(%reduce_sum.32046, %reduce_sum.32047)
}

%region_944.32049.clone (reduce_sum.2228: f32[], reduce_sum.2229: f32[]) -> f32[] {
  %reduce_sum.2228 = f32[] parameter(0)
  %reduce_sum.2229 = f32[] parameter(1)
  ROOT %reduce_sum.2230 = f32[] add(%reduce_sum.2228, %reduce_sum.2229)
}

%region_945.32056 (reduce_sum.32053: f32[], reduce_sum.32054: f32[]) -> f32[] {
  %reduce_sum.32053 = f32[] parameter(0)
  %reduce_sum.32054 = f32[] parameter(1)
  ROOT %reduce_sum.32055 = f32[] add(%reduce_sum.32053, %reduce_sum.32054)
}

%region_945.32056.clone (reduce_sum.2231: f32[], reduce_sum.2232: f32[]) -> f32[] {
  %reduce_sum.2231 = f32[] parameter(0)
  %reduce_sum.2232 = f32[] parameter(1)
  ROOT %reduce_sum.2233 = f32[] add(%reduce_sum.2231, %reduce_sum.2232)
}

%region_946.32063 (reduce_sum.32060: f32[], reduce_sum.32061: f32[]) -> f32[] {
  %reduce_sum.32060 = f32[] parameter(0)
  %reduce_sum.32061 = f32[] parameter(1)
  ROOT %reduce_sum.32062 = f32[] add(%reduce_sum.32060, %reduce_sum.32061)
}

%region_946.32063.clone (reduce_sum.2234: f32[], reduce_sum.2235: f32[]) -> f32[] {
  %reduce_sum.2234 = f32[] parameter(0)
  %reduce_sum.2235 = f32[] parameter(1)
  ROOT %reduce_sum.2236 = f32[] add(%reduce_sum.2234, %reduce_sum.2235)
}

%region_947.32070 (reduce_sum.32067: f32[], reduce_sum.32068: f32[]) -> f32[] {
  %reduce_sum.32067 = f32[] parameter(0)
  %reduce_sum.32068 = f32[] parameter(1)
  ROOT %reduce_sum.32069 = f32[] add(%reduce_sum.32067, %reduce_sum.32068)
}

%region_948.32077 (reduce_sum.32074: f32[], reduce_sum.32075: f32[]) -> f32[] {
  %reduce_sum.32074 = f32[] parameter(0)
  %reduce_sum.32075 = f32[] parameter(1)
  ROOT %reduce_sum.32076 = f32[] add(%reduce_sum.32074, %reduce_sum.32075)
}

%region_949.32084 (reduce_sum.32081: f32[], reduce_sum.32082: f32[]) -> f32[] {
  %reduce_sum.32081 = f32[] parameter(0)
  %reduce_sum.32082 = f32[] parameter(1)
  ROOT %reduce_sum.32083 = f32[] add(%reduce_sum.32081, %reduce_sum.32082)
}

%region_949.32084.clone (reduce_sum.2237: f32[], reduce_sum.2238: f32[]) -> f32[] {
  %reduce_sum.2237 = f32[] parameter(0)
  %reduce_sum.2238 = f32[] parameter(1)
  ROOT %reduce_sum.2239 = f32[] add(%reduce_sum.2237, %reduce_sum.2238)
}

%region_950.32091 (reduce_sum.32088: f32[], reduce_sum.32089: f32[]) -> f32[] {
  %reduce_sum.32088 = f32[] parameter(0)
  %reduce_sum.32089 = f32[] parameter(1)
  ROOT %reduce_sum.32090 = f32[] add(%reduce_sum.32088, %reduce_sum.32089)
}

%region_950.32091.clone (reduce_sum.2240: f32[], reduce_sum.2241: f32[]) -> f32[] {
  %reduce_sum.2240 = f32[] parameter(0)
  %reduce_sum.2241 = f32[] parameter(1)
  ROOT %reduce_sum.2242 = f32[] add(%reduce_sum.2240, %reduce_sum.2241)
}

%region_951.32098 (reduce_sum.32095: f32[], reduce_sum.32096: f32[]) -> f32[] {
  %reduce_sum.32095 = f32[] parameter(0)
  %reduce_sum.32096 = f32[] parameter(1)
  ROOT %reduce_sum.32097 = f32[] add(%reduce_sum.32095, %reduce_sum.32096)
}

%region_951.32098.clone (reduce_sum.2243: f32[], reduce_sum.2244: f32[]) -> f32[] {
  %reduce_sum.2243 = f32[] parameter(0)
  %reduce_sum.2244 = f32[] parameter(1)
  ROOT %reduce_sum.2245 = f32[] add(%reduce_sum.2243, %reduce_sum.2244)
}

%region_952.32105 (reduce_sum.32102: f32[], reduce_sum.32103: f32[]) -> f32[] {
  %reduce_sum.32102 = f32[] parameter(0)
  %reduce_sum.32103 = f32[] parameter(1)
  ROOT %reduce_sum.32104 = f32[] add(%reduce_sum.32102, %reduce_sum.32103)
}

%region_952.32105.clone (reduce_sum.2246: f32[], reduce_sum.2247: f32[]) -> f32[] {
  %reduce_sum.2246 = f32[] parameter(0)
  %reduce_sum.2247 = f32[] parameter(1)
  ROOT %reduce_sum.2248 = f32[] add(%reduce_sum.2246, %reduce_sum.2247)
}

%region_953.32112 (reduce_sum.32109: f32[], reduce_sum.32110: f32[]) -> f32[] {
  %reduce_sum.32109 = f32[] parameter(0)
  %reduce_sum.32110 = f32[] parameter(1)
  ROOT %reduce_sum.32111 = f32[] add(%reduce_sum.32109, %reduce_sum.32110)
}

%region_953.32112.clone (reduce_sum.2249: f32[], reduce_sum.2250: f32[]) -> f32[] {
  %reduce_sum.2249 = f32[] parameter(0)
  %reduce_sum.2250 = f32[] parameter(1)
  ROOT %reduce_sum.2251 = f32[] add(%reduce_sum.2249, %reduce_sum.2250)
}

%region_954.32119 (reduce_sum.32116: f32[], reduce_sum.32117: f32[]) -> f32[] {
  %reduce_sum.32116 = f32[] parameter(0)
  %reduce_sum.32117 = f32[] parameter(1)
  ROOT %reduce_sum.32118 = f32[] add(%reduce_sum.32116, %reduce_sum.32117)
}

%region_954.32119.clone (reduce_sum.2252: f32[], reduce_sum.2253: f32[]) -> f32[] {
  %reduce_sum.2252 = f32[] parameter(0)
  %reduce_sum.2253 = f32[] parameter(1)
  ROOT %reduce_sum.2254 = f32[] add(%reduce_sum.2252, %reduce_sum.2253)
}

%region_955.32126 (reduce_sum.32123: f32[], reduce_sum.32124: f32[]) -> f32[] {
  %reduce_sum.32123 = f32[] parameter(0)
  %reduce_sum.32124 = f32[] parameter(1)
  ROOT %reduce_sum.32125 = f32[] add(%reduce_sum.32123, %reduce_sum.32124)
}

%region_955.32126.clone (reduce_sum.2255: f32[], reduce_sum.2256: f32[]) -> f32[] {
  %reduce_sum.2255 = f32[] parameter(0)
  %reduce_sum.2256 = f32[] parameter(1)
  ROOT %reduce_sum.2257 = f32[] add(%reduce_sum.2255, %reduce_sum.2256)
}

%region_956.32133 (reduce_sum.32130: f32[], reduce_sum.32131: f32[]) -> f32[] {
  %reduce_sum.32130 = f32[] parameter(0)
  %reduce_sum.32131 = f32[] parameter(1)
  ROOT %reduce_sum.32132 = f32[] add(%reduce_sum.32130, %reduce_sum.32131)
}

%region_957.32140 (reduce_sum.32137: f32[], reduce_sum.32138: f32[]) -> f32[] {
  %reduce_sum.32137 = f32[] parameter(0)
  %reduce_sum.32138 = f32[] parameter(1)
  ROOT %reduce_sum.32139 = f32[] add(%reduce_sum.32137, %reduce_sum.32138)
}

%region_958.32147 (reduce_sum.32144: f32[], reduce_sum.32145: f32[]) -> f32[] {
  %reduce_sum.32144 = f32[] parameter(0)
  %reduce_sum.32145 = f32[] parameter(1)
  ROOT %reduce_sum.32146 = f32[] add(%reduce_sum.32144, %reduce_sum.32145)
}

%region_958.32147.clone (reduce_sum.2258: f32[], reduce_sum.2259: f32[]) -> f32[] {
  %reduce_sum.2258 = f32[] parameter(0)
  %reduce_sum.2259 = f32[] parameter(1)
  ROOT %reduce_sum.2260 = f32[] add(%reduce_sum.2258, %reduce_sum.2259)
}

%region_959.32154 (reduce_sum.32151: f32[], reduce_sum.32152: f32[]) -> f32[] {
  %reduce_sum.32151 = f32[] parameter(0)
  %reduce_sum.32152 = f32[] parameter(1)
  ROOT %reduce_sum.32153 = f32[] add(%reduce_sum.32151, %reduce_sum.32152)
}

%region_959.32154.clone (reduce_sum.2261: f32[], reduce_sum.2262: f32[]) -> f32[] {
  %reduce_sum.2261 = f32[] parameter(0)
  %reduce_sum.2262 = f32[] parameter(1)
  ROOT %reduce_sum.2263 = f32[] add(%reduce_sum.2261, %reduce_sum.2262)
}

%region_960.32161 (reduce_sum.32158: f32[], reduce_sum.32159: f32[]) -> f32[] {
  %reduce_sum.32158 = f32[] parameter(0)
  %reduce_sum.32159 = f32[] parameter(1)
  ROOT %reduce_sum.32160 = f32[] add(%reduce_sum.32158, %reduce_sum.32159)
}

%region_960.32161.clone (reduce_sum.2264: f32[], reduce_sum.2265: f32[]) -> f32[] {
  %reduce_sum.2264 = f32[] parameter(0)
  %reduce_sum.2265 = f32[] parameter(1)
  ROOT %reduce_sum.2266 = f32[] add(%reduce_sum.2264, %reduce_sum.2265)
}

%region_961.32168 (reduce_sum.32165: f32[], reduce_sum.32166: f32[]) -> f32[] {
  %reduce_sum.32165 = f32[] parameter(0)
  %reduce_sum.32166 = f32[] parameter(1)
  ROOT %reduce_sum.32167 = f32[] add(%reduce_sum.32165, %reduce_sum.32166)
}

%region_961.32168.clone (reduce_sum.2267: f32[], reduce_sum.2268: f32[]) -> f32[] {
  %reduce_sum.2267 = f32[] parameter(0)
  %reduce_sum.2268 = f32[] parameter(1)
  ROOT %reduce_sum.2269 = f32[] add(%reduce_sum.2267, %reduce_sum.2268)
}

%region_962.32175 (reduce_sum.32172: f32[], reduce_sum.32173: f32[]) -> f32[] {
  %reduce_sum.32172 = f32[] parameter(0)
  %reduce_sum.32173 = f32[] parameter(1)
  ROOT %reduce_sum.32174 = f32[] add(%reduce_sum.32172, %reduce_sum.32173)
}

%region_962.32175.clone (reduce_sum.2270: f32[], reduce_sum.2271: f32[]) -> f32[] {
  %reduce_sum.2270 = f32[] parameter(0)
  %reduce_sum.2271 = f32[] parameter(1)
  ROOT %reduce_sum.2272 = f32[] add(%reduce_sum.2270, %reduce_sum.2271)
}

%region_963.32182 (reduce_sum.32179: f32[], reduce_sum.32180: f32[]) -> f32[] {
  %reduce_sum.32179 = f32[] parameter(0)
  %reduce_sum.32180 = f32[] parameter(1)
  ROOT %reduce_sum.32181 = f32[] add(%reduce_sum.32179, %reduce_sum.32180)
}

%region_963.32182.clone (reduce_sum.2273: f32[], reduce_sum.2274: f32[]) -> f32[] {
  %reduce_sum.2273 = f32[] parameter(0)
  %reduce_sum.2274 = f32[] parameter(1)
  ROOT %reduce_sum.2275 = f32[] add(%reduce_sum.2273, %reduce_sum.2274)
}

%region_964.32189 (reduce_sum.32186: f32[], reduce_sum.32187: f32[]) -> f32[] {
  %reduce_sum.32186 = f32[] parameter(0)
  %reduce_sum.32187 = f32[] parameter(1)
  ROOT %reduce_sum.32188 = f32[] add(%reduce_sum.32186, %reduce_sum.32187)
}

%region_964.32189.clone (reduce_sum.2276: f32[], reduce_sum.2277: f32[]) -> f32[] {
  %reduce_sum.2276 = f32[] parameter(0)
  %reduce_sum.2277 = f32[] parameter(1)
  ROOT %reduce_sum.2278 = f32[] add(%reduce_sum.2276, %reduce_sum.2277)
}

%region_965.32196 (reduce_sum.32193: f32[], reduce_sum.32194: f32[]) -> f32[] {
  %reduce_sum.32193 = f32[] parameter(0)
  %reduce_sum.32194 = f32[] parameter(1)
  ROOT %reduce_sum.32195 = f32[] add(%reduce_sum.32193, %reduce_sum.32194)
}

%region_966.32203 (reduce_sum.32200: f32[], reduce_sum.32201: f32[]) -> f32[] {
  %reduce_sum.32200 = f32[] parameter(0)
  %reduce_sum.32201 = f32[] parameter(1)
  ROOT %reduce_sum.32202 = f32[] add(%reduce_sum.32200, %reduce_sum.32201)
}

%region_967.32210 (reduce_sum.32207: f32[], reduce_sum.32208: f32[]) -> f32[] {
  %reduce_sum.32207 = f32[] parameter(0)
  %reduce_sum.32208 = f32[] parameter(1)
  ROOT %reduce_sum.32209 = f32[] add(%reduce_sum.32207, %reduce_sum.32208)
}

%region_967.32210.clone (reduce_sum.2279: f32[], reduce_sum.2280: f32[]) -> f32[] {
  %reduce_sum.2279 = f32[] parameter(0)
  %reduce_sum.2280 = f32[] parameter(1)
  ROOT %reduce_sum.2281 = f32[] add(%reduce_sum.2279, %reduce_sum.2280)
}

%region_968.32217 (reduce_sum.32214: f32[], reduce_sum.32215: f32[]) -> f32[] {
  %reduce_sum.32214 = f32[] parameter(0)
  %reduce_sum.32215 = f32[] parameter(1)
  ROOT %reduce_sum.32216 = f32[] add(%reduce_sum.32214, %reduce_sum.32215)
}

%region_968.32217.clone (reduce_sum.2282: f32[], reduce_sum.2283: f32[]) -> f32[] {
  %reduce_sum.2282 = f32[] parameter(0)
  %reduce_sum.2283 = f32[] parameter(1)
  ROOT %reduce_sum.2284 = f32[] add(%reduce_sum.2282, %reduce_sum.2283)
}

%region_969.32224 (reduce_sum.32221: f32[], reduce_sum.32222: f32[]) -> f32[] {
  %reduce_sum.32221 = f32[] parameter(0)
  %reduce_sum.32222 = f32[] parameter(1)
  ROOT %reduce_sum.32223 = f32[] add(%reduce_sum.32221, %reduce_sum.32222)
}

%region_969.32224.clone (reduce_sum.2285: f32[], reduce_sum.2286: f32[]) -> f32[] {
  %reduce_sum.2285 = f32[] parameter(0)
  %reduce_sum.2286 = f32[] parameter(1)
  ROOT %reduce_sum.2287 = f32[] add(%reduce_sum.2285, %reduce_sum.2286)
}

%region_970.32231 (reduce_sum.32228: f32[], reduce_sum.32229: f32[]) -> f32[] {
  %reduce_sum.32228 = f32[] parameter(0)
  %reduce_sum.32229 = f32[] parameter(1)
  ROOT %reduce_sum.32230 = f32[] add(%reduce_sum.32228, %reduce_sum.32229)
}

%region_970.32231.clone (reduce_sum.2288: f32[], reduce_sum.2289: f32[]) -> f32[] {
  %reduce_sum.2288 = f32[] parameter(0)
  %reduce_sum.2289 = f32[] parameter(1)
  ROOT %reduce_sum.2290 = f32[] add(%reduce_sum.2288, %reduce_sum.2289)
}

%region_971.32238 (reduce_sum.32235: f32[], reduce_sum.32236: f32[]) -> f32[] {
  %reduce_sum.32235 = f32[] parameter(0)
  %reduce_sum.32236 = f32[] parameter(1)
  ROOT %reduce_sum.32237 = f32[] add(%reduce_sum.32235, %reduce_sum.32236)
}

%region_971.32238.clone (reduce_sum.2291: f32[], reduce_sum.2292: f32[]) -> f32[] {
  %reduce_sum.2291 = f32[] parameter(0)
  %reduce_sum.2292 = f32[] parameter(1)
  ROOT %reduce_sum.2293 = f32[] add(%reduce_sum.2291, %reduce_sum.2292)
}

%region_972.32245 (reduce_sum.32242: f32[], reduce_sum.32243: f32[]) -> f32[] {
  %reduce_sum.32242 = f32[] parameter(0)
  %reduce_sum.32243 = f32[] parameter(1)
  ROOT %reduce_sum.32244 = f32[] add(%reduce_sum.32242, %reduce_sum.32243)
}

%region_972.32245.clone (reduce_sum.2294: f32[], reduce_sum.2295: f32[]) -> f32[] {
  %reduce_sum.2294 = f32[] parameter(0)
  %reduce_sum.2295 = f32[] parameter(1)
  ROOT %reduce_sum.2296 = f32[] add(%reduce_sum.2294, %reduce_sum.2295)
}

%region_973.32252 (reduce_sum.32249: f32[], reduce_sum.32250: f32[]) -> f32[] {
  %reduce_sum.32249 = f32[] parameter(0)
  %reduce_sum.32250 = f32[] parameter(1)
  ROOT %reduce_sum.32251 = f32[] add(%reduce_sum.32249, %reduce_sum.32250)
}

%region_973.32252.clone (reduce_sum.2297: f32[], reduce_sum.2298: f32[]) -> f32[] {
  %reduce_sum.2297 = f32[] parameter(0)
  %reduce_sum.2298 = f32[] parameter(1)
  ROOT %reduce_sum.2299 = f32[] add(%reduce_sum.2297, %reduce_sum.2298)
}

%region_974.32259 (reduce_sum.32256: f32[], reduce_sum.32257: f32[]) -> f32[] {
  %reduce_sum.32256 = f32[] parameter(0)
  %reduce_sum.32257 = f32[] parameter(1)
  ROOT %reduce_sum.32258 = f32[] add(%reduce_sum.32256, %reduce_sum.32257)
}

%region_975.32266 (reduce_sum.32263: f32[], reduce_sum.32264: f32[]) -> f32[] {
  %reduce_sum.32263 = f32[] parameter(0)
  %reduce_sum.32264 = f32[] parameter(1)
  ROOT %reduce_sum.32265 = f32[] add(%reduce_sum.32263, %reduce_sum.32264)
}

%region_976.32273 (reduce_sum.32270: f32[], reduce_sum.32271: f32[]) -> f32[] {
  %reduce_sum.32270 = f32[] parameter(0)
  %reduce_sum.32271 = f32[] parameter(1)
  ROOT %reduce_sum.32272 = f32[] add(%reduce_sum.32270, %reduce_sum.32271)
}

%region_976.32273.clone (reduce_sum.2300: f32[], reduce_sum.2301: f32[]) -> f32[] {
  %reduce_sum.2300 = f32[] parameter(0)
  %reduce_sum.2301 = f32[] parameter(1)
  ROOT %reduce_sum.2302 = f32[] add(%reduce_sum.2300, %reduce_sum.2301)
}

%region_977.32280 (reduce_sum.32277: f32[], reduce_sum.32278: f32[]) -> f32[] {
  %reduce_sum.32277 = f32[] parameter(0)
  %reduce_sum.32278 = f32[] parameter(1)
  ROOT %reduce_sum.32279 = f32[] add(%reduce_sum.32277, %reduce_sum.32278)
}

%region_977.32280.clone (reduce_sum.2303: f32[], reduce_sum.2304: f32[]) -> f32[] {
  %reduce_sum.2303 = f32[] parameter(0)
  %reduce_sum.2304 = f32[] parameter(1)
  ROOT %reduce_sum.2305 = f32[] add(%reduce_sum.2303, %reduce_sum.2304)
}

%region_978.32287 (reduce_sum.32284: f32[], reduce_sum.32285: f32[]) -> f32[] {
  %reduce_sum.32284 = f32[] parameter(0)
  %reduce_sum.32285 = f32[] parameter(1)
  ROOT %reduce_sum.32286 = f32[] add(%reduce_sum.32284, %reduce_sum.32285)
}

%region_978.32287.clone (reduce_sum.2306: f32[], reduce_sum.2307: f32[]) -> f32[] {
  %reduce_sum.2306 = f32[] parameter(0)
  %reduce_sum.2307 = f32[] parameter(1)
  ROOT %reduce_sum.2308 = f32[] add(%reduce_sum.2306, %reduce_sum.2307)
}

%region_979.32294 (reduce_sum.32291: f32[], reduce_sum.32292: f32[]) -> f32[] {
  %reduce_sum.32291 = f32[] parameter(0)
  %reduce_sum.32292 = f32[] parameter(1)
  ROOT %reduce_sum.32293 = f32[] add(%reduce_sum.32291, %reduce_sum.32292)
}

%region_979.32294.clone (reduce_sum.2309: f32[], reduce_sum.2310: f32[]) -> f32[] {
  %reduce_sum.2309 = f32[] parameter(0)
  %reduce_sum.2310 = f32[] parameter(1)
  ROOT %reduce_sum.2311 = f32[] add(%reduce_sum.2309, %reduce_sum.2310)
}

%region_980.32301 (reduce_sum.32298: f32[], reduce_sum.32299: f32[]) -> f32[] {
  %reduce_sum.32298 = f32[] parameter(0)
  %reduce_sum.32299 = f32[] parameter(1)
  ROOT %reduce_sum.32300 = f32[] add(%reduce_sum.32298, %reduce_sum.32299)
}

%region_980.32301.clone (reduce_sum.2312: f32[], reduce_sum.2313: f32[]) -> f32[] {
  %reduce_sum.2312 = f32[] parameter(0)
  %reduce_sum.2313 = f32[] parameter(1)
  ROOT %reduce_sum.2314 = f32[] add(%reduce_sum.2312, %reduce_sum.2313)
}

%region_981.32308 (reduce_sum.32305: f32[], reduce_sum.32306: f32[]) -> f32[] {
  %reduce_sum.32305 = f32[] parameter(0)
  %reduce_sum.32306 = f32[] parameter(1)
  ROOT %reduce_sum.32307 = f32[] add(%reduce_sum.32305, %reduce_sum.32306)
}

%region_981.32308.clone (reduce_sum.2315: f32[], reduce_sum.2316: f32[]) -> f32[] {
  %reduce_sum.2315 = f32[] parameter(0)
  %reduce_sum.2316 = f32[] parameter(1)
  ROOT %reduce_sum.2317 = f32[] add(%reduce_sum.2315, %reduce_sum.2316)
}

%region_982.32315 (reduce_sum.32312: f32[], reduce_sum.32313: f32[]) -> f32[] {
  %reduce_sum.32312 = f32[] parameter(0)
  %reduce_sum.32313 = f32[] parameter(1)
  ROOT %reduce_sum.32314 = f32[] add(%reduce_sum.32312, %reduce_sum.32313)
}

%region_982.32315.clone (reduce_sum.2318: f32[], reduce_sum.2319: f32[]) -> f32[] {
  %reduce_sum.2318 = f32[] parameter(0)
  %reduce_sum.2319 = f32[] parameter(1)
  ROOT %reduce_sum.2320 = f32[] add(%reduce_sum.2318, %reduce_sum.2319)
}

%region_983.32322 (reduce_sum.32319: f32[], reduce_sum.32320: f32[]) -> f32[] {
  %reduce_sum.32319 = f32[] parameter(0)
  %reduce_sum.32320 = f32[] parameter(1)
  ROOT %reduce_sum.32321 = f32[] add(%reduce_sum.32319, %reduce_sum.32320)
}

%region_984.32329 (reduce_sum.32326: f32[], reduce_sum.32327: f32[]) -> f32[] {
  %reduce_sum.32326 = f32[] parameter(0)
  %reduce_sum.32327 = f32[] parameter(1)
  ROOT %reduce_sum.32328 = f32[] add(%reduce_sum.32326, %reduce_sum.32327)
}

%region_985.32336 (reduce_sum.32333: f32[], reduce_sum.32334: f32[]) -> f32[] {
  %reduce_sum.32333 = f32[] parameter(0)
  %reduce_sum.32334 = f32[] parameter(1)
  ROOT %reduce_sum.32335 = f32[] add(%reduce_sum.32333, %reduce_sum.32334)
}

%region_985.32336.clone (reduce_sum.2321: f32[], reduce_sum.2322: f32[]) -> f32[] {
  %reduce_sum.2321 = f32[] parameter(0)
  %reduce_sum.2322 = f32[] parameter(1)
  ROOT %reduce_sum.2323 = f32[] add(%reduce_sum.2321, %reduce_sum.2322)
}

%region_986.32343 (reduce_sum.32340: f32[], reduce_sum.32341: f32[]) -> f32[] {
  %reduce_sum.32340 = f32[] parameter(0)
  %reduce_sum.32341 = f32[] parameter(1)
  ROOT %reduce_sum.32342 = f32[] add(%reduce_sum.32340, %reduce_sum.32341)
}

%region_986.32343.clone (reduce_sum.2324: f32[], reduce_sum.2325: f32[]) -> f32[] {
  %reduce_sum.2324 = f32[] parameter(0)
  %reduce_sum.2325 = f32[] parameter(1)
  ROOT %reduce_sum.2326 = f32[] add(%reduce_sum.2324, %reduce_sum.2325)
}

%region_987.32350 (reduce_sum.32347: f32[], reduce_sum.32348: f32[]) -> f32[] {
  %reduce_sum.32347 = f32[] parameter(0)
  %reduce_sum.32348 = f32[] parameter(1)
  ROOT %reduce_sum.32349 = f32[] add(%reduce_sum.32347, %reduce_sum.32348)
}

%region_987.32350.clone (reduce_sum.2327: f32[], reduce_sum.2328: f32[]) -> f32[] {
  %reduce_sum.2327 = f32[] parameter(0)
  %reduce_sum.2328 = f32[] parameter(1)
  ROOT %reduce_sum.2329 = f32[] add(%reduce_sum.2327, %reduce_sum.2328)
}

%region_988.32357 (reduce_sum.32354: f32[], reduce_sum.32355: f32[]) -> f32[] {
  %reduce_sum.32354 = f32[] parameter(0)
  %reduce_sum.32355 = f32[] parameter(1)
  ROOT %reduce_sum.32356 = f32[] add(%reduce_sum.32354, %reduce_sum.32355)
}

%region_988.32357.clone (reduce_sum.2330: f32[], reduce_sum.2331: f32[]) -> f32[] {
  %reduce_sum.2330 = f32[] parameter(0)
  %reduce_sum.2331 = f32[] parameter(1)
  ROOT %reduce_sum.2332 = f32[] add(%reduce_sum.2330, %reduce_sum.2331)
}

%region_989.32364 (reduce_sum.32361: f32[], reduce_sum.32362: f32[]) -> f32[] {
  %reduce_sum.32361 = f32[] parameter(0)
  %reduce_sum.32362 = f32[] parameter(1)
  ROOT %reduce_sum.32363 = f32[] add(%reduce_sum.32361, %reduce_sum.32362)
}

%region_989.32364.clone (reduce_sum.2333: f32[], reduce_sum.2334: f32[]) -> f32[] {
  %reduce_sum.2333 = f32[] parameter(0)
  %reduce_sum.2334 = f32[] parameter(1)
  ROOT %reduce_sum.2335 = f32[] add(%reduce_sum.2333, %reduce_sum.2334)
}

%region_990.32371 (reduce_sum.32368: f32[], reduce_sum.32369: f32[]) -> f32[] {
  %reduce_sum.32368 = f32[] parameter(0)
  %reduce_sum.32369 = f32[] parameter(1)
  ROOT %reduce_sum.32370 = f32[] add(%reduce_sum.32368, %reduce_sum.32369)
}

%region_990.32371.clone (reduce_sum.2336: f32[], reduce_sum.2337: f32[]) -> f32[] {
  %reduce_sum.2336 = f32[] parameter(0)
  %reduce_sum.2337 = f32[] parameter(1)
  ROOT %reduce_sum.2338 = f32[] add(%reduce_sum.2336, %reduce_sum.2337)
}

%region_991.32378 (reduce_sum.32375: f32[], reduce_sum.32376: f32[]) -> f32[] {
  %reduce_sum.32375 = f32[] parameter(0)
  %reduce_sum.32376 = f32[] parameter(1)
  ROOT %reduce_sum.32377 = f32[] add(%reduce_sum.32375, %reduce_sum.32376)
}

%region_991.32378.clone (reduce_sum.2339: f32[], reduce_sum.2340: f32[]) -> f32[] {
  %reduce_sum.2339 = f32[] parameter(0)
  %reduce_sum.2340 = f32[] parameter(1)
  ROOT %reduce_sum.2341 = f32[] add(%reduce_sum.2339, %reduce_sum.2340)
}

%region_992.32385 (reduce_sum.32382: f32[], reduce_sum.32383: f32[]) -> f32[] {
  %reduce_sum.32382 = f32[] parameter(0)
  %reduce_sum.32383 = f32[] parameter(1)
  ROOT %reduce_sum.32384 = f32[] add(%reduce_sum.32382, %reduce_sum.32383)
}

%region_993.32392 (reduce_sum.32389: f32[], reduce_sum.32390: f32[]) -> f32[] {
  %reduce_sum.32389 = f32[] parameter(0)
  %reduce_sum.32390 = f32[] parameter(1)
  ROOT %reduce_sum.32391 = f32[] add(%reduce_sum.32389, %reduce_sum.32390)
}

%region_994.32399 (reduce_sum.32396: f32[], reduce_sum.32397: f32[]) -> f32[] {
  %reduce_sum.32396 = f32[] parameter(0)
  %reduce_sum.32397 = f32[] parameter(1)
  ROOT %reduce_sum.32398 = f32[] add(%reduce_sum.32396, %reduce_sum.32397)
}

%region_994.32399.clone (reduce_sum.2342: f32[], reduce_sum.2343: f32[]) -> f32[] {
  %reduce_sum.2342 = f32[] parameter(0)
  %reduce_sum.2343 = f32[] parameter(1)
  ROOT %reduce_sum.2344 = f32[] add(%reduce_sum.2342, %reduce_sum.2343)
}

%region_995.32406 (reduce_sum.32403: f32[], reduce_sum.32404: f32[]) -> f32[] {
  %reduce_sum.32403 = f32[] parameter(0)
  %reduce_sum.32404 = f32[] parameter(1)
  ROOT %reduce_sum.32405 = f32[] add(%reduce_sum.32403, %reduce_sum.32404)
}

%region_995.32406.clone (reduce_sum.2345: f32[], reduce_sum.2346: f32[]) -> f32[] {
  %reduce_sum.2345 = f32[] parameter(0)
  %reduce_sum.2346 = f32[] parameter(1)
  ROOT %reduce_sum.2347 = f32[] add(%reduce_sum.2345, %reduce_sum.2346)
}

%region_996.32413 (reduce_sum.32410: f32[], reduce_sum.32411: f32[]) -> f32[] {
  %reduce_sum.32410 = f32[] parameter(0)
  %reduce_sum.32411 = f32[] parameter(1)
  ROOT %reduce_sum.32412 = f32[] add(%reduce_sum.32410, %reduce_sum.32411)
}

%region_996.32413.clone (reduce_sum.2348: f32[], reduce_sum.2349: f32[]) -> f32[] {
  %reduce_sum.2348 = f32[] parameter(0)
  %reduce_sum.2349 = f32[] parameter(1)
  ROOT %reduce_sum.2350 = f32[] add(%reduce_sum.2348, %reduce_sum.2349)
}

%region_997.32420 (reduce_sum.32417: f32[], reduce_sum.32418: f32[]) -> f32[] {
  %reduce_sum.32417 = f32[] parameter(0)
  %reduce_sum.32418 = f32[] parameter(1)
  ROOT %reduce_sum.32419 = f32[] add(%reduce_sum.32417, %reduce_sum.32418)
}

%region_997.32420.clone (reduce_sum.2351: f32[], reduce_sum.2352: f32[]) -> f32[] {
  %reduce_sum.2351 = f32[] parameter(0)
  %reduce_sum.2352 = f32[] parameter(1)
  ROOT %reduce_sum.2353 = f32[] add(%reduce_sum.2351, %reduce_sum.2352)
}

%region_998.32427 (reduce_sum.32424: f32[], reduce_sum.32425: f32[]) -> f32[] {
  %reduce_sum.32424 = f32[] parameter(0)
  %reduce_sum.32425 = f32[] parameter(1)
  ROOT %reduce_sum.32426 = f32[] add(%reduce_sum.32424, %reduce_sum.32425)
}

%region_998.32427.clone (reduce_sum.2354: f32[], reduce_sum.2355: f32[]) -> f32[] {
  %reduce_sum.2354 = f32[] parameter(0)
  %reduce_sum.2355 = f32[] parameter(1)
  ROOT %reduce_sum.2356 = f32[] add(%reduce_sum.2354, %reduce_sum.2355)
}

%region_999.32434 (reduce_sum.32431: f32[], reduce_sum.32432: f32[]) -> f32[] {
  %reduce_sum.32431 = f32[] parameter(0)
  %reduce_sum.32432 = f32[] parameter(1)
  ROOT %reduce_sum.32433 = f32[] add(%reduce_sum.32431, %reduce_sum.32432)
}

%region_999.32434.clone (reduce_sum.2357: f32[], reduce_sum.2358: f32[]) -> f32[] {
  %reduce_sum.2357 = f32[] parameter(0)
  %reduce_sum.2358 = f32[] parameter(1)
  ROOT %reduce_sum.2359 = f32[] add(%reduce_sum.2357, %reduce_sum.2358)
}

%region_1000.32441 (reduce_sum.32438: f32[], reduce_sum.32439: f32[]) -> f32[] {
  %reduce_sum.32438 = f32[] parameter(0)
  %reduce_sum.32439 = f32[] parameter(1)
  ROOT %reduce_sum.32440 = f32[] add(%reduce_sum.32438, %reduce_sum.32439)
}

%region_1000.32441.clone (reduce_sum.2360: f32[], reduce_sum.2361: f32[]) -> f32[] {
  %reduce_sum.2360 = f32[] parameter(0)
  %reduce_sum.2361 = f32[] parameter(1)
  ROOT %reduce_sum.2362 = f32[] add(%reduce_sum.2360, %reduce_sum.2361)
}

%region_1001.32448 (reduce_sum.32445: f32[], reduce_sum.32446: f32[]) -> f32[] {
  %reduce_sum.32445 = f32[] parameter(0)
  %reduce_sum.32446 = f32[] parameter(1)
  ROOT %reduce_sum.32447 = f32[] add(%reduce_sum.32445, %reduce_sum.32446)
}

%region_1002.32455 (reduce_sum.32452: f32[], reduce_sum.32453: f32[]) -> f32[] {
  %reduce_sum.32452 = f32[] parameter(0)
  %reduce_sum.32453 = f32[] parameter(1)
  ROOT %reduce_sum.32454 = f32[] add(%reduce_sum.32452, %reduce_sum.32453)
}

%region_1003.32462 (reduce_sum.32459: f32[], reduce_sum.32460: f32[]) -> f32[] {
  %reduce_sum.32459 = f32[] parameter(0)
  %reduce_sum.32460 = f32[] parameter(1)
  ROOT %reduce_sum.32461 = f32[] add(%reduce_sum.32459, %reduce_sum.32460)
}

%region_1003.32462.clone (reduce_sum.2363: f32[], reduce_sum.2364: f32[]) -> f32[] {
  %reduce_sum.2363 = f32[] parameter(0)
  %reduce_sum.2364 = f32[] parameter(1)
  ROOT %reduce_sum.2365 = f32[] add(%reduce_sum.2363, %reduce_sum.2364)
}

%region_1004.32469 (reduce_sum.32466: f32[], reduce_sum.32467: f32[]) -> f32[] {
  %reduce_sum.32466 = f32[] parameter(0)
  %reduce_sum.32467 = f32[] parameter(1)
  ROOT %reduce_sum.32468 = f32[] add(%reduce_sum.32466, %reduce_sum.32467)
}

%region_1004.32469.clone (reduce_sum.2366: f32[], reduce_sum.2367: f32[]) -> f32[] {
  %reduce_sum.2366 = f32[] parameter(0)
  %reduce_sum.2367 = f32[] parameter(1)
  ROOT %reduce_sum.2368 = f32[] add(%reduce_sum.2366, %reduce_sum.2367)
}

%region_1005.32476 (reduce_sum.32473: f32[], reduce_sum.32474: f32[]) -> f32[] {
  %reduce_sum.32473 = f32[] parameter(0)
  %reduce_sum.32474 = f32[] parameter(1)
  ROOT %reduce_sum.32475 = f32[] add(%reduce_sum.32473, %reduce_sum.32474)
}

%region_1005.32476.clone (reduce_sum.2369: f32[], reduce_sum.2370: f32[]) -> f32[] {
  %reduce_sum.2369 = f32[] parameter(0)
  %reduce_sum.2370 = f32[] parameter(1)
  ROOT %reduce_sum.2371 = f32[] add(%reduce_sum.2369, %reduce_sum.2370)
}

%region_1006.32483 (reduce_sum.32480: f32[], reduce_sum.32481: f32[]) -> f32[] {
  %reduce_sum.32480 = f32[] parameter(0)
  %reduce_sum.32481 = f32[] parameter(1)
  ROOT %reduce_sum.32482 = f32[] add(%reduce_sum.32480, %reduce_sum.32481)
}

%region_1006.32483.clone (reduce_sum.2372: f32[], reduce_sum.2373: f32[]) -> f32[] {
  %reduce_sum.2372 = f32[] parameter(0)
  %reduce_sum.2373 = f32[] parameter(1)
  ROOT %reduce_sum.2374 = f32[] add(%reduce_sum.2372, %reduce_sum.2373)
}

%region_1007.32490 (reduce_sum.32487: f32[], reduce_sum.32488: f32[]) -> f32[] {
  %reduce_sum.32487 = f32[] parameter(0)
  %reduce_sum.32488 = f32[] parameter(1)
  ROOT %reduce_sum.32489 = f32[] add(%reduce_sum.32487, %reduce_sum.32488)
}

%region_1007.32490.clone (reduce_sum.2375: f32[], reduce_sum.2376: f32[]) -> f32[] {
  %reduce_sum.2375 = f32[] parameter(0)
  %reduce_sum.2376 = f32[] parameter(1)
  ROOT %reduce_sum.2377 = f32[] add(%reduce_sum.2375, %reduce_sum.2376)
}

%region_1008.32497 (reduce_sum.32494: f32[], reduce_sum.32495: f32[]) -> f32[] {
  %reduce_sum.32494 = f32[] parameter(0)
  %reduce_sum.32495 = f32[] parameter(1)
  ROOT %reduce_sum.32496 = f32[] add(%reduce_sum.32494, %reduce_sum.32495)
}

%region_1008.32497.clone (reduce_sum.2378: f32[], reduce_sum.2379: f32[]) -> f32[] {
  %reduce_sum.2378 = f32[] parameter(0)
  %reduce_sum.2379 = f32[] parameter(1)
  ROOT %reduce_sum.2380 = f32[] add(%reduce_sum.2378, %reduce_sum.2379)
}

%region_1009.32504 (reduce_sum.32501: f32[], reduce_sum.32502: f32[]) -> f32[] {
  %reduce_sum.32501 = f32[] parameter(0)
  %reduce_sum.32502 = f32[] parameter(1)
  ROOT %reduce_sum.32503 = f32[] add(%reduce_sum.32501, %reduce_sum.32502)
}

%region_1009.32504.clone (reduce_sum.2381: f32[], reduce_sum.2382: f32[]) -> f32[] {
  %reduce_sum.2381 = f32[] parameter(0)
  %reduce_sum.2382 = f32[] parameter(1)
  ROOT %reduce_sum.2383 = f32[] add(%reduce_sum.2381, %reduce_sum.2382)
}

%region_1010.32511 (reduce_sum.32508: f32[], reduce_sum.32509: f32[]) -> f32[] {
  %reduce_sum.32508 = f32[] parameter(0)
  %reduce_sum.32509 = f32[] parameter(1)
  ROOT %reduce_sum.32510 = f32[] add(%reduce_sum.32508, %reduce_sum.32509)
}

%region_1011.32518 (reduce_sum.32515: f32[], reduce_sum.32516: f32[]) -> f32[] {
  %reduce_sum.32515 = f32[] parameter(0)
  %reduce_sum.32516 = f32[] parameter(1)
  ROOT %reduce_sum.32517 = f32[] add(%reduce_sum.32515, %reduce_sum.32516)
}

%region_1012.32525 (reduce_sum.32522: f32[], reduce_sum.32523: f32[]) -> f32[] {
  %reduce_sum.32522 = f32[] parameter(0)
  %reduce_sum.32523 = f32[] parameter(1)
  ROOT %reduce_sum.32524 = f32[] add(%reduce_sum.32522, %reduce_sum.32523)
}

%region_1012.32525.clone (reduce_sum.2384: f32[], reduce_sum.2385: f32[]) -> f32[] {
  %reduce_sum.2384 = f32[] parameter(0)
  %reduce_sum.2385 = f32[] parameter(1)
  ROOT %reduce_sum.2386 = f32[] add(%reduce_sum.2384, %reduce_sum.2385)
}

%region_1013.32532 (reduce_sum.32529: f32[], reduce_sum.32530: f32[]) -> f32[] {
  %reduce_sum.32529 = f32[] parameter(0)
  %reduce_sum.32530 = f32[] parameter(1)
  ROOT %reduce_sum.32531 = f32[] add(%reduce_sum.32529, %reduce_sum.32530)
}

%region_1013.32532.clone (reduce_sum.2387: f32[], reduce_sum.2388: f32[]) -> f32[] {
  %reduce_sum.2387 = f32[] parameter(0)
  %reduce_sum.2388 = f32[] parameter(1)
  ROOT %reduce_sum.2389 = f32[] add(%reduce_sum.2387, %reduce_sum.2388)
}

%region_1014.32539 (reduce_sum.32536: f32[], reduce_sum.32537: f32[]) -> f32[] {
  %reduce_sum.32536 = f32[] parameter(0)
  %reduce_sum.32537 = f32[] parameter(1)
  ROOT %reduce_sum.32538 = f32[] add(%reduce_sum.32536, %reduce_sum.32537)
}

%region_1014.32539.clone (reduce_sum.2390: f32[], reduce_sum.2391: f32[]) -> f32[] {
  %reduce_sum.2390 = f32[] parameter(0)
  %reduce_sum.2391 = f32[] parameter(1)
  ROOT %reduce_sum.2392 = f32[] add(%reduce_sum.2390, %reduce_sum.2391)
}

%region_1015.32546 (reduce_sum.32543: f32[], reduce_sum.32544: f32[]) -> f32[] {
  %reduce_sum.32543 = f32[] parameter(0)
  %reduce_sum.32544 = f32[] parameter(1)
  ROOT %reduce_sum.32545 = f32[] add(%reduce_sum.32543, %reduce_sum.32544)
}

%region_1015.32546.clone (reduce_sum.2393: f32[], reduce_sum.2394: f32[]) -> f32[] {
  %reduce_sum.2393 = f32[] parameter(0)
  %reduce_sum.2394 = f32[] parameter(1)
  ROOT %reduce_sum.2395 = f32[] add(%reduce_sum.2393, %reduce_sum.2394)
}

%region_1016.32553 (reduce_sum.32550: f32[], reduce_sum.32551: f32[]) -> f32[] {
  %reduce_sum.32550 = f32[] parameter(0)
  %reduce_sum.32551 = f32[] parameter(1)
  ROOT %reduce_sum.32552 = f32[] add(%reduce_sum.32550, %reduce_sum.32551)
}

%region_1016.32553.clone (reduce_sum.2396: f32[], reduce_sum.2397: f32[]) -> f32[] {
  %reduce_sum.2396 = f32[] parameter(0)
  %reduce_sum.2397 = f32[] parameter(1)
  ROOT %reduce_sum.2398 = f32[] add(%reduce_sum.2396, %reduce_sum.2397)
}

%region_1017.32560 (reduce_sum.32557: f32[], reduce_sum.32558: f32[]) -> f32[] {
  %reduce_sum.32557 = f32[] parameter(0)
  %reduce_sum.32558 = f32[] parameter(1)
  ROOT %reduce_sum.32559 = f32[] add(%reduce_sum.32557, %reduce_sum.32558)
}

%region_1017.32560.clone (reduce_sum.2399: f32[], reduce_sum.2400: f32[]) -> f32[] {
  %reduce_sum.2399 = f32[] parameter(0)
  %reduce_sum.2400 = f32[] parameter(1)
  ROOT %reduce_sum.2401 = f32[] add(%reduce_sum.2399, %reduce_sum.2400)
}

%region_1018.32567 (reduce_sum.32564: f32[], reduce_sum.32565: f32[]) -> f32[] {
  %reduce_sum.32564 = f32[] parameter(0)
  %reduce_sum.32565 = f32[] parameter(1)
  ROOT %reduce_sum.32566 = f32[] add(%reduce_sum.32564, %reduce_sum.32565)
}

%region_1018.32567.clone (reduce_sum.2402: f32[], reduce_sum.2403: f32[]) -> f32[] {
  %reduce_sum.2402 = f32[] parameter(0)
  %reduce_sum.2403 = f32[] parameter(1)
  ROOT %reduce_sum.2404 = f32[] add(%reduce_sum.2402, %reduce_sum.2403)
}

%region_1019.32574 (reduce_sum.32571: f32[], reduce_sum.32572: f32[]) -> f32[] {
  %reduce_sum.32571 = f32[] parameter(0)
  %reduce_sum.32572 = f32[] parameter(1)
  ROOT %reduce_sum.32573 = f32[] add(%reduce_sum.32571, %reduce_sum.32572)
}

%region_1020.32581 (reduce_sum.32578: f32[], reduce_sum.32579: f32[]) -> f32[] {
  %reduce_sum.32578 = f32[] parameter(0)
  %reduce_sum.32579 = f32[] parameter(1)
  ROOT %reduce_sum.32580 = f32[] add(%reduce_sum.32578, %reduce_sum.32579)
}

%region_1021.32588 (reduce_sum.32585: f32[], reduce_sum.32586: f32[]) -> f32[] {
  %reduce_sum.32585 = f32[] parameter(0)
  %reduce_sum.32586 = f32[] parameter(1)
  ROOT %reduce_sum.32587 = f32[] add(%reduce_sum.32585, %reduce_sum.32586)
}

%region_1021.32588.clone (reduce_sum.2405: f32[], reduce_sum.2406: f32[]) -> f32[] {
  %reduce_sum.2405 = f32[] parameter(0)
  %reduce_sum.2406 = f32[] parameter(1)
  ROOT %reduce_sum.2407 = f32[] add(%reduce_sum.2405, %reduce_sum.2406)
}

%region_1022.32595 (reduce_sum.32592: f32[], reduce_sum.32593: f32[]) -> f32[] {
  %reduce_sum.32592 = f32[] parameter(0)
  %reduce_sum.32593 = f32[] parameter(1)
  ROOT %reduce_sum.32594 = f32[] add(%reduce_sum.32592, %reduce_sum.32593)
}

%region_1022.32595.clone (reduce_sum.2408: f32[], reduce_sum.2409: f32[]) -> f32[] {
  %reduce_sum.2408 = f32[] parameter(0)
  %reduce_sum.2409 = f32[] parameter(1)
  ROOT %reduce_sum.2410 = f32[] add(%reduce_sum.2408, %reduce_sum.2409)
}

%region_1023.32602 (reduce_sum.32599: f32[], reduce_sum.32600: f32[]) -> f32[] {
  %reduce_sum.32599 = f32[] parameter(0)
  %reduce_sum.32600 = f32[] parameter(1)
  ROOT %reduce_sum.32601 = f32[] add(%reduce_sum.32599, %reduce_sum.32600)
}

%region_1023.32602.clone (reduce_sum.2411: f32[], reduce_sum.2412: f32[]) -> f32[] {
  %reduce_sum.2411 = f32[] parameter(0)
  %reduce_sum.2412 = f32[] parameter(1)
  ROOT %reduce_sum.2413 = f32[] add(%reduce_sum.2411, %reduce_sum.2412)
}

%region_1024.32609 (reduce_sum.32606: f32[], reduce_sum.32607: f32[]) -> f32[] {
  %reduce_sum.32606 = f32[] parameter(0)
  %reduce_sum.32607 = f32[] parameter(1)
  ROOT %reduce_sum.32608 = f32[] add(%reduce_sum.32606, %reduce_sum.32607)
}

%region_1024.32609.clone (reduce_sum.2414: f32[], reduce_sum.2415: f32[]) -> f32[] {
  %reduce_sum.2414 = f32[] parameter(0)
  %reduce_sum.2415 = f32[] parameter(1)
  ROOT %reduce_sum.2416 = f32[] add(%reduce_sum.2414, %reduce_sum.2415)
}

%region_1025.32616 (reduce_sum.32613: f32[], reduce_sum.32614: f32[]) -> f32[] {
  %reduce_sum.32613 = f32[] parameter(0)
  %reduce_sum.32614 = f32[] parameter(1)
  ROOT %reduce_sum.32615 = f32[] add(%reduce_sum.32613, %reduce_sum.32614)
}

%region_1025.32616.clone (reduce_sum.2417: f32[], reduce_sum.2418: f32[]) -> f32[] {
  %reduce_sum.2417 = f32[] parameter(0)
  %reduce_sum.2418 = f32[] parameter(1)
  ROOT %reduce_sum.2419 = f32[] add(%reduce_sum.2417, %reduce_sum.2418)
}

%region_1026.32623 (reduce_sum.32620: f32[], reduce_sum.32621: f32[]) -> f32[] {
  %reduce_sum.32620 = f32[] parameter(0)
  %reduce_sum.32621 = f32[] parameter(1)
  ROOT %reduce_sum.32622 = f32[] add(%reduce_sum.32620, %reduce_sum.32621)
}

%region_1026.32623.clone (reduce_sum.2420: f32[], reduce_sum.2421: f32[]) -> f32[] {
  %reduce_sum.2420 = f32[] parameter(0)
  %reduce_sum.2421 = f32[] parameter(1)
  ROOT %reduce_sum.2422 = f32[] add(%reduce_sum.2420, %reduce_sum.2421)
}

%region_1027.32630 (reduce_sum.32627: f32[], reduce_sum.32628: f32[]) -> f32[] {
  %reduce_sum.32627 = f32[] parameter(0)
  %reduce_sum.32628 = f32[] parameter(1)
  ROOT %reduce_sum.32629 = f32[] add(%reduce_sum.32627, %reduce_sum.32628)
}

%region_1027.32630.clone (reduce_sum.2423: f32[], reduce_sum.2424: f32[]) -> f32[] {
  %reduce_sum.2423 = f32[] parameter(0)
  %reduce_sum.2424 = f32[] parameter(1)
  ROOT %reduce_sum.2425 = f32[] add(%reduce_sum.2423, %reduce_sum.2424)
}

%region_1028.32637 (reduce_sum.32634: f32[], reduce_sum.32635: f32[]) -> f32[] {
  %reduce_sum.32634 = f32[] parameter(0)
  %reduce_sum.32635 = f32[] parameter(1)
  ROOT %reduce_sum.32636 = f32[] add(%reduce_sum.32634, %reduce_sum.32635)
}

%region_1029.32644 (reduce_sum.32641: f32[], reduce_sum.32642: f32[]) -> f32[] {
  %reduce_sum.32641 = f32[] parameter(0)
  %reduce_sum.32642 = f32[] parameter(1)
  ROOT %reduce_sum.32643 = f32[] add(%reduce_sum.32641, %reduce_sum.32642)
}

%region_1030.32651 (reduce_sum.32648: f32[], reduce_sum.32649: f32[]) -> f32[] {
  %reduce_sum.32648 = f32[] parameter(0)
  %reduce_sum.32649 = f32[] parameter(1)
  ROOT %reduce_sum.32650 = f32[] add(%reduce_sum.32648, %reduce_sum.32649)
}

%region_1030.32651.clone (reduce_sum.2426: f32[], reduce_sum.2427: f32[]) -> f32[] {
  %reduce_sum.2426 = f32[] parameter(0)
  %reduce_sum.2427 = f32[] parameter(1)
  ROOT %reduce_sum.2428 = f32[] add(%reduce_sum.2426, %reduce_sum.2427)
}

%region_1031.32658 (reduce_sum.32655: f32[], reduce_sum.32656: f32[]) -> f32[] {
  %reduce_sum.32655 = f32[] parameter(0)
  %reduce_sum.32656 = f32[] parameter(1)
  ROOT %reduce_sum.32657 = f32[] add(%reduce_sum.32655, %reduce_sum.32656)
}

%region_1031.32658.clone (reduce_sum.2432: f32[], reduce_sum.2434: f32[]) -> f32[] {
  %reduce_sum.2432 = f32[] parameter(0)
  %reduce_sum.2434 = f32[] parameter(1)
  ROOT %reduce_sum.2435 = f32[] add(%reduce_sum.2432, %reduce_sum.2434)
}

%region_1032.32665 (reduce_sum.32662: f32[], reduce_sum.32663: f32[]) -> f32[] {
  %reduce_sum.32662 = f32[] parameter(0)
  %reduce_sum.32663 = f32[] parameter(1)
  ROOT %reduce_sum.32664 = f32[] add(%reduce_sum.32662, %reduce_sum.32663)
}

%region_1032.32665.clone (reduce_sum.2436: f32[], reduce_sum.2440: f32[]) -> f32[] {
  %reduce_sum.2436 = f32[] parameter(0)
  %reduce_sum.2440 = f32[] parameter(1)
  ROOT %reduce_sum.2442 = f32[] add(%reduce_sum.2436, %reduce_sum.2440)
}

%region_1033.32672 (reduce_sum.32669: f32[], reduce_sum.32670: f32[]) -> f32[] {
  %reduce_sum.32669 = f32[] parameter(0)
  %reduce_sum.32670 = f32[] parameter(1)
  ROOT %reduce_sum.32671 = f32[] add(%reduce_sum.32669, %reduce_sum.32670)
}

%region_1033.32672.clone (reduce_sum.2443: f32[], reduce_sum.2444: f32[]) -> f32[] {
  %reduce_sum.2443 = f32[] parameter(0)
  %reduce_sum.2444 = f32[] parameter(1)
  ROOT %reduce_sum.2445 = f32[] add(%reduce_sum.2443, %reduce_sum.2444)
}

%region_1034.32679 (reduce_sum.32676: f32[], reduce_sum.32677: f32[]) -> f32[] {
  %reduce_sum.32676 = f32[] parameter(0)
  %reduce_sum.32677 = f32[] parameter(1)
  ROOT %reduce_sum.32678 = f32[] add(%reduce_sum.32676, %reduce_sum.32677)
}

%region_1034.32679.clone (reduce_sum.2446: f32[], reduce_sum.2447: f32[]) -> f32[] {
  %reduce_sum.2446 = f32[] parameter(0)
  %reduce_sum.2447 = f32[] parameter(1)
  ROOT %reduce_sum.2448 = f32[] add(%reduce_sum.2446, %reduce_sum.2447)
}

%region_1035.32686 (reduce_sum.32683: f32[], reduce_sum.32684: f32[]) -> f32[] {
  %reduce_sum.32683 = f32[] parameter(0)
  %reduce_sum.32684 = f32[] parameter(1)
  ROOT %reduce_sum.32685 = f32[] add(%reduce_sum.32683, %reduce_sum.32684)
}

%region_1035.32686.clone (reduce_sum.2449: f32[], reduce_sum.2450: f32[]) -> f32[] {
  %reduce_sum.2449 = f32[] parameter(0)
  %reduce_sum.2450 = f32[] parameter(1)
  ROOT %reduce_sum.2451 = f32[] add(%reduce_sum.2449, %reduce_sum.2450)
}

%region_1036.32698 (reduce_sum.32695: f32[], reduce_sum.32696: f32[]) -> f32[] {
  %reduce_sum.32695 = f32[] parameter(0)
  %reduce_sum.32696 = f32[] parameter(1)
  ROOT %reduce_sum.32697 = f32[] add(%reduce_sum.32695, %reduce_sum.32696)
}

%region_1037.32709 (reduce_sum.32706: f32[], reduce_sum.32707: f32[]) -> f32[] {
  %reduce_sum.32706 = f32[] parameter(0)
  %reduce_sum.32707 = f32[] parameter(1)
  ROOT %reduce_sum.32708 = f32[] add(%reduce_sum.32706, %reduce_sum.32707)
}

%region_1037.32709.clone (reduce_sum.2452: f32[], reduce_sum.2453: f32[]) -> f32[] {
  %reduce_sum.2452 = f32[] parameter(0)
  %reduce_sum.2453 = f32[] parameter(1)
  ROOT %reduce_sum.2454 = f32[] add(%reduce_sum.2452, %reduce_sum.2453)
}

%region_1038.32716 (reduce_sum.32713: f32[], reduce_sum.32714: f32[]) -> f32[] {
  %reduce_sum.32713 = f32[] parameter(0)
  %reduce_sum.32714 = f32[] parameter(1)
  ROOT %reduce_sum.32715 = f32[] add(%reduce_sum.32713, %reduce_sum.32714)
}

%region_1039.32722 (reduce_sum.32719: f32[], reduce_sum.32720: f32[]) -> f32[] {
  %reduce_sum.32719 = f32[] parameter(0)
  %reduce_sum.32720 = f32[] parameter(1)
  ROOT %reduce_sum.32721 = f32[] add(%reduce_sum.32719, %reduce_sum.32720)
}

%region_1039.32722.clone (reduce_sum.2455: f32[], reduce_sum.2456: f32[]) -> f32[] {
  %reduce_sum.2455 = f32[] parameter(0)
  %reduce_sum.2456 = f32[] parameter(1)
  ROOT %reduce_sum.2457 = f32[] add(%reduce_sum.2455, %reduce_sum.2456)
}

%region_1040.32729 (reduce_sum.32726: f32[], reduce_sum.32727: f32[]) -> f32[] {
  %reduce_sum.32726 = f32[] parameter(0)
  %reduce_sum.32727 = f32[] parameter(1)
  ROOT %reduce_sum.32728 = f32[] add(%reduce_sum.32726, %reduce_sum.32727)
}

%region_1040.32729.clone (reduce_sum.2458: f32[], reduce_sum.2459: f32[]) -> f32[] {
  %reduce_sum.2458 = f32[] parameter(0)
  %reduce_sum.2459 = f32[] parameter(1)
  ROOT %reduce_sum.2460 = f32[] add(%reduce_sum.2458, %reduce_sum.2459)
}

%region_1041.32736 (reduce_sum.32733: f32[], reduce_sum.32734: f32[]) -> f32[] {
  %reduce_sum.32733 = f32[] parameter(0)
  %reduce_sum.32734 = f32[] parameter(1)
  ROOT %reduce_sum.32735 = f32[] add(%reduce_sum.32733, %reduce_sum.32734)
}

%region_1041.32736.clone (reduce_sum.2464: f32[], reduce_sum.2466: f32[]) -> f32[] {
  %reduce_sum.2464 = f32[] parameter(0)
  %reduce_sum.2466 = f32[] parameter(1)
  ROOT %reduce_sum.2467 = f32[] add(%reduce_sum.2464, %reduce_sum.2466)
}

%region_1042.32743 (reduce_sum.32740: f32[], reduce_sum.32741: f32[]) -> f32[] {
  %reduce_sum.32740 = f32[] parameter(0)
  %reduce_sum.32741 = f32[] parameter(1)
  ROOT %reduce_sum.32742 = f32[] add(%reduce_sum.32740, %reduce_sum.32741)
}

%region_1043.32750 (reduce_sum.32747: f32[], reduce_sum.32748: f32[]) -> f32[] {
  %reduce_sum.32747 = f32[] parameter(0)
  %reduce_sum.32748 = f32[] parameter(1)
  ROOT %reduce_sum.32749 = f32[] add(%reduce_sum.32747, %reduce_sum.32748)
}

%region_1044.32757 (reduce_sum.32754: f32[], reduce_sum.32755: f32[]) -> f32[] {
  %reduce_sum.32754 = f32[] parameter(0)
  %reduce_sum.32755 = f32[] parameter(1)
  ROOT %reduce_sum.32756 = f32[] add(%reduce_sum.32754, %reduce_sum.32755)
}

%region_1044.32757.clone (reduce_sum.2468: f32[], reduce_sum.2469: f32[]) -> f32[] {
  %reduce_sum.2468 = f32[] parameter(0)
  %reduce_sum.2469 = f32[] parameter(1)
  ROOT %reduce_sum.2470 = f32[] add(%reduce_sum.2468, %reduce_sum.2469)
}

%region_1045.32764 (reduce_sum.32761: f32[], reduce_sum.32762: f32[]) -> f32[] {
  %reduce_sum.32761 = f32[] parameter(0)
  %reduce_sum.32762 = f32[] parameter(1)
  ROOT %reduce_sum.32763 = f32[] add(%reduce_sum.32761, %reduce_sum.32762)
}

%region_1045.32764.clone (reduce_sum.2471: f32[], reduce_sum.2472: f32[]) -> f32[] {
  %reduce_sum.2471 = f32[] parameter(0)
  %reduce_sum.2472 = f32[] parameter(1)
  ROOT %reduce_sum.2473 = f32[] add(%reduce_sum.2471, %reduce_sum.2472)
}

%region_1046.32771 (reduce_sum.32768: f32[], reduce_sum.32769: f32[]) -> f32[] {
  %reduce_sum.32768 = f32[] parameter(0)
  %reduce_sum.32769 = f32[] parameter(1)
  ROOT %reduce_sum.32770 = f32[] add(%reduce_sum.32768, %reduce_sum.32769)
}

%region_1046.32771.clone (reduce_sum.2474: f32[], reduce_sum.2475: f32[]) -> f32[] {
  %reduce_sum.2474 = f32[] parameter(0)
  %reduce_sum.2475 = f32[] parameter(1)
  ROOT %reduce_sum.2476 = f32[] add(%reduce_sum.2474, %reduce_sum.2475)
}

%region_1047.32778 (reduce_sum.32775: f32[], reduce_sum.32776: f32[]) -> f32[] {
  %reduce_sum.32775 = f32[] parameter(0)
  %reduce_sum.32776 = f32[] parameter(1)
  ROOT %reduce_sum.32777 = f32[] add(%reduce_sum.32775, %reduce_sum.32776)
}

%region_1047.32778.clone (reduce_sum.2477: f32[], reduce_sum.2478: f32[]) -> f32[] {
  %reduce_sum.2477 = f32[] parameter(0)
  %reduce_sum.2478 = f32[] parameter(1)
  ROOT %reduce_sum.2479 = f32[] add(%reduce_sum.2477, %reduce_sum.2478)
}

%region_1048.32785 (reduce_sum.32782: f32[], reduce_sum.32783: f32[]) -> f32[] {
  %reduce_sum.32782 = f32[] parameter(0)
  %reduce_sum.32783 = f32[] parameter(1)
  ROOT %reduce_sum.32784 = f32[] add(%reduce_sum.32782, %reduce_sum.32783)
}

%region_1048.32785.clone (reduce_sum.2480: f32[], reduce_sum.2481: f32[]) -> f32[] {
  %reduce_sum.2480 = f32[] parameter(0)
  %reduce_sum.2481 = f32[] parameter(1)
  ROOT %reduce_sum.2482 = f32[] add(%reduce_sum.2480, %reduce_sum.2481)
}

%region_1049.32792 (reduce_sum.32789: f32[], reduce_sum.32790: f32[]) -> f32[] {
  %reduce_sum.32789 = f32[] parameter(0)
  %reduce_sum.32790 = f32[] parameter(1)
  ROOT %reduce_sum.32791 = f32[] add(%reduce_sum.32789, %reduce_sum.32790)
}

%region_1049.32792.clone (reduce_sum.2483: f32[], reduce_sum.2484: f32[]) -> f32[] {
  %reduce_sum.2483 = f32[] parameter(0)
  %reduce_sum.2484 = f32[] parameter(1)
  ROOT %reduce_sum.2485 = f32[] add(%reduce_sum.2483, %reduce_sum.2484)
}

%region_1050.32799 (reduce_sum.32796: f32[], reduce_sum.32797: f32[]) -> f32[] {
  %reduce_sum.32796 = f32[] parameter(0)
  %reduce_sum.32797 = f32[] parameter(1)
  ROOT %reduce_sum.32798 = f32[] add(%reduce_sum.32796, %reduce_sum.32797)
}

%region_1050.32799.clone (reduce_sum.2486: f32[], reduce_sum.2487: f32[]) -> f32[] {
  %reduce_sum.2486 = f32[] parameter(0)
  %reduce_sum.2487 = f32[] parameter(1)
  ROOT %reduce_sum.2488 = f32[] add(%reduce_sum.2486, %reduce_sum.2487)
}

%region_1051.32806 (reduce_sum.32803: f32[], reduce_sum.32804: f32[]) -> f32[] {
  %reduce_sum.32803 = f32[] parameter(0)
  %reduce_sum.32804 = f32[] parameter(1)
  ROOT %reduce_sum.32805 = f32[] add(%reduce_sum.32803, %reduce_sum.32804)
}

%region_1052.32813 (reduce_sum.32810: f32[], reduce_sum.32811: f32[]) -> f32[] {
  %reduce_sum.32810 = f32[] parameter(0)
  %reduce_sum.32811 = f32[] parameter(1)
  ROOT %reduce_sum.32812 = f32[] add(%reduce_sum.32810, %reduce_sum.32811)
}

%region_1053.32820 (reduce_sum.32817: f32[], reduce_sum.32818: f32[]) -> f32[] {
  %reduce_sum.32817 = f32[] parameter(0)
  %reduce_sum.32818 = f32[] parameter(1)
  ROOT %reduce_sum.32819 = f32[] add(%reduce_sum.32817, %reduce_sum.32818)
}

%region_1053.32820.clone (reduce_sum.2489: f32[], reduce_sum.2490: f32[]) -> f32[] {
  %reduce_sum.2489 = f32[] parameter(0)
  %reduce_sum.2490 = f32[] parameter(1)
  ROOT %reduce_sum.2491 = f32[] add(%reduce_sum.2489, %reduce_sum.2490)
}

%region_1054.32827 (reduce_sum.32824: f32[], reduce_sum.32825: f32[]) -> f32[] {
  %reduce_sum.32824 = f32[] parameter(0)
  %reduce_sum.32825 = f32[] parameter(1)
  ROOT %reduce_sum.32826 = f32[] add(%reduce_sum.32824, %reduce_sum.32825)
}

%region_1054.32827.clone (reduce_sum.2492: f32[], reduce_sum.2493: f32[]) -> f32[] {
  %reduce_sum.2492 = f32[] parameter(0)
  %reduce_sum.2493 = f32[] parameter(1)
  ROOT %reduce_sum.2494 = f32[] add(%reduce_sum.2492, %reduce_sum.2493)
}

%region_1055.32834 (reduce_sum.32831: f32[], reduce_sum.32832: f32[]) -> f32[] {
  %reduce_sum.32831 = f32[] parameter(0)
  %reduce_sum.32832 = f32[] parameter(1)
  ROOT %reduce_sum.32833 = f32[] add(%reduce_sum.32831, %reduce_sum.32832)
}

%region_1055.32834.clone (reduce_sum.2495: f32[], reduce_sum.2496: f32[]) -> f32[] {
  %reduce_sum.2495 = f32[] parameter(0)
  %reduce_sum.2496 = f32[] parameter(1)
  ROOT %reduce_sum.2497 = f32[] add(%reduce_sum.2495, %reduce_sum.2496)
}

%region_1056.32841 (reduce_sum.32838: f32[], reduce_sum.32839: f32[]) -> f32[] {
  %reduce_sum.32838 = f32[] parameter(0)
  %reduce_sum.32839 = f32[] parameter(1)
  ROOT %reduce_sum.32840 = f32[] add(%reduce_sum.32838, %reduce_sum.32839)
}

%region_1056.32841.clone (reduce_sum.2498: f32[], reduce_sum.2502: f32[]) -> f32[] {
  %reduce_sum.2498 = f32[] parameter(0)
  %reduce_sum.2502 = f32[] parameter(1)
  ROOT %reduce_sum.2504 = f32[] add(%reduce_sum.2498, %reduce_sum.2502)
}

%region_1057.32848 (reduce_sum.32845: f32[], reduce_sum.32846: f32[]) -> f32[] {
  %reduce_sum.32845 = f32[] parameter(0)
  %reduce_sum.32846 = f32[] parameter(1)
  ROOT %reduce_sum.32847 = f32[] add(%reduce_sum.32845, %reduce_sum.32846)
}

%region_1057.32848.clone (reduce_sum.2505: f32[], reduce_sum.2506: f32[]) -> f32[] {
  %reduce_sum.2505 = f32[] parameter(0)
  %reduce_sum.2506 = f32[] parameter(1)
  ROOT %reduce_sum.2507 = f32[] add(%reduce_sum.2505, %reduce_sum.2506)
}

%region_1058.32855 (reduce_sum.32852: f32[], reduce_sum.32853: f32[]) -> f32[] {
  %reduce_sum.32852 = f32[] parameter(0)
  %reduce_sum.32853 = f32[] parameter(1)
  ROOT %reduce_sum.32854 = f32[] add(%reduce_sum.32852, %reduce_sum.32853)
}

%region_1058.32855.clone (reduce_sum.2508: f32[], reduce_sum.2509: f32[]) -> f32[] {
  %reduce_sum.2508 = f32[] parameter(0)
  %reduce_sum.2509 = f32[] parameter(1)
  ROOT %reduce_sum.2510 = f32[] add(%reduce_sum.2508, %reduce_sum.2509)
}

%region_1059.32862 (reduce_sum.32859: f32[], reduce_sum.32860: f32[]) -> f32[] {
  %reduce_sum.32859 = f32[] parameter(0)
  %reduce_sum.32860 = f32[] parameter(1)
  ROOT %reduce_sum.32861 = f32[] add(%reduce_sum.32859, %reduce_sum.32860)
}

%region_1059.32862.clone (reduce_sum.2511: f32[], reduce_sum.2512: f32[]) -> f32[] {
  %reduce_sum.2511 = f32[] parameter(0)
  %reduce_sum.2512 = f32[] parameter(1)
  ROOT %reduce_sum.2513 = f32[] add(%reduce_sum.2511, %reduce_sum.2512)
}

%region_1060.32869 (reduce_sum.32866: f32[], reduce_sum.32867: f32[]) -> f32[] {
  %reduce_sum.32866 = f32[] parameter(0)
  %reduce_sum.32867 = f32[] parameter(1)
  ROOT %reduce_sum.32868 = f32[] add(%reduce_sum.32866, %reduce_sum.32867)
}

%region_1061.32876 (reduce_sum.32873: f32[], reduce_sum.32874: f32[]) -> f32[] {
  %reduce_sum.32873 = f32[] parameter(0)
  %reduce_sum.32874 = f32[] parameter(1)
  ROOT %reduce_sum.32875 = f32[] add(%reduce_sum.32873, %reduce_sum.32874)
}

%region_1062.32883 (reduce_sum.32880: f32[], reduce_sum.32881: f32[]) -> f32[] {
  %reduce_sum.32880 = f32[] parameter(0)
  %reduce_sum.32881 = f32[] parameter(1)
  ROOT %reduce_sum.32882 = f32[] add(%reduce_sum.32880, %reduce_sum.32881)
}

%region_1062.32883.clone (reduce_sum.2514: f32[], reduce_sum.2515: f32[]) -> f32[] {
  %reduce_sum.2514 = f32[] parameter(0)
  %reduce_sum.2515 = f32[] parameter(1)
  ROOT %reduce_sum.2516 = f32[] add(%reduce_sum.2514, %reduce_sum.2515)
}

%region_1063.32890 (reduce_sum.32887: f32[], reduce_sum.32888: f32[]) -> f32[] {
  %reduce_sum.32887 = f32[] parameter(0)
  %reduce_sum.32888 = f32[] parameter(1)
  ROOT %reduce_sum.32889 = f32[] add(%reduce_sum.32887, %reduce_sum.32888)
}

%region_1063.32890.clone (reduce_sum.2517: f32[], reduce_sum.2518: f32[]) -> f32[] {
  %reduce_sum.2517 = f32[] parameter(0)
  %reduce_sum.2518 = f32[] parameter(1)
  ROOT %reduce_sum.2519 = f32[] add(%reduce_sum.2517, %reduce_sum.2518)
}

%region_1064.32897 (reduce_sum.32894: f32[], reduce_sum.32895: f32[]) -> f32[] {
  %reduce_sum.32894 = f32[] parameter(0)
  %reduce_sum.32895 = f32[] parameter(1)
  ROOT %reduce_sum.32896 = f32[] add(%reduce_sum.32894, %reduce_sum.32895)
}

%region_1064.32897.clone (reduce_sum.2520: f32[], reduce_sum.2521: f32[]) -> f32[] {
  %reduce_sum.2520 = f32[] parameter(0)
  %reduce_sum.2521 = f32[] parameter(1)
  ROOT %reduce_sum.2522 = f32[] add(%reduce_sum.2520, %reduce_sum.2521)
}

%region_1065.32904 (reduce_sum.32901: f32[], reduce_sum.32902: f32[]) -> f32[] {
  %reduce_sum.32901 = f32[] parameter(0)
  %reduce_sum.32902 = f32[] parameter(1)
  ROOT %reduce_sum.32903 = f32[] add(%reduce_sum.32901, %reduce_sum.32902)
}

%region_1065.32904.clone (reduce_sum.2523: f32[], reduce_sum.2524: f32[]) -> f32[] {
  %reduce_sum.2523 = f32[] parameter(0)
  %reduce_sum.2524 = f32[] parameter(1)
  ROOT %reduce_sum.2525 = f32[] add(%reduce_sum.2523, %reduce_sum.2524)
}

%region_1066.32911 (reduce_sum.32908: f32[], reduce_sum.32909: f32[]) -> f32[] {
  %reduce_sum.32908 = f32[] parameter(0)
  %reduce_sum.32909 = f32[] parameter(1)
  ROOT %reduce_sum.32910 = f32[] add(%reduce_sum.32908, %reduce_sum.32909)
}

%region_1066.32911.clone (reduce_sum.2526: f32[], reduce_sum.2527: f32[]) -> f32[] {
  %reduce_sum.2526 = f32[] parameter(0)
  %reduce_sum.2527 = f32[] parameter(1)
  ROOT %reduce_sum.2528 = f32[] add(%reduce_sum.2526, %reduce_sum.2527)
}

%region_1067.32918 (reduce_sum.32915: f32[], reduce_sum.32916: f32[]) -> f32[] {
  %reduce_sum.32915 = f32[] parameter(0)
  %reduce_sum.32916 = f32[] parameter(1)
  ROOT %reduce_sum.32917 = f32[] add(%reduce_sum.32915, %reduce_sum.32916)
}

%region_1067.32918.clone (reduce_sum.2529: f32[], reduce_sum.2530: f32[]) -> f32[] {
  %reduce_sum.2529 = f32[] parameter(0)
  %reduce_sum.2530 = f32[] parameter(1)
  ROOT %reduce_sum.2531 = f32[] add(%reduce_sum.2529, %reduce_sum.2530)
}

%region_1068.32925 (reduce_sum.32922: f32[], reduce_sum.32923: f32[]) -> f32[] {
  %reduce_sum.32922 = f32[] parameter(0)
  %reduce_sum.32923 = f32[] parameter(1)
  ROOT %reduce_sum.32924 = f32[] add(%reduce_sum.32922, %reduce_sum.32923)
}

%region_1068.32925.clone (reduce_sum.2532: f32[], reduce_sum.2533: f32[]) -> f32[] {
  %reduce_sum.2532 = f32[] parameter(0)
  %reduce_sum.2533 = f32[] parameter(1)
  ROOT %reduce_sum.2534 = f32[] add(%reduce_sum.2532, %reduce_sum.2533)
}

%region_1069.32932 (reduce_sum.32929: f32[], reduce_sum.32930: f32[]) -> f32[] {
  %reduce_sum.32929 = f32[] parameter(0)
  %reduce_sum.32930 = f32[] parameter(1)
  ROOT %reduce_sum.32931 = f32[] add(%reduce_sum.32929, %reduce_sum.32930)
}

%region_1070.32939 (reduce_sum.32936: f32[], reduce_sum.32937: f32[]) -> f32[] {
  %reduce_sum.32936 = f32[] parameter(0)
  %reduce_sum.32937 = f32[] parameter(1)
  ROOT %reduce_sum.32938 = f32[] add(%reduce_sum.32936, %reduce_sum.32937)
}

%region_1071.32946 (reduce_sum.32943: f32[], reduce_sum.32944: f32[]) -> f32[] {
  %reduce_sum.32943 = f32[] parameter(0)
  %reduce_sum.32944 = f32[] parameter(1)
  ROOT %reduce_sum.32945 = f32[] add(%reduce_sum.32943, %reduce_sum.32944)
}

%region_1071.32946.clone (reduce_sum.2535: f32[], reduce_sum.2536: f32[]) -> f32[] {
  %reduce_sum.2535 = f32[] parameter(0)
  %reduce_sum.2536 = f32[] parameter(1)
  ROOT %reduce_sum.2537 = f32[] add(%reduce_sum.2535, %reduce_sum.2536)
}

%region_1072.32953 (reduce_sum.32950: f32[], reduce_sum.32951: f32[]) -> f32[] {
  %reduce_sum.32950 = f32[] parameter(0)
  %reduce_sum.32951 = f32[] parameter(1)
  ROOT %reduce_sum.32952 = f32[] add(%reduce_sum.32950, %reduce_sum.32951)
}

%region_1072.32953.clone (reduce_sum.2538: f32[], reduce_sum.2539: f32[]) -> f32[] {
  %reduce_sum.2538 = f32[] parameter(0)
  %reduce_sum.2539 = f32[] parameter(1)
  ROOT %reduce_sum.2540 = f32[] add(%reduce_sum.2538, %reduce_sum.2539)
}

%region_1073.32960 (reduce_sum.32957: f32[], reduce_sum.32958: f32[]) -> f32[] {
  %reduce_sum.32957 = f32[] parameter(0)
  %reduce_sum.32958 = f32[] parameter(1)
  ROOT %reduce_sum.32959 = f32[] add(%reduce_sum.32957, %reduce_sum.32958)
}

%region_1073.32960.clone (reduce_sum.2541: f32[], reduce_sum.2542: f32[]) -> f32[] {
  %reduce_sum.2541 = f32[] parameter(0)
  %reduce_sum.2542 = f32[] parameter(1)
  ROOT %reduce_sum.2543 = f32[] add(%reduce_sum.2541, %reduce_sum.2542)
}

%region_1074.32967 (reduce_sum.32964: f32[], reduce_sum.32965: f32[]) -> f32[] {
  %reduce_sum.32964 = f32[] parameter(0)
  %reduce_sum.32965 = f32[] parameter(1)
  ROOT %reduce_sum.32966 = f32[] add(%reduce_sum.32964, %reduce_sum.32965)
}

%region_1074.32967.clone (reduce_sum.2544: f32[], reduce_sum.2545: f32[]) -> f32[] {
  %reduce_sum.2544 = f32[] parameter(0)
  %reduce_sum.2545 = f32[] parameter(1)
  ROOT %reduce_sum.2546 = f32[] add(%reduce_sum.2544, %reduce_sum.2545)
}

%region_1075.32974 (reduce_sum.32971: f32[], reduce_sum.32972: f32[]) -> f32[] {
  %reduce_sum.32971 = f32[] parameter(0)
  %reduce_sum.32972 = f32[] parameter(1)
  ROOT %reduce_sum.32973 = f32[] add(%reduce_sum.32971, %reduce_sum.32972)
}

%region_1075.32974.clone (reduce_sum.2547: f32[], reduce_sum.2548: f32[]) -> f32[] {
  %reduce_sum.2547 = f32[] parameter(0)
  %reduce_sum.2548 = f32[] parameter(1)
  ROOT %reduce_sum.2549 = f32[] add(%reduce_sum.2547, %reduce_sum.2548)
}

%region_1076.32981 (reduce_sum.32978: f32[], reduce_sum.32979: f32[]) -> f32[] {
  %reduce_sum.32978 = f32[] parameter(0)
  %reduce_sum.32979 = f32[] parameter(1)
  ROOT %reduce_sum.32980 = f32[] add(%reduce_sum.32978, %reduce_sum.32979)
}

%region_1076.32981.clone (reduce_sum.2550: f32[], reduce_sum.2551: f32[]) -> f32[] {
  %reduce_sum.2550 = f32[] parameter(0)
  %reduce_sum.2551 = f32[] parameter(1)
  ROOT %reduce_sum.2552 = f32[] add(%reduce_sum.2550, %reduce_sum.2551)
}

%region_1077.32988 (reduce_sum.32985: f32[], reduce_sum.32986: f32[]) -> f32[] {
  %reduce_sum.32985 = f32[] parameter(0)
  %reduce_sum.32986 = f32[] parameter(1)
  ROOT %reduce_sum.32987 = f32[] add(%reduce_sum.32985, %reduce_sum.32986)
}

%region_1077.32988.clone (reduce_sum.2553: f32[], reduce_sum.2554: f32[]) -> f32[] {
  %reduce_sum.2553 = f32[] parameter(0)
  %reduce_sum.2554 = f32[] parameter(1)
  ROOT %reduce_sum.2555 = f32[] add(%reduce_sum.2553, %reduce_sum.2554)
}

%region_1078.32995 (reduce_sum.32992: f32[], reduce_sum.32993: f32[]) -> f32[] {
  %reduce_sum.32992 = f32[] parameter(0)
  %reduce_sum.32993 = f32[] parameter(1)
  ROOT %reduce_sum.32994 = f32[] add(%reduce_sum.32992, %reduce_sum.32993)
}

%region_1079.33002 (reduce_sum.32999: f32[], reduce_sum.33000: f32[]) -> f32[] {
  %reduce_sum.32999 = f32[] parameter(0)
  %reduce_sum.33000 = f32[] parameter(1)
  ROOT %reduce_sum.33001 = f32[] add(%reduce_sum.32999, %reduce_sum.33000)
}

%region_1080.33009 (reduce_sum.33006: f32[], reduce_sum.33007: f32[]) -> f32[] {
  %reduce_sum.33006 = f32[] parameter(0)
  %reduce_sum.33007 = f32[] parameter(1)
  ROOT %reduce_sum.33008 = f32[] add(%reduce_sum.33006, %reduce_sum.33007)
}

%region_1080.33009.clone (reduce_sum.2556: f32[], reduce_sum.2557: f32[]) -> f32[] {
  %reduce_sum.2556 = f32[] parameter(0)
  %reduce_sum.2557 = f32[] parameter(1)
  ROOT %reduce_sum.2558 = f32[] add(%reduce_sum.2556, %reduce_sum.2557)
}

%region_1081.33016 (reduce_sum.33013: f32[], reduce_sum.33014: f32[]) -> f32[] {
  %reduce_sum.33013 = f32[] parameter(0)
  %reduce_sum.33014 = f32[] parameter(1)
  ROOT %reduce_sum.33015 = f32[] add(%reduce_sum.33013, %reduce_sum.33014)
}

%region_1081.33016.clone (reduce_sum.2559: f32[], reduce_sum.2560: f32[]) -> f32[] {
  %reduce_sum.2559 = f32[] parameter(0)
  %reduce_sum.2560 = f32[] parameter(1)
  ROOT %reduce_sum.2561 = f32[] add(%reduce_sum.2559, %reduce_sum.2560)
}

%region_1082.33023 (reduce_sum.33020: f32[], reduce_sum.33021: f32[]) -> f32[] {
  %reduce_sum.33020 = f32[] parameter(0)
  %reduce_sum.33021 = f32[] parameter(1)
  ROOT %reduce_sum.33022 = f32[] add(%reduce_sum.33020, %reduce_sum.33021)
}

%region_1082.33023.clone (reduce_sum.2562: f32[], reduce_sum.2563: f32[]) -> f32[] {
  %reduce_sum.2562 = f32[] parameter(0)
  %reduce_sum.2563 = f32[] parameter(1)
  ROOT %reduce_sum.2564 = f32[] add(%reduce_sum.2562, %reduce_sum.2563)
}

%region_1083.33030 (reduce_sum.33027: f32[], reduce_sum.33028: f32[]) -> f32[] {
  %reduce_sum.33027 = f32[] parameter(0)
  %reduce_sum.33028 = f32[] parameter(1)
  ROOT %reduce_sum.33029 = f32[] add(%reduce_sum.33027, %reduce_sum.33028)
}

%region_1083.33030.clone (reduce_sum.2565: f32[], reduce_sum.2566: f32[]) -> f32[] {
  %reduce_sum.2565 = f32[] parameter(0)
  %reduce_sum.2566 = f32[] parameter(1)
  ROOT %reduce_sum.2567 = f32[] add(%reduce_sum.2565, %reduce_sum.2566)
}

%region_1084.33037 (reduce_sum.33034: f32[], reduce_sum.33035: f32[]) -> f32[] {
  %reduce_sum.33034 = f32[] parameter(0)
  %reduce_sum.33035 = f32[] parameter(1)
  ROOT %reduce_sum.33036 = f32[] add(%reduce_sum.33034, %reduce_sum.33035)
}

%region_1084.33037.clone (reduce_sum.2568: f32[], reduce_sum.2569: f32[]) -> f32[] {
  %reduce_sum.2568 = f32[] parameter(0)
  %reduce_sum.2569 = f32[] parameter(1)
  ROOT %reduce_sum.2570 = f32[] add(%reduce_sum.2568, %reduce_sum.2569)
}

%region_1085.33044 (reduce_sum.33041: f32[], reduce_sum.33042: f32[]) -> f32[] {
  %reduce_sum.33041 = f32[] parameter(0)
  %reduce_sum.33042 = f32[] parameter(1)
  ROOT %reduce_sum.33043 = f32[] add(%reduce_sum.33041, %reduce_sum.33042)
}

%region_1085.33044.clone (reduce_sum.2571: f32[], reduce_sum.2572: f32[]) -> f32[] {
  %reduce_sum.2571 = f32[] parameter(0)
  %reduce_sum.2572 = f32[] parameter(1)
  ROOT %reduce_sum.2573 = f32[] add(%reduce_sum.2571, %reduce_sum.2572)
}

%region_1086.33051 (reduce_sum.33048: f32[], reduce_sum.33049: f32[]) -> f32[] {
  %reduce_sum.33048 = f32[] parameter(0)
  %reduce_sum.33049 = f32[] parameter(1)
  ROOT %reduce_sum.33050 = f32[] add(%reduce_sum.33048, %reduce_sum.33049)
}

%region_1086.33051.clone (reduce_sum.2574: f32[], reduce_sum.2575: f32[]) -> f32[] {
  %reduce_sum.2574 = f32[] parameter(0)
  %reduce_sum.2575 = f32[] parameter(1)
  ROOT %reduce_sum.2576 = f32[] add(%reduce_sum.2574, %reduce_sum.2575)
}

%region_1087.33058 (reduce_sum.33055: f32[], reduce_sum.33056: f32[]) -> f32[] {
  %reduce_sum.33055 = f32[] parameter(0)
  %reduce_sum.33056 = f32[] parameter(1)
  ROOT %reduce_sum.33057 = f32[] add(%reduce_sum.33055, %reduce_sum.33056)
}

%region_1088.33065 (reduce_sum.33062: f32[], reduce_sum.33063: f32[]) -> f32[] {
  %reduce_sum.33062 = f32[] parameter(0)
  %reduce_sum.33063 = f32[] parameter(1)
  ROOT %reduce_sum.33064 = f32[] add(%reduce_sum.33062, %reduce_sum.33063)
}

%region_1089.33072 (reduce_sum.33069: f32[], reduce_sum.33070: f32[]) -> f32[] {
  %reduce_sum.33069 = f32[] parameter(0)
  %reduce_sum.33070 = f32[] parameter(1)
  ROOT %reduce_sum.33071 = f32[] add(%reduce_sum.33069, %reduce_sum.33070)
}

%region_1089.33072.clone (reduce_sum.2577: f32[], reduce_sum.2578: f32[]) -> f32[] {
  %reduce_sum.2577 = f32[] parameter(0)
  %reduce_sum.2578 = f32[] parameter(1)
  ROOT %reduce_sum.2579 = f32[] add(%reduce_sum.2577, %reduce_sum.2578)
}

%region_1090.33079 (reduce_sum.33076: f32[], reduce_sum.33077: f32[]) -> f32[] {
  %reduce_sum.33076 = f32[] parameter(0)
  %reduce_sum.33077 = f32[] parameter(1)
  ROOT %reduce_sum.33078 = f32[] add(%reduce_sum.33076, %reduce_sum.33077)
}

%region_1090.33079.clone (reduce_sum.2580: f32[], reduce_sum.2581: f32[]) -> f32[] {
  %reduce_sum.2580 = f32[] parameter(0)
  %reduce_sum.2581 = f32[] parameter(1)
  ROOT %reduce_sum.2582 = f32[] add(%reduce_sum.2580, %reduce_sum.2581)
}

%region_1091.33086 (reduce_sum.33083: f32[], reduce_sum.33084: f32[]) -> f32[] {
  %reduce_sum.33083 = f32[] parameter(0)
  %reduce_sum.33084 = f32[] parameter(1)
  ROOT %reduce_sum.33085 = f32[] add(%reduce_sum.33083, %reduce_sum.33084)
}

%region_1091.33086.clone (reduce_sum.2583: f32[], reduce_sum.2584: f32[]) -> f32[] {
  %reduce_sum.2583 = f32[] parameter(0)
  %reduce_sum.2584 = f32[] parameter(1)
  ROOT %reduce_sum.2585 = f32[] add(%reduce_sum.2583, %reduce_sum.2584)
}

%region_1092.33093 (reduce_sum.33090: f32[], reduce_sum.33091: f32[]) -> f32[] {
  %reduce_sum.33090 = f32[] parameter(0)
  %reduce_sum.33091 = f32[] parameter(1)
  ROOT %reduce_sum.33092 = f32[] add(%reduce_sum.33090, %reduce_sum.33091)
}

%region_1092.33093.clone (reduce_sum.2586: f32[], reduce_sum.2587: f32[]) -> f32[] {
  %reduce_sum.2586 = f32[] parameter(0)
  %reduce_sum.2587 = f32[] parameter(1)
  ROOT %reduce_sum.2588 = f32[] add(%reduce_sum.2586, %reduce_sum.2587)
}

%region_1093.33100 (reduce_sum.33097: f32[], reduce_sum.33098: f32[]) -> f32[] {
  %reduce_sum.33097 = f32[] parameter(0)
  %reduce_sum.33098 = f32[] parameter(1)
  ROOT %reduce_sum.33099 = f32[] add(%reduce_sum.33097, %reduce_sum.33098)
}

%region_1093.33100.clone (reduce_sum.2589: f32[], reduce_sum.2590: f32[]) -> f32[] {
  %reduce_sum.2589 = f32[] parameter(0)
  %reduce_sum.2590 = f32[] parameter(1)
  ROOT %reduce_sum.2591 = f32[] add(%reduce_sum.2589, %reduce_sum.2590)
}

%region_1094.33107 (reduce_sum.33104: f32[], reduce_sum.33105: f32[]) -> f32[] {
  %reduce_sum.33104 = f32[] parameter(0)
  %reduce_sum.33105 = f32[] parameter(1)
  ROOT %reduce_sum.33106 = f32[] add(%reduce_sum.33104, %reduce_sum.33105)
}

%region_1094.33107.clone (reduce_sum.2592: f32[], reduce_sum.2593: f32[]) -> f32[] {
  %reduce_sum.2592 = f32[] parameter(0)
  %reduce_sum.2593 = f32[] parameter(1)
  ROOT %reduce_sum.2594 = f32[] add(%reduce_sum.2592, %reduce_sum.2593)
}

%region_1095.33114 (reduce_sum.33111: f32[], reduce_sum.33112: f32[]) -> f32[] {
  %reduce_sum.33111 = f32[] parameter(0)
  %reduce_sum.33112 = f32[] parameter(1)
  ROOT %reduce_sum.33113 = f32[] add(%reduce_sum.33111, %reduce_sum.33112)
}

%region_1095.33114.clone (reduce_sum.2595: f32[], reduce_sum.2596: f32[]) -> f32[] {
  %reduce_sum.2595 = f32[] parameter(0)
  %reduce_sum.2596 = f32[] parameter(1)
  ROOT %reduce_sum.2597 = f32[] add(%reduce_sum.2595, %reduce_sum.2596)
}

%region_1096.33121 (reduce_sum.33118: f32[], reduce_sum.33119: f32[]) -> f32[] {
  %reduce_sum.33118 = f32[] parameter(0)
  %reduce_sum.33119 = f32[] parameter(1)
  ROOT %reduce_sum.33120 = f32[] add(%reduce_sum.33118, %reduce_sum.33119)
}

%region_1097.33128 (reduce_sum.33125: f32[], reduce_sum.33126: f32[]) -> f32[] {
  %reduce_sum.33125 = f32[] parameter(0)
  %reduce_sum.33126 = f32[] parameter(1)
  ROOT %reduce_sum.33127 = f32[] add(%reduce_sum.33125, %reduce_sum.33126)
}

%region_1098.33135 (reduce_sum.33132: f32[], reduce_sum.33133: f32[]) -> f32[] {
  %reduce_sum.33132 = f32[] parameter(0)
  %reduce_sum.33133 = f32[] parameter(1)
  ROOT %reduce_sum.33134 = f32[] add(%reduce_sum.33132, %reduce_sum.33133)
}

%region_1098.33135.clone (reduce_sum.2598: f32[], reduce_sum.2599: f32[]) -> f32[] {
  %reduce_sum.2598 = f32[] parameter(0)
  %reduce_sum.2599 = f32[] parameter(1)
  ROOT %reduce_sum.2600 = f32[] add(%reduce_sum.2598, %reduce_sum.2599)
}

%region_1099.33142 (reduce_sum.33139: f32[], reduce_sum.33140: f32[]) -> f32[] {
  %reduce_sum.33139 = f32[] parameter(0)
  %reduce_sum.33140 = f32[] parameter(1)
  ROOT %reduce_sum.33141 = f32[] add(%reduce_sum.33139, %reduce_sum.33140)
}

%region_1099.33142.clone (reduce_sum.2601: f32[], reduce_sum.2602: f32[]) -> f32[] {
  %reduce_sum.2601 = f32[] parameter(0)
  %reduce_sum.2602 = f32[] parameter(1)
  ROOT %reduce_sum.2603 = f32[] add(%reduce_sum.2601, %reduce_sum.2602)
}

%region_1100.33149 (reduce_sum.33146: f32[], reduce_sum.33147: f32[]) -> f32[] {
  %reduce_sum.33146 = f32[] parameter(0)
  %reduce_sum.33147 = f32[] parameter(1)
  ROOT %reduce_sum.33148 = f32[] add(%reduce_sum.33146, %reduce_sum.33147)
}

%region_1100.33149.clone (reduce_sum.2604: f32[], reduce_sum.2605: f32[]) -> f32[] {
  %reduce_sum.2604 = f32[] parameter(0)
  %reduce_sum.2605 = f32[] parameter(1)
  ROOT %reduce_sum.2606 = f32[] add(%reduce_sum.2604, %reduce_sum.2605)
}

%region_1101.33156 (reduce_sum.33153: f32[], reduce_sum.33154: f32[]) -> f32[] {
  %reduce_sum.33153 = f32[] parameter(0)
  %reduce_sum.33154 = f32[] parameter(1)
  ROOT %reduce_sum.33155 = f32[] add(%reduce_sum.33153, %reduce_sum.33154)
}

%region_1101.33156.clone (reduce_sum.2607: f32[], reduce_sum.2608: f32[]) -> f32[] {
  %reduce_sum.2607 = f32[] parameter(0)
  %reduce_sum.2608 = f32[] parameter(1)
  ROOT %reduce_sum.2609 = f32[] add(%reduce_sum.2607, %reduce_sum.2608)
}

%region_1102.33163 (reduce_sum.33160: f32[], reduce_sum.33161: f32[]) -> f32[] {
  %reduce_sum.33160 = f32[] parameter(0)
  %reduce_sum.33161 = f32[] parameter(1)
  ROOT %reduce_sum.33162 = f32[] add(%reduce_sum.33160, %reduce_sum.33161)
}

%region_1102.33163.clone (reduce_sum.2610: f32[], reduce_sum.2611: f32[]) -> f32[] {
  %reduce_sum.2610 = f32[] parameter(0)
  %reduce_sum.2611 = f32[] parameter(1)
  ROOT %reduce_sum.2612 = f32[] add(%reduce_sum.2610, %reduce_sum.2611)
}

%region_1103.33170 (reduce_sum.33167: f32[], reduce_sum.33168: f32[]) -> f32[] {
  %reduce_sum.33167 = f32[] parameter(0)
  %reduce_sum.33168 = f32[] parameter(1)
  ROOT %reduce_sum.33169 = f32[] add(%reduce_sum.33167, %reduce_sum.33168)
}

%region_1103.33170.clone (reduce_sum.2613: f32[], reduce_sum.2614: f32[]) -> f32[] {
  %reduce_sum.2613 = f32[] parameter(0)
  %reduce_sum.2614 = f32[] parameter(1)
  ROOT %reduce_sum.2615 = f32[] add(%reduce_sum.2613, %reduce_sum.2614)
}

%region_1104.33177 (reduce_sum.33174: f32[], reduce_sum.33175: f32[]) -> f32[] {
  %reduce_sum.33174 = f32[] parameter(0)
  %reduce_sum.33175 = f32[] parameter(1)
  ROOT %reduce_sum.33176 = f32[] add(%reduce_sum.33174, %reduce_sum.33175)
}

%region_1104.33177.clone (reduce_sum.2616: f32[], reduce_sum.2617: f32[]) -> f32[] {
  %reduce_sum.2616 = f32[] parameter(0)
  %reduce_sum.2617 = f32[] parameter(1)
  ROOT %reduce_sum.2618 = f32[] add(%reduce_sum.2616, %reduce_sum.2617)
}

%region_1105.33184 (reduce_sum.33181: f32[], reduce_sum.33182: f32[]) -> f32[] {
  %reduce_sum.33181 = f32[] parameter(0)
  %reduce_sum.33182 = f32[] parameter(1)
  ROOT %reduce_sum.33183 = f32[] add(%reduce_sum.33181, %reduce_sum.33182)
}

%region_1106.33191 (reduce_sum.33188: f32[], reduce_sum.33189: f32[]) -> f32[] {
  %reduce_sum.33188 = f32[] parameter(0)
  %reduce_sum.33189 = f32[] parameter(1)
  ROOT %reduce_sum.33190 = f32[] add(%reduce_sum.33188, %reduce_sum.33189)
}

%region_1107.33198 (reduce_sum.33195: f32[], reduce_sum.33196: f32[]) -> f32[] {
  %reduce_sum.33195 = f32[] parameter(0)
  %reduce_sum.33196 = f32[] parameter(1)
  ROOT %reduce_sum.33197 = f32[] add(%reduce_sum.33195, %reduce_sum.33196)
}

%region_1107.33198.clone (reduce_sum.2619: f32[], reduce_sum.2620: f32[]) -> f32[] {
  %reduce_sum.2619 = f32[] parameter(0)
  %reduce_sum.2620 = f32[] parameter(1)
  ROOT %reduce_sum.2621 = f32[] add(%reduce_sum.2619, %reduce_sum.2620)
}

%region_1108.33205 (reduce_sum.33202: f32[], reduce_sum.33203: f32[]) -> f32[] {
  %reduce_sum.33202 = f32[] parameter(0)
  %reduce_sum.33203 = f32[] parameter(1)
  ROOT %reduce_sum.33204 = f32[] add(%reduce_sum.33202, %reduce_sum.33203)
}

%region_1108.33205.clone (reduce_sum.2622: f32[], reduce_sum.2623: f32[]) -> f32[] {
  %reduce_sum.2622 = f32[] parameter(0)
  %reduce_sum.2623 = f32[] parameter(1)
  ROOT %reduce_sum.2624 = f32[] add(%reduce_sum.2622, %reduce_sum.2623)
}

%region_1109.33212 (reduce_sum.33209: f32[], reduce_sum.33210: f32[]) -> f32[] {
  %reduce_sum.33209 = f32[] parameter(0)
  %reduce_sum.33210 = f32[] parameter(1)
  ROOT %reduce_sum.33211 = f32[] add(%reduce_sum.33209, %reduce_sum.33210)
}

%region_1109.33212.clone (reduce_sum.2625: f32[], reduce_sum.2626: f32[]) -> f32[] {
  %reduce_sum.2625 = f32[] parameter(0)
  %reduce_sum.2626 = f32[] parameter(1)
  ROOT %reduce_sum.2627 = f32[] add(%reduce_sum.2625, %reduce_sum.2626)
}

%region_1110.33219 (reduce_sum.33216: f32[], reduce_sum.33217: f32[]) -> f32[] {
  %reduce_sum.33216 = f32[] parameter(0)
  %reduce_sum.33217 = f32[] parameter(1)
  ROOT %reduce_sum.33218 = f32[] add(%reduce_sum.33216, %reduce_sum.33217)
}

%region_1110.33219.clone (reduce_sum.2628: f32[], reduce_sum.2629: f32[]) -> f32[] {
  %reduce_sum.2628 = f32[] parameter(0)
  %reduce_sum.2629 = f32[] parameter(1)
  ROOT %reduce_sum.2630 = f32[] add(%reduce_sum.2628, %reduce_sum.2629)
}

%region_1111.33226 (reduce_sum.33223: f32[], reduce_sum.33224: f32[]) -> f32[] {
  %reduce_sum.33223 = f32[] parameter(0)
  %reduce_sum.33224 = f32[] parameter(1)
  ROOT %reduce_sum.33225 = f32[] add(%reduce_sum.33223, %reduce_sum.33224)
}

%region_1111.33226.clone (reduce_sum.2631: f32[], reduce_sum.2632: f32[]) -> f32[] {
  %reduce_sum.2631 = f32[] parameter(0)
  %reduce_sum.2632 = f32[] parameter(1)
  ROOT %reduce_sum.2633 = f32[] add(%reduce_sum.2631, %reduce_sum.2632)
}

%region_1112.33233 (reduce_sum.33230: f32[], reduce_sum.33231: f32[]) -> f32[] {
  %reduce_sum.33230 = f32[] parameter(0)
  %reduce_sum.33231 = f32[] parameter(1)
  ROOT %reduce_sum.33232 = f32[] add(%reduce_sum.33230, %reduce_sum.33231)
}

%region_1112.33233.clone (reduce_sum.2634: f32[], reduce_sum.2635: f32[]) -> f32[] {
  %reduce_sum.2634 = f32[] parameter(0)
  %reduce_sum.2635 = f32[] parameter(1)
  ROOT %reduce_sum.2636 = f32[] add(%reduce_sum.2634, %reduce_sum.2635)
}

%region_1113.33240 (reduce_sum.33237: f32[], reduce_sum.33238: f32[]) -> f32[] {
  %reduce_sum.33237 = f32[] parameter(0)
  %reduce_sum.33238 = f32[] parameter(1)
  ROOT %reduce_sum.33239 = f32[] add(%reduce_sum.33237, %reduce_sum.33238)
}

%region_1113.33240.clone (reduce_sum.2637: f32[], reduce_sum.2638: f32[]) -> f32[] {
  %reduce_sum.2637 = f32[] parameter(0)
  %reduce_sum.2638 = f32[] parameter(1)
  ROOT %reduce_sum.2639 = f32[] add(%reduce_sum.2637, %reduce_sum.2638)
}

%region_1114.33247 (reduce_sum.33244: f32[], reduce_sum.33245: f32[]) -> f32[] {
  %reduce_sum.33244 = f32[] parameter(0)
  %reduce_sum.33245 = f32[] parameter(1)
  ROOT %reduce_sum.33246 = f32[] add(%reduce_sum.33244, %reduce_sum.33245)
}

%region_1115.33254 (reduce_sum.33251: f32[], reduce_sum.33252: f32[]) -> f32[] {
  %reduce_sum.33251 = f32[] parameter(0)
  %reduce_sum.33252 = f32[] parameter(1)
  ROOT %reduce_sum.33253 = f32[] add(%reduce_sum.33251, %reduce_sum.33252)
}

%region_1116.33261 (reduce_sum.33258: f32[], reduce_sum.33259: f32[]) -> f32[] {
  %reduce_sum.33258 = f32[] parameter(0)
  %reduce_sum.33259 = f32[] parameter(1)
  ROOT %reduce_sum.33260 = f32[] add(%reduce_sum.33258, %reduce_sum.33259)
}

%region_1116.33261.clone (reduce_sum.2640: f32[], reduce_sum.2641: f32[]) -> f32[] {
  %reduce_sum.2640 = f32[] parameter(0)
  %reduce_sum.2641 = f32[] parameter(1)
  ROOT %reduce_sum.2642 = f32[] add(%reduce_sum.2640, %reduce_sum.2641)
}

%region_1117.33268 (reduce_sum.33265: f32[], reduce_sum.33266: f32[]) -> f32[] {
  %reduce_sum.33265 = f32[] parameter(0)
  %reduce_sum.33266 = f32[] parameter(1)
  ROOT %reduce_sum.33267 = f32[] add(%reduce_sum.33265, %reduce_sum.33266)
}

%region_1117.33268.clone (reduce_sum.2643: f32[], reduce_sum.2644: f32[]) -> f32[] {
  %reduce_sum.2643 = f32[] parameter(0)
  %reduce_sum.2644 = f32[] parameter(1)
  ROOT %reduce_sum.2645 = f32[] add(%reduce_sum.2643, %reduce_sum.2644)
}

%region_1118.33275 (reduce_sum.33272: f32[], reduce_sum.33273: f32[]) -> f32[] {
  %reduce_sum.33272 = f32[] parameter(0)
  %reduce_sum.33273 = f32[] parameter(1)
  ROOT %reduce_sum.33274 = f32[] add(%reduce_sum.33272, %reduce_sum.33273)
}

%region_1118.33275.clone (reduce_sum.2646: f32[], reduce_sum.2647: f32[]) -> f32[] {
  %reduce_sum.2646 = f32[] parameter(0)
  %reduce_sum.2647 = f32[] parameter(1)
  ROOT %reduce_sum.2648 = f32[] add(%reduce_sum.2646, %reduce_sum.2647)
}

%region_1119.33282 (reduce_sum.33279: f32[], reduce_sum.33280: f32[]) -> f32[] {
  %reduce_sum.33279 = f32[] parameter(0)
  %reduce_sum.33280 = f32[] parameter(1)
  ROOT %reduce_sum.33281 = f32[] add(%reduce_sum.33279, %reduce_sum.33280)
}

%region_1119.33282.clone (reduce_sum.2649: f32[], reduce_sum.2650: f32[]) -> f32[] {
  %reduce_sum.2649 = f32[] parameter(0)
  %reduce_sum.2650 = f32[] parameter(1)
  ROOT %reduce_sum.2651 = f32[] add(%reduce_sum.2649, %reduce_sum.2650)
}

%region_1120.33289 (reduce_sum.33286: f32[], reduce_sum.33287: f32[]) -> f32[] {
  %reduce_sum.33286 = f32[] parameter(0)
  %reduce_sum.33287 = f32[] parameter(1)
  ROOT %reduce_sum.33288 = f32[] add(%reduce_sum.33286, %reduce_sum.33287)
}

%region_1120.33289.clone (reduce_sum.2652: f32[], reduce_sum.2653: f32[]) -> f32[] {
  %reduce_sum.2652 = f32[] parameter(0)
  %reduce_sum.2653 = f32[] parameter(1)
  ROOT %reduce_sum.2654 = f32[] add(%reduce_sum.2652, %reduce_sum.2653)
}

%region_1121.33296 (reduce_sum.33293: f32[], reduce_sum.33294: f32[]) -> f32[] {
  %reduce_sum.33293 = f32[] parameter(0)
  %reduce_sum.33294 = f32[] parameter(1)
  ROOT %reduce_sum.33295 = f32[] add(%reduce_sum.33293, %reduce_sum.33294)
}

%region_1121.33296.clone (reduce_sum.2655: f32[], reduce_sum.2656: f32[]) -> f32[] {
  %reduce_sum.2655 = f32[] parameter(0)
  %reduce_sum.2656 = f32[] parameter(1)
  ROOT %reduce_sum.2657 = f32[] add(%reduce_sum.2655, %reduce_sum.2656)
}

%region_1122.33303 (reduce_sum.33300: f32[], reduce_sum.33301: f32[]) -> f32[] {
  %reduce_sum.33300 = f32[] parameter(0)
  %reduce_sum.33301 = f32[] parameter(1)
  ROOT %reduce_sum.33302 = f32[] add(%reduce_sum.33300, %reduce_sum.33301)
}

%region_1122.33303.clone (reduce_sum.2658: f32[], reduce_sum.2659: f32[]) -> f32[] {
  %reduce_sum.2658 = f32[] parameter(0)
  %reduce_sum.2659 = f32[] parameter(1)
  ROOT %reduce_sum.2660 = f32[] add(%reduce_sum.2658, %reduce_sum.2659)
}

%region_1123.33310 (reduce_sum.33307: f32[], reduce_sum.33308: f32[]) -> f32[] {
  %reduce_sum.33307 = f32[] parameter(0)
  %reduce_sum.33308 = f32[] parameter(1)
  ROOT %reduce_sum.33309 = f32[] add(%reduce_sum.33307, %reduce_sum.33308)
}

%region_1124.33317 (reduce_sum.33314: f32[], reduce_sum.33315: f32[]) -> f32[] {
  %reduce_sum.33314 = f32[] parameter(0)
  %reduce_sum.33315 = f32[] parameter(1)
  ROOT %reduce_sum.33316 = f32[] add(%reduce_sum.33314, %reduce_sum.33315)
}

%region_1125.33324 (reduce_sum.33321: f32[], reduce_sum.33322: f32[]) -> f32[] {
  %reduce_sum.33321 = f32[] parameter(0)
  %reduce_sum.33322 = f32[] parameter(1)
  ROOT %reduce_sum.33323 = f32[] add(%reduce_sum.33321, %reduce_sum.33322)
}

%region_1125.33324.clone (reduce_sum.2661: f32[], reduce_sum.2662: f32[]) -> f32[] {
  %reduce_sum.2661 = f32[] parameter(0)
  %reduce_sum.2662 = f32[] parameter(1)
  ROOT %reduce_sum.2663 = f32[] add(%reduce_sum.2661, %reduce_sum.2662)
}

%region_1126.33331 (reduce_sum.33328: f32[], reduce_sum.33329: f32[]) -> f32[] {
  %reduce_sum.33328 = f32[] parameter(0)
  %reduce_sum.33329 = f32[] parameter(1)
  ROOT %reduce_sum.33330 = f32[] add(%reduce_sum.33328, %reduce_sum.33329)
}

%region_1126.33331.clone (reduce_sum.2664: f32[], reduce_sum.2665: f32[]) -> f32[] {
  %reduce_sum.2664 = f32[] parameter(0)
  %reduce_sum.2665 = f32[] parameter(1)
  ROOT %reduce_sum.2666 = f32[] add(%reduce_sum.2664, %reduce_sum.2665)
}

%region_1127.33338 (reduce_sum.33335: f32[], reduce_sum.33336: f32[]) -> f32[] {
  %reduce_sum.33335 = f32[] parameter(0)
  %reduce_sum.33336 = f32[] parameter(1)
  ROOT %reduce_sum.33337 = f32[] add(%reduce_sum.33335, %reduce_sum.33336)
}

%region_1127.33338.clone (reduce_sum.2667: f32[], reduce_sum.2668: f32[]) -> f32[] {
  %reduce_sum.2667 = f32[] parameter(0)
  %reduce_sum.2668 = f32[] parameter(1)
  ROOT %reduce_sum.2669 = f32[] add(%reduce_sum.2667, %reduce_sum.2668)
}

%region_1128.33345 (reduce_sum.33342: f32[], reduce_sum.33343: f32[]) -> f32[] {
  %reduce_sum.33342 = f32[] parameter(0)
  %reduce_sum.33343 = f32[] parameter(1)
  ROOT %reduce_sum.33344 = f32[] add(%reduce_sum.33342, %reduce_sum.33343)
}

%region_1128.33345.clone (reduce_sum.2670: f32[], reduce_sum.2671: f32[]) -> f32[] {
  %reduce_sum.2670 = f32[] parameter(0)
  %reduce_sum.2671 = f32[] parameter(1)
  ROOT %reduce_sum.2672 = f32[] add(%reduce_sum.2670, %reduce_sum.2671)
}

%region_1129.33352 (reduce_sum.33349: f32[], reduce_sum.33350: f32[]) -> f32[] {
  %reduce_sum.33349 = f32[] parameter(0)
  %reduce_sum.33350 = f32[] parameter(1)
  ROOT %reduce_sum.33351 = f32[] add(%reduce_sum.33349, %reduce_sum.33350)
}

%region_1129.33352.clone (reduce_sum.2673: f32[], reduce_sum.2674: f32[]) -> f32[] {
  %reduce_sum.2673 = f32[] parameter(0)
  %reduce_sum.2674 = f32[] parameter(1)
  ROOT %reduce_sum.2675 = f32[] add(%reduce_sum.2673, %reduce_sum.2674)
}

%region_1130.33359 (reduce_sum.33356: f32[], reduce_sum.33357: f32[]) -> f32[] {
  %reduce_sum.33356 = f32[] parameter(0)
  %reduce_sum.33357 = f32[] parameter(1)
  ROOT %reduce_sum.33358 = f32[] add(%reduce_sum.33356, %reduce_sum.33357)
}

%region_1130.33359.clone (reduce_sum.2676: f32[], reduce_sum.2677: f32[]) -> f32[] {
  %reduce_sum.2676 = f32[] parameter(0)
  %reduce_sum.2677 = f32[] parameter(1)
  ROOT %reduce_sum.2678 = f32[] add(%reduce_sum.2676, %reduce_sum.2677)
}

%region_1131.33366 (reduce_sum.33363: f32[], reduce_sum.33364: f32[]) -> f32[] {
  %reduce_sum.33363 = f32[] parameter(0)
  %reduce_sum.33364 = f32[] parameter(1)
  ROOT %reduce_sum.33365 = f32[] add(%reduce_sum.33363, %reduce_sum.33364)
}

%region_1131.33366.clone (reduce_sum.2679: f32[], reduce_sum.2680: f32[]) -> f32[] {
  %reduce_sum.2679 = f32[] parameter(0)
  %reduce_sum.2680 = f32[] parameter(1)
  ROOT %reduce_sum.2681 = f32[] add(%reduce_sum.2679, %reduce_sum.2680)
}

%region_1132.33373 (reduce_sum.33370: f32[], reduce_sum.33371: f32[]) -> f32[] {
  %reduce_sum.33370 = f32[] parameter(0)
  %reduce_sum.33371 = f32[] parameter(1)
  ROOT %reduce_sum.33372 = f32[] add(%reduce_sum.33370, %reduce_sum.33371)
}

%region_1133.33380 (reduce_sum.33377: f32[], reduce_sum.33378: f32[]) -> f32[] {
  %reduce_sum.33377 = f32[] parameter(0)
  %reduce_sum.33378 = f32[] parameter(1)
  ROOT %reduce_sum.33379 = f32[] add(%reduce_sum.33377, %reduce_sum.33378)
}

%region_1134.33387 (reduce_sum.33384: f32[], reduce_sum.33385: f32[]) -> f32[] {
  %reduce_sum.33384 = f32[] parameter(0)
  %reduce_sum.33385 = f32[] parameter(1)
  ROOT %reduce_sum.33386 = f32[] add(%reduce_sum.33384, %reduce_sum.33385)
}

%region_1134.33387.clone (reduce_sum.2682: f32[], reduce_sum.2683: f32[]) -> f32[] {
  %reduce_sum.2682 = f32[] parameter(0)
  %reduce_sum.2683 = f32[] parameter(1)
  ROOT %reduce_sum.2684 = f32[] add(%reduce_sum.2682, %reduce_sum.2683)
}

%region_1135.33394 (reduce_sum.33391: f32[], reduce_sum.33392: f32[]) -> f32[] {
  %reduce_sum.33391 = f32[] parameter(0)
  %reduce_sum.33392 = f32[] parameter(1)
  ROOT %reduce_sum.33393 = f32[] add(%reduce_sum.33391, %reduce_sum.33392)
}

%region_1135.33394.clone (reduce_sum.2685: f32[], reduce_sum.2686: f32[]) -> f32[] {
  %reduce_sum.2685 = f32[] parameter(0)
  %reduce_sum.2686 = f32[] parameter(1)
  ROOT %reduce_sum.2687 = f32[] add(%reduce_sum.2685, %reduce_sum.2686)
}

%region_1136.33401 (reduce_sum.33398: f32[], reduce_sum.33399: f32[]) -> f32[] {
  %reduce_sum.33398 = f32[] parameter(0)
  %reduce_sum.33399 = f32[] parameter(1)
  ROOT %reduce_sum.33400 = f32[] add(%reduce_sum.33398, %reduce_sum.33399)
}

%region_1136.33401.clone (reduce_sum.2688: f32[], reduce_sum.2689: f32[]) -> f32[] {
  %reduce_sum.2688 = f32[] parameter(0)
  %reduce_sum.2689 = f32[] parameter(1)
  ROOT %reduce_sum.2690 = f32[] add(%reduce_sum.2688, %reduce_sum.2689)
}

%region_1137.33408 (reduce_sum.33405: f32[], reduce_sum.33406: f32[]) -> f32[] {
  %reduce_sum.33405 = f32[] parameter(0)
  %reduce_sum.33406 = f32[] parameter(1)
  ROOT %reduce_sum.33407 = f32[] add(%reduce_sum.33405, %reduce_sum.33406)
}

%region_1137.33408.clone (reduce_sum.2691: f32[], reduce_sum.2692: f32[]) -> f32[] {
  %reduce_sum.2691 = f32[] parameter(0)
  %reduce_sum.2692 = f32[] parameter(1)
  ROOT %reduce_sum.2693 = f32[] add(%reduce_sum.2691, %reduce_sum.2692)
}

%region_1138.33415 (reduce_sum.33412: f32[], reduce_sum.33413: f32[]) -> f32[] {
  %reduce_sum.33412 = f32[] parameter(0)
  %reduce_sum.33413 = f32[] parameter(1)
  ROOT %reduce_sum.33414 = f32[] add(%reduce_sum.33412, %reduce_sum.33413)
}

%region_1138.33415.clone (reduce_sum.2694: f32[], reduce_sum.2695: f32[]) -> f32[] {
  %reduce_sum.2694 = f32[] parameter(0)
  %reduce_sum.2695 = f32[] parameter(1)
  ROOT %reduce_sum.2696 = f32[] add(%reduce_sum.2694, %reduce_sum.2695)
}

%region_1139.33422 (reduce_sum.33419: f32[], reduce_sum.33420: f32[]) -> f32[] {
  %reduce_sum.33419 = f32[] parameter(0)
  %reduce_sum.33420 = f32[] parameter(1)
  ROOT %reduce_sum.33421 = f32[] add(%reduce_sum.33419, %reduce_sum.33420)
}

%region_1139.33422.clone (reduce_sum.2697: f32[], reduce_sum.2698: f32[]) -> f32[] {
  %reduce_sum.2697 = f32[] parameter(0)
  %reduce_sum.2698 = f32[] parameter(1)
  ROOT %reduce_sum.2699 = f32[] add(%reduce_sum.2697, %reduce_sum.2698)
}

%region_1140.33429 (reduce_sum.33426: f32[], reduce_sum.33427: f32[]) -> f32[] {
  %reduce_sum.33426 = f32[] parameter(0)
  %reduce_sum.33427 = f32[] parameter(1)
  ROOT %reduce_sum.33428 = f32[] add(%reduce_sum.33426, %reduce_sum.33427)
}

%region_1140.33429.clone (reduce_sum.2700: f32[], reduce_sum.2701: f32[]) -> f32[] {
  %reduce_sum.2700 = f32[] parameter(0)
  %reduce_sum.2701 = f32[] parameter(1)
  ROOT %reduce_sum.2702 = f32[] add(%reduce_sum.2700, %reduce_sum.2701)
}

%region_1141.33436 (reduce_sum.33433: f32[], reduce_sum.33434: f32[]) -> f32[] {
  %reduce_sum.33433 = f32[] parameter(0)
  %reduce_sum.33434 = f32[] parameter(1)
  ROOT %reduce_sum.33435 = f32[] add(%reduce_sum.33433, %reduce_sum.33434)
}

%region_1142.33443 (reduce_sum.33440: f32[], reduce_sum.33441: f32[]) -> f32[] {
  %reduce_sum.33440 = f32[] parameter(0)
  %reduce_sum.33441 = f32[] parameter(1)
  ROOT %reduce_sum.33442 = f32[] add(%reduce_sum.33440, %reduce_sum.33441)
}

%region_1143.33450 (reduce_sum.33447: f32[], reduce_sum.33448: f32[]) -> f32[] {
  %reduce_sum.33447 = f32[] parameter(0)
  %reduce_sum.33448 = f32[] parameter(1)
  ROOT %reduce_sum.33449 = f32[] add(%reduce_sum.33447, %reduce_sum.33448)
}

%region_1143.33450.clone (reduce_sum.2703: f32[], reduce_sum.2704: f32[]) -> f32[] {
  %reduce_sum.2703 = f32[] parameter(0)
  %reduce_sum.2704 = f32[] parameter(1)
  ROOT %reduce_sum.2705 = f32[] add(%reduce_sum.2703, %reduce_sum.2704)
}

%region_1144.33457 (reduce_sum.33454: f32[], reduce_sum.33455: f32[]) -> f32[] {
  %reduce_sum.33454 = f32[] parameter(0)
  %reduce_sum.33455 = f32[] parameter(1)
  ROOT %reduce_sum.33456 = f32[] add(%reduce_sum.33454, %reduce_sum.33455)
}

%region_1144.33457.clone (reduce_sum.2706: f32[], reduce_sum.2707: f32[]) -> f32[] {
  %reduce_sum.2706 = f32[] parameter(0)
  %reduce_sum.2707 = f32[] parameter(1)
  ROOT %reduce_sum.2708 = f32[] add(%reduce_sum.2706, %reduce_sum.2707)
}

%region_1145.33464 (reduce_sum.33461: f32[], reduce_sum.33462: f32[]) -> f32[] {
  %reduce_sum.33461 = f32[] parameter(0)
  %reduce_sum.33462 = f32[] parameter(1)
  ROOT %reduce_sum.33463 = f32[] add(%reduce_sum.33461, %reduce_sum.33462)
}

%region_1145.33464.clone (reduce_sum.2709: f32[], reduce_sum.2713: f32[]) -> f32[] {
  %reduce_sum.2709 = f32[] parameter(0)
  %reduce_sum.2713 = f32[] parameter(1)
  ROOT %reduce_sum.2715 = f32[] add(%reduce_sum.2709, %reduce_sum.2713)
}

%region_1146.33471 (reduce_sum.33468: f32[], reduce_sum.33469: f32[]) -> f32[] {
  %reduce_sum.33468 = f32[] parameter(0)
  %reduce_sum.33469 = f32[] parameter(1)
  ROOT %reduce_sum.33470 = f32[] add(%reduce_sum.33468, %reduce_sum.33469)
}

%region_1146.33471.clone (reduce_sum.2716: f32[], reduce_sum.2717: f32[]) -> f32[] {
  %reduce_sum.2716 = f32[] parameter(0)
  %reduce_sum.2717 = f32[] parameter(1)
  ROOT %reduce_sum.2724 = f32[] add(%reduce_sum.2716, %reduce_sum.2717)
}

%region_1147.33478 (reduce_sum.33475: f32[], reduce_sum.33476: f32[]) -> f32[] {
  %reduce_sum.33475 = f32[] parameter(0)
  %reduce_sum.33476 = f32[] parameter(1)
  ROOT %reduce_sum.33477 = f32[] add(%reduce_sum.33475, %reduce_sum.33476)
}

%region_1147.33478.clone (reduce_sum.2726: f32[], reduce_sum.2727: f32[]) -> f32[] {
  %reduce_sum.2726 = f32[] parameter(0)
  %reduce_sum.2727 = f32[] parameter(1)
  ROOT %reduce_sum.2728 = f32[] add(%reduce_sum.2726, %reduce_sum.2727)
}

%region_1148.33485 (reduce_sum.33482: f32[], reduce_sum.33483: f32[]) -> f32[] {
  %reduce_sum.33482 = f32[] parameter(0)
  %reduce_sum.33483 = f32[] parameter(1)
  ROOT %reduce_sum.33484 = f32[] add(%reduce_sum.33482, %reduce_sum.33483)
}

%region_1148.33485.clone (reduce_sum.2729: f32[], reduce_sum.2730: f32[]) -> f32[] {
  %reduce_sum.2729 = f32[] parameter(0)
  %reduce_sum.2730 = f32[] parameter(1)
  ROOT %reduce_sum.2731 = f32[] add(%reduce_sum.2729, %reduce_sum.2730)
}

%region_1149.33492 (reduce_sum.33489: f32[], reduce_sum.33490: f32[]) -> f32[] {
  %reduce_sum.33489 = f32[] parameter(0)
  %reduce_sum.33490 = f32[] parameter(1)
  ROOT %reduce_sum.33491 = f32[] add(%reduce_sum.33489, %reduce_sum.33490)
}

%region_1149.33492.clone (reduce_sum.2732: f32[], reduce_sum.2733: f32[]) -> f32[] {
  %reduce_sum.2732 = f32[] parameter(0)
  %reduce_sum.2733 = f32[] parameter(1)
  ROOT %reduce_sum.2734 = f32[] add(%reduce_sum.2732, %reduce_sum.2733)
}

%region_1150.33499 (reduce_sum.33496: f32[], reduce_sum.33497: f32[]) -> f32[] {
  %reduce_sum.33496 = f32[] parameter(0)
  %reduce_sum.33497 = f32[] parameter(1)
  ROOT %reduce_sum.33498 = f32[] add(%reduce_sum.33496, %reduce_sum.33497)
}

%region_1151.33506 (reduce_sum.33503: f32[], reduce_sum.33504: f32[]) -> f32[] {
  %reduce_sum.33503 = f32[] parameter(0)
  %reduce_sum.33504 = f32[] parameter(1)
  ROOT %reduce_sum.33505 = f32[] add(%reduce_sum.33503, %reduce_sum.33504)
}

%region_1152.33513 (reduce_sum.33510: f32[], reduce_sum.33511: f32[]) -> f32[] {
  %reduce_sum.33510 = f32[] parameter(0)
  %reduce_sum.33511 = f32[] parameter(1)
  ROOT %reduce_sum.33512 = f32[] add(%reduce_sum.33510, %reduce_sum.33511)
}

%region_1152.33513.clone (reduce_sum.2735: f32[], reduce_sum.2736: f32[]) -> f32[] {
  %reduce_sum.2735 = f32[] parameter(0)
  %reduce_sum.2736 = f32[] parameter(1)
  ROOT %reduce_sum.2737 = f32[] add(%reduce_sum.2735, %reduce_sum.2736)
}

%region_1153.33520 (reduce_sum.33517: f32[], reduce_sum.33518: f32[]) -> f32[] {
  %reduce_sum.33517 = f32[] parameter(0)
  %reduce_sum.33518 = f32[] parameter(1)
  ROOT %reduce_sum.33519 = f32[] add(%reduce_sum.33517, %reduce_sum.33518)
}

%region_1153.33520.clone (reduce_sum.2738: f32[], reduce_sum.2739: f32[]) -> f32[] {
  %reduce_sum.2738 = f32[] parameter(0)
  %reduce_sum.2739 = f32[] parameter(1)
  ROOT %reduce_sum.2740 = f32[] add(%reduce_sum.2738, %reduce_sum.2739)
}

%region_1154.33527 (reduce_sum.33524: f32[], reduce_sum.33525: f32[]) -> f32[] {
  %reduce_sum.33524 = f32[] parameter(0)
  %reduce_sum.33525 = f32[] parameter(1)
  ROOT %reduce_sum.33526 = f32[] add(%reduce_sum.33524, %reduce_sum.33525)
}

%region_1154.33527.clone (reduce_sum.2741: f32[], reduce_sum.2745: f32[]) -> f32[] {
  %reduce_sum.2741 = f32[] parameter(0)
  %reduce_sum.2745 = f32[] parameter(1)
  ROOT %reduce_sum.2747 = f32[] add(%reduce_sum.2741, %reduce_sum.2745)
}

%region_1155.33534 (reduce_sum.33531: f32[], reduce_sum.33532: f32[]) -> f32[] {
  %reduce_sum.33531 = f32[] parameter(0)
  %reduce_sum.33532 = f32[] parameter(1)
  ROOT %reduce_sum.33533 = f32[] add(%reduce_sum.33531, %reduce_sum.33532)
}

%region_1155.33534.clone (reduce_sum.2748: f32[], reduce_sum.2749: f32[]) -> f32[] {
  %reduce_sum.2748 = f32[] parameter(0)
  %reduce_sum.2749 = f32[] parameter(1)
  ROOT %reduce_sum.2750 = f32[] add(%reduce_sum.2748, %reduce_sum.2749)
}

%region_1156.33541 (reduce_sum.33538: f32[], reduce_sum.33539: f32[]) -> f32[] {
  %reduce_sum.33538 = f32[] parameter(0)
  %reduce_sum.33539 = f32[] parameter(1)
  ROOT %reduce_sum.33540 = f32[] add(%reduce_sum.33538, %reduce_sum.33539)
}

%region_1156.33541.clone (reduce_sum.2751: f32[], reduce_sum.2752: f32[]) -> f32[] {
  %reduce_sum.2751 = f32[] parameter(0)
  %reduce_sum.2752 = f32[] parameter(1)
  ROOT %reduce_sum.2753 = f32[] add(%reduce_sum.2751, %reduce_sum.2752)
}

%region_1157.33548 (reduce_sum.33545: f32[], reduce_sum.33546: f32[]) -> f32[] {
  %reduce_sum.33545 = f32[] parameter(0)
  %reduce_sum.33546 = f32[] parameter(1)
  ROOT %reduce_sum.33547 = f32[] add(%reduce_sum.33545, %reduce_sum.33546)
}

%region_1157.33548.clone (reduce_sum.2754: f32[], reduce_sum.2755: f32[]) -> f32[] {
  %reduce_sum.2754 = f32[] parameter(0)
  %reduce_sum.2755 = f32[] parameter(1)
  ROOT %reduce_sum.2756 = f32[] add(%reduce_sum.2754, %reduce_sum.2755)
}

%region_1158.33555 (reduce_sum.33552: f32[], reduce_sum.33553: f32[]) -> f32[] {
  %reduce_sum.33552 = f32[] parameter(0)
  %reduce_sum.33553 = f32[] parameter(1)
  ROOT %reduce_sum.33554 = f32[] add(%reduce_sum.33552, %reduce_sum.33553)
}

%region_1158.33555.clone (reduce_sum.2757: f32[], reduce_sum.2758: f32[]) -> f32[] {
  %reduce_sum.2757 = f32[] parameter(0)
  %reduce_sum.2758 = f32[] parameter(1)
  ROOT %reduce_sum.2759 = f32[] add(%reduce_sum.2757, %reduce_sum.2758)
}

%region_1159.33562 (reduce_sum.33559: f32[], reduce_sum.33560: f32[]) -> f32[] {
  %reduce_sum.33559 = f32[] parameter(0)
  %reduce_sum.33560 = f32[] parameter(1)
  ROOT %reduce_sum.33561 = f32[] add(%reduce_sum.33559, %reduce_sum.33560)
}

%region_1160.33569 (reduce_sum.33566: f32[], reduce_sum.33567: f32[]) -> f32[] {
  %reduce_sum.33566 = f32[] parameter(0)
  %reduce_sum.33567 = f32[] parameter(1)
  ROOT %reduce_sum.33568 = f32[] add(%reduce_sum.33566, %reduce_sum.33567)
}

%region_1161.33576 (reduce_sum.33573: f32[], reduce_sum.33574: f32[]) -> f32[] {
  %reduce_sum.33573 = f32[] parameter(0)
  %reduce_sum.33574 = f32[] parameter(1)
  ROOT %reduce_sum.33575 = f32[] add(%reduce_sum.33573, %reduce_sum.33574)
}

%region_1161.33576.clone (reduce_sum.2760: f32[], reduce_sum.2761: f32[]) -> f32[] {
  %reduce_sum.2760 = f32[] parameter(0)
  %reduce_sum.2761 = f32[] parameter(1)
  ROOT %reduce_sum.2762 = f32[] add(%reduce_sum.2760, %reduce_sum.2761)
}

%region_1162.33583 (reduce_sum.33580: f32[], reduce_sum.33581: f32[]) -> f32[] {
  %reduce_sum.33580 = f32[] parameter(0)
  %reduce_sum.33581 = f32[] parameter(1)
  ROOT %reduce_sum.33582 = f32[] add(%reduce_sum.33580, %reduce_sum.33581)
}

%region_1162.33583.clone (reduce_sum.2763: f32[], reduce_sum.2764: f32[]) -> f32[] {
  %reduce_sum.2763 = f32[] parameter(0)
  %reduce_sum.2764 = f32[] parameter(1)
  ROOT %reduce_sum.2765 = f32[] add(%reduce_sum.2763, %reduce_sum.2764)
}

%region_1163.33590 (reduce_sum.33587: f32[], reduce_sum.33588: f32[]) -> f32[] {
  %reduce_sum.33587 = f32[] parameter(0)
  %reduce_sum.33588 = f32[] parameter(1)
  ROOT %reduce_sum.33589 = f32[] add(%reduce_sum.33587, %reduce_sum.33588)
}

%region_1163.33590.clone (reduce_sum.2766: f32[], reduce_sum.2767: f32[]) -> f32[] {
  %reduce_sum.2766 = f32[] parameter(0)
  %reduce_sum.2767 = f32[] parameter(1)
  ROOT %reduce_sum.2768 = f32[] add(%reduce_sum.2766, %reduce_sum.2767)
}

%region_1164.33597 (reduce_sum.33594: f32[], reduce_sum.33595: f32[]) -> f32[] {
  %reduce_sum.33594 = f32[] parameter(0)
  %reduce_sum.33595 = f32[] parameter(1)
  ROOT %reduce_sum.33596 = f32[] add(%reduce_sum.33594, %reduce_sum.33595)
}

%region_1164.33597.clone (reduce_sum.2769: f32[], reduce_sum.2770: f32[]) -> f32[] {
  %reduce_sum.2769 = f32[] parameter(0)
  %reduce_sum.2770 = f32[] parameter(1)
  ROOT %reduce_sum.2771 = f32[] add(%reduce_sum.2769, %reduce_sum.2770)
}

%region_1165.33604 (reduce_sum.33601: f32[], reduce_sum.33602: f32[]) -> f32[] {
  %reduce_sum.33601 = f32[] parameter(0)
  %reduce_sum.33602 = f32[] parameter(1)
  ROOT %reduce_sum.33603 = f32[] add(%reduce_sum.33601, %reduce_sum.33602)
}

%region_1165.33604.clone (reduce_sum.2772: f32[], reduce_sum.2773: f32[]) -> f32[] {
  %reduce_sum.2772 = f32[] parameter(0)
  %reduce_sum.2773 = f32[] parameter(1)
  ROOT %reduce_sum.2774 = f32[] add(%reduce_sum.2772, %reduce_sum.2773)
}

%region_1166.33611 (reduce_sum.33608: f32[], reduce_sum.33609: f32[]) -> f32[] {
  %reduce_sum.33608 = f32[] parameter(0)
  %reduce_sum.33609 = f32[] parameter(1)
  ROOT %reduce_sum.33610 = f32[] add(%reduce_sum.33608, %reduce_sum.33609)
}

%region_1166.33611.clone (reduce_sum.2775: f32[], reduce_sum.2776: f32[]) -> f32[] {
  %reduce_sum.2775 = f32[] parameter(0)
  %reduce_sum.2776 = f32[] parameter(1)
  ROOT %reduce_sum.2777 = f32[] add(%reduce_sum.2775, %reduce_sum.2776)
}

%region_1167.33618 (reduce_sum.33615: f32[], reduce_sum.33616: f32[]) -> f32[] {
  %reduce_sum.33615 = f32[] parameter(0)
  %reduce_sum.33616 = f32[] parameter(1)
  ROOT %reduce_sum.33617 = f32[] add(%reduce_sum.33615, %reduce_sum.33616)
}

%region_1167.33618.clone (reduce_sum.2778: f32[], reduce_sum.2779: f32[]) -> f32[] {
  %reduce_sum.2778 = f32[] parameter(0)
  %reduce_sum.2779 = f32[] parameter(1)
  ROOT %reduce_sum.2783 = f32[] add(%reduce_sum.2778, %reduce_sum.2779)
}

%region_1168.33625 (reduce_sum.33622: f32[], reduce_sum.33623: f32[]) -> f32[] {
  %reduce_sum.33622 = f32[] parameter(0)
  %reduce_sum.33623 = f32[] parameter(1)
  ROOT %reduce_sum.33624 = f32[] add(%reduce_sum.33622, %reduce_sum.33623)
}

%region_1169.33632 (reduce_sum.33629: f32[], reduce_sum.33630: f32[]) -> f32[] {
  %reduce_sum.33629 = f32[] parameter(0)
  %reduce_sum.33630 = f32[] parameter(1)
  ROOT %reduce_sum.33631 = f32[] add(%reduce_sum.33629, %reduce_sum.33630)
}

%region_1170.33639 (reduce_sum.33636: f32[], reduce_sum.33637: f32[]) -> f32[] {
  %reduce_sum.33636 = f32[] parameter(0)
  %reduce_sum.33637 = f32[] parameter(1)
  ROOT %reduce_sum.33638 = f32[] add(%reduce_sum.33636, %reduce_sum.33637)
}

%region_1170.33639.clone (reduce_sum.2785: f32[], reduce_sum.2786: f32[]) -> f32[] {
  %reduce_sum.2785 = f32[] parameter(0)
  %reduce_sum.2786 = f32[] parameter(1)
  ROOT %reduce_sum.2787 = f32[] add(%reduce_sum.2785, %reduce_sum.2786)
}

%region_1171.33646 (reduce_sum.33643: f32[], reduce_sum.33644: f32[]) -> f32[] {
  %reduce_sum.33643 = f32[] parameter(0)
  %reduce_sum.33644 = f32[] parameter(1)
  ROOT %reduce_sum.33645 = f32[] add(%reduce_sum.33643, %reduce_sum.33644)
}

%region_1171.33646.clone (reduce_sum.2788: f32[], reduce_sum.2789: f32[]) -> f32[] {
  %reduce_sum.2788 = f32[] parameter(0)
  %reduce_sum.2789 = f32[] parameter(1)
  ROOT %reduce_sum.2790 = f32[] add(%reduce_sum.2788, %reduce_sum.2789)
}

%region_1172.33653 (reduce_sum.33650: f32[], reduce_sum.33651: f32[]) -> f32[] {
  %reduce_sum.33650 = f32[] parameter(0)
  %reduce_sum.33651 = f32[] parameter(1)
  ROOT %reduce_sum.33652 = f32[] add(%reduce_sum.33650, %reduce_sum.33651)
}

%region_1172.33653.clone (reduce_sum.2791: f32[], reduce_sum.2792: f32[]) -> f32[] {
  %reduce_sum.2791 = f32[] parameter(0)
  %reduce_sum.2792 = f32[] parameter(1)
  ROOT %reduce_sum.2793 = f32[] add(%reduce_sum.2791, %reduce_sum.2792)
}

%region_1173.33660 (reduce_sum.33657: f32[], reduce_sum.33658: f32[]) -> f32[] {
  %reduce_sum.33657 = f32[] parameter(0)
  %reduce_sum.33658 = f32[] parameter(1)
  ROOT %reduce_sum.33659 = f32[] add(%reduce_sum.33657, %reduce_sum.33658)
}

%region_1173.33660.clone (reduce_sum.2794: f32[], reduce_sum.2795: f32[]) -> f32[] {
  %reduce_sum.2794 = f32[] parameter(0)
  %reduce_sum.2795 = f32[] parameter(1)
  ROOT %reduce_sum.2796 = f32[] add(%reduce_sum.2794, %reduce_sum.2795)
}

%region_1174.33667 (reduce_sum.33664: f32[], reduce_sum.33665: f32[]) -> f32[] {
  %reduce_sum.33664 = f32[] parameter(0)
  %reduce_sum.33665 = f32[] parameter(1)
  ROOT %reduce_sum.33666 = f32[] add(%reduce_sum.33664, %reduce_sum.33665)
}

%region_1174.33667.clone (reduce_sum.2797: f32[], reduce_sum.2798: f32[]) -> f32[] {
  %reduce_sum.2797 = f32[] parameter(0)
  %reduce_sum.2798 = f32[] parameter(1)
  ROOT %reduce_sum.2799 = f32[] add(%reduce_sum.2797, %reduce_sum.2798)
}

%region_1175.33674 (reduce_sum.33671: f32[], reduce_sum.33672: f32[]) -> f32[] {
  %reduce_sum.33671 = f32[] parameter(0)
  %reduce_sum.33672 = f32[] parameter(1)
  ROOT %reduce_sum.33673 = f32[] add(%reduce_sum.33671, %reduce_sum.33672)
}

%region_1175.33674.clone (reduce_sum.2800: f32[], reduce_sum.2801: f32[]) -> f32[] {
  %reduce_sum.2800 = f32[] parameter(0)
  %reduce_sum.2801 = f32[] parameter(1)
  ROOT %reduce_sum.2802 = f32[] add(%reduce_sum.2800, %reduce_sum.2801)
}

%region_1176.33681 (reduce_sum.33678: f32[], reduce_sum.33679: f32[]) -> f32[] {
  %reduce_sum.33678 = f32[] parameter(0)
  %reduce_sum.33679 = f32[] parameter(1)
  ROOT %reduce_sum.33680 = f32[] add(%reduce_sum.33678, %reduce_sum.33679)
}

%region_1176.33681.clone (reduce_sum.2803: f32[], reduce_sum.2804: f32[]) -> f32[] {
  %reduce_sum.2803 = f32[] parameter(0)
  %reduce_sum.2804 = f32[] parameter(1)
  ROOT %reduce_sum.2805 = f32[] add(%reduce_sum.2803, %reduce_sum.2804)
}

%region_1177.33688 (reduce_sum.33685: f32[], reduce_sum.33686: f32[]) -> f32[] {
  %reduce_sum.33685 = f32[] parameter(0)
  %reduce_sum.33686 = f32[] parameter(1)
  ROOT %reduce_sum.33687 = f32[] add(%reduce_sum.33685, %reduce_sum.33686)
}

%region_1178.33695 (reduce_sum.33692: f32[], reduce_sum.33693: f32[]) -> f32[] {
  %reduce_sum.33692 = f32[] parameter(0)
  %reduce_sum.33693 = f32[] parameter(1)
  ROOT %reduce_sum.33694 = f32[] add(%reduce_sum.33692, %reduce_sum.33693)
}

%region_1179.33702 (reduce_sum.33699: f32[], reduce_sum.33700: f32[]) -> f32[] {
  %reduce_sum.33699 = f32[] parameter(0)
  %reduce_sum.33700 = f32[] parameter(1)
  ROOT %reduce_sum.33701 = f32[] add(%reduce_sum.33699, %reduce_sum.33700)
}

%region_1179.33702.clone (reduce_sum.2806: f32[], reduce_sum.2807: f32[]) -> f32[] {
  %reduce_sum.2806 = f32[] parameter(0)
  %reduce_sum.2807 = f32[] parameter(1)
  ROOT %reduce_sum.2808 = f32[] add(%reduce_sum.2806, %reduce_sum.2807)
}

%region_1180.33709 (reduce_sum.33706: f32[], reduce_sum.33707: f32[]) -> f32[] {
  %reduce_sum.33706 = f32[] parameter(0)
  %reduce_sum.33707 = f32[] parameter(1)
  ROOT %reduce_sum.33708 = f32[] add(%reduce_sum.33706, %reduce_sum.33707)
}

%region_1180.33709.clone (reduce_sum.2809: f32[], reduce_sum.2810: f32[]) -> f32[] {
  %reduce_sum.2809 = f32[] parameter(0)
  %reduce_sum.2810 = f32[] parameter(1)
  ROOT %reduce_sum.2811 = f32[] add(%reduce_sum.2809, %reduce_sum.2810)
}

%region_1181.33716 (reduce_sum.33713: f32[], reduce_sum.33714: f32[]) -> f32[] {
  %reduce_sum.33713 = f32[] parameter(0)
  %reduce_sum.33714 = f32[] parameter(1)
  ROOT %reduce_sum.33715 = f32[] add(%reduce_sum.33713, %reduce_sum.33714)
}

%region_1181.33716.clone (reduce_sum.2812: f32[], reduce_sum.2813: f32[]) -> f32[] {
  %reduce_sum.2812 = f32[] parameter(0)
  %reduce_sum.2813 = f32[] parameter(1)
  ROOT %reduce_sum.2814 = f32[] add(%reduce_sum.2812, %reduce_sum.2813)
}

%region_1182.33723 (reduce_sum.33720: f32[], reduce_sum.33721: f32[]) -> f32[] {
  %reduce_sum.33720 = f32[] parameter(0)
  %reduce_sum.33721 = f32[] parameter(1)
  ROOT %reduce_sum.33722 = f32[] add(%reduce_sum.33720, %reduce_sum.33721)
}

%region_1182.33723.clone (reduce_sum.2815: f32[], reduce_sum.2816: f32[]) -> f32[] {
  %reduce_sum.2815 = f32[] parameter(0)
  %reduce_sum.2816 = f32[] parameter(1)
  ROOT %reduce_sum.2817 = f32[] add(%reduce_sum.2815, %reduce_sum.2816)
}

%region_1183.33730 (reduce_sum.33727: f32[], reduce_sum.33728: f32[]) -> f32[] {
  %reduce_sum.33727 = f32[] parameter(0)
  %reduce_sum.33728 = f32[] parameter(1)
  ROOT %reduce_sum.33729 = f32[] add(%reduce_sum.33727, %reduce_sum.33728)
}

%region_1183.33730.clone (reduce_sum.2818: f32[], reduce_sum.2819: f32[]) -> f32[] {
  %reduce_sum.2818 = f32[] parameter(0)
  %reduce_sum.2819 = f32[] parameter(1)
  ROOT %reduce_sum.2820 = f32[] add(%reduce_sum.2818, %reduce_sum.2819)
}

%region_1184.33737 (reduce_sum.33734: f32[], reduce_sum.33735: f32[]) -> f32[] {
  %reduce_sum.33734 = f32[] parameter(0)
  %reduce_sum.33735 = f32[] parameter(1)
  ROOT %reduce_sum.33736 = f32[] add(%reduce_sum.33734, %reduce_sum.33735)
}

%region_1184.33737.clone (reduce_sum.2821: f32[], reduce_sum.2822: f32[]) -> f32[] {
  %reduce_sum.2821 = f32[] parameter(0)
  %reduce_sum.2822 = f32[] parameter(1)
  ROOT %reduce_sum.2823 = f32[] add(%reduce_sum.2821, %reduce_sum.2822)
}

%region_1185.33744 (reduce_sum.33741: f32[], reduce_sum.33742: f32[]) -> f32[] {
  %reduce_sum.33741 = f32[] parameter(0)
  %reduce_sum.33742 = f32[] parameter(1)
  ROOT %reduce_sum.33743 = f32[] add(%reduce_sum.33741, %reduce_sum.33742)
}

%region_1185.33744.clone (reduce_sum.2824: f32[], reduce_sum.2825: f32[]) -> f32[] {
  %reduce_sum.2824 = f32[] parameter(0)
  %reduce_sum.2825 = f32[] parameter(1)
  ROOT %reduce_sum.2826 = f32[] add(%reduce_sum.2824, %reduce_sum.2825)
}

%region_1186.33751 (reduce_sum.33748: f32[], reduce_sum.33749: f32[]) -> f32[] {
  %reduce_sum.33748 = f32[] parameter(0)
  %reduce_sum.33749 = f32[] parameter(1)
  ROOT %reduce_sum.33750 = f32[] add(%reduce_sum.33748, %reduce_sum.33749)
}

%region_1187.33758 (reduce_sum.33755: f32[], reduce_sum.33756: f32[]) -> f32[] {
  %reduce_sum.33755 = f32[] parameter(0)
  %reduce_sum.33756 = f32[] parameter(1)
  ROOT %reduce_sum.33757 = f32[] add(%reduce_sum.33755, %reduce_sum.33756)
}

%region_1188.33765 (reduce_sum.33762: f32[], reduce_sum.33763: f32[]) -> f32[] {
  %reduce_sum.33762 = f32[] parameter(0)
  %reduce_sum.33763 = f32[] parameter(1)
  ROOT %reduce_sum.33764 = f32[] add(%reduce_sum.33762, %reduce_sum.33763)
}

%region_1188.33765.clone (reduce_sum.2827: f32[], reduce_sum.2828: f32[]) -> f32[] {
  %reduce_sum.2827 = f32[] parameter(0)
  %reduce_sum.2828 = f32[] parameter(1)
  ROOT %reduce_sum.2829 = f32[] add(%reduce_sum.2827, %reduce_sum.2828)
}

%region_1189.33772 (reduce_sum.33769: f32[], reduce_sum.33770: f32[]) -> f32[] {
  %reduce_sum.33769 = f32[] parameter(0)
  %reduce_sum.33770 = f32[] parameter(1)
  ROOT %reduce_sum.33771 = f32[] add(%reduce_sum.33769, %reduce_sum.33770)
}

%region_1189.33772.clone (reduce_sum.2830: f32[], reduce_sum.2831: f32[]) -> f32[] {
  %reduce_sum.2830 = f32[] parameter(0)
  %reduce_sum.2831 = f32[] parameter(1)
  ROOT %reduce_sum.2832 = f32[] add(%reduce_sum.2830, %reduce_sum.2831)
}

%region_1190.33779 (reduce_sum.33776: f32[], reduce_sum.33777: f32[]) -> f32[] {
  %reduce_sum.33776 = f32[] parameter(0)
  %reduce_sum.33777 = f32[] parameter(1)
  ROOT %reduce_sum.33778 = f32[] add(%reduce_sum.33776, %reduce_sum.33777)
}

%region_1190.33779.clone (reduce_sum.2833: f32[], reduce_sum.2834: f32[]) -> f32[] {
  %reduce_sum.2833 = f32[] parameter(0)
  %reduce_sum.2834 = f32[] parameter(1)
  ROOT %reduce_sum.2835 = f32[] add(%reduce_sum.2833, %reduce_sum.2834)
}

%region_1191.33786 (reduce_sum.33783: f32[], reduce_sum.33784: f32[]) -> f32[] {
  %reduce_sum.33783 = f32[] parameter(0)
  %reduce_sum.33784 = f32[] parameter(1)
  ROOT %reduce_sum.33785 = f32[] add(%reduce_sum.33783, %reduce_sum.33784)
}

%region_1191.33786.clone (reduce_sum.2836: f32[], reduce_sum.2837: f32[]) -> f32[] {
  %reduce_sum.2836 = f32[] parameter(0)
  %reduce_sum.2837 = f32[] parameter(1)
  ROOT %reduce_sum.2838 = f32[] add(%reduce_sum.2836, %reduce_sum.2837)
}

%region_1192.33793 (reduce_sum.33790: f32[], reduce_sum.33791: f32[]) -> f32[] {
  %reduce_sum.33790 = f32[] parameter(0)
  %reduce_sum.33791 = f32[] parameter(1)
  ROOT %reduce_sum.33792 = f32[] add(%reduce_sum.33790, %reduce_sum.33791)
}

%region_1192.33793.clone (reduce_sum.2839: f32[], reduce_sum.2840: f32[]) -> f32[] {
  %reduce_sum.2839 = f32[] parameter(0)
  %reduce_sum.2840 = f32[] parameter(1)
  ROOT %reduce_sum.2841 = f32[] add(%reduce_sum.2839, %reduce_sum.2840)
}

%region_1193.33800 (reduce_sum.33797: f32[], reduce_sum.33798: f32[]) -> f32[] {
  %reduce_sum.33797 = f32[] parameter(0)
  %reduce_sum.33798 = f32[] parameter(1)
  ROOT %reduce_sum.33799 = f32[] add(%reduce_sum.33797, %reduce_sum.33798)
}

%region_1193.33800.clone (reduce_sum.2842: f32[], reduce_sum.2843: f32[]) -> f32[] {
  %reduce_sum.2842 = f32[] parameter(0)
  %reduce_sum.2843 = f32[] parameter(1)
  ROOT %reduce_sum.2844 = f32[] add(%reduce_sum.2842, %reduce_sum.2843)
}

%region_1194.33807 (reduce_sum.33804: f32[], reduce_sum.33805: f32[]) -> f32[] {
  %reduce_sum.33804 = f32[] parameter(0)
  %reduce_sum.33805 = f32[] parameter(1)
  ROOT %reduce_sum.33806 = f32[] add(%reduce_sum.33804, %reduce_sum.33805)
}

%region_1194.33807.clone (reduce_sum.2845: f32[], reduce_sum.2846: f32[]) -> f32[] {
  %reduce_sum.2845 = f32[] parameter(0)
  %reduce_sum.2846 = f32[] parameter(1)
  ROOT %reduce_sum.2847 = f32[] add(%reduce_sum.2845, %reduce_sum.2846)
}

%region_1195.33814 (reduce_sum.33811: f32[], reduce_sum.33812: f32[]) -> f32[] {
  %reduce_sum.33811 = f32[] parameter(0)
  %reduce_sum.33812 = f32[] parameter(1)
  ROOT %reduce_sum.33813 = f32[] add(%reduce_sum.33811, %reduce_sum.33812)
}

%region_1196.33821 (reduce_sum.33818: f32[], reduce_sum.33819: f32[]) -> f32[] {
  %reduce_sum.33818 = f32[] parameter(0)
  %reduce_sum.33819 = f32[] parameter(1)
  ROOT %reduce_sum.33820 = f32[] add(%reduce_sum.33818, %reduce_sum.33819)
}

%region_1197.33828 (reduce_sum.33825: f32[], reduce_sum.33826: f32[]) -> f32[] {
  %reduce_sum.33825 = f32[] parameter(0)
  %reduce_sum.33826 = f32[] parameter(1)
  ROOT %reduce_sum.33827 = f32[] add(%reduce_sum.33825, %reduce_sum.33826)
}

%region_1197.33828.clone (reduce_sum.2848: f32[], reduce_sum.2849: f32[]) -> f32[] {
  %reduce_sum.2848 = f32[] parameter(0)
  %reduce_sum.2849 = f32[] parameter(1)
  ROOT %reduce_sum.2850 = f32[] add(%reduce_sum.2848, %reduce_sum.2849)
}

%region_1198.33835 (reduce_sum.33832: f32[], reduce_sum.33833: f32[]) -> f32[] {
  %reduce_sum.33832 = f32[] parameter(0)
  %reduce_sum.33833 = f32[] parameter(1)
  ROOT %reduce_sum.33834 = f32[] add(%reduce_sum.33832, %reduce_sum.33833)
}

%region_1198.33835.clone (reduce_sum.2851: f32[], reduce_sum.2852: f32[]) -> f32[] {
  %reduce_sum.2851 = f32[] parameter(0)
  %reduce_sum.2852 = f32[] parameter(1)
  ROOT %reduce_sum.2853 = f32[] add(%reduce_sum.2851, %reduce_sum.2852)
}

%region_1199.33842 (reduce_sum.33839: f32[], reduce_sum.33840: f32[]) -> f32[] {
  %reduce_sum.33839 = f32[] parameter(0)
  %reduce_sum.33840 = f32[] parameter(1)
  ROOT %reduce_sum.33841 = f32[] add(%reduce_sum.33839, %reduce_sum.33840)
}

%region_1199.33842.clone (reduce_sum.2854: f32[], reduce_sum.2855: f32[]) -> f32[] {
  %reduce_sum.2854 = f32[] parameter(0)
  %reduce_sum.2855 = f32[] parameter(1)
  ROOT %reduce_sum.2856 = f32[] add(%reduce_sum.2854, %reduce_sum.2855)
}

%region_1200.33849 (reduce_sum.33846: f32[], reduce_sum.33847: f32[]) -> f32[] {
  %reduce_sum.33846 = f32[] parameter(0)
  %reduce_sum.33847 = f32[] parameter(1)
  ROOT %reduce_sum.33848 = f32[] add(%reduce_sum.33846, %reduce_sum.33847)
}

%region_1200.33849.clone (reduce_sum.2857: f32[], reduce_sum.2858: f32[]) -> f32[] {
  %reduce_sum.2857 = f32[] parameter(0)
  %reduce_sum.2858 = f32[] parameter(1)
  ROOT %reduce_sum.2859 = f32[] add(%reduce_sum.2857, %reduce_sum.2858)
}

%region_1201.33856 (reduce_sum.33853: f32[], reduce_sum.33854: f32[]) -> f32[] {
  %reduce_sum.33853 = f32[] parameter(0)
  %reduce_sum.33854 = f32[] parameter(1)
  ROOT %reduce_sum.33855 = f32[] add(%reduce_sum.33853, %reduce_sum.33854)
}

%region_1201.33856.clone (reduce_sum.2860: f32[], reduce_sum.2861: f32[]) -> f32[] {
  %reduce_sum.2860 = f32[] parameter(0)
  %reduce_sum.2861 = f32[] parameter(1)
  ROOT %reduce_sum.2862 = f32[] add(%reduce_sum.2860, %reduce_sum.2861)
}

%region_1202.33863 (reduce_sum.33860: f32[], reduce_sum.33861: f32[]) -> f32[] {
  %reduce_sum.33860 = f32[] parameter(0)
  %reduce_sum.33861 = f32[] parameter(1)
  ROOT %reduce_sum.33862 = f32[] add(%reduce_sum.33860, %reduce_sum.33861)
}

%region_1202.33863.clone (reduce_sum.2863: f32[], reduce_sum.2864: f32[]) -> f32[] {
  %reduce_sum.2863 = f32[] parameter(0)
  %reduce_sum.2864 = f32[] parameter(1)
  ROOT %reduce_sum.2865 = f32[] add(%reduce_sum.2863, %reduce_sum.2864)
}

%region_1203.33870 (reduce_sum.33867: f32[], reduce_sum.33868: f32[]) -> f32[] {
  %reduce_sum.33867 = f32[] parameter(0)
  %reduce_sum.33868 = f32[] parameter(1)
  ROOT %reduce_sum.33869 = f32[] add(%reduce_sum.33867, %reduce_sum.33868)
}

%region_1203.33870.clone (reduce_sum.2866: f32[], reduce_sum.2867: f32[]) -> f32[] {
  %reduce_sum.2866 = f32[] parameter(0)
  %reduce_sum.2867 = f32[] parameter(1)
  ROOT %reduce_sum.2868 = f32[] add(%reduce_sum.2866, %reduce_sum.2867)
}

%region_1204.33877 (reduce_sum.33874: f32[], reduce_sum.33875: f32[]) -> f32[] {
  %reduce_sum.33874 = f32[] parameter(0)
  %reduce_sum.33875 = f32[] parameter(1)
  ROOT %reduce_sum.33876 = f32[] add(%reduce_sum.33874, %reduce_sum.33875)
}

%region_1205.33884 (reduce_sum.33881: f32[], reduce_sum.33882: f32[]) -> f32[] {
  %reduce_sum.33881 = f32[] parameter(0)
  %reduce_sum.33882 = f32[] parameter(1)
  ROOT %reduce_sum.33883 = f32[] add(%reduce_sum.33881, %reduce_sum.33882)
}

%region_1206.33891 (reduce_sum.33888: f32[], reduce_sum.33889: f32[]) -> f32[] {
  %reduce_sum.33888 = f32[] parameter(0)
  %reduce_sum.33889 = f32[] parameter(1)
  ROOT %reduce_sum.33890 = f32[] add(%reduce_sum.33888, %reduce_sum.33889)
}

%region_1206.33891.clone (reduce_sum.2869: f32[], reduce_sum.2870: f32[]) -> f32[] {
  %reduce_sum.2869 = f32[] parameter(0)
  %reduce_sum.2870 = f32[] parameter(1)
  ROOT %reduce_sum.2871 = f32[] add(%reduce_sum.2869, %reduce_sum.2870)
}

%region_1207.33898 (reduce_sum.33895: f32[], reduce_sum.33896: f32[]) -> f32[] {
  %reduce_sum.33895 = f32[] parameter(0)
  %reduce_sum.33896 = f32[] parameter(1)
  ROOT %reduce_sum.33897 = f32[] add(%reduce_sum.33895, %reduce_sum.33896)
}

%region_1207.33898.clone (reduce_sum.2872: f32[], reduce_sum.2873: f32[]) -> f32[] {
  %reduce_sum.2872 = f32[] parameter(0)
  %reduce_sum.2873 = f32[] parameter(1)
  ROOT %reduce_sum.2874 = f32[] add(%reduce_sum.2872, %reduce_sum.2873)
}

%region_1208.33905 (reduce_sum.33902: f32[], reduce_sum.33903: f32[]) -> f32[] {
  %reduce_sum.33902 = f32[] parameter(0)
  %reduce_sum.33903 = f32[] parameter(1)
  ROOT %reduce_sum.33904 = f32[] add(%reduce_sum.33902, %reduce_sum.33903)
}

%region_1208.33905.clone (reduce_sum.2875: f32[], reduce_sum.2876: f32[]) -> f32[] {
  %reduce_sum.2875 = f32[] parameter(0)
  %reduce_sum.2876 = f32[] parameter(1)
  ROOT %reduce_sum.2877 = f32[] add(%reduce_sum.2875, %reduce_sum.2876)
}

%region_1209.33912 (reduce_sum.33909: f32[], reduce_sum.33910: f32[]) -> f32[] {
  %reduce_sum.33909 = f32[] parameter(0)
  %reduce_sum.33910 = f32[] parameter(1)
  ROOT %reduce_sum.33911 = f32[] add(%reduce_sum.33909, %reduce_sum.33910)
}

%region_1209.33912.clone (reduce_sum.2878: f32[], reduce_sum.2879: f32[]) -> f32[] {
  %reduce_sum.2878 = f32[] parameter(0)
  %reduce_sum.2879 = f32[] parameter(1)
  ROOT %reduce_sum.2880 = f32[] add(%reduce_sum.2878, %reduce_sum.2879)
}

%region_1210.33919 (reduce_sum.33916: f32[], reduce_sum.33917: f32[]) -> f32[] {
  %reduce_sum.33916 = f32[] parameter(0)
  %reduce_sum.33917 = f32[] parameter(1)
  ROOT %reduce_sum.33918 = f32[] add(%reduce_sum.33916, %reduce_sum.33917)
}

%region_1210.33919.clone (reduce_sum.2881: f32[], reduce_sum.2882: f32[]) -> f32[] {
  %reduce_sum.2881 = f32[] parameter(0)
  %reduce_sum.2882 = f32[] parameter(1)
  ROOT %reduce_sum.2883 = f32[] add(%reduce_sum.2881, %reduce_sum.2882)
}

%region_1211.33926 (reduce_sum.33923: f32[], reduce_sum.33924: f32[]) -> f32[] {
  %reduce_sum.33923 = f32[] parameter(0)
  %reduce_sum.33924 = f32[] parameter(1)
  ROOT %reduce_sum.33925 = f32[] add(%reduce_sum.33923, %reduce_sum.33924)
}

%region_1211.33926.clone (reduce_sum.2884: f32[], reduce_sum.2885: f32[]) -> f32[] {
  %reduce_sum.2884 = f32[] parameter(0)
  %reduce_sum.2885 = f32[] parameter(1)
  ROOT %reduce_sum.2886 = f32[] add(%reduce_sum.2884, %reduce_sum.2885)
}

%region_1212.33933 (reduce_sum.33930: f32[], reduce_sum.33931: f32[]) -> f32[] {
  %reduce_sum.33930 = f32[] parameter(0)
  %reduce_sum.33931 = f32[] parameter(1)
  ROOT %reduce_sum.33932 = f32[] add(%reduce_sum.33930, %reduce_sum.33931)
}

%region_1212.33933.clone (reduce_sum.2887: f32[], reduce_sum.2888: f32[]) -> f32[] {
  %reduce_sum.2887 = f32[] parameter(0)
  %reduce_sum.2888 = f32[] parameter(1)
  ROOT %reduce_sum.2889 = f32[] add(%reduce_sum.2887, %reduce_sum.2888)
}

%region_1213.33940 (reduce_sum.33937: f32[], reduce_sum.33938: f32[]) -> f32[] {
  %reduce_sum.33937 = f32[] parameter(0)
  %reduce_sum.33938 = f32[] parameter(1)
  ROOT %reduce_sum.33939 = f32[] add(%reduce_sum.33937, %reduce_sum.33938)
}

%region_1214.33947 (reduce_sum.33944: f32[], reduce_sum.33945: f32[]) -> f32[] {
  %reduce_sum.33944 = f32[] parameter(0)
  %reduce_sum.33945 = f32[] parameter(1)
  ROOT %reduce_sum.33946 = f32[] add(%reduce_sum.33944, %reduce_sum.33945)
}

%region_1215.33954 (reduce_sum.33951: f32[], reduce_sum.33952: f32[]) -> f32[] {
  %reduce_sum.33951 = f32[] parameter(0)
  %reduce_sum.33952 = f32[] parameter(1)
  ROOT %reduce_sum.33953 = f32[] add(%reduce_sum.33951, %reduce_sum.33952)
}

%region_1215.33954.clone (reduce_sum.2890: f32[], reduce_sum.2891: f32[]) -> f32[] {
  %reduce_sum.2890 = f32[] parameter(0)
  %reduce_sum.2891 = f32[] parameter(1)
  ROOT %reduce_sum.2892 = f32[] add(%reduce_sum.2890, %reduce_sum.2891)
}

%region_1216.33961 (reduce_sum.33958: f32[], reduce_sum.33959: f32[]) -> f32[] {
  %reduce_sum.33958 = f32[] parameter(0)
  %reduce_sum.33959 = f32[] parameter(1)
  ROOT %reduce_sum.33960 = f32[] add(%reduce_sum.33958, %reduce_sum.33959)
}

%region_1216.33961.clone (reduce_sum.2893: f32[], reduce_sum.2894: f32[]) -> f32[] {
  %reduce_sum.2893 = f32[] parameter(0)
  %reduce_sum.2894 = f32[] parameter(1)
  ROOT %reduce_sum.2895 = f32[] add(%reduce_sum.2893, %reduce_sum.2894)
}

%region_1217.33968 (reduce_sum.33965: f32[], reduce_sum.33966: f32[]) -> f32[] {
  %reduce_sum.33965 = f32[] parameter(0)
  %reduce_sum.33966 = f32[] parameter(1)
  ROOT %reduce_sum.33967 = f32[] add(%reduce_sum.33965, %reduce_sum.33966)
}

%region_1217.33968.clone (reduce_sum.2896: f32[], reduce_sum.2897: f32[]) -> f32[] {
  %reduce_sum.2896 = f32[] parameter(0)
  %reduce_sum.2897 = f32[] parameter(1)
  ROOT %reduce_sum.2898 = f32[] add(%reduce_sum.2896, %reduce_sum.2897)
}

%region_1218.33975 (reduce_sum.33972: f32[], reduce_sum.33973: f32[]) -> f32[] {
  %reduce_sum.33972 = f32[] parameter(0)
  %reduce_sum.33973 = f32[] parameter(1)
  ROOT %reduce_sum.33974 = f32[] add(%reduce_sum.33972, %reduce_sum.33973)
}

%region_1218.33975.clone (reduce_sum.2899: f32[], reduce_sum.2900: f32[]) -> f32[] {
  %reduce_sum.2899 = f32[] parameter(0)
  %reduce_sum.2900 = f32[] parameter(1)
  ROOT %reduce_sum.2901 = f32[] add(%reduce_sum.2899, %reduce_sum.2900)
}

%region_1219.33982 (reduce_sum.33979: f32[], reduce_sum.33980: f32[]) -> f32[] {
  %reduce_sum.33979 = f32[] parameter(0)
  %reduce_sum.33980 = f32[] parameter(1)
  ROOT %reduce_sum.33981 = f32[] add(%reduce_sum.33979, %reduce_sum.33980)
}

%region_1219.33982.clone (reduce_sum.2902: f32[], reduce_sum.2903: f32[]) -> f32[] {
  %reduce_sum.2902 = f32[] parameter(0)
  %reduce_sum.2903 = f32[] parameter(1)
  ROOT %reduce_sum.2904 = f32[] add(%reduce_sum.2902, %reduce_sum.2903)
}

%region_1220.33989 (reduce_sum.33986: f32[], reduce_sum.33987: f32[]) -> f32[] {
  %reduce_sum.33986 = f32[] parameter(0)
  %reduce_sum.33987 = f32[] parameter(1)
  ROOT %reduce_sum.33988 = f32[] add(%reduce_sum.33986, %reduce_sum.33987)
}

%region_1220.33989.clone (reduce_sum.2905: f32[], reduce_sum.2906: f32[]) -> f32[] {
  %reduce_sum.2905 = f32[] parameter(0)
  %reduce_sum.2906 = f32[] parameter(1)
  ROOT %reduce_sum.2907 = f32[] add(%reduce_sum.2905, %reduce_sum.2906)
}

%region_1221.33996 (reduce_sum.33993: f32[], reduce_sum.33994: f32[]) -> f32[] {
  %reduce_sum.33993 = f32[] parameter(0)
  %reduce_sum.33994 = f32[] parameter(1)
  ROOT %reduce_sum.33995 = f32[] add(%reduce_sum.33993, %reduce_sum.33994)
}

%region_1221.33996.clone (reduce_sum.2908: f32[], reduce_sum.2909: f32[]) -> f32[] {
  %reduce_sum.2908 = f32[] parameter(0)
  %reduce_sum.2909 = f32[] parameter(1)
  ROOT %reduce_sum.2913 = f32[] add(%reduce_sum.2908, %reduce_sum.2909)
}

%region_1222.34003 (reduce_sum.34000: f32[], reduce_sum.34001: f32[]) -> f32[] {
  %reduce_sum.34000 = f32[] parameter(0)
  %reduce_sum.34001 = f32[] parameter(1)
  ROOT %reduce_sum.34002 = f32[] add(%reduce_sum.34000, %reduce_sum.34001)
}

%region_1223.34010 (reduce_sum.34007: f32[], reduce_sum.34008: f32[]) -> f32[] {
  %reduce_sum.34007 = f32[] parameter(0)
  %reduce_sum.34008 = f32[] parameter(1)
  ROOT %reduce_sum.34009 = f32[] add(%reduce_sum.34007, %reduce_sum.34008)
}

%region_1224.34017 (reduce_sum.34014: f32[], reduce_sum.34015: f32[]) -> f32[] {
  %reduce_sum.34014 = f32[] parameter(0)
  %reduce_sum.34015 = f32[] parameter(1)
  ROOT %reduce_sum.34016 = f32[] add(%reduce_sum.34014, %reduce_sum.34015)
}

%region_1224.34017.clone (reduce_sum.2916: f32[], reduce_sum.2917: f32[]) -> f32[] {
  %reduce_sum.2916 = f32[] parameter(0)
  %reduce_sum.2917 = f32[] parameter(1)
  ROOT %reduce_sum.2918 = f32[] add(%reduce_sum.2916, %reduce_sum.2917)
}

%region_1225.34024 (reduce_sum.34021: f32[], reduce_sum.34022: f32[]) -> f32[] {
  %reduce_sum.34021 = f32[] parameter(0)
  %reduce_sum.34022 = f32[] parameter(1)
  ROOT %reduce_sum.34023 = f32[] add(%reduce_sum.34021, %reduce_sum.34022)
}

%region_1225.34024.clone (reduce_sum.2922: f32[], reduce_sum.2925: f32[]) -> f32[] {
  %reduce_sum.2922 = f32[] parameter(0)
  %reduce_sum.2925 = f32[] parameter(1)
  ROOT %reduce_sum.2926 = f32[] add(%reduce_sum.2922, %reduce_sum.2925)
}

%region_1226.34031 (reduce_sum.34028: f32[], reduce_sum.34029: f32[]) -> f32[] {
  %reduce_sum.34028 = f32[] parameter(0)
  %reduce_sum.34029 = f32[] parameter(1)
  ROOT %reduce_sum.34030 = f32[] add(%reduce_sum.34028, %reduce_sum.34029)
}

%region_1226.34031.clone (reduce_sum.2927: f32[], reduce_sum.2928: f32[]) -> f32[] {
  %reduce_sum.2927 = f32[] parameter(0)
  %reduce_sum.2928 = f32[] parameter(1)
  ROOT %reduce_sum.2929 = f32[] add(%reduce_sum.2927, %reduce_sum.2928)
}

%region_1227.34038 (reduce_sum.34035: f32[], reduce_sum.34036: f32[]) -> f32[] {
  %reduce_sum.34035 = f32[] parameter(0)
  %reduce_sum.34036 = f32[] parameter(1)
  ROOT %reduce_sum.34037 = f32[] add(%reduce_sum.34035, %reduce_sum.34036)
}

%region_1227.34038.clone (reduce_sum.2930: f32[], reduce_sum.2931: f32[]) -> f32[] {
  %reduce_sum.2930 = f32[] parameter(0)
  %reduce_sum.2931 = f32[] parameter(1)
  ROOT %reduce_sum.2932 = f32[] add(%reduce_sum.2930, %reduce_sum.2931)
}

%region_1228.34045 (reduce_sum.34042: f32[], reduce_sum.34043: f32[]) -> f32[] {
  %reduce_sum.34042 = f32[] parameter(0)
  %reduce_sum.34043 = f32[] parameter(1)
  ROOT %reduce_sum.34044 = f32[] add(%reduce_sum.34042, %reduce_sum.34043)
}

%region_1228.34045.clone (reduce_sum.2933: f32[], reduce_sum.2934: f32[]) -> f32[] {
  %reduce_sum.2933 = f32[] parameter(0)
  %reduce_sum.2934 = f32[] parameter(1)
  ROOT %reduce_sum.2935 = f32[] add(%reduce_sum.2933, %reduce_sum.2934)
}

%region_1229.34052 (reduce_sum.34049: f32[], reduce_sum.34050: f32[]) -> f32[] {
  %reduce_sum.34049 = f32[] parameter(0)
  %reduce_sum.34050 = f32[] parameter(1)
  ROOT %reduce_sum.34051 = f32[] add(%reduce_sum.34049, %reduce_sum.34050)
}

%region_1229.34052.clone (reduce_sum.2936: f32[], reduce_sum.2937: f32[]) -> f32[] {
  %reduce_sum.2936 = f32[] parameter(0)
  %reduce_sum.2937 = f32[] parameter(1)
  ROOT %reduce_sum.2938 = f32[] add(%reduce_sum.2936, %reduce_sum.2937)
}

%region_1230.34059 (reduce_sum.34056: f32[], reduce_sum.34057: f32[]) -> f32[] {
  %reduce_sum.34056 = f32[] parameter(0)
  %reduce_sum.34057 = f32[] parameter(1)
  ROOT %reduce_sum.34058 = f32[] add(%reduce_sum.34056, %reduce_sum.34057)
}

%region_1230.34059.clone (reduce_sum.2939: f32[], reduce_sum.2940: f32[]) -> f32[] {
  %reduce_sum.2939 = f32[] parameter(0)
  %reduce_sum.2940 = f32[] parameter(1)
  ROOT %reduce_sum.2941 = f32[] add(%reduce_sum.2939, %reduce_sum.2940)
}

%region_1231.34066 (reduce_sum.34063: f32[], reduce_sum.34064: f32[]) -> f32[] {
  %reduce_sum.34063 = f32[] parameter(0)
  %reduce_sum.34064 = f32[] parameter(1)
  ROOT %reduce_sum.34065 = f32[] add(%reduce_sum.34063, %reduce_sum.34064)
}

%region_1232.34073 (reduce_sum.34070: f32[], reduce_sum.34071: f32[]) -> f32[] {
  %reduce_sum.34070 = f32[] parameter(0)
  %reduce_sum.34071 = f32[] parameter(1)
  ROOT %reduce_sum.34072 = f32[] add(%reduce_sum.34070, %reduce_sum.34071)
}

%region_1233.34080 (reduce_sum.34077: f32[], reduce_sum.34078: f32[]) -> f32[] {
  %reduce_sum.34077 = f32[] parameter(0)
  %reduce_sum.34078 = f32[] parameter(1)
  ROOT %reduce_sum.34079 = f32[] add(%reduce_sum.34077, %reduce_sum.34078)
}

%region_1233.34080.clone (reduce_sum.2942: f32[], reduce_sum.2943: f32[]) -> f32[] {
  %reduce_sum.2942 = f32[] parameter(0)
  %reduce_sum.2943 = f32[] parameter(1)
  ROOT %reduce_sum.2944 = f32[] add(%reduce_sum.2942, %reduce_sum.2943)
}

%region_1234.34087 (reduce_sum.34084: f32[], reduce_sum.34085: f32[]) -> f32[] {
  %reduce_sum.34084 = f32[] parameter(0)
  %reduce_sum.34085 = f32[] parameter(1)
  ROOT %reduce_sum.34086 = f32[] add(%reduce_sum.34084, %reduce_sum.34085)
}

%region_1234.34087.clone (reduce_sum.2948: f32[], reduce_sum.2950: f32[]) -> f32[] {
  %reduce_sum.2948 = f32[] parameter(0)
  %reduce_sum.2950 = f32[] parameter(1)
  ROOT %reduce_sum.2951 = f32[] add(%reduce_sum.2948, %reduce_sum.2950)
}

%region_1235.34094 (reduce_sum.34091: f32[], reduce_sum.34092: f32[]) -> f32[] {
  %reduce_sum.34091 = f32[] parameter(0)
  %reduce_sum.34092 = f32[] parameter(1)
  ROOT %reduce_sum.34093 = f32[] add(%reduce_sum.34091, %reduce_sum.34092)
}

%region_1235.34094.clone (reduce_sum.2952: f32[], reduce_sum.2953: f32[]) -> f32[] {
  %reduce_sum.2952 = f32[] parameter(0)
  %reduce_sum.2953 = f32[] parameter(1)
  ROOT %reduce_sum.2954 = f32[] add(%reduce_sum.2952, %reduce_sum.2953)
}

%region_1236.34101 (reduce_sum.34098: f32[], reduce_sum.34099: f32[]) -> f32[] {
  %reduce_sum.34098 = f32[] parameter(0)
  %reduce_sum.34099 = f32[] parameter(1)
  ROOT %reduce_sum.34100 = f32[] add(%reduce_sum.34098, %reduce_sum.34099)
}

%region_1236.34101.clone (reduce_sum.2955: f32[], reduce_sum.2956: f32[]) -> f32[] {
  %reduce_sum.2955 = f32[] parameter(0)
  %reduce_sum.2956 = f32[] parameter(1)
  ROOT %reduce_sum.2957 = f32[] add(%reduce_sum.2955, %reduce_sum.2956)
}

%region_1237.34108 (reduce_sum.34105: f32[], reduce_sum.34106: f32[]) -> f32[] {
  %reduce_sum.34105 = f32[] parameter(0)
  %reduce_sum.34106 = f32[] parameter(1)
  ROOT %reduce_sum.34107 = f32[] add(%reduce_sum.34105, %reduce_sum.34106)
}

%region_1237.34108.clone (reduce_sum.2958: f32[], reduce_sum.2959: f32[]) -> f32[] {
  %reduce_sum.2958 = f32[] parameter(0)
  %reduce_sum.2959 = f32[] parameter(1)
  ROOT %reduce_sum.2960 = f32[] add(%reduce_sum.2958, %reduce_sum.2959)
}

%region_1238.34115 (reduce_sum.34112: f32[], reduce_sum.34113: f32[]) -> f32[] {
  %reduce_sum.34112 = f32[] parameter(0)
  %reduce_sum.34113 = f32[] parameter(1)
  ROOT %reduce_sum.34114 = f32[] add(%reduce_sum.34112, %reduce_sum.34113)
}

%region_1238.34115.clone (reduce_sum.2961: f32[], reduce_sum.2962: f32[]) -> f32[] {
  %reduce_sum.2961 = f32[] parameter(0)
  %reduce_sum.2962 = f32[] parameter(1)
  ROOT %reduce_sum.2963 = f32[] add(%reduce_sum.2961, %reduce_sum.2962)
}

%region_1239.34122 (reduce_sum.34119: f32[], reduce_sum.34120: f32[]) -> f32[] {
  %reduce_sum.34119 = f32[] parameter(0)
  %reduce_sum.34120 = f32[] parameter(1)
  ROOT %reduce_sum.34121 = f32[] add(%reduce_sum.34119, %reduce_sum.34120)
}

%region_1239.34122.clone (reduce_sum.2964: f32[], reduce_sum.2965: f32[]) -> f32[] {
  %reduce_sum.2964 = f32[] parameter(0)
  %reduce_sum.2965 = f32[] parameter(1)
  ROOT %reduce_sum.2966 = f32[] add(%reduce_sum.2964, %reduce_sum.2965)
}

%region_1240.34129 (reduce_sum.34126: f32[], reduce_sum.34127: f32[]) -> f32[] {
  %reduce_sum.34126 = f32[] parameter(0)
  %reduce_sum.34127 = f32[] parameter(1)
  ROOT %reduce_sum.34128 = f32[] add(%reduce_sum.34126, %reduce_sum.34127)
}

%region_1241.34136 (reduce_sum.34133: f32[], reduce_sum.34134: f32[]) -> f32[] {
  %reduce_sum.34133 = f32[] parameter(0)
  %reduce_sum.34134 = f32[] parameter(1)
  ROOT %reduce_sum.34135 = f32[] add(%reduce_sum.34133, %reduce_sum.34134)
}

%region_1242.34143 (reduce_sum.34140: f32[], reduce_sum.34141: f32[]) -> f32[] {
  %reduce_sum.34140 = f32[] parameter(0)
  %reduce_sum.34141 = f32[] parameter(1)
  ROOT %reduce_sum.34142 = f32[] add(%reduce_sum.34140, %reduce_sum.34141)
}

%region_1242.34143.clone (reduce_sum.2967: f32[], reduce_sum.2968: f32[]) -> f32[] {
  %reduce_sum.2967 = f32[] parameter(0)
  %reduce_sum.2968 = f32[] parameter(1)
  ROOT %reduce_sum.2969 = f32[] add(%reduce_sum.2967, %reduce_sum.2968)
}

%region_1243.34150 (reduce_sum.34147: f32[], reduce_sum.34148: f32[]) -> f32[] {
  %reduce_sum.34147 = f32[] parameter(0)
  %reduce_sum.34148 = f32[] parameter(1)
  ROOT %reduce_sum.34149 = f32[] add(%reduce_sum.34147, %reduce_sum.34148)
}

%region_1243.34150.clone (reduce_sum.2970: f32[], reduce_sum.2971: f32[]) -> f32[] {
  %reduce_sum.2970 = f32[] parameter(0)
  %reduce_sum.2971 = f32[] parameter(1)
  ROOT %reduce_sum.2972 = f32[] add(%reduce_sum.2970, %reduce_sum.2971)
}

%region_1244.34157 (reduce_sum.34154: f32[], reduce_sum.34155: f32[]) -> f32[] {
  %reduce_sum.34154 = f32[] parameter(0)
  %reduce_sum.34155 = f32[] parameter(1)
  ROOT %reduce_sum.34156 = f32[] add(%reduce_sum.34154, %reduce_sum.34155)
}

%region_1244.34157.clone (reduce_sum.2973: f32[], reduce_sum.2974: f32[]) -> f32[] {
  %reduce_sum.2973 = f32[] parameter(0)
  %reduce_sum.2974 = f32[] parameter(1)
  ROOT %reduce_sum.2975 = f32[] add(%reduce_sum.2973, %reduce_sum.2974)
}

%region_1245.34164 (reduce_sum.34161: f32[], reduce_sum.34162: f32[]) -> f32[] {
  %reduce_sum.34161 = f32[] parameter(0)
  %reduce_sum.34162 = f32[] parameter(1)
  ROOT %reduce_sum.34163 = f32[] add(%reduce_sum.34161, %reduce_sum.34162)
}

%region_1245.34164.clone (reduce_sum.2976: f32[], reduce_sum.2977: f32[]) -> f32[] {
  %reduce_sum.2976 = f32[] parameter(0)
  %reduce_sum.2977 = f32[] parameter(1)
  ROOT %reduce_sum.2978 = f32[] add(%reduce_sum.2976, %reduce_sum.2977)
}

%region_1246.34171 (reduce_sum.34168: f32[], reduce_sum.34169: f32[]) -> f32[] {
  %reduce_sum.34168 = f32[] parameter(0)
  %reduce_sum.34169 = f32[] parameter(1)
  ROOT %reduce_sum.34170 = f32[] add(%reduce_sum.34168, %reduce_sum.34169)
}

%region_1246.34171.clone (reduce_sum.2979: f32[], reduce_sum.2980: f32[]) -> f32[] {
  %reduce_sum.2979 = f32[] parameter(0)
  %reduce_sum.2980 = f32[] parameter(1)
  ROOT %reduce_sum.2981 = f32[] add(%reduce_sum.2979, %reduce_sum.2980)
}

%region_1247.34178 (reduce_sum.34175: f32[], reduce_sum.34176: f32[]) -> f32[] {
  %reduce_sum.34175 = f32[] parameter(0)
  %reduce_sum.34176 = f32[] parameter(1)
  ROOT %reduce_sum.34177 = f32[] add(%reduce_sum.34175, %reduce_sum.34176)
}

%region_1247.34178.clone (reduce_sum.2982: f32[], reduce_sum.2986: f32[]) -> f32[] {
  %reduce_sum.2982 = f32[] parameter(0)
  %reduce_sum.2986 = f32[] parameter(1)
  ROOT %reduce_sum.2988 = f32[] add(%reduce_sum.2982, %reduce_sum.2986)
}

%region_1248.34185 (reduce_sum.34182: f32[], reduce_sum.34183: f32[]) -> f32[] {
  %reduce_sum.34182 = f32[] parameter(0)
  %reduce_sum.34183 = f32[] parameter(1)
  ROOT %reduce_sum.34184 = f32[] add(%reduce_sum.34182, %reduce_sum.34183)
}

%region_1248.34185.clone (reduce_sum.2989: f32[], reduce_sum.2990: f32[]) -> f32[] {
  %reduce_sum.2989 = f32[] parameter(0)
  %reduce_sum.2990 = f32[] parameter(1)
  ROOT %reduce_sum.2994 = f32[] add(%reduce_sum.2989, %reduce_sum.2990)
}

%region_1249.34192 (reduce_sum.34189: f32[], reduce_sum.34190: f32[]) -> f32[] {
  %reduce_sum.34189 = f32[] parameter(0)
  %reduce_sum.34190 = f32[] parameter(1)
  ROOT %reduce_sum.34191 = f32[] add(%reduce_sum.34189, %reduce_sum.34190)
}

%region_1250.34199 (reduce_sum.34196: f32[], reduce_sum.34197: f32[]) -> f32[] {
  %reduce_sum.34196 = f32[] parameter(0)
  %reduce_sum.34197 = f32[] parameter(1)
  ROOT %reduce_sum.34198 = f32[] add(%reduce_sum.34196, %reduce_sum.34197)
}

%region_1251.34206 (reduce_sum.34203: f32[], reduce_sum.34204: f32[]) -> f32[] {
  %reduce_sum.34203 = f32[] parameter(0)
  %reduce_sum.34204 = f32[] parameter(1)
  ROOT %reduce_sum.34205 = f32[] add(%reduce_sum.34203, %reduce_sum.34204)
}

%region_1251.34206.clone (reduce_sum.2996: f32[], reduce_sum.2997: f32[]) -> f32[] {
  %reduce_sum.2996 = f32[] parameter(0)
  %reduce_sum.2997 = f32[] parameter(1)
  ROOT %reduce_sum.2998 = f32[] add(%reduce_sum.2996, %reduce_sum.2997)
}

%region_1252.34213 (reduce_sum.34210: f32[], reduce_sum.34211: f32[]) -> f32[] {
  %reduce_sum.34210 = f32[] parameter(0)
  %reduce_sum.34211 = f32[] parameter(1)
  ROOT %reduce_sum.34212 = f32[] add(%reduce_sum.34210, %reduce_sum.34211)
}

%region_1252.34213.clone (reduce_sum.3002: f32[], reduce_sum.3004: f32[]) -> f32[] {
  %reduce_sum.3002 = f32[] parameter(0)
  %reduce_sum.3004 = f32[] parameter(1)
  ROOT %reduce_sum.3005 = f32[] add(%reduce_sum.3002, %reduce_sum.3004)
}

%region_1253.34220 (reduce_sum.34217: f32[], reduce_sum.34218: f32[]) -> f32[] {
  %reduce_sum.34217 = f32[] parameter(0)
  %reduce_sum.34218 = f32[] parameter(1)
  ROOT %reduce_sum.34219 = f32[] add(%reduce_sum.34217, %reduce_sum.34218)
}

%region_1253.34220.clone (reduce_sum.3006: f32[], reduce_sum.3007: f32[]) -> f32[] {
  %reduce_sum.3006 = f32[] parameter(0)
  %reduce_sum.3007 = f32[] parameter(1)
  ROOT %reduce_sum.3008 = f32[] add(%reduce_sum.3006, %reduce_sum.3007)
}

%region_1254.34227 (reduce_sum.34224: f32[], reduce_sum.34225: f32[]) -> f32[] {
  %reduce_sum.34224 = f32[] parameter(0)
  %reduce_sum.34225 = f32[] parameter(1)
  ROOT %reduce_sum.34226 = f32[] add(%reduce_sum.34224, %reduce_sum.34225)
}

%region_1254.34227.clone (reduce_sum.3009: f32[], reduce_sum.3010: f32[]) -> f32[] {
  %reduce_sum.3009 = f32[] parameter(0)
  %reduce_sum.3010 = f32[] parameter(1)
  ROOT %reduce_sum.3011 = f32[] add(%reduce_sum.3009, %reduce_sum.3010)
}

%region_1255.34234 (reduce_sum.34231: f32[], reduce_sum.34232: f32[]) -> f32[] {
  %reduce_sum.34231 = f32[] parameter(0)
  %reduce_sum.34232 = f32[] parameter(1)
  ROOT %reduce_sum.34233 = f32[] add(%reduce_sum.34231, %reduce_sum.34232)
}

%region_1255.34234.clone (reduce_sum.3012: f32[], reduce_sum.3013: f32[]) -> f32[] {
  %reduce_sum.3012 = f32[] parameter(0)
  %reduce_sum.3013 = f32[] parameter(1)
  ROOT %reduce_sum.3014 = f32[] add(%reduce_sum.3012, %reduce_sum.3013)
}

%region_1256.34241 (reduce_sum.34238: f32[], reduce_sum.34239: f32[]) -> f32[] {
  %reduce_sum.34238 = f32[] parameter(0)
  %reduce_sum.34239 = f32[] parameter(1)
  ROOT %reduce_sum.34240 = f32[] add(%reduce_sum.34238, %reduce_sum.34239)
}

%region_1256.34241.clone (reduce_sum.3015: f32[], reduce_sum.3016: f32[]) -> f32[] {
  %reduce_sum.3015 = f32[] parameter(0)
  %reduce_sum.3016 = f32[] parameter(1)
  ROOT %reduce_sum.3017 = f32[] add(%reduce_sum.3015, %reduce_sum.3016)
}

%region_1257.34248 (reduce_sum.34245: f32[], reduce_sum.34246: f32[]) -> f32[] {
  %reduce_sum.34245 = f32[] parameter(0)
  %reduce_sum.34246 = f32[] parameter(1)
  ROOT %reduce_sum.34247 = f32[] add(%reduce_sum.34245, %reduce_sum.34246)
}

%region_1257.34248.clone (reduce_sum.3018: f32[], reduce_sum.3019: f32[]) -> f32[] {
  %reduce_sum.3018 = f32[] parameter(0)
  %reduce_sum.3019 = f32[] parameter(1)
  ROOT %reduce_sum.3020 = f32[] add(%reduce_sum.3018, %reduce_sum.3019)
}

%region_1258.34255 (reduce_sum.34252: f32[], reduce_sum.34253: f32[]) -> f32[] {
  %reduce_sum.34252 = f32[] parameter(0)
  %reduce_sum.34253 = f32[] parameter(1)
  ROOT %reduce_sum.34254 = f32[] add(%reduce_sum.34252, %reduce_sum.34253)
}

%region_1259.34262 (reduce_sum.34259: f32[], reduce_sum.34260: f32[]) -> f32[] {
  %reduce_sum.34259 = f32[] parameter(0)
  %reduce_sum.34260 = f32[] parameter(1)
  ROOT %reduce_sum.34261 = f32[] add(%reduce_sum.34259, %reduce_sum.34260)
}

%region_1260.34269 (reduce_sum.34266: f32[], reduce_sum.34267: f32[]) -> f32[] {
  %reduce_sum.34266 = f32[] parameter(0)
  %reduce_sum.34267 = f32[] parameter(1)
  ROOT %reduce_sum.34268 = f32[] add(%reduce_sum.34266, %reduce_sum.34267)
}

%region_1260.34269.clone (reduce_sum.3021: f32[], reduce_sum.3022: f32[]) -> f32[] {
  %reduce_sum.3021 = f32[] parameter(0)
  %reduce_sum.3022 = f32[] parameter(1)
  ROOT %reduce_sum.3026 = f32[] add(%reduce_sum.3021, %reduce_sum.3022)
}

%region_1261.34276 (reduce_sum.34273: f32[], reduce_sum.34274: f32[]) -> f32[] {
  %reduce_sum.34273 = f32[] parameter(0)
  %reduce_sum.34274 = f32[] parameter(1)
  ROOT %reduce_sum.34275 = f32[] add(%reduce_sum.34273, %reduce_sum.34274)
}

%region_1261.34276.clone (reduce_sum.3028: f32[], reduce_sum.3029: f32[]) -> f32[] {
  %reduce_sum.3028 = f32[] parameter(0)
  %reduce_sum.3029 = f32[] parameter(1)
  ROOT %reduce_sum.3030 = f32[] add(%reduce_sum.3028, %reduce_sum.3029)
}

%region_1262.34283 (reduce_sum.34280: f32[], reduce_sum.34281: f32[]) -> f32[] {
  %reduce_sum.34280 = f32[] parameter(0)
  %reduce_sum.34281 = f32[] parameter(1)
  ROOT %reduce_sum.34282 = f32[] add(%reduce_sum.34280, %reduce_sum.34281)
}

%region_1262.34283.clone (reduce_sum.3031: f32[], reduce_sum.3032: f32[]) -> f32[] {
  %reduce_sum.3031 = f32[] parameter(0)
  %reduce_sum.3032 = f32[] parameter(1)
  ROOT %reduce_sum.3033 = f32[] add(%reduce_sum.3031, %reduce_sum.3032)
}

%region_1263.34290 (reduce_sum.34287: f32[], reduce_sum.34288: f32[]) -> f32[] {
  %reduce_sum.34287 = f32[] parameter(0)
  %reduce_sum.34288 = f32[] parameter(1)
  ROOT %reduce_sum.34289 = f32[] add(%reduce_sum.34287, %reduce_sum.34288)
}

%region_1263.34290.clone (reduce_sum.3034: f32[], reduce_sum.3035: f32[]) -> f32[] {
  %reduce_sum.3034 = f32[] parameter(0)
  %reduce_sum.3035 = f32[] parameter(1)
  ROOT %reduce_sum.3036 = f32[] add(%reduce_sum.3034, %reduce_sum.3035)
}

%region_1264.34297 (reduce_sum.34294: f32[], reduce_sum.34295: f32[]) -> f32[] {
  %reduce_sum.34294 = f32[] parameter(0)
  %reduce_sum.34295 = f32[] parameter(1)
  ROOT %reduce_sum.34296 = f32[] add(%reduce_sum.34294, %reduce_sum.34295)
}

%region_1264.34297.clone (reduce_sum.3037: f32[], reduce_sum.3038: f32[]) -> f32[] {
  %reduce_sum.3037 = f32[] parameter(0)
  %reduce_sum.3038 = f32[] parameter(1)
  ROOT %reduce_sum.3039 = f32[] add(%reduce_sum.3037, %reduce_sum.3038)
}

%region_1265.34304 (reduce_sum.34301: f32[], reduce_sum.34302: f32[]) -> f32[] {
  %reduce_sum.34301 = f32[] parameter(0)
  %reduce_sum.34302 = f32[] parameter(1)
  ROOT %reduce_sum.34303 = f32[] add(%reduce_sum.34301, %reduce_sum.34302)
}

%region_1265.34304.clone (reduce_sum.3040: f32[], reduce_sum.3041: f32[]) -> f32[] {
  %reduce_sum.3040 = f32[] parameter(0)
  %reduce_sum.3041 = f32[] parameter(1)
  ROOT %reduce_sum.3042 = f32[] add(%reduce_sum.3040, %reduce_sum.3041)
}

%region_1266.34311 (reduce_sum.34308: f32[], reduce_sum.34309: f32[]) -> f32[] {
  %reduce_sum.34308 = f32[] parameter(0)
  %reduce_sum.34309 = f32[] parameter(1)
  ROOT %reduce_sum.34310 = f32[] add(%reduce_sum.34308, %reduce_sum.34309)
}

%region_1266.34311.clone (reduce_sum.3043: f32[], reduce_sum.3044: f32[]) -> f32[] {
  %reduce_sum.3043 = f32[] parameter(0)
  %reduce_sum.3044 = f32[] parameter(1)
  ROOT %reduce_sum.3045 = f32[] add(%reduce_sum.3043, %reduce_sum.3044)
}

%region_1267.34318 (reduce_sum.34315: f32[], reduce_sum.34316: f32[]) -> f32[] {
  %reduce_sum.34315 = f32[] parameter(0)
  %reduce_sum.34316 = f32[] parameter(1)
  ROOT %reduce_sum.34317 = f32[] add(%reduce_sum.34315, %reduce_sum.34316)
}

%region_1268.34325 (reduce_sum.34322: f32[], reduce_sum.34323: f32[]) -> f32[] {
  %reduce_sum.34322 = f32[] parameter(0)
  %reduce_sum.34323 = f32[] parameter(1)
  ROOT %reduce_sum.34324 = f32[] add(%reduce_sum.34322, %reduce_sum.34323)
}

%region_1269.34332 (reduce_sum.34329: f32[], reduce_sum.34330: f32[]) -> f32[] {
  %reduce_sum.34329 = f32[] parameter(0)
  %reduce_sum.34330 = f32[] parameter(1)
  ROOT %reduce_sum.34331 = f32[] add(%reduce_sum.34329, %reduce_sum.34330)
}

%region_1269.34332.clone (reduce_sum.3046: f32[], reduce_sum.3047: f32[]) -> f32[] {
  %reduce_sum.3046 = f32[] parameter(0)
  %reduce_sum.3047 = f32[] parameter(1)
  ROOT %reduce_sum.3048 = f32[] add(%reduce_sum.3046, %reduce_sum.3047)
}

%region_1270.34339 (reduce_sum.34336: f32[], reduce_sum.34337: f32[]) -> f32[] {
  %reduce_sum.34336 = f32[] parameter(0)
  %reduce_sum.34337 = f32[] parameter(1)
  ROOT %reduce_sum.34338 = f32[] add(%reduce_sum.34336, %reduce_sum.34337)
}

%region_1270.34339.clone (reduce_sum.3049: f32[], reduce_sum.3050: f32[]) -> f32[] {
  %reduce_sum.3049 = f32[] parameter(0)
  %reduce_sum.3050 = f32[] parameter(1)
  ROOT %reduce_sum.3051 = f32[] add(%reduce_sum.3049, %reduce_sum.3050)
}

%region_1271.34346 (reduce_sum.34343: f32[], reduce_sum.34344: f32[]) -> f32[] {
  %reduce_sum.34343 = f32[] parameter(0)
  %reduce_sum.34344 = f32[] parameter(1)
  ROOT %reduce_sum.34345 = f32[] add(%reduce_sum.34343, %reduce_sum.34344)
}

%region_1271.34346.clone (reduce_sum.3052: f32[], reduce_sum.3053: f32[]) -> f32[] {
  %reduce_sum.3052 = f32[] parameter(0)
  %reduce_sum.3053 = f32[] parameter(1)
  ROOT %reduce_sum.3054 = f32[] add(%reduce_sum.3052, %reduce_sum.3053)
}

%region_1272.34353 (reduce_sum.34350: f32[], reduce_sum.34351: f32[]) -> f32[] {
  %reduce_sum.34350 = f32[] parameter(0)
  %reduce_sum.34351 = f32[] parameter(1)
  ROOT %reduce_sum.34352 = f32[] add(%reduce_sum.34350, %reduce_sum.34351)
}

%region_1272.34353.clone (reduce_sum.3055: f32[], reduce_sum.3056: f32[]) -> f32[] {
  %reduce_sum.3055 = f32[] parameter(0)
  %reduce_sum.3056 = f32[] parameter(1)
  ROOT %reduce_sum.3057 = f32[] add(%reduce_sum.3055, %reduce_sum.3056)
}

%region_1273.34360 (reduce_sum.34357: f32[], reduce_sum.34358: f32[]) -> f32[] {
  %reduce_sum.34357 = f32[] parameter(0)
  %reduce_sum.34358 = f32[] parameter(1)
  ROOT %reduce_sum.34359 = f32[] add(%reduce_sum.34357, %reduce_sum.34358)
}

%region_1273.34360.clone (reduce_sum.3058: f32[], reduce_sum.3059: f32[]) -> f32[] {
  %reduce_sum.3058 = f32[] parameter(0)
  %reduce_sum.3059 = f32[] parameter(1)
  ROOT %reduce_sum.3060 = f32[] add(%reduce_sum.3058, %reduce_sum.3059)
}

%region_1274.34367 (reduce_sum.34364: f32[], reduce_sum.34365: f32[]) -> f32[] {
  %reduce_sum.34364 = f32[] parameter(0)
  %reduce_sum.34365 = f32[] parameter(1)
  ROOT %reduce_sum.34366 = f32[] add(%reduce_sum.34364, %reduce_sum.34365)
}

%region_1274.34367.clone (reduce_sum.3064: f32[], reduce_sum.3066: f32[]) -> f32[] {
  %reduce_sum.3064 = f32[] parameter(0)
  %reduce_sum.3066 = f32[] parameter(1)
  ROOT %reduce_sum.3067 = f32[] add(%reduce_sum.3064, %reduce_sum.3066)
}

%region_1275.34374 (reduce_sum.34371: f32[], reduce_sum.34372: f32[]) -> f32[] {
  %reduce_sum.34371 = f32[] parameter(0)
  %reduce_sum.34372 = f32[] parameter(1)
  ROOT %reduce_sum.34373 = f32[] add(%reduce_sum.34371, %reduce_sum.34372)
}

%region_1275.34374.clone (reduce_sum.3068: f32[], reduce_sum.3069: f32[]) -> f32[] {
  %reduce_sum.3068 = f32[] parameter(0)
  %reduce_sum.3069 = f32[] parameter(1)
  ROOT %reduce_sum.3070 = f32[] add(%reduce_sum.3068, %reduce_sum.3069)
}

%region_1276.34381 (reduce_sum.34378: f32[], reduce_sum.34379: f32[]) -> f32[] {
  %reduce_sum.34378 = f32[] parameter(0)
  %reduce_sum.34379 = f32[] parameter(1)
  ROOT %reduce_sum.34380 = f32[] add(%reduce_sum.34378, %reduce_sum.34379)
}

%region_1277.34388 (reduce_sum.34385: f32[], reduce_sum.34386: f32[]) -> f32[] {
  %reduce_sum.34385 = f32[] parameter(0)
  %reduce_sum.34386 = f32[] parameter(1)
  ROOT %reduce_sum.34387 = f32[] add(%reduce_sum.34385, %reduce_sum.34386)
}

%region_1278.34395 (reduce_sum.34392: f32[], reduce_sum.34393: f32[]) -> f32[] {
  %reduce_sum.34392 = f32[] parameter(0)
  %reduce_sum.34393 = f32[] parameter(1)
  ROOT %reduce_sum.34394 = f32[] add(%reduce_sum.34392, %reduce_sum.34393)
}

%region_1278.34395.clone (reduce_sum.3071: f32[], reduce_sum.3072: f32[]) -> f32[] {
  %reduce_sum.3071 = f32[] parameter(0)
  %reduce_sum.3072 = f32[] parameter(1)
  ROOT %reduce_sum.3073 = f32[] add(%reduce_sum.3071, %reduce_sum.3072)
}

%region_1279.34402 (reduce_sum.34399: f32[], reduce_sum.34400: f32[]) -> f32[] {
  %reduce_sum.34399 = f32[] parameter(0)
  %reduce_sum.34400 = f32[] parameter(1)
  ROOT %reduce_sum.34401 = f32[] add(%reduce_sum.34399, %reduce_sum.34400)
}

%region_1279.34402.clone (reduce_sum.3074: f32[], reduce_sum.3075: f32[]) -> f32[] {
  %reduce_sum.3074 = f32[] parameter(0)
  %reduce_sum.3075 = f32[] parameter(1)
  ROOT %reduce_sum.3076 = f32[] add(%reduce_sum.3074, %reduce_sum.3075)
}

%region_1280.34409 (reduce_sum.34406: f32[], reduce_sum.34407: f32[]) -> f32[] {
  %reduce_sum.34406 = f32[] parameter(0)
  %reduce_sum.34407 = f32[] parameter(1)
  ROOT %reduce_sum.34408 = f32[] add(%reduce_sum.34406, %reduce_sum.34407)
}

%region_1280.34409.clone (reduce_sum.3077: f32[], reduce_sum.3078: f32[]) -> f32[] {
  %reduce_sum.3077 = f32[] parameter(0)
  %reduce_sum.3078 = f32[] parameter(1)
  ROOT %reduce_sum.3079 = f32[] add(%reduce_sum.3077, %reduce_sum.3078)
}

%region_1281.34416 (reduce_sum.34413: f32[], reduce_sum.34414: f32[]) -> f32[] {
  %reduce_sum.34413 = f32[] parameter(0)
  %reduce_sum.34414 = f32[] parameter(1)
  ROOT %reduce_sum.34415 = f32[] add(%reduce_sum.34413, %reduce_sum.34414)
}

%region_1281.34416.clone (reduce_sum.3080: f32[], reduce_sum.3081: f32[]) -> f32[] {
  %reduce_sum.3080 = f32[] parameter(0)
  %reduce_sum.3081 = f32[] parameter(1)
  ROOT %reduce_sum.3082 = f32[] add(%reduce_sum.3080, %reduce_sum.3081)
}

%region_1282.34423 (reduce_sum.34420: f32[], reduce_sum.34421: f32[]) -> f32[] {
  %reduce_sum.34420 = f32[] parameter(0)
  %reduce_sum.34421 = f32[] parameter(1)
  ROOT %reduce_sum.34422 = f32[] add(%reduce_sum.34420, %reduce_sum.34421)
}

%region_1282.34423.clone (reduce_sum.3083: f32[], reduce_sum.3084: f32[]) -> f32[] {
  %reduce_sum.3083 = f32[] parameter(0)
  %reduce_sum.3084 = f32[] parameter(1)
  ROOT %reduce_sum.3085 = f32[] add(%reduce_sum.3083, %reduce_sum.3084)
}

%region_1283.34430 (reduce_sum.34427: f32[], reduce_sum.34428: f32[]) -> f32[] {
  %reduce_sum.34427 = f32[] parameter(0)
  %reduce_sum.34428 = f32[] parameter(1)
  ROOT %reduce_sum.34429 = f32[] add(%reduce_sum.34427, %reduce_sum.34428)
}

%region_1283.34430.clone (reduce_sum.3086: f32[], reduce_sum.3087: f32[]) -> f32[] {
  %reduce_sum.3086 = f32[] parameter(0)
  %reduce_sum.3087 = f32[] parameter(1)
  ROOT %reduce_sum.3088 = f32[] add(%reduce_sum.3086, %reduce_sum.3087)
}

%region_1284.34437 (reduce_sum.34434: f32[], reduce_sum.34435: f32[]) -> f32[] {
  %reduce_sum.34434 = f32[] parameter(0)
  %reduce_sum.34435 = f32[] parameter(1)
  ROOT %reduce_sum.34436 = f32[] add(%reduce_sum.34434, %reduce_sum.34435)
}

%region_1284.34437.clone (reduce_sum.3089: f32[], reduce_sum.3090: f32[]) -> f32[] {
  %reduce_sum.3089 = f32[] parameter(0)
  %reduce_sum.3090 = f32[] parameter(1)
  ROOT %reduce_sum.3091 = f32[] add(%reduce_sum.3089, %reduce_sum.3090)
}

%region_1285.34444 (reduce_sum.34441: f32[], reduce_sum.34442: f32[]) -> f32[] {
  %reduce_sum.34441 = f32[] parameter(0)
  %reduce_sum.34442 = f32[] parameter(1)
  ROOT %reduce_sum.34443 = f32[] add(%reduce_sum.34441, %reduce_sum.34442)
}

%region_1286.34451 (reduce_sum.34448: f32[], reduce_sum.34449: f32[]) -> f32[] {
  %reduce_sum.34448 = f32[] parameter(0)
  %reduce_sum.34449 = f32[] parameter(1)
  ROOT %reduce_sum.34450 = f32[] add(%reduce_sum.34448, %reduce_sum.34449)
}

%region_1287.34458 (reduce_sum.34455: f32[], reduce_sum.34456: f32[]) -> f32[] {
  %reduce_sum.34455 = f32[] parameter(0)
  %reduce_sum.34456 = f32[] parameter(1)
  ROOT %reduce_sum.34457 = f32[] add(%reduce_sum.34455, %reduce_sum.34456)
}

%region_1287.34458.clone (reduce_sum.3092: f32[], reduce_sum.3093: f32[]) -> f32[] {
  %reduce_sum.3092 = f32[] parameter(0)
  %reduce_sum.3093 = f32[] parameter(1)
  ROOT %reduce_sum.3094 = f32[] add(%reduce_sum.3092, %reduce_sum.3093)
}

%region_1288.34465 (reduce_sum.34462: f32[], reduce_sum.34463: f32[]) -> f32[] {
  %reduce_sum.34462 = f32[] parameter(0)
  %reduce_sum.34463 = f32[] parameter(1)
  ROOT %reduce_sum.34464 = f32[] add(%reduce_sum.34462, %reduce_sum.34463)
}

%region_1288.34465.clone (reduce_sum.3095: f32[], reduce_sum.3096: f32[]) -> f32[] {
  %reduce_sum.3095 = f32[] parameter(0)
  %reduce_sum.3096 = f32[] parameter(1)
  ROOT %reduce_sum.3097 = f32[] add(%reduce_sum.3095, %reduce_sum.3096)
}

%region_1289.34472 (reduce_sum.34469: f32[], reduce_sum.34470: f32[]) -> f32[] {
  %reduce_sum.34469 = f32[] parameter(0)
  %reduce_sum.34470 = f32[] parameter(1)
  ROOT %reduce_sum.34471 = f32[] add(%reduce_sum.34469, %reduce_sum.34470)
}

%region_1289.34472.clone (reduce_sum.3098: f32[], reduce_sum.3099: f32[]) -> f32[] {
  %reduce_sum.3098 = f32[] parameter(0)
  %reduce_sum.3099 = f32[] parameter(1)
  ROOT %reduce_sum.3100 = f32[] add(%reduce_sum.3098, %reduce_sum.3099)
}

%region_1290.34479 (reduce_sum.34476: f32[], reduce_sum.34477: f32[]) -> f32[] {
  %reduce_sum.34476 = f32[] parameter(0)
  %reduce_sum.34477 = f32[] parameter(1)
  ROOT %reduce_sum.34478 = f32[] add(%reduce_sum.34476, %reduce_sum.34477)
}

%region_1290.34479.clone (reduce_sum.3101: f32[], reduce_sum.3102: f32[]) -> f32[] {
  %reduce_sum.3101 = f32[] parameter(0)
  %reduce_sum.3102 = f32[] parameter(1)
  ROOT %reduce_sum.3103 = f32[] add(%reduce_sum.3101, %reduce_sum.3102)
}

%region_1291.34486 (reduce_sum.34483: f32[], reduce_sum.34484: f32[]) -> f32[] {
  %reduce_sum.34483 = f32[] parameter(0)
  %reduce_sum.34484 = f32[] parameter(1)
  ROOT %reduce_sum.34485 = f32[] add(%reduce_sum.34483, %reduce_sum.34484)
}

%region_1291.34486.clone (reduce_sum.3104: f32[], reduce_sum.3105: f32[]) -> f32[] {
  %reduce_sum.3104 = f32[] parameter(0)
  %reduce_sum.3105 = f32[] parameter(1)
  ROOT %reduce_sum.3106 = f32[] add(%reduce_sum.3104, %reduce_sum.3105)
}

%region_1292.34493 (reduce_sum.34490: f32[], reduce_sum.34491: f32[]) -> f32[] {
  %reduce_sum.34490 = f32[] parameter(0)
  %reduce_sum.34491 = f32[] parameter(1)
  ROOT %reduce_sum.34492 = f32[] add(%reduce_sum.34490, %reduce_sum.34491)
}

%region_1292.34493.clone (reduce_sum.3107: f32[], reduce_sum.3108: f32[]) -> f32[] {
  %reduce_sum.3107 = f32[] parameter(0)
  %reduce_sum.3108 = f32[] parameter(1)
  ROOT %reduce_sum.3109 = f32[] add(%reduce_sum.3107, %reduce_sum.3108)
}

%region_1293.34500 (reduce_sum.34497: f32[], reduce_sum.34498: f32[]) -> f32[] {
  %reduce_sum.34497 = f32[] parameter(0)
  %reduce_sum.34498 = f32[] parameter(1)
  ROOT %reduce_sum.34499 = f32[] add(%reduce_sum.34497, %reduce_sum.34498)
}

%region_1293.34500.clone (reduce_sum.3110: f32[], reduce_sum.3111: f32[]) -> f32[] {
  %reduce_sum.3110 = f32[] parameter(0)
  %reduce_sum.3111 = f32[] parameter(1)
  ROOT %reduce_sum.3112 = f32[] add(%reduce_sum.3110, %reduce_sum.3111)
}

%region_1294.34507 (reduce_sum.34504: f32[], reduce_sum.34505: f32[]) -> f32[] {
  %reduce_sum.34504 = f32[] parameter(0)
  %reduce_sum.34505 = f32[] parameter(1)
  ROOT %reduce_sum.34506 = f32[] add(%reduce_sum.34504, %reduce_sum.34505)
}

%region_1295.34514 (reduce_sum.34511: f32[], reduce_sum.34512: f32[]) -> f32[] {
  %reduce_sum.34511 = f32[] parameter(0)
  %reduce_sum.34512 = f32[] parameter(1)
  ROOT %reduce_sum.34513 = f32[] add(%reduce_sum.34511, %reduce_sum.34512)
}

%region_1296.34521 (reduce_sum.34518: f32[], reduce_sum.34519: f32[]) -> f32[] {
  %reduce_sum.34518 = f32[] parameter(0)
  %reduce_sum.34519 = f32[] parameter(1)
  ROOT %reduce_sum.34520 = f32[] add(%reduce_sum.34518, %reduce_sum.34519)
}

%region_1296.34521.clone (reduce_sum.3113: f32[], reduce_sum.3114: f32[]) -> f32[] {
  %reduce_sum.3113 = f32[] parameter(0)
  %reduce_sum.3114 = f32[] parameter(1)
  ROOT %reduce_sum.3115 = f32[] add(%reduce_sum.3113, %reduce_sum.3114)
}

%region_1297.34528 (reduce_sum.34525: f32[], reduce_sum.34526: f32[]) -> f32[] {
  %reduce_sum.34525 = f32[] parameter(0)
  %reduce_sum.34526 = f32[] parameter(1)
  ROOT %reduce_sum.34527 = f32[] add(%reduce_sum.34525, %reduce_sum.34526)
}

%region_1297.34528.clone (reduce_sum.3116: f32[], reduce_sum.3117: f32[]) -> f32[] {
  %reduce_sum.3116 = f32[] parameter(0)
  %reduce_sum.3117 = f32[] parameter(1)
  ROOT %reduce_sum.3118 = f32[] add(%reduce_sum.3116, %reduce_sum.3117)
}

%region_1298.34535 (reduce_sum.34532: f32[], reduce_sum.34533: f32[]) -> f32[] {
  %reduce_sum.34532 = f32[] parameter(0)
  %reduce_sum.34533 = f32[] parameter(1)
  ROOT %reduce_sum.34534 = f32[] add(%reduce_sum.34532, %reduce_sum.34533)
}

%region_1298.34535.clone (reduce_sum.3119: f32[], reduce_sum.3120: f32[]) -> f32[] {
  %reduce_sum.3119 = f32[] parameter(0)
  %reduce_sum.3120 = f32[] parameter(1)
  ROOT %reduce_sum.3121 = f32[] add(%reduce_sum.3119, %reduce_sum.3120)
}

%region_1299.34542 (reduce_sum.34539: f32[], reduce_sum.34540: f32[]) -> f32[] {
  %reduce_sum.34539 = f32[] parameter(0)
  %reduce_sum.34540 = f32[] parameter(1)
  ROOT %reduce_sum.34541 = f32[] add(%reduce_sum.34539, %reduce_sum.34540)
}

%region_1299.34542.clone (reduce_sum.3122: f32[], reduce_sum.3123: f32[]) -> f32[] {
  %reduce_sum.3122 = f32[] parameter(0)
  %reduce_sum.3123 = f32[] parameter(1)
  ROOT %reduce_sum.3124 = f32[] add(%reduce_sum.3122, %reduce_sum.3123)
}

%region_1300.34549 (reduce_sum.34546: f32[], reduce_sum.34547: f32[]) -> f32[] {
  %reduce_sum.34546 = f32[] parameter(0)
  %reduce_sum.34547 = f32[] parameter(1)
  ROOT %reduce_sum.34548 = f32[] add(%reduce_sum.34546, %reduce_sum.34547)
}

%region_1300.34549.clone (reduce_sum.3125: f32[], reduce_sum.3126: f32[]) -> f32[] {
  %reduce_sum.3125 = f32[] parameter(0)
  %reduce_sum.3126 = f32[] parameter(1)
  ROOT %reduce_sum.3127 = f32[] add(%reduce_sum.3125, %reduce_sum.3126)
}

%region_1301.34556 (reduce_sum.34553: f32[], reduce_sum.34554: f32[]) -> f32[] {
  %reduce_sum.34553 = f32[] parameter(0)
  %reduce_sum.34554 = f32[] parameter(1)
  ROOT %reduce_sum.34555 = f32[] add(%reduce_sum.34553, %reduce_sum.34554)
}

%region_1301.34556.clone (reduce_sum.3128: f32[], reduce_sum.3129: f32[]) -> f32[] {
  %reduce_sum.3128 = f32[] parameter(0)
  %reduce_sum.3129 = f32[] parameter(1)
  ROOT %reduce_sum.3130 = f32[] add(%reduce_sum.3128, %reduce_sum.3129)
}

%region_1302.34563 (reduce_sum.34560: f32[], reduce_sum.34561: f32[]) -> f32[] {
  %reduce_sum.34560 = f32[] parameter(0)
  %reduce_sum.34561 = f32[] parameter(1)
  ROOT %reduce_sum.34562 = f32[] add(%reduce_sum.34560, %reduce_sum.34561)
}

%region_1302.34563.clone (reduce_sum.3131: f32[], reduce_sum.3132: f32[]) -> f32[] {
  %reduce_sum.3131 = f32[] parameter(0)
  %reduce_sum.3132 = f32[] parameter(1)
  ROOT %reduce_sum.3133 = f32[] add(%reduce_sum.3131, %reduce_sum.3132)
}

%region_1303.34570 (reduce_sum.34567: f32[], reduce_sum.34568: f32[]) -> f32[] {
  %reduce_sum.34567 = f32[] parameter(0)
  %reduce_sum.34568 = f32[] parameter(1)
  ROOT %reduce_sum.34569 = f32[] add(%reduce_sum.34567, %reduce_sum.34568)
}

%region_1304.34577 (reduce_sum.34574: f32[], reduce_sum.34575: f32[]) -> f32[] {
  %reduce_sum.34574 = f32[] parameter(0)
  %reduce_sum.34575 = f32[] parameter(1)
  ROOT %reduce_sum.34576 = f32[] add(%reduce_sum.34574, %reduce_sum.34575)
}

%region_1305.34584 (reduce_sum.34581: f32[], reduce_sum.34582: f32[]) -> f32[] {
  %reduce_sum.34581 = f32[] parameter(0)
  %reduce_sum.34582 = f32[] parameter(1)
  ROOT %reduce_sum.34583 = f32[] add(%reduce_sum.34581, %reduce_sum.34582)
}

%region_1305.34584.clone (reduce_sum.3134: f32[], reduce_sum.3135: f32[]) -> f32[] {
  %reduce_sum.3134 = f32[] parameter(0)
  %reduce_sum.3135 = f32[] parameter(1)
  ROOT %reduce_sum.3136 = f32[] add(%reduce_sum.3134, %reduce_sum.3135)
}

%region_1306.34591 (reduce_sum.34588: f32[], reduce_sum.34589: f32[]) -> f32[] {
  %reduce_sum.34588 = f32[] parameter(0)
  %reduce_sum.34589 = f32[] parameter(1)
  ROOT %reduce_sum.34590 = f32[] add(%reduce_sum.34588, %reduce_sum.34589)
}

%region_1306.34591.clone (reduce_sum.3137: f32[], reduce_sum.3138: f32[]) -> f32[] {
  %reduce_sum.3137 = f32[] parameter(0)
  %reduce_sum.3138 = f32[] parameter(1)
  ROOT %reduce_sum.3139 = f32[] add(%reduce_sum.3137, %reduce_sum.3138)
}

%region_1307.34598 (reduce_sum.34595: f32[], reduce_sum.34596: f32[]) -> f32[] {
  %reduce_sum.34595 = f32[] parameter(0)
  %reduce_sum.34596 = f32[] parameter(1)
  ROOT %reduce_sum.34597 = f32[] add(%reduce_sum.34595, %reduce_sum.34596)
}

%region_1307.34598.clone (reduce_sum.3140: f32[], reduce_sum.3141: f32[]) -> f32[] {
  %reduce_sum.3140 = f32[] parameter(0)
  %reduce_sum.3141 = f32[] parameter(1)
  ROOT %reduce_sum.3145 = f32[] add(%reduce_sum.3140, %reduce_sum.3141)
}

%region_1308.34605 (reduce_sum.34602: f32[], reduce_sum.34603: f32[]) -> f32[] {
  %reduce_sum.34602 = f32[] parameter(0)
  %reduce_sum.34603 = f32[] parameter(1)
  ROOT %reduce_sum.34604 = f32[] add(%reduce_sum.34602, %reduce_sum.34603)
}

%region_1308.34605.clone (reduce_sum.3148: f32[], reduce_sum.3149: f32[]) -> f32[] {
  %reduce_sum.3148 = f32[] parameter(0)
  %reduce_sum.3149 = f32[] parameter(1)
  ROOT %reduce_sum.3150 = f32[] add(%reduce_sum.3148, %reduce_sum.3149)
}

%region_1309.34612 (reduce_sum.34609: f32[], reduce_sum.34610: f32[]) -> f32[] {
  %reduce_sum.34609 = f32[] parameter(0)
  %reduce_sum.34610 = f32[] parameter(1)
  ROOT %reduce_sum.34611 = f32[] add(%reduce_sum.34609, %reduce_sum.34610)
}

%region_1309.34612.clone (reduce_sum.3154: f32[], reduce_sum.3157: f32[]) -> f32[] {
  %reduce_sum.3154 = f32[] parameter(0)
  %reduce_sum.3157 = f32[] parameter(1)
  ROOT %reduce_sum.3158 = f32[] add(%reduce_sum.3154, %reduce_sum.3157)
}

%region_1310.34619 (reduce_sum.34616: f32[], reduce_sum.34617: f32[]) -> f32[] {
  %reduce_sum.34616 = f32[] parameter(0)
  %reduce_sum.34617 = f32[] parameter(1)
  ROOT %reduce_sum.34618 = f32[] add(%reduce_sum.34616, %reduce_sum.34617)
}

%region_1310.34619.clone (reduce_sum.3159: f32[], reduce_sum.3160: f32[]) -> f32[] {
  %reduce_sum.3159 = f32[] parameter(0)
  %reduce_sum.3160 = f32[] parameter(1)
  ROOT %reduce_sum.3161 = f32[] add(%reduce_sum.3159, %reduce_sum.3160)
}

%region_1311.34626 (reduce_sum.34623: f32[], reduce_sum.34624: f32[]) -> f32[] {
  %reduce_sum.34623 = f32[] parameter(0)
  %reduce_sum.34624 = f32[] parameter(1)
  ROOT %reduce_sum.34625 = f32[] add(%reduce_sum.34623, %reduce_sum.34624)
}

%region_1311.34626.clone (reduce_sum.3162: f32[], reduce_sum.3163: f32[]) -> f32[] {
  %reduce_sum.3162 = f32[] parameter(0)
  %reduce_sum.3163 = f32[] parameter(1)
  ROOT %reduce_sum.3164 = f32[] add(%reduce_sum.3162, %reduce_sum.3163)
}

%region_1312.34633 (reduce_sum.34630: f32[], reduce_sum.34631: f32[]) -> f32[] {
  %reduce_sum.34630 = f32[] parameter(0)
  %reduce_sum.34631 = f32[] parameter(1)
  ROOT %reduce_sum.34632 = f32[] add(%reduce_sum.34630, %reduce_sum.34631)
}

%region_1313.34640 (reduce_sum.34637: f32[], reduce_sum.34638: f32[]) -> f32[] {
  %reduce_sum.34637 = f32[] parameter(0)
  %reduce_sum.34638 = f32[] parameter(1)
  ROOT %reduce_sum.34639 = f32[] add(%reduce_sum.34637, %reduce_sum.34638)
}

%region_1314.34647 (reduce_sum.34644: f32[], reduce_sum.34645: f32[]) -> f32[] {
  %reduce_sum.34644 = f32[] parameter(0)
  %reduce_sum.34645 = f32[] parameter(1)
  ROOT %reduce_sum.34646 = f32[] add(%reduce_sum.34644, %reduce_sum.34645)
}

%region_1314.34647.clone (reduce_sum.3165: f32[], reduce_sum.3166: f32[]) -> f32[] {
  %reduce_sum.3165 = f32[] parameter(0)
  %reduce_sum.3166 = f32[] parameter(1)
  ROOT %reduce_sum.3167 = f32[] add(%reduce_sum.3165, %reduce_sum.3166)
}

%region_1315.34654 (reduce_sum.34651: f32[], reduce_sum.34652: f32[]) -> f32[] {
  %reduce_sum.34651 = f32[] parameter(0)
  %reduce_sum.34652 = f32[] parameter(1)
  ROOT %reduce_sum.34653 = f32[] add(%reduce_sum.34651, %reduce_sum.34652)
}

%region_1315.34654.clone (reduce_sum.3168: f32[], reduce_sum.3169: f32[]) -> f32[] {
  %reduce_sum.3168 = f32[] parameter(0)
  %reduce_sum.3169 = f32[] parameter(1)
  ROOT %reduce_sum.3170 = f32[] add(%reduce_sum.3168, %reduce_sum.3169)
}

%region_1316.34661 (reduce_sum.34658: f32[], reduce_sum.34659: f32[]) -> f32[] {
  %reduce_sum.34658 = f32[] parameter(0)
  %reduce_sum.34659 = f32[] parameter(1)
  ROOT %reduce_sum.34660 = f32[] add(%reduce_sum.34658, %reduce_sum.34659)
}

%region_1316.34661.clone (reduce_sum.3171: f32[], reduce_sum.3172: f32[]) -> f32[] {
  %reduce_sum.3171 = f32[] parameter(0)
  %reduce_sum.3172 = f32[] parameter(1)
  ROOT %reduce_sum.3173 = f32[] add(%reduce_sum.3171, %reduce_sum.3172)
}

%region_1317.34668 (reduce_sum.34665: f32[], reduce_sum.34666: f32[]) -> f32[] {
  %reduce_sum.34665 = f32[] parameter(0)
  %reduce_sum.34666 = f32[] parameter(1)
  ROOT %reduce_sum.34667 = f32[] add(%reduce_sum.34665, %reduce_sum.34666)
}

%region_1317.34668.clone (reduce_sum.3174: f32[], reduce_sum.3178: f32[]) -> f32[] {
  %reduce_sum.3174 = f32[] parameter(0)
  %reduce_sum.3178 = f32[] parameter(1)
  ROOT %reduce_sum.3180 = f32[] add(%reduce_sum.3174, %reduce_sum.3178)
}

%region_1318.34675 (reduce_sum.34672: f32[], reduce_sum.34673: f32[]) -> f32[] {
  %reduce_sum.34672 = f32[] parameter(0)
  %reduce_sum.34673 = f32[] parameter(1)
  ROOT %reduce_sum.34674 = f32[] add(%reduce_sum.34672, %reduce_sum.34673)
}

%region_1318.34675.clone (reduce_sum.3181: f32[], reduce_sum.3182: f32[]) -> f32[] {
  %reduce_sum.3181 = f32[] parameter(0)
  %reduce_sum.3182 = f32[] parameter(1)
  ROOT %reduce_sum.3183 = f32[] add(%reduce_sum.3181, %reduce_sum.3182)
}

%region_1319.34682 (reduce_sum.34679: f32[], reduce_sum.34680: f32[]) -> f32[] {
  %reduce_sum.34679 = f32[] parameter(0)
  %reduce_sum.34680 = f32[] parameter(1)
  ROOT %reduce_sum.34681 = f32[] add(%reduce_sum.34679, %reduce_sum.34680)
}

%region_1319.34682.clone (reduce_sum.3184: f32[], reduce_sum.3185: f32[]) -> f32[] {
  %reduce_sum.3184 = f32[] parameter(0)
  %reduce_sum.3185 = f32[] parameter(1)
  ROOT %reduce_sum.3186 = f32[] add(%reduce_sum.3184, %reduce_sum.3185)
}

%region_1320.34689 (reduce_sum.34686: f32[], reduce_sum.34687: f32[]) -> f32[] {
  %reduce_sum.34686 = f32[] parameter(0)
  %reduce_sum.34687 = f32[] parameter(1)
  ROOT %reduce_sum.34688 = f32[] add(%reduce_sum.34686, %reduce_sum.34687)
}

%region_1320.34689.clone (reduce_sum.3187: f32[], reduce_sum.3188: f32[]) -> f32[] {
  %reduce_sum.3187 = f32[] parameter(0)
  %reduce_sum.3188 = f32[] parameter(1)
  ROOT %reduce_sum.3189 = f32[] add(%reduce_sum.3187, %reduce_sum.3188)
}

%region_1321.34696 (reduce_sum.34693: f32[], reduce_sum.34694: f32[]) -> f32[] {
  %reduce_sum.34693 = f32[] parameter(0)
  %reduce_sum.34694 = f32[] parameter(1)
  ROOT %reduce_sum.34695 = f32[] add(%reduce_sum.34693, %reduce_sum.34694)
}

%region_1322.34703 (reduce_sum.34700: f32[], reduce_sum.34701: f32[]) -> f32[] {
  %reduce_sum.34700 = f32[] parameter(0)
  %reduce_sum.34701 = f32[] parameter(1)
  ROOT %reduce_sum.34702 = f32[] add(%reduce_sum.34700, %reduce_sum.34701)
}

%region_1323.34710 (reduce_sum.34707: f32[], reduce_sum.34708: f32[]) -> f32[] {
  %reduce_sum.34707 = f32[] parameter(0)
  %reduce_sum.34708 = f32[] parameter(1)
  ROOT %reduce_sum.34709 = f32[] add(%reduce_sum.34707, %reduce_sum.34708)
}

%region_1323.34710.clone (reduce_sum.3190: f32[], reduce_sum.3191: f32[]) -> f32[] {
  %reduce_sum.3190 = f32[] parameter(0)
  %reduce_sum.3191 = f32[] parameter(1)
  ROOT %reduce_sum.3192 = f32[] add(%reduce_sum.3190, %reduce_sum.3191)
}

%region_1324.34717 (reduce_sum.34714: f32[], reduce_sum.34715: f32[]) -> f32[] {
  %reduce_sum.34714 = f32[] parameter(0)
  %reduce_sum.34715 = f32[] parameter(1)
  ROOT %reduce_sum.34716 = f32[] add(%reduce_sum.34714, %reduce_sum.34715)
}

%region_1324.34717.clone (reduce_sum.3193: f32[], reduce_sum.3194: f32[]) -> f32[] {
  %reduce_sum.3193 = f32[] parameter(0)
  %reduce_sum.3194 = f32[] parameter(1)
  ROOT %reduce_sum.3195 = f32[] add(%reduce_sum.3193, %reduce_sum.3194)
}

%region_1325.34724 (reduce_sum.34721: f32[], reduce_sum.34722: f32[]) -> f32[] {
  %reduce_sum.34721 = f32[] parameter(0)
  %reduce_sum.34722 = f32[] parameter(1)
  ROOT %reduce_sum.34723 = f32[] add(%reduce_sum.34721, %reduce_sum.34722)
}

%region_1325.34724.clone (reduce_sum.3196: f32[], reduce_sum.3197: f32[]) -> f32[] {
  %reduce_sum.3196 = f32[] parameter(0)
  %reduce_sum.3197 = f32[] parameter(1)
  ROOT %reduce_sum.3198 = f32[] add(%reduce_sum.3196, %reduce_sum.3197)
}

%region_1326.34731 (reduce_sum.34728: f32[], reduce_sum.34729: f32[]) -> f32[] {
  %reduce_sum.34728 = f32[] parameter(0)
  %reduce_sum.34729 = f32[] parameter(1)
  ROOT %reduce_sum.34730 = f32[] add(%reduce_sum.34728, %reduce_sum.34729)
}

%region_1326.34731.clone (reduce_sum.3199: f32[], reduce_sum.3200: f32[]) -> f32[] {
  %reduce_sum.3199 = f32[] parameter(0)
  %reduce_sum.3200 = f32[] parameter(1)
  ROOT %reduce_sum.3201 = f32[] add(%reduce_sum.3199, %reduce_sum.3200)
}

%region_1327.34738 (reduce_sum.34735: f32[], reduce_sum.34736: f32[]) -> f32[] {
  %reduce_sum.34735 = f32[] parameter(0)
  %reduce_sum.34736 = f32[] parameter(1)
  ROOT %reduce_sum.34737 = f32[] add(%reduce_sum.34735, %reduce_sum.34736)
}

%region_1327.34738.clone (reduce_sum.3202: f32[], reduce_sum.3203: f32[]) -> f32[] {
  %reduce_sum.3202 = f32[] parameter(0)
  %reduce_sum.3203 = f32[] parameter(1)
  ROOT %reduce_sum.3204 = f32[] add(%reduce_sum.3202, %reduce_sum.3203)
}

%region_1328.34745 (reduce_sum.34742: f32[], reduce_sum.34743: f32[]) -> f32[] {
  %reduce_sum.34742 = f32[] parameter(0)
  %reduce_sum.34743 = f32[] parameter(1)
  ROOT %reduce_sum.34744 = f32[] add(%reduce_sum.34742, %reduce_sum.34743)
}

%region_1328.34745.clone (reduce_sum.3205: f32[], reduce_sum.3206: f32[]) -> f32[] {
  %reduce_sum.3205 = f32[] parameter(0)
  %reduce_sum.3206 = f32[] parameter(1)
  ROOT %reduce_sum.3207 = f32[] add(%reduce_sum.3205, %reduce_sum.3206)
}

%region_1330.34759.clone (reduce_sum.3208: f32[], reduce_sum.3209: f32[]) -> f32[] {
  %reduce_sum.3208 = f32[] parameter(0)
  %reduce_sum.3209 = f32[] parameter(1)
  ROOT %reduce_sum.3210 = f32[] add(%reduce_sum.3208, %reduce_sum.3209)
}

%region_1331.34766.clone (reduce_sum.3214: f32[], reduce_sum.3216: f32[]) -> f32[] {
  %reduce_sum.3214 = f32[] parameter(0)
  %reduce_sum.3216 = f32[] parameter(1)
  ROOT %reduce_sum.3217 = f32[] add(%reduce_sum.3214, %reduce_sum.3216)
}

%region_1332.34773.clone (reduce_sum.3218: f32[], reduce_sum.3219: f32[]) -> f32[] {
  %reduce_sum.3218 = f32[] parameter(0)
  %reduce_sum.3219 = f32[] parameter(1)
  ROOT %reduce_sum.3220 = f32[] add(%reduce_sum.3218, %reduce_sum.3219)
}

%region_1335.34794.clone (reduce_sum.3221: f32[], reduce_sum.3222: f32[]) -> f32[] {
  %reduce_sum.3221 = f32[] parameter(0)
  %reduce_sum.3222 = f32[] parameter(1)
  ROOT %reduce_sum.3223 = f32[] add(%reduce_sum.3221, %reduce_sum.3222)
}

%region_1336.34801.clone (reduce_sum.3224: f32[], reduce_sum.3225: f32[]) -> f32[] {
  %reduce_sum.3224 = f32[] parameter(0)
  %reduce_sum.3225 = f32[] parameter(1)
  ROOT %reduce_sum.3226 = f32[] add(%reduce_sum.3224, %reduce_sum.3225)
}

%region_1337.34808.clone (reduce_sum.3227: f32[], reduce_sum.3228: f32[]) -> f32[] {
  %reduce_sum.3227 = f32[] parameter(0)
  %reduce_sum.3228 = f32[] parameter(1)
  ROOT %reduce_sum.3229 = f32[] add(%reduce_sum.3227, %reduce_sum.3228)
}

%region_1338.34815.clone (reduce_sum.3230: f32[], reduce_sum.3231: f32[]) -> f32[] {
  %reduce_sum.3230 = f32[] parameter(0)
  %reduce_sum.3231 = f32[] parameter(1)
  ROOT %reduce_sum.3232 = f32[] add(%reduce_sum.3230, %reduce_sum.3231)
}

%region_1339.34822.clone (reduce_sum.3233: f32[], reduce_sum.3234: f32[]) -> f32[] {
  %reduce_sum.3233 = f32[] parameter(0)
  %reduce_sum.3234 = f32[] parameter(1)
  ROOT %reduce_sum.3235 = f32[] add(%reduce_sum.3233, %reduce_sum.3234)
}

%region_1340.34829.clone (reduce_sum.3236: f32[], reduce_sum.3237: f32[]) -> f32[] {
  %reduce_sum.3236 = f32[] parameter(0)
  %reduce_sum.3237 = f32[] parameter(1)
  ROOT %reduce_sum.3238 = f32[] add(%reduce_sum.3236, %reduce_sum.3237)
}

%region_1341.34836.clone (reduce_sum.3239: f32[], reduce_sum.3240: f32[]) -> f32[] {
  %reduce_sum.3239 = f32[] parameter(0)
  %reduce_sum.3240 = f32[] parameter(1)
  ROOT %reduce_sum.3241 = f32[] add(%reduce_sum.3239, %reduce_sum.3240)
}

%region_1344.34857.clone (reduce_sum.3242: f32[], reduce_sum.3243: f32[]) -> f32[] {
  %reduce_sum.3242 = f32[] parameter(0)
  %reduce_sum.3243 = f32[] parameter(1)
  ROOT %reduce_sum.3244 = f32[] add(%reduce_sum.3242, %reduce_sum.3243)
}

%region_1345.34864.clone (reduce_sum.3245: f32[], reduce_sum.3246: f32[]) -> f32[] {
  %reduce_sum.3245 = f32[] parameter(0)
  %reduce_sum.3246 = f32[] parameter(1)
  ROOT %reduce_sum.3247 = f32[] add(%reduce_sum.3245, %reduce_sum.3246)
}

%region_1346.34871.clone (reduce_sum.3248: f32[], reduce_sum.3249: f32[]) -> f32[] {
  %reduce_sum.3248 = f32[] parameter(0)
  %reduce_sum.3249 = f32[] parameter(1)
  ROOT %reduce_sum.3250 = f32[] add(%reduce_sum.3248, %reduce_sum.3249)
}

%region_1347.34878.clone (reduce_sum.3251: f32[], reduce_sum.3252: f32[]) -> f32[] {
  %reduce_sum.3251 = f32[] parameter(0)
  %reduce_sum.3252 = f32[] parameter(1)
  ROOT %reduce_sum.3253 = f32[] add(%reduce_sum.3251, %reduce_sum.3252)
}

%region_1348.34885.clone (reduce_sum.3254: f32[], reduce_sum.3255: f32[]) -> f32[] {
  %reduce_sum.3254 = f32[] parameter(0)
  %reduce_sum.3255 = f32[] parameter(1)
  ROOT %reduce_sum.3256 = f32[] add(%reduce_sum.3254, %reduce_sum.3255)
}

%region_1349.34892.clone (reduce_sum.3257: f32[], reduce_sum.3258: f32[]) -> f32[] {
  %reduce_sum.3257 = f32[] parameter(0)
  %reduce_sum.3258 = f32[] parameter(1)
  ROOT %reduce_sum.3259 = f32[] add(%reduce_sum.3257, %reduce_sum.3258)
}

%region_1350.34899.clone (reduce_sum.3260: f32[], reduce_sum.3261: f32[]) -> f32[] {
  %reduce_sum.3260 = f32[] parameter(0)
  %reduce_sum.3261 = f32[] parameter(1)
  ROOT %reduce_sum.3262 = f32[] add(%reduce_sum.3260, %reduce_sum.3261)
}

%region_1353.34920.clone (reduce_sum.3263: f32[], reduce_sum.3264: f32[]) -> f32[] {
  %reduce_sum.3263 = f32[] parameter(0)
  %reduce_sum.3264 = f32[] parameter(1)
  ROOT %reduce_sum.3265 = f32[] add(%reduce_sum.3263, %reduce_sum.3264)
}

%region_1354.34927.clone (reduce_sum.3266: f32[], reduce_sum.3267: f32[]) -> f32[] {
  %reduce_sum.3266 = f32[] parameter(0)
  %reduce_sum.3267 = f32[] parameter(1)
  ROOT %reduce_sum.3268 = f32[] add(%reduce_sum.3266, %reduce_sum.3267)
}

%region_1355.34934.clone (reduce_sum.3269: f32[], reduce_sum.3270: f32[]) -> f32[] {
  %reduce_sum.3269 = f32[] parameter(0)
  %reduce_sum.3270 = f32[] parameter(1)
  ROOT %reduce_sum.3271 = f32[] add(%reduce_sum.3269, %reduce_sum.3270)
}

%region_1356.34941.clone (reduce_sum.3275: f32[], reduce_sum.3277: f32[]) -> f32[] {
  %reduce_sum.3275 = f32[] parameter(0)
  %reduce_sum.3277 = f32[] parameter(1)
  ROOT %reduce_sum.3278 = f32[] add(%reduce_sum.3275, %reduce_sum.3277)
}

%region_1357.34948.clone (reduce_sum.3279: f32[], reduce_sum.3283: f32[]) -> f32[] {
  %reduce_sum.3279 = f32[] parameter(0)
  %reduce_sum.3283 = f32[] parameter(1)
  ROOT %reduce_sum.3285 = f32[] add(%reduce_sum.3279, %reduce_sum.3283)
}

%region_1358.34955.clone (reduce_sum.3286: f32[], reduce_sum.3287: f32[]) -> f32[] {
  %reduce_sum.3286 = f32[] parameter(0)
  %reduce_sum.3287 = f32[] parameter(1)
  ROOT %reduce_sum.3288 = f32[] add(%reduce_sum.3286, %reduce_sum.3287)
}

%region_1359.34962.clone (reduce_sum.3289: f32[], reduce_sum.3290: f32[]) -> f32[] {
  %reduce_sum.3289 = f32[] parameter(0)
  %reduce_sum.3290 = f32[] parameter(1)
  ROOT %reduce_sum.3291 = f32[] add(%reduce_sum.3289, %reduce_sum.3290)
}

%region_1362.34983.clone (reduce_sum.3292: f32[], reduce_sum.3293: f32[]) -> f32[] {
  %reduce_sum.3292 = f32[] parameter(0)
  %reduce_sum.3293 = f32[] parameter(1)
  ROOT %reduce_sum.3294 = f32[] add(%reduce_sum.3292, %reduce_sum.3293)
}

%region_1363.34990.clone (reduce_sum.3295: f32[], reduce_sum.3296: f32[]) -> f32[] {
  %reduce_sum.3295 = f32[] parameter(0)
  %reduce_sum.3296 = f32[] parameter(1)
  ROOT %reduce_sum.3297 = f32[] add(%reduce_sum.3295, %reduce_sum.3296)
}

%region_1364.34997.clone (reduce_sum.3298: f32[], reduce_sum.3299: f32[]) -> f32[] {
  %reduce_sum.3298 = f32[] parameter(0)
  %reduce_sum.3299 = f32[] parameter(1)
  ROOT %reduce_sum.3300 = f32[] add(%reduce_sum.3298, %reduce_sum.3299)
}

%region_1365.35004.clone (reduce_sum.3301: f32[], reduce_sum.3302: f32[]) -> f32[] {
  %reduce_sum.3301 = f32[] parameter(0)
  %reduce_sum.3302 = f32[] parameter(1)
  ROOT %reduce_sum.3303 = f32[] add(%reduce_sum.3301, %reduce_sum.3302)
}

%region_1366.35011.clone (reduce_sum.3307: f32[], reduce_sum.3309: f32[]) -> f32[] {
  %reduce_sum.3307 = f32[] parameter(0)
  %reduce_sum.3309 = f32[] parameter(1)
  ROOT %reduce_sum.3310 = f32[] add(%reduce_sum.3307, %reduce_sum.3309)
}

%region_1367.35018.clone (reduce_sum.3311: f32[], reduce_sum.3312: f32[]) -> f32[] {
  %reduce_sum.3311 = f32[] parameter(0)
  %reduce_sum.3312 = f32[] parameter(1)
  ROOT %reduce_sum.3313 = f32[] add(%reduce_sum.3311, %reduce_sum.3312)
}

%region_1368.35025.clone (reduce_sum.3314: f32[], reduce_sum.3315: f32[]) -> f32[] {
  %reduce_sum.3314 = f32[] parameter(0)
  %reduce_sum.3315 = f32[] parameter(1)
  ROOT %reduce_sum.3316 = f32[] add(%reduce_sum.3314, %reduce_sum.3315)
}

%region_1371.35046.clone (reduce_sum.3317: f32[], reduce_sum.3318: f32[]) -> f32[] {
  %reduce_sum.3317 = f32[] parameter(0)
  %reduce_sum.3318 = f32[] parameter(1)
  ROOT %reduce_sum.3319 = f32[] add(%reduce_sum.3317, %reduce_sum.3318)
}

%region_1372.35053.clone (reduce_sum.3320: f32[], reduce_sum.3321: f32[]) -> f32[] {
  %reduce_sum.3320 = f32[] parameter(0)
  %reduce_sum.3321 = f32[] parameter(1)
  ROOT %reduce_sum.3322 = f32[] add(%reduce_sum.3320, %reduce_sum.3321)
}

%region_1373.35060.clone (reduce_sum.3323: f32[], reduce_sum.3324: f32[]) -> f32[] {
  %reduce_sum.3323 = f32[] parameter(0)
  %reduce_sum.3324 = f32[] parameter(1)
  ROOT %reduce_sum.3325 = f32[] add(%reduce_sum.3323, %reduce_sum.3324)
}

%region_1374.35067.clone (reduce_sum.3326: f32[], reduce_sum.3327: f32[]) -> f32[] {
  %reduce_sum.3326 = f32[] parameter(0)
  %reduce_sum.3327 = f32[] parameter(1)
  ROOT %reduce_sum.3328 = f32[] add(%reduce_sum.3326, %reduce_sum.3327)
}

%region_1375.35074.clone (reduce_sum.3329: f32[], reduce_sum.3330: f32[]) -> f32[] {
  %reduce_sum.3329 = f32[] parameter(0)
  %reduce_sum.3330 = f32[] parameter(1)
  ROOT %reduce_sum.3331 = f32[] add(%reduce_sum.3329, %reduce_sum.3330)
}

%region_1376.35081.clone (reduce_sum.3332: f32[], reduce_sum.3333: f32[]) -> f32[] {
  %reduce_sum.3332 = f32[] parameter(0)
  %reduce_sum.3333 = f32[] parameter(1)
  ROOT %reduce_sum.3334 = f32[] add(%reduce_sum.3332, %reduce_sum.3333)
}

%region_1377.35088.clone (reduce_sum.3335: f32[], reduce_sum.3336: f32[]) -> f32[] {
  %reduce_sum.3335 = f32[] parameter(0)
  %reduce_sum.3336 = f32[] parameter(1)
  ROOT %reduce_sum.3337 = f32[] add(%reduce_sum.3335, %reduce_sum.3336)
}

%region_1380.35109.clone (reduce_sum.3338: f32[], reduce_sum.3339: f32[]) -> f32[] {
  %reduce_sum.3338 = f32[] parameter(0)
  %reduce_sum.3339 = f32[] parameter(1)
  ROOT %reduce_sum.3340 = f32[] add(%reduce_sum.3338, %reduce_sum.3339)
}

%region_1381.35116.clone (reduce_sum.3341: f32[], reduce_sum.3345: f32[]) -> f32[] {
  %reduce_sum.3341 = f32[] parameter(0)
  %reduce_sum.3345 = f32[] parameter(1)
  ROOT %reduce_sum.3347 = f32[] add(%reduce_sum.3341, %reduce_sum.3345)
}

%region_1382.35123.clone (reduce_sum.3348: f32[], reduce_sum.3349: f32[]) -> f32[] {
  %reduce_sum.3348 = f32[] parameter(0)
  %reduce_sum.3349 = f32[] parameter(1)
  ROOT %reduce_sum.3350 = f32[] add(%reduce_sum.3348, %reduce_sum.3349)
}

%region_1383.35130.clone (reduce_sum.3351: f32[], reduce_sum.3352: f32[]) -> f32[] {
  %reduce_sum.3351 = f32[] parameter(0)
  %reduce_sum.3352 = f32[] parameter(1)
  ROOT %reduce_sum.3353 = f32[] add(%reduce_sum.3351, %reduce_sum.3352)
}

%region_1384.35137.clone (reduce_sum.3354: f32[], reduce_sum.3355: f32[]) -> f32[] {
  %reduce_sum.3354 = f32[] parameter(0)
  %reduce_sum.3355 = f32[] parameter(1)
  ROOT %reduce_sum.3356 = f32[] add(%reduce_sum.3354, %reduce_sum.3355)
}

%region_1385.35144.clone (reduce_sum.3357: f32[], reduce_sum.3358: f32[]) -> f32[] {
  %reduce_sum.3357 = f32[] parameter(0)
  %reduce_sum.3358 = f32[] parameter(1)
  ROOT %reduce_sum.3359 = f32[] add(%reduce_sum.3357, %reduce_sum.3358)
}

%region_1386.35151.clone (reduce_sum.3360: f32[], reduce_sum.3361: f32[]) -> f32[] {
  %reduce_sum.3360 = f32[] parameter(0)
  %reduce_sum.3361 = f32[] parameter(1)
  ROOT %reduce_sum.3362 = f32[] add(%reduce_sum.3360, %reduce_sum.3361)
}

%region_1389.35172.clone (reduce_sum.3363: f32[], reduce_sum.3364: f32[]) -> f32[] {
  %reduce_sum.3363 = f32[] parameter(0)
  %reduce_sum.3364 = f32[] parameter(1)
  ROOT %reduce_sum.3365 = f32[] add(%reduce_sum.3363, %reduce_sum.3364)
}

%region_1390.35179.clone (reduce_sum.3366: f32[], reduce_sum.3367: f32[]) -> f32[] {
  %reduce_sum.3366 = f32[] parameter(0)
  %reduce_sum.3367 = f32[] parameter(1)
  ROOT %reduce_sum.3368 = f32[] add(%reduce_sum.3366, %reduce_sum.3367)
}

%region_1391.35186.clone (reduce_sum.3369: f32[], reduce_sum.3373: f32[]) -> f32[] {
  %reduce_sum.3369 = f32[] parameter(0)
  %reduce_sum.3373 = f32[] parameter(1)
  ROOT %reduce_sum.3376 = f32[] add(%reduce_sum.3369, %reduce_sum.3373)
}

%region_1392.35193.clone (reduce_sum.3377: f32[], reduce_sum.3378: f32[]) -> f32[] {
  %reduce_sum.3377 = f32[] parameter(0)
  %reduce_sum.3378 = f32[] parameter(1)
  ROOT %reduce_sum.3382 = f32[] add(%reduce_sum.3377, %reduce_sum.3378)
}

%region_1393.35200.clone (reduce_sum.3385: f32[], reduce_sum.3386: f32[]) -> f32[] {
  %reduce_sum.3385 = f32[] parameter(0)
  %reduce_sum.3386 = f32[] parameter(1)
  ROOT %reduce_sum.3387 = f32[] add(%reduce_sum.3385, %reduce_sum.3386)
}

%region_1394.35207.clone (reduce_sum.3388: f32[], reduce_sum.3389: f32[]) -> f32[] {
  %reduce_sum.3388 = f32[] parameter(0)
  %reduce_sum.3389 = f32[] parameter(1)
  ROOT %reduce_sum.3390 = f32[] add(%reduce_sum.3388, %reduce_sum.3389)
}

%region_1395.35214.clone (reduce_sum.3391: f32[], reduce_sum.3392: f32[]) -> f32[] {
  %reduce_sum.3391 = f32[] parameter(0)
  %reduce_sum.3392 = f32[] parameter(1)
  ROOT %reduce_sum.3393 = f32[] add(%reduce_sum.3391, %reduce_sum.3392)
}

%region_1398.35235.clone (reduce_sum.3394: f32[], reduce_sum.3395: f32[]) -> f32[] {
  %reduce_sum.3394 = f32[] parameter(0)
  %reduce_sum.3395 = f32[] parameter(1)
  ROOT %reduce_sum.3396 = f32[] add(%reduce_sum.3394, %reduce_sum.3395)
}

%region_1399.35242.clone (reduce_sum.3397: f32[], reduce_sum.3398: f32[]) -> f32[] {
  %reduce_sum.3397 = f32[] parameter(0)
  %reduce_sum.3398 = f32[] parameter(1)
  ROOT %reduce_sum.3399 = f32[] add(%reduce_sum.3397, %reduce_sum.3398)
}

%region_1400.35249.clone (reduce_sum.3400: f32[], reduce_sum.3401: f32[]) -> f32[] {
  %reduce_sum.3400 = f32[] parameter(0)
  %reduce_sum.3401 = f32[] parameter(1)
  ROOT %reduce_sum.3402 = f32[] add(%reduce_sum.3400, %reduce_sum.3401)
}

%region_1401.35256.clone (reduce_sum.3406: f32[], reduce_sum.3408: f32[]) -> f32[] {
  %reduce_sum.3406 = f32[] parameter(0)
  %reduce_sum.3408 = f32[] parameter(1)
  ROOT %reduce_sum.3409 = f32[] add(%reduce_sum.3406, %reduce_sum.3408)
}

%region_1402.35263.clone (reduce_sum.3410: f32[], reduce_sum.3411: f32[]) -> f32[] {
  %reduce_sum.3410 = f32[] parameter(0)
  %reduce_sum.3411 = f32[] parameter(1)
  ROOT %reduce_sum.3412 = f32[] add(%reduce_sum.3410, %reduce_sum.3411)
}

%region_1403.35270.clone (reduce_sum.3413: f32[], reduce_sum.3414: f32[]) -> f32[] {
  %reduce_sum.3413 = f32[] parameter(0)
  %reduce_sum.3414 = f32[] parameter(1)
  ROOT %reduce_sum.3415 = f32[] add(%reduce_sum.3413, %reduce_sum.3414)
}

%region_1404.35277.clone (reduce_sum.3416: f32[], reduce_sum.3417: f32[]) -> f32[] {
  %reduce_sum.3416 = f32[] parameter(0)
  %reduce_sum.3417 = f32[] parameter(1)
  ROOT %reduce_sum.3418 = f32[] add(%reduce_sum.3416, %reduce_sum.3417)
}

%region_1407.35298.clone (reduce_sum.3419: f32[], reduce_sum.3420: f32[]) -> f32[] {
  %reduce_sum.3419 = f32[] parameter(0)
  %reduce_sum.3420 = f32[] parameter(1)
  ROOT %reduce_sum.3421 = f32[] add(%reduce_sum.3419, %reduce_sum.3420)
}

%region_1408.35305.clone (reduce_sum.3422: f32[], reduce_sum.3423: f32[]) -> f32[] {
  %reduce_sum.3422 = f32[] parameter(0)
  %reduce_sum.3423 = f32[] parameter(1)
  ROOT %reduce_sum.3424 = f32[] add(%reduce_sum.3422, %reduce_sum.3423)
}

%region_1409.35312.clone (reduce_sum.3425: f32[], reduce_sum.3426: f32[]) -> f32[] {
  %reduce_sum.3425 = f32[] parameter(0)
  %reduce_sum.3426 = f32[] parameter(1)
  ROOT %reduce_sum.3427 = f32[] add(%reduce_sum.3425, %reduce_sum.3426)
}

%region_1410.35319.clone (reduce_sum.3428: f32[], reduce_sum.3429: f32[]) -> f32[] {
  %reduce_sum.3428 = f32[] parameter(0)
  %reduce_sum.3429 = f32[] parameter(1)
  ROOT %reduce_sum.3430 = f32[] add(%reduce_sum.3428, %reduce_sum.3429)
}

%region_1411.35326.clone (reduce_sum.3431: f32[], reduce_sum.3432: f32[]) -> f32[] {
  %reduce_sum.3431 = f32[] parameter(0)
  %reduce_sum.3432 = f32[] parameter(1)
  ROOT %reduce_sum.3433 = f32[] add(%reduce_sum.3431, %reduce_sum.3432)
}

%region_1412.35333.clone (reduce_sum.3434: f32[], reduce_sum.3435: f32[]) -> f32[] {
  %reduce_sum.3434 = f32[] parameter(0)
  %reduce_sum.3435 = f32[] parameter(1)
  ROOT %reduce_sum.3436 = f32[] add(%reduce_sum.3434, %reduce_sum.3435)
}

%region_1413.35340.clone (reduce_sum.3437: f32[], reduce_sum.3438: f32[]) -> f32[] {
  %reduce_sum.3437 = f32[] parameter(0)
  %reduce_sum.3438 = f32[] parameter(1)
  ROOT %reduce_sum.3442 = f32[] add(%reduce_sum.3437, %reduce_sum.3438)
}

%region_1416.35361.clone (reduce_sum.3444: f32[], reduce_sum.3445: f32[]) -> f32[] {
  %reduce_sum.3444 = f32[] parameter(0)
  %reduce_sum.3445 = f32[] parameter(1)
  ROOT %reduce_sum.3446 = f32[] add(%reduce_sum.3444, %reduce_sum.3445)
}

%region_1417.35368.clone (reduce_sum.3447: f32[], reduce_sum.3448: f32[]) -> f32[] {
  %reduce_sum.3447 = f32[] parameter(0)
  %reduce_sum.3448 = f32[] parameter(1)
  ROOT %reduce_sum.3449 = f32[] add(%reduce_sum.3447, %reduce_sum.3448)
}

%region_1418.35375.clone (reduce_sum.3450: f32[], reduce_sum.3451: f32[]) -> f32[] {
  %reduce_sum.3450 = f32[] parameter(0)
  %reduce_sum.3451 = f32[] parameter(1)
  ROOT %reduce_sum.3452 = f32[] add(%reduce_sum.3450, %reduce_sum.3451)
}

%region_1419.35382.clone (reduce_sum.3453: f32[], reduce_sum.3454: f32[]) -> f32[] {
  %reduce_sum.3453 = f32[] parameter(0)
  %reduce_sum.3454 = f32[] parameter(1)
  ROOT %reduce_sum.3455 = f32[] add(%reduce_sum.3453, %reduce_sum.3454)
}

%region_1420.35389.clone (reduce_sum.3456: f32[], reduce_sum.3457: f32[]) -> f32[] {
  %reduce_sum.3456 = f32[] parameter(0)
  %reduce_sum.3457 = f32[] parameter(1)
  ROOT %reduce_sum.3458 = f32[] add(%reduce_sum.3456, %reduce_sum.3457)
}

%region_1421.35396.clone (reduce_sum.3459: f32[], reduce_sum.3460: f32[]) -> f32[] {
  %reduce_sum.3459 = f32[] parameter(0)
  %reduce_sum.3460 = f32[] parameter(1)
  ROOT %reduce_sum.3461 = f32[] add(%reduce_sum.3459, %reduce_sum.3460)
}

%region_1422.35403.clone (reduce_sum.3462: f32[], reduce_sum.3463: f32[]) -> f32[] {
  %reduce_sum.3462 = f32[] parameter(0)
  %reduce_sum.3463 = f32[] parameter(1)
  ROOT %reduce_sum.3464 = f32[] add(%reduce_sum.3462, %reduce_sum.3463)
}

%region_1425.35424.clone (reduce_sum.3465: f32[], reduce_sum.3466: f32[]) -> f32[] {
  %reduce_sum.3465 = f32[] parameter(0)
  %reduce_sum.3466 = f32[] parameter(1)
  ROOT %reduce_sum.3467 = f32[] add(%reduce_sum.3465, %reduce_sum.3466)
}

%region_1426.35431.clone (reduce_sum.3468: f32[], reduce_sum.3469: f32[]) -> f32[] {
  %reduce_sum.3468 = f32[] parameter(0)
  %reduce_sum.3469 = f32[] parameter(1)
  ROOT %reduce_sum.3470 = f32[] add(%reduce_sum.3468, %reduce_sum.3469)
}

%region_1427.35438.clone (reduce_sum.3471: f32[], reduce_sum.3472: f32[]) -> f32[] {
  %reduce_sum.3471 = f32[] parameter(0)
  %reduce_sum.3472 = f32[] parameter(1)
  ROOT %reduce_sum.3473 = f32[] add(%reduce_sum.3471, %reduce_sum.3472)
}

%region_1428.35445.clone (reduce_sum.3474: f32[], reduce_sum.3475: f32[]) -> f32[] {
  %reduce_sum.3474 = f32[] parameter(0)
  %reduce_sum.3475 = f32[] parameter(1)
  ROOT %reduce_sum.3476 = f32[] add(%reduce_sum.3474, %reduce_sum.3475)
}

%region_1429.35452.clone (reduce_sum.3477: f32[], reduce_sum.3478: f32[]) -> f32[] {
  %reduce_sum.3477 = f32[] parameter(0)
  %reduce_sum.3478 = f32[] parameter(1)
  ROOT %reduce_sum.3479 = f32[] add(%reduce_sum.3477, %reduce_sum.3478)
}

%region_1430.35459.clone (reduce_sum.3480: f32[], reduce_sum.3481: f32[]) -> f32[] {
  %reduce_sum.3480 = f32[] parameter(0)
  %reduce_sum.3481 = f32[] parameter(1)
  ROOT %reduce_sum.3482 = f32[] add(%reduce_sum.3480, %reduce_sum.3481)
}

%region_1431.35466.clone (reduce_sum.3483: f32[], reduce_sum.3484: f32[]) -> f32[] {
  %reduce_sum.3483 = f32[] parameter(0)
  %reduce_sum.3484 = f32[] parameter(1)
  ROOT %reduce_sum.3485 = f32[] add(%reduce_sum.3483, %reduce_sum.3484)
}

%region_1434.35487.clone (reduce_sum.3486: f32[], reduce_sum.3487: f32[]) -> f32[] {
  %reduce_sum.3486 = f32[] parameter(0)
  %reduce_sum.3487 = f32[] parameter(1)
  ROOT %reduce_sum.3488 = f32[] add(%reduce_sum.3486, %reduce_sum.3487)
}

%region_1435.35494.clone (reduce_sum.3489: f32[], reduce_sum.3490: f32[]) -> f32[] {
  %reduce_sum.3489 = f32[] parameter(0)
  %reduce_sum.3490 = f32[] parameter(1)
  ROOT %reduce_sum.3491 = f32[] add(%reduce_sum.3489, %reduce_sum.3490)
}

%region_1436.35501.clone (reduce_sum.3492: f32[], reduce_sum.3493: f32[]) -> f32[] {
  %reduce_sum.3492 = f32[] parameter(0)
  %reduce_sum.3493 = f32[] parameter(1)
  ROOT %reduce_sum.3494 = f32[] add(%reduce_sum.3492, %reduce_sum.3493)
}

%region_1437.35508.clone (reduce_sum.3495: f32[], reduce_sum.3496: f32[]) -> f32[] {
  %reduce_sum.3495 = f32[] parameter(0)
  %reduce_sum.3496 = f32[] parameter(1)
  ROOT %reduce_sum.3497 = f32[] add(%reduce_sum.3495, %reduce_sum.3496)
}

%region_1438.35515.clone (reduce_sum.3498: f32[], reduce_sum.3499: f32[]) -> f32[] {
  %reduce_sum.3498 = f32[] parameter(0)
  %reduce_sum.3499 = f32[] parameter(1)
  ROOT %reduce_sum.3500 = f32[] add(%reduce_sum.3498, %reduce_sum.3499)
}

%region_1439.35522.clone (reduce_sum.3501: f32[], reduce_sum.3502: f32[]) -> f32[] {
  %reduce_sum.3501 = f32[] parameter(0)
  %reduce_sum.3502 = f32[] parameter(1)
  ROOT %reduce_sum.3503 = f32[] add(%reduce_sum.3501, %reduce_sum.3502)
}

%region_1440.35529.clone (reduce_sum.3504: f32[], reduce_sum.3505: f32[]) -> f32[] {
  %reduce_sum.3504 = f32[] parameter(0)
  %reduce_sum.3505 = f32[] parameter(1)
  ROOT %reduce_sum.3506 = f32[] add(%reduce_sum.3504, %reduce_sum.3505)
}

%region_1443.35550.clone (reduce_sum.3507: f32[], reduce_sum.3508: f32[]) -> f32[] {
  %reduce_sum.3507 = f32[] parameter(0)
  %reduce_sum.3508 = f32[] parameter(1)
  ROOT %reduce_sum.3509 = f32[] add(%reduce_sum.3507, %reduce_sum.3508)
}

%region_1444.35557.clone (reduce_sum.3510: f32[], reduce_sum.3511: f32[]) -> f32[] {
  %reduce_sum.3510 = f32[] parameter(0)
  %reduce_sum.3511 = f32[] parameter(1)
  ROOT %reduce_sum.3512 = f32[] add(%reduce_sum.3510, %reduce_sum.3511)
}

%region_1445.35564.clone (reduce_sum.3513: f32[], reduce_sum.3514: f32[]) -> f32[] {
  %reduce_sum.3513 = f32[] parameter(0)
  %reduce_sum.3514 = f32[] parameter(1)
  ROOT %reduce_sum.3515 = f32[] add(%reduce_sum.3513, %reduce_sum.3514)
}

%region_1446.35571.clone (reduce_sum.3516: f32[], reduce_sum.3517: f32[]) -> f32[] {
  %reduce_sum.3516 = f32[] parameter(0)
  %reduce_sum.3517 = f32[] parameter(1)
  ROOT %reduce_sum.3518 = f32[] add(%reduce_sum.3516, %reduce_sum.3517)
}

%region_1447.35578.clone (reduce_sum.3519: f32[], reduce_sum.3520: f32[]) -> f32[] {
  %reduce_sum.3519 = f32[] parameter(0)
  %reduce_sum.3520 = f32[] parameter(1)
  ROOT %reduce_sum.3521 = f32[] add(%reduce_sum.3519, %reduce_sum.3520)
}

%region_1448.35585.clone (reduce_sum.3522: f32[], reduce_sum.3523: f32[]) -> f32[] {
  %reduce_sum.3522 = f32[] parameter(0)
  %reduce_sum.3523 = f32[] parameter(1)
  ROOT %reduce_sum.3524 = f32[] add(%reduce_sum.3522, %reduce_sum.3523)
}

%region_1449.35592.clone (reduce_sum.3525: f32[], reduce_sum.3526: f32[]) -> f32[] {
  %reduce_sum.3525 = f32[] parameter(0)
  %reduce_sum.3526 = f32[] parameter(1)
  ROOT %reduce_sum.3527 = f32[] add(%reduce_sum.3525, %reduce_sum.3526)
}

%region_1452.35613.clone (reduce_sum.3528: f32[], reduce_sum.3529: f32[]) -> f32[] {
  %reduce_sum.3528 = f32[] parameter(0)
  %reduce_sum.3529 = f32[] parameter(1)
  ROOT %reduce_sum.3530 = f32[] add(%reduce_sum.3528, %reduce_sum.3529)
}

%region_1453.35620.clone (reduce_sum.3531: f32[], reduce_sum.3532: f32[]) -> f32[] {
  %reduce_sum.3531 = f32[] parameter(0)
  %reduce_sum.3532 = f32[] parameter(1)
  ROOT %reduce_sum.3533 = f32[] add(%reduce_sum.3531, %reduce_sum.3532)
}

%region_1454.35627.clone (reduce_sum.3534: f32[], reduce_sum.3535: f32[]) -> f32[] {
  %reduce_sum.3534 = f32[] parameter(0)
  %reduce_sum.3535 = f32[] parameter(1)
  ROOT %reduce_sum.3536 = f32[] add(%reduce_sum.3534, %reduce_sum.3535)
}

%region_1455.35634.clone (reduce_sum.3537: f32[], reduce_sum.3538: f32[]) -> f32[] {
  %reduce_sum.3537 = f32[] parameter(0)
  %reduce_sum.3538 = f32[] parameter(1)
  ROOT %reduce_sum.3539 = f32[] add(%reduce_sum.3537, %reduce_sum.3538)
}

%region_1456.35641.clone (reduce_sum.3540: f32[], reduce_sum.3541: f32[]) -> f32[] {
  %reduce_sum.3540 = f32[] parameter(0)
  %reduce_sum.3541 = f32[] parameter(1)
  ROOT %reduce_sum.3542 = f32[] add(%reduce_sum.3540, %reduce_sum.3541)
}

%region_1457.35648.clone (reduce_sum.3543: f32[], reduce_sum.3544: f32[]) -> f32[] {
  %reduce_sum.3543 = f32[] parameter(0)
  %reduce_sum.3544 = f32[] parameter(1)
  ROOT %reduce_sum.3545 = f32[] add(%reduce_sum.3543, %reduce_sum.3544)
}

%region_1458.35655.clone (reduce_sum.3546: f32[], reduce_sum.3547: f32[]) -> f32[] {
  %reduce_sum.3546 = f32[] parameter(0)
  %reduce_sum.3547 = f32[] parameter(1)
  ROOT %reduce_sum.3548 = f32[] add(%reduce_sum.3546, %reduce_sum.3547)
}

%region_1461.35676.clone (reduce_sum.3549: f32[], reduce_sum.3550: f32[]) -> f32[] {
  %reduce_sum.3549 = f32[] parameter(0)
  %reduce_sum.3550 = f32[] parameter(1)
  ROOT %reduce_sum.3551 = f32[] add(%reduce_sum.3549, %reduce_sum.3550)
}

%region_1462.35683.clone (reduce_sum.3552: f32[], reduce_sum.3556: f32[]) -> f32[] {
  %reduce_sum.3552 = f32[] parameter(0)
  %reduce_sum.3556 = f32[] parameter(1)
  ROOT %reduce_sum.3558 = f32[] add(%reduce_sum.3552, %reduce_sum.3556)
}

%region_1463.35690.clone (reduce_sum.3559: f32[], reduce_sum.3560: f32[]) -> f32[] {
  %reduce_sum.3559 = f32[] parameter(0)
  %reduce_sum.3560 = f32[] parameter(1)
  ROOT %reduce_sum.3564 = f32[] add(%reduce_sum.3559, %reduce_sum.3560)
}

%region_1464.35697.clone (reduce_sum.3566: f32[], reduce_sum.3567: f32[]) -> f32[] {
  %reduce_sum.3566 = f32[] parameter(0)
  %reduce_sum.3567 = f32[] parameter(1)
  ROOT %reduce_sum.3568 = f32[] add(%reduce_sum.3566, %reduce_sum.3567)
}

%region_1465.35704.clone (reduce_sum.3569: f32[], reduce_sum.3570: f32[]) -> f32[] {
  %reduce_sum.3569 = f32[] parameter(0)
  %reduce_sum.3570 = f32[] parameter(1)
  ROOT %reduce_sum.3571 = f32[] add(%reduce_sum.3569, %reduce_sum.3570)
}

%region_1466.35711.clone (reduce_sum.3572: f32[], reduce_sum.3573: f32[]) -> f32[] {
  %reduce_sum.3572 = f32[] parameter(0)
  %reduce_sum.3573 = f32[] parameter(1)
  ROOT %reduce_sum.3574 = f32[] add(%reduce_sum.3572, %reduce_sum.3573)
}

%region_1467.35718.clone (reduce_sum.3575: f32[], reduce_sum.3576: f32[]) -> f32[] {
  %reduce_sum.3575 = f32[] parameter(0)
  %reduce_sum.3576 = f32[] parameter(1)
  ROOT %reduce_sum.3577 = f32[] add(%reduce_sum.3575, %reduce_sum.3576)
}

%region_1470.35739.clone (reduce_sum.3578: f32[], reduce_sum.3579: f32[]) -> f32[] {
  %reduce_sum.3578 = f32[] parameter(0)
  %reduce_sum.3579 = f32[] parameter(1)
  ROOT %reduce_sum.3580 = f32[] add(%reduce_sum.3578, %reduce_sum.3579)
}

%region_1471.35746.clone (reduce_sum.3581: f32[], reduce_sum.3582: f32[]) -> f32[] {
  %reduce_sum.3581 = f32[] parameter(0)
  %reduce_sum.3582 = f32[] parameter(1)
  ROOT %reduce_sum.3583 = f32[] add(%reduce_sum.3581, %reduce_sum.3582)
}

%region_1472.35753.clone (reduce_sum.3584: f32[], reduce_sum.3588: f32[]) -> f32[] {
  %reduce_sum.3584 = f32[] parameter(0)
  %reduce_sum.3588 = f32[] parameter(1)
  ROOT %reduce_sum.3590 = f32[] add(%reduce_sum.3584, %reduce_sum.3588)
}

%region_1473.35760.clone (reduce_sum.3591: f32[], reduce_sum.3592: f32[]) -> f32[] {
  %reduce_sum.3591 = f32[] parameter(0)
  %reduce_sum.3592 = f32[] parameter(1)
  ROOT %reduce_sum.3593 = f32[] add(%reduce_sum.3591, %reduce_sum.3592)
}

%region_1474.35767.clone (reduce_sum.3594: f32[], reduce_sum.3595: f32[]) -> f32[] {
  %reduce_sum.3594 = f32[] parameter(0)
  %reduce_sum.3595 = f32[] parameter(1)
  ROOT %reduce_sum.3596 = f32[] add(%reduce_sum.3594, %reduce_sum.3595)
}

%region_1475.35774.clone (reduce_sum.3597: f32[], reduce_sum.3601: f32[]) -> f32[] {
  %reduce_sum.3597 = f32[] parameter(0)
  %reduce_sum.3601 = f32[] parameter(1)
  ROOT %reduce_sum.3604 = f32[] add(%reduce_sum.3597, %reduce_sum.3601)
}

%region_1476.35781.clone (reduce_sum.3605: f32[], reduce_sum.3606: f32[]) -> f32[] {
  %reduce_sum.3605 = f32[] parameter(0)
  %reduce_sum.3606 = f32[] parameter(1)
  ROOT %reduce_sum.3610 = f32[] add(%reduce_sum.3605, %reduce_sum.3606)
}

%region_1479.35802.clone (reduce_sum.3613: f32[], reduce_sum.3614: f32[]) -> f32[] {
  %reduce_sum.3613 = f32[] parameter(0)
  %reduce_sum.3614 = f32[] parameter(1)
  ROOT %reduce_sum.3615 = f32[] add(%reduce_sum.3613, %reduce_sum.3614)
}

%region_1480.35809.clone (reduce_sum.3616: f32[], reduce_sum.3617: f32[]) -> f32[] {
  %reduce_sum.3616 = f32[] parameter(0)
  %reduce_sum.3617 = f32[] parameter(1)
  ROOT %reduce_sum.3618 = f32[] add(%reduce_sum.3616, %reduce_sum.3617)
}

%region_1481.35816.clone (reduce_sum.3619: f32[], reduce_sum.3620: f32[]) -> f32[] {
  %reduce_sum.3619 = f32[] parameter(0)
  %reduce_sum.3620 = f32[] parameter(1)
  ROOT %reduce_sum.3621 = f32[] add(%reduce_sum.3619, %reduce_sum.3620)
}

%region_1482.35823.clone (reduce_sum.3622: f32[], reduce_sum.3626: f32[]) -> f32[] {
  %reduce_sum.3622 = f32[] parameter(0)
  %reduce_sum.3626 = f32[] parameter(1)
  ROOT %reduce_sum.3628 = f32[] add(%reduce_sum.3622, %reduce_sum.3626)
}

%region_1483.35830.clone (reduce_sum.3629: f32[], reduce_sum.3630: f32[]) -> f32[] {
  %reduce_sum.3629 = f32[] parameter(0)
  %reduce_sum.3630 = f32[] parameter(1)
  ROOT %reduce_sum.3634 = f32[] add(%reduce_sum.3629, %reduce_sum.3630)
}

%region_1484.35837.clone (reduce_sum.3636: f32[], reduce_sum.3637: f32[]) -> f32[] {
  %reduce_sum.3636 = f32[] parameter(0)
  %reduce_sum.3637 = f32[] parameter(1)
  ROOT %reduce_sum.3638 = f32[] add(%reduce_sum.3636, %reduce_sum.3637)
}

%region_1485.35844.clone (reduce_sum.3639: f32[], reduce_sum.3640: f32[]) -> f32[] {
  %reduce_sum.3639 = f32[] parameter(0)
  %reduce_sum.3640 = f32[] parameter(1)
  ROOT %reduce_sum.3641 = f32[] add(%reduce_sum.3639, %reduce_sum.3640)
}

%region_1488.35865.clone (reduce_sum.3642: f32[], reduce_sum.3643: f32[]) -> f32[] {
  %reduce_sum.3642 = f32[] parameter(0)
  %reduce_sum.3643 = f32[] parameter(1)
  ROOT %reduce_sum.3644 = f32[] add(%reduce_sum.3642, %reduce_sum.3643)
}

%region_1489.35872.clone (reduce_sum.3645: f32[], reduce_sum.3646: f32[]) -> f32[] {
  %reduce_sum.3645 = f32[] parameter(0)
  %reduce_sum.3646 = f32[] parameter(1)
  ROOT %reduce_sum.3647 = f32[] add(%reduce_sum.3645, %reduce_sum.3646)
}

%region_1490.35879.clone (reduce_sum.3648: f32[], reduce_sum.3649: f32[]) -> f32[] {
  %reduce_sum.3648 = f32[] parameter(0)
  %reduce_sum.3649 = f32[] parameter(1)
  ROOT %reduce_sum.3650 = f32[] add(%reduce_sum.3648, %reduce_sum.3649)
}

%region_1491.35886.clone (reduce_sum.3651: f32[], reduce_sum.3652: f32[]) -> f32[] {
  %reduce_sum.3651 = f32[] parameter(0)
  %reduce_sum.3652 = f32[] parameter(1)
  ROOT %reduce_sum.3653 = f32[] add(%reduce_sum.3651, %reduce_sum.3652)
}

%region_1492.35893.clone (reduce_sum.3654: f32[], reduce_sum.3655: f32[]) -> f32[] {
  %reduce_sum.3654 = f32[] parameter(0)
  %reduce_sum.3655 = f32[] parameter(1)
  ROOT %reduce_sum.3656 = f32[] add(%reduce_sum.3654, %reduce_sum.3655)
}

%region_1493.35900.clone (reduce_sum.3657: f32[], reduce_sum.3658: f32[]) -> f32[] {
  %reduce_sum.3657 = f32[] parameter(0)
  %reduce_sum.3658 = f32[] parameter(1)
  ROOT %reduce_sum.3659 = f32[] add(%reduce_sum.3657, %reduce_sum.3658)
}

%region_1494.35907.clone (reduce_sum.3660: f32[], reduce_sum.3661: f32[]) -> f32[] {
  %reduce_sum.3660 = f32[] parameter(0)
  %reduce_sum.3661 = f32[] parameter(1)
  ROOT %reduce_sum.3662 = f32[] add(%reduce_sum.3660, %reduce_sum.3661)
}

%region_1497.35928.clone (reduce_sum.3663: f32[], reduce_sum.3664: f32[]) -> f32[] {
  %reduce_sum.3663 = f32[] parameter(0)
  %reduce_sum.3664 = f32[] parameter(1)
  ROOT %reduce_sum.3665 = f32[] add(%reduce_sum.3663, %reduce_sum.3664)
}

%region_1498.35935.clone (reduce_sum.3666: f32[], reduce_sum.3670: f32[]) -> f32[] {
  %reduce_sum.3666 = f32[] parameter(0)
  %reduce_sum.3670 = f32[] parameter(1)
  ROOT %reduce_sum.3672 = f32[] add(%reduce_sum.3666, %reduce_sum.3670)
}

%region_1499.35942.clone (reduce_sum.3673: f32[], reduce_sum.3674: f32[]) -> f32[] {
  %reduce_sum.3673 = f32[] parameter(0)
  %reduce_sum.3674 = f32[] parameter(1)
  ROOT %reduce_sum.3675 = f32[] add(%reduce_sum.3673, %reduce_sum.3674)
}

%region_1500.35949.clone (reduce_sum.3676: f32[], reduce_sum.3677: f32[]) -> f32[] {
  %reduce_sum.3676 = f32[] parameter(0)
  %reduce_sum.3677 = f32[] parameter(1)
  ROOT %reduce_sum.3678 = f32[] add(%reduce_sum.3676, %reduce_sum.3677)
}

%region_1501.35956.clone (reduce_sum.3679: f32[], reduce_sum.3680: f32[]) -> f32[] {
  %reduce_sum.3679 = f32[] parameter(0)
  %reduce_sum.3680 = f32[] parameter(1)
  ROOT %reduce_sum.3681 = f32[] add(%reduce_sum.3679, %reduce_sum.3680)
}

%region_1502.35963.clone (reduce_sum.3682: f32[], reduce_sum.3683: f32[]) -> f32[] {
  %reduce_sum.3682 = f32[] parameter(0)
  %reduce_sum.3683 = f32[] parameter(1)
  ROOT %reduce_sum.3684 = f32[] add(%reduce_sum.3682, %reduce_sum.3683)
}

%region_1503.35970.clone (reduce_sum.3685: f32[], reduce_sum.3686: f32[]) -> f32[] {
  %reduce_sum.3685 = f32[] parameter(0)
  %reduce_sum.3686 = f32[] parameter(1)
  ROOT %reduce_sum.3687 = f32[] add(%reduce_sum.3685, %reduce_sum.3686)
}

%region_1506.35991.clone (reduce_sum.3688: f32[], reduce_sum.3689: f32[]) -> f32[] {
  %reduce_sum.3688 = f32[] parameter(0)
  %reduce_sum.3689 = f32[] parameter(1)
  ROOT %reduce_sum.3690 = f32[] add(%reduce_sum.3688, %reduce_sum.3689)
}

%region_1507.35998.clone (reduce_sum.3691: f32[], reduce_sum.3692: f32[]) -> f32[] {
  %reduce_sum.3691 = f32[] parameter(0)
  %reduce_sum.3692 = f32[] parameter(1)
  ROOT %reduce_sum.3693 = f32[] add(%reduce_sum.3691, %reduce_sum.3692)
}

%region_1508.36005.clone (reduce_sum.3694: f32[], reduce_sum.3695: f32[]) -> f32[] {
  %reduce_sum.3694 = f32[] parameter(0)
  %reduce_sum.3695 = f32[] parameter(1)
  ROOT %reduce_sum.3696 = f32[] add(%reduce_sum.3694, %reduce_sum.3695)
}

%region_1509.36012.clone (reduce_sum.3697: f32[], reduce_sum.3698: f32[]) -> f32[] {
  %reduce_sum.3697 = f32[] parameter(0)
  %reduce_sum.3698 = f32[] parameter(1)
  ROOT %reduce_sum.3699 = f32[] add(%reduce_sum.3697, %reduce_sum.3698)
}

%region_1510.36019.clone (reduce_sum.3700: f32[], reduce_sum.3701: f32[]) -> f32[] {
  %reduce_sum.3700 = f32[] parameter(0)
  %reduce_sum.3701 = f32[] parameter(1)
  ROOT %reduce_sum.3702 = f32[] add(%reduce_sum.3700, %reduce_sum.3701)
}

%region_1511.36026.clone (reduce_sum.3703: f32[], reduce_sum.3704: f32[]) -> f32[] {
  %reduce_sum.3703 = f32[] parameter(0)
  %reduce_sum.3704 = f32[] parameter(1)
  ROOT %reduce_sum.3705 = f32[] add(%reduce_sum.3703, %reduce_sum.3704)
}

%region_1512.36033.clone (reduce_sum.3706: f32[], reduce_sum.3707: f32[]) -> f32[] {
  %reduce_sum.3706 = f32[] parameter(0)
  %reduce_sum.3707 = f32[] parameter(1)
  ROOT %reduce_sum.3708 = f32[] add(%reduce_sum.3706, %reduce_sum.3707)
}

%region_1515.36054.clone (reduce_sum.3709: f32[], reduce_sum.3710: f32[]) -> f32[] {
  %reduce_sum.3709 = f32[] parameter(0)
  %reduce_sum.3710 = f32[] parameter(1)
  ROOT %reduce_sum.3711 = f32[] add(%reduce_sum.3709, %reduce_sum.3710)
}

%region_1516.36061.clone (reduce_sum.3712: f32[], reduce_sum.3713: f32[]) -> f32[] {
  %reduce_sum.3712 = f32[] parameter(0)
  %reduce_sum.3713 = f32[] parameter(1)
  ROOT %reduce_sum.3714 = f32[] add(%reduce_sum.3712, %reduce_sum.3713)
}

%region_1517.36068.clone (reduce_sum.3715: f32[], reduce_sum.3716: f32[]) -> f32[] {
  %reduce_sum.3715 = f32[] parameter(0)
  %reduce_sum.3716 = f32[] parameter(1)
  ROOT %reduce_sum.3717 = f32[] add(%reduce_sum.3715, %reduce_sum.3716)
}

%region_1518.36075.clone (reduce_sum.3718: f32[], reduce_sum.3719: f32[]) -> f32[] {
  %reduce_sum.3718 = f32[] parameter(0)
  %reduce_sum.3719 = f32[] parameter(1)
  ROOT %reduce_sum.3720 = f32[] add(%reduce_sum.3718, %reduce_sum.3719)
}

%region_1519.36082.clone (reduce_sum.3721: f32[], reduce_sum.3722: f32[]) -> f32[] {
  %reduce_sum.3721 = f32[] parameter(0)
  %reduce_sum.3722 = f32[] parameter(1)
  ROOT %reduce_sum.3723 = f32[] add(%reduce_sum.3721, %reduce_sum.3722)
}

%region_1520.36089.clone (reduce_sum.3724: f32[], reduce_sum.3725: f32[]) -> f32[] {
  %reduce_sum.3724 = f32[] parameter(0)
  %reduce_sum.3725 = f32[] parameter(1)
  ROOT %reduce_sum.3726 = f32[] add(%reduce_sum.3724, %reduce_sum.3725)
}

%region_1521.36096.clone (reduce_sum.3727: f32[], reduce_sum.3728: f32[]) -> f32[] {
  %reduce_sum.3727 = f32[] parameter(0)
  %reduce_sum.3728 = f32[] parameter(1)
  ROOT %reduce_sum.3729 = f32[] add(%reduce_sum.3727, %reduce_sum.3728)
}

%region_1524.36117.clone (reduce_sum.3730: f32[], reduce_sum.3731: f32[]) -> f32[] {
  %reduce_sum.3730 = f32[] parameter(0)
  %reduce_sum.3731 = f32[] parameter(1)
  ROOT %reduce_sum.3732 = f32[] add(%reduce_sum.3730, %reduce_sum.3731)
}

%region_1525.36124.clone (reduce_sum.3733: f32[], reduce_sum.3734: f32[]) -> f32[] {
  %reduce_sum.3733 = f32[] parameter(0)
  %reduce_sum.3734 = f32[] parameter(1)
  ROOT %reduce_sum.3735 = f32[] add(%reduce_sum.3733, %reduce_sum.3734)
}

%region_1526.36131.clone (reduce_sum.3736: f32[], reduce_sum.3737: f32[]) -> f32[] {
  %reduce_sum.3736 = f32[] parameter(0)
  %reduce_sum.3737 = f32[] parameter(1)
  ROOT %reduce_sum.3738 = f32[] add(%reduce_sum.3736, %reduce_sum.3737)
}

%region_1527.36138.clone (reduce_sum.3739: f32[], reduce_sum.3740: f32[]) -> f32[] {
  %reduce_sum.3739 = f32[] parameter(0)
  %reduce_sum.3740 = f32[] parameter(1)
  ROOT %reduce_sum.3741 = f32[] add(%reduce_sum.3739, %reduce_sum.3740)
}

%region_1528.36145.clone (reduce_sum.3742: f32[], reduce_sum.3743: f32[]) -> f32[] {
  %reduce_sum.3742 = f32[] parameter(0)
  %reduce_sum.3743 = f32[] parameter(1)
  ROOT %reduce_sum.3744 = f32[] add(%reduce_sum.3742, %reduce_sum.3743)
}

%region_1529.36152.clone (reduce_sum.3745: f32[], reduce_sum.3746: f32[]) -> f32[] {
  %reduce_sum.3745 = f32[] parameter(0)
  %reduce_sum.3746 = f32[] parameter(1)
  ROOT %reduce_sum.3747 = f32[] add(%reduce_sum.3745, %reduce_sum.3746)
}

%region_1530.36159.clone (reduce_sum.3748: f32[], reduce_sum.3749: f32[]) -> f32[] {
  %reduce_sum.3748 = f32[] parameter(0)
  %reduce_sum.3749 = f32[] parameter(1)
  ROOT %reduce_sum.3750 = f32[] add(%reduce_sum.3748, %reduce_sum.3749)
}

%region_1533.36180.clone (reduce_sum.3751: f32[], reduce_sum.3752: f32[]) -> f32[] {
  %reduce_sum.3751 = f32[] parameter(0)
  %reduce_sum.3752 = f32[] parameter(1)
  ROOT %reduce_sum.3753 = f32[] add(%reduce_sum.3751, %reduce_sum.3752)
}

%region_1534.36187.clone (reduce_sum.3754: f32[], reduce_sum.3755: f32[]) -> f32[] {
  %reduce_sum.3754 = f32[] parameter(0)
  %reduce_sum.3755 = f32[] parameter(1)
  ROOT %reduce_sum.3756 = f32[] add(%reduce_sum.3754, %reduce_sum.3755)
}

%region_1535.36194.clone (reduce_sum.3757: f32[], reduce_sum.3758: f32[]) -> f32[] {
  %reduce_sum.3757 = f32[] parameter(0)
  %reduce_sum.3758 = f32[] parameter(1)
  ROOT %reduce_sum.3759 = f32[] add(%reduce_sum.3757, %reduce_sum.3758)
}

%region_1536.36201.clone (reduce_sum.3760: f32[], reduce_sum.3761: f32[]) -> f32[] {
  %reduce_sum.3760 = f32[] parameter(0)
  %reduce_sum.3761 = f32[] parameter(1)
  ROOT %reduce_sum.3762 = f32[] add(%reduce_sum.3760, %reduce_sum.3761)
}

%region_1537.36208.clone (reduce_sum.3763: f32[], reduce_sum.3764: f32[]) -> f32[] {
  %reduce_sum.3763 = f32[] parameter(0)
  %reduce_sum.3764 = f32[] parameter(1)
  ROOT %reduce_sum.3765 = f32[] add(%reduce_sum.3763, %reduce_sum.3764)
}

%region_1538.36215.clone (reduce_sum.3766: f32[], reduce_sum.3767: f32[]) -> f32[] {
  %reduce_sum.3766 = f32[] parameter(0)
  %reduce_sum.3767 = f32[] parameter(1)
  ROOT %reduce_sum.3768 = f32[] add(%reduce_sum.3766, %reduce_sum.3767)
}

%region_1539.36222.clone (reduce_sum.3769: f32[], reduce_sum.3770: f32[]) -> f32[] {
  %reduce_sum.3769 = f32[] parameter(0)
  %reduce_sum.3770 = f32[] parameter(1)
  ROOT %reduce_sum.3771 = f32[] add(%reduce_sum.3769, %reduce_sum.3770)
}

%region_1542.36243.clone (reduce_sum.3772: f32[], reduce_sum.3773: f32[]) -> f32[] {
  %reduce_sum.3772 = f32[] parameter(0)
  %reduce_sum.3773 = f32[] parameter(1)
  ROOT %reduce_sum.3774 = f32[] add(%reduce_sum.3772, %reduce_sum.3773)
}

%region_1543.36250.clone (reduce_sum.3775: f32[], reduce_sum.3776: f32[]) -> f32[] {
  %reduce_sum.3775 = f32[] parameter(0)
  %reduce_sum.3776 = f32[] parameter(1)
  ROOT %reduce_sum.3777 = f32[] add(%reduce_sum.3775, %reduce_sum.3776)
}

%region_1544.36257.clone (reduce_sum.3778: f32[], reduce_sum.3779: f32[]) -> f32[] {
  %reduce_sum.3778 = f32[] parameter(0)
  %reduce_sum.3779 = f32[] parameter(1)
  ROOT %reduce_sum.3780 = f32[] add(%reduce_sum.3778, %reduce_sum.3779)
}

%region_1545.36264.clone (reduce_sum.3781: f32[], reduce_sum.3782: f32[]) -> f32[] {
  %reduce_sum.3781 = f32[] parameter(0)
  %reduce_sum.3782 = f32[] parameter(1)
  ROOT %reduce_sum.3783 = f32[] add(%reduce_sum.3781, %reduce_sum.3782)
}

%region_1546.36271.clone (reduce_sum.3784: f32[], reduce_sum.3785: f32[]) -> f32[] {
  %reduce_sum.3784 = f32[] parameter(0)
  %reduce_sum.3785 = f32[] parameter(1)
  ROOT %reduce_sum.3786 = f32[] add(%reduce_sum.3784, %reduce_sum.3785)
}

%region_1547.36278.clone (reduce_sum.3787: f32[], reduce_sum.3788: f32[]) -> f32[] {
  %reduce_sum.3787 = f32[] parameter(0)
  %reduce_sum.3788 = f32[] parameter(1)
  ROOT %reduce_sum.3789 = f32[] add(%reduce_sum.3787, %reduce_sum.3788)
}

%region_1548.36285.clone (reduce_sum.3790: f32[], reduce_sum.3791: f32[]) -> f32[] {
  %reduce_sum.3790 = f32[] parameter(0)
  %reduce_sum.3791 = f32[] parameter(1)
  ROOT %reduce_sum.3792 = f32[] add(%reduce_sum.3790, %reduce_sum.3791)
}

%region_1551.36306.clone (reduce_sum.3793: f32[], reduce_sum.3794: f32[]) -> f32[] {
  %reduce_sum.3793 = f32[] parameter(0)
  %reduce_sum.3794 = f32[] parameter(1)
  ROOT %reduce_sum.3795 = f32[] add(%reduce_sum.3793, %reduce_sum.3794)
}

%region_1552.36313.clone (reduce_sum.3796: f32[], reduce_sum.3797: f32[]) -> f32[] {
  %reduce_sum.3796 = f32[] parameter(0)
  %reduce_sum.3797 = f32[] parameter(1)
  ROOT %reduce_sum.3798 = f32[] add(%reduce_sum.3796, %reduce_sum.3797)
}

%region_1553.36320.clone (reduce_sum.3799: f32[], reduce_sum.3800: f32[]) -> f32[] {
  %reduce_sum.3799 = f32[] parameter(0)
  %reduce_sum.3800 = f32[] parameter(1)
  ROOT %reduce_sum.3801 = f32[] add(%reduce_sum.3799, %reduce_sum.3800)
}

%region_1554.36327.clone (reduce_sum.3802: f32[], reduce_sum.3803: f32[]) -> f32[] {
  %reduce_sum.3802 = f32[] parameter(0)
  %reduce_sum.3803 = f32[] parameter(1)
  ROOT %reduce_sum.3804 = f32[] add(%reduce_sum.3802, %reduce_sum.3803)
}

%region_1555.36334.clone (reduce_sum.3805: f32[], reduce_sum.3806: f32[]) -> f32[] {
  %reduce_sum.3805 = f32[] parameter(0)
  %reduce_sum.3806 = f32[] parameter(1)
  ROOT %reduce_sum.3807 = f32[] add(%reduce_sum.3805, %reduce_sum.3806)
}

%region_1556.36341.clone (reduce_sum.3808: f32[], reduce_sum.3809: f32[]) -> f32[] {
  %reduce_sum.3808 = f32[] parameter(0)
  %reduce_sum.3809 = f32[] parameter(1)
  ROOT %reduce_sum.3810 = f32[] add(%reduce_sum.3808, %reduce_sum.3809)
}

%region_1557.36348.clone (reduce_sum.3811: f32[], reduce_sum.3812: f32[]) -> f32[] {
  %reduce_sum.3811 = f32[] parameter(0)
  %reduce_sum.3812 = f32[] parameter(1)
  ROOT %reduce_sum.3813 = f32[] add(%reduce_sum.3811, %reduce_sum.3812)
}

%region_1560.36369.clone (reduce_sum.3814: f32[], reduce_sum.3815: f32[]) -> f32[] {
  %reduce_sum.3814 = f32[] parameter(0)
  %reduce_sum.3815 = f32[] parameter(1)
  ROOT %reduce_sum.3816 = f32[] add(%reduce_sum.3814, %reduce_sum.3815)
}

%region_1561.36376.clone (reduce_sum.3817: f32[], reduce_sum.3818: f32[]) -> f32[] {
  %reduce_sum.3817 = f32[] parameter(0)
  %reduce_sum.3818 = f32[] parameter(1)
  ROOT %reduce_sum.3819 = f32[] add(%reduce_sum.3817, %reduce_sum.3818)
}

%region_1562.36383.clone (reduce_sum.3820: f32[], reduce_sum.3821: f32[]) -> f32[] {
  %reduce_sum.3820 = f32[] parameter(0)
  %reduce_sum.3821 = f32[] parameter(1)
  ROOT %reduce_sum.3822 = f32[] add(%reduce_sum.3820, %reduce_sum.3821)
}

%region_1563.36390.clone (reduce_sum.3823: f32[], reduce_sum.3824: f32[]) -> f32[] {
  %reduce_sum.3823 = f32[] parameter(0)
  %reduce_sum.3824 = f32[] parameter(1)
  ROOT %reduce_sum.3825 = f32[] add(%reduce_sum.3823, %reduce_sum.3824)
}

%region_1564.36397.clone (reduce_sum.3829: f32[], reduce_sum.3832: f32[]) -> f32[] {
  %reduce_sum.3829 = f32[] parameter(0)
  %reduce_sum.3832 = f32[] parameter(1)
  ROOT %reduce_sum.3833 = f32[] add(%reduce_sum.3829, %reduce_sum.3832)
}

%region_1565.36404.clone (reduce_sum.3841: f32[], reduce_sum.3845: f32[]) -> f32[] {
  %reduce_sum.3841 = f32[] parameter(0)
  %reduce_sum.3845 = f32[] parameter(1)
  ROOT %reduce_sum.3847 = f32[] add(%reduce_sum.3841, %reduce_sum.3845)
}

%region_1566.36411.clone (reduce_sum.3848: f32[], reduce_sum.3849: f32[]) -> f32[] {
  %reduce_sum.3848 = f32[] parameter(0)
  %reduce_sum.3849 = f32[] parameter(1)
  ROOT %reduce_sum.3850 = f32[] add(%reduce_sum.3848, %reduce_sum.3849)
}

%region_1569.36432.clone (reduce_sum.3851: f32[], reduce_sum.3852: f32[]) -> f32[] {
  %reduce_sum.3851 = f32[] parameter(0)
  %reduce_sum.3852 = f32[] parameter(1)
  ROOT %reduce_sum.3853 = f32[] add(%reduce_sum.3851, %reduce_sum.3852)
}

%region_1570.36439.clone (reduce_sum.3854: f32[], reduce_sum.3855: f32[]) -> f32[] {
  %reduce_sum.3854 = f32[] parameter(0)
  %reduce_sum.3855 = f32[] parameter(1)
  ROOT %reduce_sum.3856 = f32[] add(%reduce_sum.3854, %reduce_sum.3855)
}

%region_1571.36446.clone (reduce_sum.3857: f32[], reduce_sum.3858: f32[]) -> f32[] {
  %reduce_sum.3857 = f32[] parameter(0)
  %reduce_sum.3858 = f32[] parameter(1)
  ROOT %reduce_sum.3862 = f32[] add(%reduce_sum.3857, %reduce_sum.3858)
}

%region_1572.36453.clone (reduce_sum.3864: f32[], reduce_sum.3865: f32[]) -> f32[] {
  %reduce_sum.3864 = f32[] parameter(0)
  %reduce_sum.3865 = f32[] parameter(1)
  ROOT %reduce_sum.3869 = f32[] add(%reduce_sum.3864, %reduce_sum.3865)
}

%region_1573.36460.clone (reduce_sum.3871: f32[], reduce_sum.3872: f32[]) -> f32[] {
  %reduce_sum.3871 = f32[] parameter(0)
  %reduce_sum.3872 = f32[] parameter(1)
  ROOT %reduce_sum.3873 = f32[] add(%reduce_sum.3871, %reduce_sum.3872)
}

%region_1574.36467.clone (reduce_sum.3874: f32[], reduce_sum.3875: f32[]) -> f32[] {
  %reduce_sum.3874 = f32[] parameter(0)
  %reduce_sum.3875 = f32[] parameter(1)
  ROOT %reduce_sum.3876 = f32[] add(%reduce_sum.3874, %reduce_sum.3875)
}

%region_1575.36474.clone (reduce_sum.3877: f32[], reduce_sum.3878: f32[]) -> f32[] {
  %reduce_sum.3877 = f32[] parameter(0)
  %reduce_sum.3878 = f32[] parameter(1)
  ROOT %reduce_sum.3879 = f32[] add(%reduce_sum.3877, %reduce_sum.3878)
}

%region_1578.36495.clone (reduce_sum.3880: f32[], reduce_sum.3881: f32[]) -> f32[] {
  %reduce_sum.3880 = f32[] parameter(0)
  %reduce_sum.3881 = f32[] parameter(1)
  ROOT %reduce_sum.3882 = f32[] add(%reduce_sum.3880, %reduce_sum.3881)
}

%region_1579.36502.clone (reduce_sum.3883: f32[], reduce_sum.3884: f32[]) -> f32[] {
  %reduce_sum.3883 = f32[] parameter(0)
  %reduce_sum.3884 = f32[] parameter(1)
  ROOT %reduce_sum.3885 = f32[] add(%reduce_sum.3883, %reduce_sum.3884)
}

%region_1580.36509.clone (reduce_sum.3886: f32[], reduce_sum.3887: f32[]) -> f32[] {
  %reduce_sum.3886 = f32[] parameter(0)
  %reduce_sum.3887 = f32[] parameter(1)
  ROOT %reduce_sum.3888 = f32[] add(%reduce_sum.3886, %reduce_sum.3887)
}

%region_1581.36516.clone (reduce_sum.3889: f32[], reduce_sum.3890: f32[]) -> f32[] {
  %reduce_sum.3889 = f32[] parameter(0)
  %reduce_sum.3890 = f32[] parameter(1)
  ROOT %reduce_sum.3891 = f32[] add(%reduce_sum.3889, %reduce_sum.3890)
}

%region_1582.36523.clone (reduce_sum.3892: f32[], reduce_sum.3893: f32[]) -> f32[] {
  %reduce_sum.3892 = f32[] parameter(0)
  %reduce_sum.3893 = f32[] parameter(1)
  ROOT %reduce_sum.3894 = f32[] add(%reduce_sum.3892, %reduce_sum.3893)
}

%region_1583.36530.clone (reduce_sum.3898: f32[], reduce_sum.3900: f32[]) -> f32[] {
  %reduce_sum.3898 = f32[] parameter(0)
  %reduce_sum.3900 = f32[] parameter(1)
  ROOT %reduce_sum.3901 = f32[] add(%reduce_sum.3898, %reduce_sum.3900)
}

%region_1584.36537.clone (reduce_sum.3902: f32[], reduce_sum.3903: f32[]) -> f32[] {
  %reduce_sum.3902 = f32[] parameter(0)
  %reduce_sum.3903 = f32[] parameter(1)
  ROOT %reduce_sum.3907 = f32[] add(%reduce_sum.3902, %reduce_sum.3903)
}

%region_1587.36558.clone (reduce_sum.3909: f32[], reduce_sum.3910: f32[]) -> f32[] {
  %reduce_sum.3909 = f32[] parameter(0)
  %reduce_sum.3910 = f32[] parameter(1)
  ROOT %reduce_sum.3911 = f32[] add(%reduce_sum.3909, %reduce_sum.3910)
}

%region_1588.36565.clone (reduce_sum.3912: f32[], reduce_sum.3913: f32[]) -> f32[] {
  %reduce_sum.3912 = f32[] parameter(0)
  %reduce_sum.3913 = f32[] parameter(1)
  ROOT %reduce_sum.3914 = f32[] add(%reduce_sum.3912, %reduce_sum.3913)
}

%region_1589.36572.clone (reduce_sum.3915: f32[], reduce_sum.3916: f32[]) -> f32[] {
  %reduce_sum.3915 = f32[] parameter(0)
  %reduce_sum.3916 = f32[] parameter(1)
  ROOT %reduce_sum.3917 = f32[] add(%reduce_sum.3915, %reduce_sum.3916)
}

%region_1590.36579.clone (reduce_sum.3918: f32[], reduce_sum.3919: f32[]) -> f32[] {
  %reduce_sum.3918 = f32[] parameter(0)
  %reduce_sum.3919 = f32[] parameter(1)
  ROOT %reduce_sum.3920 = f32[] add(%reduce_sum.3918, %reduce_sum.3919)
}

%region_1591.36586.clone (reduce_sum.3921: f32[], reduce_sum.3922: f32[]) -> f32[] {
  %reduce_sum.3921 = f32[] parameter(0)
  %reduce_sum.3922 = f32[] parameter(1)
  ROOT %reduce_sum.3923 = f32[] add(%reduce_sum.3921, %reduce_sum.3922)
}

%region_1592.36593.clone (reduce_sum.3924: f32[], reduce_sum.3925: f32[]) -> f32[] {
  %reduce_sum.3924 = f32[] parameter(0)
  %reduce_sum.3925 = f32[] parameter(1)
  ROOT %reduce_sum.3926 = f32[] add(%reduce_sum.3924, %reduce_sum.3925)
}

%region_1593.36600.clone (reduce_sum.3927: f32[], reduce_sum.3928: f32[]) -> f32[] {
  %reduce_sum.3927 = f32[] parameter(0)
  %reduce_sum.3928 = f32[] parameter(1)
  ROOT %reduce_sum.3929 = f32[] add(%reduce_sum.3927, %reduce_sum.3928)
}

%region_1596.36621.clone (reduce_sum.3930: f32[], reduce_sum.3931: f32[]) -> f32[] {
  %reduce_sum.3930 = f32[] parameter(0)
  %reduce_sum.3931 = f32[] parameter(1)
  ROOT %reduce_sum.3932 = f32[] add(%reduce_sum.3930, %reduce_sum.3931)
}

%region_1597.36628.clone (reduce_sum.3933: f32[], reduce_sum.3934: f32[]) -> f32[] {
  %reduce_sum.3933 = f32[] parameter(0)
  %reduce_sum.3934 = f32[] parameter(1)
  ROOT %reduce_sum.3935 = f32[] add(%reduce_sum.3933, %reduce_sum.3934)
}

%region_1598.36635.clone (reduce_sum.3936: f32[], reduce_sum.3937: f32[]) -> f32[] {
  %reduce_sum.3936 = f32[] parameter(0)
  %reduce_sum.3937 = f32[] parameter(1)
  ROOT %reduce_sum.3938 = f32[] add(%reduce_sum.3936, %reduce_sum.3937)
}

%region_1599.36642.clone (reduce_sum.3939: f32[], reduce_sum.3940: f32[]) -> f32[] {
  %reduce_sum.3939 = f32[] parameter(0)
  %reduce_sum.3940 = f32[] parameter(1)
  ROOT %reduce_sum.3941 = f32[] add(%reduce_sum.3939, %reduce_sum.3940)
}

%region_1600.36649.clone (reduce_sum.3942: f32[], reduce_sum.3943: f32[]) -> f32[] {
  %reduce_sum.3942 = f32[] parameter(0)
  %reduce_sum.3943 = f32[] parameter(1)
  ROOT %reduce_sum.3944 = f32[] add(%reduce_sum.3942, %reduce_sum.3943)
}

%region_1601.36656.clone (reduce_sum.3945: f32[], reduce_sum.3946: f32[]) -> f32[] {
  %reduce_sum.3945 = f32[] parameter(0)
  %reduce_sum.3946 = f32[] parameter(1)
  ROOT %reduce_sum.3947 = f32[] add(%reduce_sum.3945, %reduce_sum.3946)
}

%region_1602.36663.clone (reduce_sum.3948: f32[], reduce_sum.3949: f32[]) -> f32[] {
  %reduce_sum.3948 = f32[] parameter(0)
  %reduce_sum.3949 = f32[] parameter(1)
  ROOT %reduce_sum.3950 = f32[] add(%reduce_sum.3948, %reduce_sum.3949)
}

%region_1605.36684.clone (reduce_sum.3951: f32[], reduce_sum.3952: f32[]) -> f32[] {
  %reduce_sum.3951 = f32[] parameter(0)
  %reduce_sum.3952 = f32[] parameter(1)
  ROOT %reduce_sum.3953 = f32[] add(%reduce_sum.3951, %reduce_sum.3952)
}

%region_1606.36691.clone (reduce_sum.3954: f32[], reduce_sum.3955: f32[]) -> f32[] {
  %reduce_sum.3954 = f32[] parameter(0)
  %reduce_sum.3955 = f32[] parameter(1)
  ROOT %reduce_sum.3956 = f32[] add(%reduce_sum.3954, %reduce_sum.3955)
}

%region_1607.36698.clone (reduce_sum.3957: f32[], reduce_sum.3958: f32[]) -> f32[] {
  %reduce_sum.3957 = f32[] parameter(0)
  %reduce_sum.3958 = f32[] parameter(1)
  ROOT %reduce_sum.3959 = f32[] add(%reduce_sum.3957, %reduce_sum.3958)
}

%region_1608.36705.clone (reduce_sum.3960: f32[], reduce_sum.3961: f32[]) -> f32[] {
  %reduce_sum.3960 = f32[] parameter(0)
  %reduce_sum.3961 = f32[] parameter(1)
  ROOT %reduce_sum.3962 = f32[] add(%reduce_sum.3960, %reduce_sum.3961)
}

%region_1609.36712.clone (reduce_sum.3963: f32[], reduce_sum.3964: f32[]) -> f32[] {
  %reduce_sum.3963 = f32[] parameter(0)
  %reduce_sum.3964 = f32[] parameter(1)
  ROOT %reduce_sum.3965 = f32[] add(%reduce_sum.3963, %reduce_sum.3964)
}

%region_1610.36719.clone (reduce_sum.3966: f32[], reduce_sum.3967: f32[]) -> f32[] {
  %reduce_sum.3966 = f32[] parameter(0)
  %reduce_sum.3967 = f32[] parameter(1)
  ROOT %reduce_sum.3968 = f32[] add(%reduce_sum.3966, %reduce_sum.3967)
}

%region_1611.36726.clone (reduce_sum.3969: f32[], reduce_sum.3970: f32[]) -> f32[] {
  %reduce_sum.3969 = f32[] parameter(0)
  %reduce_sum.3970 = f32[] parameter(1)
  ROOT %reduce_sum.3971 = f32[] add(%reduce_sum.3969, %reduce_sum.3970)
}

%region_1614.36747.clone (reduce_sum.3972: f32[], reduce_sum.3973: f32[]) -> f32[] {
  %reduce_sum.3972 = f32[] parameter(0)
  %reduce_sum.3973 = f32[] parameter(1)
  ROOT %reduce_sum.3974 = f32[] add(%reduce_sum.3972, %reduce_sum.3973)
}

%region_1615.36754.clone (reduce_sum.3975: f32[], reduce_sum.3976: f32[]) -> f32[] {
  %reduce_sum.3975 = f32[] parameter(0)
  %reduce_sum.3976 = f32[] parameter(1)
  ROOT %reduce_sum.3977 = f32[] add(%reduce_sum.3975, %reduce_sum.3976)
}

%region_1616.36761.clone (reduce_sum.3978: f32[], reduce_sum.3979: f32[]) -> f32[] {
  %reduce_sum.3978 = f32[] parameter(0)
  %reduce_sum.3979 = f32[] parameter(1)
  ROOT %reduce_sum.3980 = f32[] add(%reduce_sum.3978, %reduce_sum.3979)
}

%region_1617.36768.clone (reduce_sum.3981: f32[], reduce_sum.3982: f32[]) -> f32[] {
  %reduce_sum.3981 = f32[] parameter(0)
  %reduce_sum.3982 = f32[] parameter(1)
  ROOT %reduce_sum.3983 = f32[] add(%reduce_sum.3981, %reduce_sum.3982)
}

%region_1618.36775.clone (reduce_sum.3984: f32[], reduce_sum.3985: f32[]) -> f32[] {
  %reduce_sum.3984 = f32[] parameter(0)
  %reduce_sum.3985 = f32[] parameter(1)
  ROOT %reduce_sum.3986 = f32[] add(%reduce_sum.3984, %reduce_sum.3985)
}

%region_1619.36782.clone (reduce_sum.3987: f32[], reduce_sum.3988: f32[]) -> f32[] {
  %reduce_sum.3987 = f32[] parameter(0)
  %reduce_sum.3988 = f32[] parameter(1)
  ROOT %reduce_sum.3989 = f32[] add(%reduce_sum.3987, %reduce_sum.3988)
}

ENTRY %main.37670_spmd (param: s32[], param.1: f32[4096], param.13: f32[512,14336], param.14: f32[512,14336], param.15: f32[14336,512], param.12: f32[4096], param.5: f32[4096], param.8: f32[512,8,128], param.11: f32[32,128,512], param.6: f32[512,32,128], param.9: f32[512,8,128], param.22: f32[512,14336], param.23: f32[512,14336], param.24: f32[14336,512], param.21: f32[4096], param.16: f32[4096], param.18: f32[512,8,128], param.20: f32[32,128,512], param.17: f32[512,32,128], param.19: f32[512,8,128], param.103: f32[512,14336], param.104: f32[512,14336], param.105: f32[14336,512], param.102: f32[4096], param.97: f32[4096], param.99: f32[512,8,128], param.101: f32[32,128,512], param.98: f32[512,32,128], param.100: f32[512,8,128], param.112: f32[512,14336], param.113: f32[512,14336], param.114: f32[14336,512], param.111: f32[4096], param.106: f32[4096], param.108: f32[512,8,128], param.110: f32[32,128,512], param.107: f32[512,32,128], param.109: f32[512,8,128], param.121: f32[512,14336], param.122: f32[512,14336], param.123: f32[14336,512], param.120: f32[4096], param.115: f32[4096], param.117: f32[512,8,128], param.119: f32[32,128,512], param.116: f32[512,32,128], param.118: f32[512,8,128], param.130: f32[512,14336], param.131: f32[512,14336], param.132: f32[14336,512], param.129: f32[4096], param.124: f32[4096], param.126: f32[512,8,128], param.128: f32[32,128,512], param.125: f32[512,32,128], param.127: f32[512,8,128], param.139: f32[512,14336], param.140: f32[512,14336], param.141: f32[14336,512], param.138: f32[4096], param.133: f32[4096], param.135: f32[512,8,128], param.137: f32[32,128,512], param.134: f32[512,32,128], param.136: f32[512,8,128], param.148: f32[512,14336], param.149: f32[512,14336], param.150: f32[14336,512], param.147: f32[4096], param.142: f32[4096], param.144: f32[512,8,128], param.146: f32[32,128,512], param.143: f32[512,32,128], param.145: f32[512,8,128], param.157: f32[512,14336], param.158: f32[512,14336], param.159: f32[14336,512], param.156: f32[4096], param.151: f32[4096], param.153: f32[512,8,128], param.155: f32[32,128,512], param.152: f32[512,32,128], param.154: f32[512,8,128], param.166: f32[512,14336], param.167: f32[512,14336], param.168: f32[14336,512], param.165: f32[4096], param.160: f32[4096], param.162: f32[512,8,128], param.164: f32[32,128,512], param.161: f32[512,32,128], param.163: f32[512,8,128], param.175: f32[512,14336], param.176: f32[512,14336], param.177: f32[14336,512], param.174: f32[4096], param.169: f32[4096], param.171: f32[512,8,128], param.173: f32[32,128,512], param.170: f32[512,32,128], param.172: f32[512,8,128], param.184: f32[512,14336], param.185: f32[512,14336], param.186: f32[14336,512], param.183: f32[4096], param.178: f32[4096], param.180: f32[512,8,128], param.182: f32[32,128,512], param.179: f32[512,32,128], param.181: f32[512,8,128], param.31: f32[512,14336], param.32: f32[512,14336], param.33: f32[14336,512], param.30: f32[4096], param.25: f32[4096], param.27: f32[512,8,128], param.29: f32[32,128,512], param.26: f32[512,32,128], param.28: f32[512,8,128], param.193: f32[512,14336], param.194: f32[512,14336], param.195: f32[14336,512], param.192: f32[4096], param.187: f32[4096], param.189: f32[512,8,128], param.191: f32[32,128,512], param.188: f32[512,32,128], param.190: f32[512,8,128], param.202: f32[512,14336], param.203: f32[512,14336], param.204: f32[14336,512], param.201: f32[4096], param.196: f32[4096], param.198: f32[512,8,128], param.200: f32[32,128,512], param.197: f32[512,32,128], param.199: f32[512,8,128], param.211: f32[512,14336], param.212: f32[512,14336], param.213: f32[14336,512], param.210: f32[4096], param.205: f32[4096], param.207: f32[512,8,128], param.209: f32[32,128,512], param.206: f32[512,32,128], param.208: f32[512,8,128], param.220: f32[512,14336], param.221: f32[512,14336], param.222: f32[14336,512], param.219: f32[4096], param.214: f32[4096], param.216: f32[512,8,128], param.218: f32[32,128,512], param.215: f32[512,32,128], param.217: f32[512,8,128], param.229: f32[512,14336], param.230: f32[512,14336], param.231: f32[14336,512], param.228: f32[4096], param.223: f32[4096], param.225: f32[512,8,128], param.227: f32[32,128,512], param.224: f32[512,32,128], param.226: f32[512,8,128], param.238: f32[512,14336], param.239: f32[512,14336], param.240: f32[14336,512], param.237: f32[4096], param.232: f32[4096], param.234: f32[512,8,128], param.236: f32[32,128,512], param.233: f32[512,32,128], param.235: f32[512,8,128], param.247: f32[512,14336], param.248: f32[512,14336], param.249: f32[14336,512], param.246: f32[4096], param.241: f32[4096], param.243: f32[512,8,128], param.245: f32[32,128,512], param.242: f32[512,32,128], param.244: f32[512,8,128], param.256: f32[512,14336], param.257: f32[512,14336], param.258: f32[14336,512], param.255: f32[4096], param.250: f32[4096], param.252: f32[512,8,128], param.254: f32[32,128,512], param.251: f32[512,32,128], param.253: f32[512,8,128], param.265: f32[512,14336], param.266: f32[512,14336], param.267: f32[14336,512], param.264: f32[4096], param.259: f32[4096], param.261: f32[512,8,128], param.263: f32[32,128,512], param.260: f32[512,32,128], param.262: f32[512,8,128], param.274: f32[512,14336], param.275: f32[512,14336], param.276: f32[14336,512], param.273: f32[4096], param.268: f32[4096], param.270: f32[512,8,128], param.272: f32[32,128,512], param.269: f32[512,32,128], param.271: f32[512,8,128], param.40: f32[512,14336], param.41: f32[512,14336], param.42: f32[14336,512], param.39: f32[4096], param.34: f32[4096], param.36: f32[512,8,128], param.38: f32[32,128,512], param.35: f32[512,32,128], param.37: f32[512,8,128], param.283: f32[512,14336], param.284: f32[512,14336], param.285: f32[14336,512], param.282: f32[4096], param.277: f32[4096], param.279: f32[512,8,128], param.281: f32[32,128,512], param.278: f32[512,32,128], param.280: f32[512,8,128], param.292: f32[512,14336], param.293: f32[512,14336], param.294: f32[14336,512], param.291: f32[4096], param.286: f32[4096], param.288: f32[512,8,128], param.290: f32[32,128,512], param.287: f32[512,32,128], param.289: f32[512,8,128], param.49: f32[512,14336], param.50: f32[512,14336], param.51: f32[14336,512], param.48: f32[4096], param.43: f32[4096], param.45: f32[512,8,128], param.47: f32[32,128,512], param.44: f32[512,32,128], param.46: f32[512,8,128], param.58: f32[512,14336], param.59: f32[512,14336], param.60: f32[14336,512], param.57: f32[4096], param.52: f32[4096], param.54: f32[512,8,128], param.56: f32[32,128,512], param.53: f32[512,32,128], param.55: f32[512,8,128], param.67: f32[512,14336], param.68: f32[512,14336], param.69: f32[14336,512], param.66: f32[4096], param.61: f32[4096], param.63: f32[512,8,128], param.65: f32[32,128,512], param.62: f32[512,32,128], param.64: f32[512,8,128], param.76: f32[512,14336], param.77: f32[512,14336], param.78: f32[14336,512], param.75: f32[4096], param.70: f32[4096], param.72: f32[512,8,128], param.74: f32[32,128,512], param.71: f32[512,32,128], param.73: f32[512,8,128], param.85: f32[512,14336], param.86: f32[512,14336], param.87: f32[14336,512], param.84: f32[4096], param.79: f32[4096], param.81: f32[512,8,128], param.83: f32[32,128,512], param.80: f32[512,32,128], param.82: f32[512,8,128], param.94: f32[512,14336], param.95: f32[512,14336], param.96: f32[14336,512], param.93: f32[4096], param.88: f32[4096], param.90: f32[512,8,128], param.92: f32[32,128,512], param.89: f32[512,32,128], param.91: f32[512,8,128], param.296: f32[512,128256], param.4: f32[128256,512], param.299: s32[], param.298: f32[4096], param.301: f32[512,14336], param.303: f32[512,14336], param.305: f32[14336,512], param.307: f32[4096], param.309: f32[4096], param.311: f32[512,8,128], param.313: f32[32,128,512], param.315: f32[512,32,128], param.317: f32[512,8,128], param.319: f32[512,14336], param.321: f32[512,14336], param.323: f32[14336,512], param.325: f32[4096], param.327: f32[4096], param.329: f32[512,8,128], param.331: f32[32,128,512], param.333: f32[512,32,128], param.335: f32[512,8,128], param.337: f32[512,14336], param.339: f32[512,14336], param.341: f32[14336,512], param.343: f32[4096], param.345: f32[4096], param.347: f32[512,8,128], param.349: f32[32,128,512], param.351: f32[512,32,128], param.353: f32[512,8,128], param.355: f32[512,14336], param.357: f32[512,14336], param.359: f32[14336,512], param.361: f32[4096], param.363: f32[4096], param.365: f32[512,8,128], param.367: f32[32,128,512], param.369: f32[512,32,128], param.371: f32[512,8,128], param.373: f32[512,14336], param.375: f32[512,14336], param.377: f32[14336,512], param.379: f32[4096], param.381: f32[4096], param.383: f32[512,8,128], param.385: f32[32,128,512], param.387: f32[512,32,128], param.389: f32[512,8,128], param.391: f32[512,14336], param.393: f32[512,14336], param.395: f32[14336,512], param.397: f32[4096], param.399: f32[4096], param.401: f32[512,8,128], param.403: f32[32,128,512], param.405: f32[512,32,128], param.407: f32[512,8,128], param.409: f32[512,14336], param.411: f32[512,14336], param.413: f32[14336,512], param.415: f32[4096], param.417: f32[4096], param.419: f32[512,8,128], param.421: f32[32,128,512], param.423: f32[512,32,128], param.425: f32[512,8,128], param.427: f32[512,14336], param.429: f32[512,14336], param.431: f32[14336,512], param.433: f32[4096], param.435: f32[4096], param.437: f32[512,8,128], param.439: f32[32,128,512], param.441: f32[512,32,128], param.443: f32[512,8,128], param.445: f32[512,14336], param.447: f32[512,14336], param.449: f32[14336,512], param.451: f32[4096], param.453: f32[4096], param.455: f32[512,8,128], param.457: f32[32,128,512], param.459: f32[512,32,128], param.461: f32[512,8,128], param.463: f32[512,14336], param.465: f32[512,14336], param.467: f32[14336,512], param.469: f32[4096], param.471: f32[4096], param.473: f32[512,8,128], param.475: f32[32,128,512], param.477: f32[512,32,128], param.479: f32[512,8,128], param.481: f32[512,14336], param.483: f32[512,14336], param.485: f32[14336,512], param.487: f32[4096], param.489: f32[4096], param.491: f32[512,8,128], param.493: f32[32,128,512], param.495: f32[512,32,128], param.497: f32[512,8,128], param.499: f32[512,14336], param.501: f32[512,14336], param.503: f32[14336,512], param.505: f32[4096], param.507: f32[4096], param.509: f32[512,8,128], param.511: f32[32,128,512], param.513: f32[512,32,128], param.515: f32[512,8,128], param.517: f32[512,14336], param.519: f32[512,14336], param.521: f32[14336,512], param.523: f32[4096], param.525: f32[4096], param.527: f32[512,8,128], param.529: f32[32,128,512], param.531: f32[512,32,128], param.533: f32[512,8,128], param.535: f32[512,14336], param.537: f32[512,14336], param.539: f32[14336,512], param.541: f32[4096], param.543: f32[4096], param.545: f32[512,8,128], param.547: f32[32,128,512], param.549: f32[512,32,128], param.551: f32[512,8,128], param.553: f32[512,14336], param.555: f32[512,14336], param.557: f32[14336,512], param.559: f32[4096], param.561: f32[4096], param.563: f32[512,8,128], param.565: f32[32,128,512], param.567: f32[512,32,128], param.569: f32[512,8,128], param.571: f32[512,14336], param.573: f32[512,14336], param.575: f32[14336,512], param.577: f32[4096], param.579: f32[4096], param.581: f32[512,8,128], param.583: f32[32,128,512], param.585: f32[512,32,128], param.587: f32[512,8,128], param.589: f32[512,14336], param.591: f32[512,14336], param.593: f32[14336,512], param.595: f32[4096], param.597: f32[4096], param.599: f32[512,8,128], param.601: f32[32,128,512], param.603: f32[512,32,128], param.605: f32[512,8,128], param.607: f32[512,14336], param.609: f32[512,14336], param.611: f32[14336,512], param.613: f32[4096], param.615: f32[4096], param.617: f32[512,8,128], param.619: f32[32,128,512], param.621: f32[512,32,128], param.623: f32[512,8,128], param.625: f32[512,14336], param.627: f32[512,14336], param.629: f32[14336,512], param.631: f32[4096], param.633: f32[4096], param.635: f32[512,8,128], param.637: f32[32,128,512], param.639: f32[512,32,128], param.641: f32[512,8,128], param.643: f32[512,14336], param.645: f32[512,14336], param.647: f32[14336,512], param.649: f32[4096], param.651: f32[4096], param.653: f32[512,8,128], param.655: f32[32,128,512], param.657: f32[512,32,128], param.659: f32[512,8,128], param.661: f32[512,14336], param.663: f32[512,14336], param.665: f32[14336,512], param.667: f32[4096], param.669: f32[4096], param.671: f32[512,8,128], param.673: f32[32,128,512], param.675: f32[512,32,128], param.677: f32[512,8,128], param.679: f32[512,14336], param.681: f32[512,14336], param.683: f32[14336,512], param.685: f32[4096], param.687: f32[4096], param.689: f32[512,8,128], param.691: f32[32,128,512], param.693: f32[512,32,128], param.695: f32[512,8,128], param.697: f32[512,14336], param.699: f32[512,14336], param.701: f32[14336,512], param.703: f32[4096], param.705: f32[4096], param.707: f32[512,8,128], param.709: f32[32,128,512], param.711: f32[512,32,128], param.713: f32[512,8,128], param.715: f32[512,14336], param.717: f32[512,14336], param.719: f32[14336,512], param.721: f32[4096], param.723: f32[4096], param.725: f32[512,8,128], param.727: f32[32,128,512], param.729: f32[512,32,128], param.731: f32[512,8,128], param.733: f32[512,14336], param.735: f32[512,14336], param.737: f32[14336,512], param.739: f32[4096], param.741: f32[4096], param.743: f32[512,8,128], param.745: f32[32,128,512], param.747: f32[512,32,128], param.749: f32[512,8,128], param.751: f32[512,14336], param.753: f32[512,14336], param.755: f32[14336,512], param.757: f32[4096], param.759: f32[4096], param.761: f32[512,8,128], param.763: f32[32,128,512], param.765: f32[512,32,128], param.767: f32[512,8,128], param.769: f32[512,14336], param.771: f32[512,14336], param.773: f32[14336,512], param.775: f32[4096], param.777: f32[4096], param.779: f32[512,8,128], param.781: f32[32,128,512], param.783: f32[512,32,128], param.785: f32[512,8,128], param.787: f32[512,14336], param.789: f32[512,14336], param.791: f32[14336,512], param.793: f32[4096], param.795: f32[4096], param.797: f32[512,8,128], param.799: f32[32,128,512], param.801: f32[512,32,128], param.803: f32[512,8,128], param.805: f32[512,14336], param.807: f32[512,14336], param.809: f32[14336,512], param.811: f32[4096], param.813: f32[4096], param.815: f32[512,8,128], param.817: f32[32,128,512], param.819: f32[512,32,128], param.821: f32[512,8,128], param.823: f32[512,14336], param.825: f32[512,14336], param.827: f32[14336,512], param.829: f32[4096], param.831: f32[4096], param.833: f32[512,8,128], param.835: f32[32,128,512], param.837: f32[512,32,128], param.839: f32[512,8,128], param.841: f32[512,14336], param.843: f32[512,14336], param.845: f32[14336,512], param.847: f32[4096], param.849: f32[4096], param.851: f32[512,8,128], param.853: f32[32,128,512], param.855: f32[512,32,128], param.857: f32[512,8,128], param.859: f32[512,14336], param.861: f32[512,14336], param.863: f32[14336,512], param.865: f32[4096], param.867: f32[4096], param.869: f32[512,8,128], param.871: f32[32,128,512], param.873: f32[512,32,128], param.875: f32[512,8,128], param.877: f32[512,128256], param.879: f32[128256,512], param.300: f32[4096], param.302: f32[512,14336], param.304: f32[512,14336], param.306: f32[14336,512], param.308: f32[4096], param.310: f32[4096], param.312: f32[512,8,128], param.314: f32[32,128,512], param.316: f32[512,32,128], param.318: f32[512,8,128], param.320: f32[512,14336], param.322: f32[512,14336], param.324: f32[14336,512], param.326: f32[4096], param.328: f32[4096], param.330: f32[512,8,128], param.332: f32[32,128,512], param.334: f32[512,32,128], param.336: f32[512,8,128], param.338: f32[512,14336], param.340: f32[512,14336], param.342: f32[14336,512], param.344: f32[4096], param.346: f32[4096], param.348: f32[512,8,128], param.350: f32[32,128,512], param.352: f32[512,32,128], param.354: f32[512,8,128], param.356: f32[512,14336], param.358: f32[512,14336], param.360: f32[14336,512], param.362: f32[4096], param.364: f32[4096], param.366: f32[512,8,128], param.368: f32[32,128,512], param.370: f32[512,32,128], param.372: f32[512,8,128], param.374: f32[512,14336], param.376: f32[512,14336], param.378: f32[14336,512], param.380: f32[4096], param.382: f32[4096], param.384: f32[512,8,128], param.386: f32[32,128,512], param.388: f32[512,32,128], param.390: f32[512,8,128], param.392: f32[512,14336], param.394: f32[512,14336], param.396: f32[14336,512], param.398: f32[4096], param.400: f32[4096], param.402: f32[512,8,128], param.404: f32[32,128,512], param.406: f32[512,32,128], param.408: f32[512,8,128], param.410: f32[512,14336], param.412: f32[512,14336], param.414: f32[14336,512], param.416: f32[4096], param.418: f32[4096], param.420: f32[512,8,128], param.422: f32[32,128,512], param.424: f32[512,32,128], param.426: f32[512,8,128], param.428: f32[512,14336], param.430: f32[512,14336], param.432: f32[14336,512], param.434: f32[4096], param.436: f32[4096], param.438: f32[512,8,128], param.440: f32[32,128,512], param.442: f32[512,32,128], param.444: f32[512,8,128], param.446: f32[512,14336], param.448: f32[512,14336], param.450: f32[14336,512], param.452: f32[4096], param.454: f32[4096], param.456: f32[512,8,128], param.458: f32[32,128,512], param.460: f32[512,32,128], param.462: f32[512,8,128], param.464: f32[512,14336], param.466: f32[512,14336], param.468: f32[14336,512], param.470: f32[4096], param.472: f32[4096], param.474: f32[512,8,128], param.476: f32[32,128,512], param.478: f32[512,32,128], param.480: f32[512,8,128], param.482: f32[512,14336], param.484: f32[512,14336], param.486: f32[14336,512], param.488: f32[4096], param.490: f32[4096], param.492: f32[512,8,128], param.494: f32[32,128,512], param.496: f32[512,32,128], param.498: f32[512,8,128], param.500: f32[512,14336], param.502: f32[512,14336], param.504: f32[14336,512], param.506: f32[4096], param.508: f32[4096], param.510: f32[512,8,128], param.512: f32[32,128,512], param.514: f32[512,32,128], param.516: f32[512,8,128], param.518: f32[512,14336], param.520: f32[512,14336], param.522: f32[14336,512], param.524: f32[4096], param.526: f32[4096], param.528: f32[512,8,128], param.530: f32[32,128,512], param.532: f32[512,32,128], param.534: f32[512,8,128], param.536: f32[512,14336], param.538: f32[512,14336], param.540: f32[14336,512], param.542: f32[4096], param.544: f32[4096], param.546: f32[512,8,128], param.548: f32[32,128,512], param.550: f32[512,32,128], param.552: f32[512,8,128], param.554: f32[512,14336], param.556: f32[512,14336], param.558: f32[14336,512], param.560: f32[4096], param.562: f32[4096], param.564: f32[512,8,128], param.566: f32[32,128,512], param.568: f32[512,32,128], param.570: f32[512,8,128], param.572: f32[512,14336], param.574: f32[512,14336], param.576: f32[14336,512], param.578: f32[4096], param.580: f32[4096], param.582: f32[512,8,128], param.584: f32[32,128,512], param.586: f32[512,32,128], param.588: f32[512,8,128], param.590: f32[512,14336], param.592: f32[512,14336], param.594: f32[14336,512], param.596: f32[4096], param.598: f32[4096], param.600: f32[512,8,128], param.602: f32[32,128,512], param.604: f32[512,32,128], param.606: f32[512,8,128], param.608: f32[512,14336], param.610: f32[512,14336], param.612: f32[14336,512], param.614: f32[4096], param.616: f32[4096], param.618: f32[512,8,128], param.620: f32[32,128,512], param.622: f32[512,32,128], param.624: f32[512,8,128], param.626: f32[512,14336], param.628: f32[512,14336], param.630: f32[14336,512], param.632: f32[4096], param.634: f32[4096], param.636: f32[512,8,128], param.638: f32[32,128,512], param.640: f32[512,32,128], param.642: f32[512,8,128], param.644: f32[512,14336], param.646: f32[512,14336], param.648: f32[14336,512], param.650: f32[4096], param.652: f32[4096], param.654: f32[512,8,128], param.656: f32[32,128,512], param.658: f32[512,32,128], param.660: f32[512,8,128], param.662: f32[512,14336], param.664: f32[512,14336], param.666: f32[14336,512], param.668: f32[4096], param.670: f32[4096], param.672: f32[512,8,128], param.674: f32[32,128,512], param.676: f32[512,32,128], param.678: f32[512,8,128], param.680: f32[512,14336], param.682: f32[512,14336], param.684: f32[14336,512], param.686: f32[4096], param.688: f32[4096], param.690: f32[512,8,128], param.692: f32[32,128,512], param.694: f32[512,32,128], param.696: f32[512,8,128], param.698: f32[512,14336], param.700: f32[512,14336], param.702: f32[14336,512], param.704: f32[4096], param.706: f32[4096], param.708: f32[512,8,128], param.710: f32[32,128,512], param.712: f32[512,32,128], param.714: f32[512,8,128], param.716: f32[512,14336], param.718: f32[512,14336], param.720: f32[14336,512], param.722: f32[4096], param.724: f32[4096], param.726: f32[512,8,128], param.728: f32[32,128,512], param.730: f32[512,32,128], param.732: f32[512,8,128], param.734: f32[512,14336], param.736: f32[512,14336], param.738: f32[14336,512], param.740: f32[4096], param.742: f32[4096], param.744: f32[512,8,128], param.746: f32[32,128,512], param.748: f32[512,32,128], param.750: f32[512,8,128], param.752: f32[512,14336], param.754: f32[512,14336], param.756: f32[14336,512], param.758: f32[4096], param.760: f32[4096], param.762: f32[512,8,128], param.764: f32[32,128,512], param.766: f32[512,32,128], param.768: f32[512,8,128], param.770: f32[512,14336], param.772: f32[512,14336], param.774: f32[14336,512], param.776: f32[4096], param.778: f32[4096], param.780: f32[512,8,128], param.782: f32[32,128,512], param.784: f32[512,32,128], param.786: f32[512,8,128], param.788: f32[512,14336], param.790: f32[512,14336], param.792: f32[14336,512], param.794: f32[4096], param.796: f32[4096], param.798: f32[512,8,128], param.800: f32[32,128,512], param.802: f32[512,32,128], param.804: f32[512,8,128], param.806: f32[512,14336], param.808: f32[512,14336], param.810: f32[14336,512], param.812: f32[4096], param.814: f32[4096], param.816: f32[512,8,128], param.818: f32[32,128,512], param.820: f32[512,32,128], param.822: f32[512,8,128], param.824: f32[512,14336], param.826: f32[512,14336], param.828: f32[14336,512], param.830: f32[4096], param.832: f32[4096], param.834: f32[512,8,128], param.836: f32[32,128,512], param.838: f32[512,32,128], param.840: f32[512,8,128], param.842: f32[512,14336], param.844: f32[512,14336], param.846: f32[14336,512], param.848: f32[4096], param.850: f32[4096], param.852: f32[512,8,128], param.854: f32[32,128,512], param.856: f32[512,32,128], param.858: f32[512,8,128], param.860: f32[512,14336], param.862: f32[512,14336], param.864: f32[14336,512], param.866: f32[4096], param.868: f32[4096], param.870: f32[512,8,128], param.872: f32[32,128,512], param.874: f32[512,32,128], param.876: f32[512,8,128], param.878: f32[512,128256], param.880: f32[128256,512], param.2: s32[], param.3: s32[2,8192], param.7: s32[2,8192], param.10: s32[2,8192], param.297: s32[2,8192], param.295: s32[2,8192]) -> (s32[], f32[4096], f32[512,14336], f32[512,14336], f32[14336,512], /*index=5*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=10*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=15*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=20*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=25*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=30*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=35*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=40*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=45*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=50*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=55*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=60*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=65*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=70*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=75*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=80*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=85*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=90*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=95*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=100*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=105*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=110*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=115*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=120*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=125*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=130*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=135*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=140*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=145*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=150*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=155*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=160*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=165*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=170*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=175*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=180*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=185*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=190*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=195*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=200*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=205*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=210*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=215*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=220*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=225*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=230*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=235*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=240*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=245*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=250*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=255*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=260*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=265*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=270*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=275*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=280*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=285*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=290*/f32[512,128256], f32[128256,512], s32[], f32[4096], f32[512,14336], /*index=295*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=300*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=305*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=310*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=315*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=320*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=325*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=330*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=335*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=340*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=345*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=350*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=355*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=360*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=365*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=370*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=375*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=380*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=385*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=390*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=395*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=400*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=405*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=410*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=415*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=420*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=425*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=430*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=435*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=440*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=445*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=450*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=455*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=460*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=465*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=470*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=475*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=480*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=485*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=490*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=495*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=500*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=505*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=510*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=515*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=520*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=525*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=530*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=535*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=540*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=545*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=550*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=555*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=560*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=565*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=570*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=575*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=580*/f32[512,32,128], f32[512,8,128], f32[512,128256], f32[128256,512], f32[4096], /*index=585*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=590*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=595*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=600*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=605*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=610*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=615*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=620*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=625*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=630*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=635*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=640*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=645*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=650*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=655*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=660*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=665*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=670*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=675*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=680*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=685*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=690*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=695*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=700*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=705*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=710*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=715*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=720*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=725*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=730*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=735*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=740*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=745*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=750*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=755*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=760*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=765*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=770*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=775*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=780*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=785*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=790*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=795*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=800*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=805*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=810*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=815*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=820*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=825*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], /*index=830*/f32[14336,512], f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], /*index=835*/f32[512,32,128], f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], /*index=840*/f32[4096], f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], /*index=845*/f32[512,8,128], f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], /*index=850*/f32[4096], f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], /*index=855*/f32[512,14336], f32[512,14336], f32[14336,512], f32[4096], f32[4096], /*index=860*/f32[512,8,128], f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,14336], /*index=865*/f32[512,14336], f32[14336,512], f32[4096], f32[4096], f32[512,8,128], /*index=870*/f32[32,128,512], f32[512,32,128], f32[512,8,128], f32[512,128256], f32[128256,512], /*index=875*/s32[], f32[], f32[], f32[], f32[], /*index=880*/f32[], f32[], s32[]) {
  %param = s32[] parameter(0), sharding={replicated}
  %constant.2871 = s32[] constant(1)
  %add.1953 = s32[] add(%param, %constant.2871)
  %param.1 = f32[4096]{0} parameter(1), sharding={replicated}
  %param.2 = s32[] parameter(875), sharding={replicated}
  %lt.512 = pred[] compare(%param.2, %constant.2871), direction=LT
  %constant.2872 = f32[] constant(1)
  %constant.2873 = s32[] constant(0)
  %max.1 = s32[] maximum(%constant.2873, %param.2)
  %min.1 = s32[] minimum(%constant.2871, %max.1)
  %convert_element_type.788 = f32[] convert(%min.1)
  %sub.63 = f32[] subtract(%constant.2872, %convert_element_type.788)
  %constant.2874 = f32[] constant(-0.001)
  %mul.1620 = f32[] multiply(%sub.63, %constant.2874)
  %constant.2875 = f32[] constant(0.001)
  %add.1954 = f32[] add(%mul.1620, %constant.2875)
  %constant.2876 = s32[] constant(-1)
  %sub.64 = s32[] add(%param.2, %constant.2876)
  %convert_element_type.789 = f32[] convert(%sub.64)
  %constant.2877 = f32[] constant(0.209439531)
  %mul.1621 = f32[] multiply(%convert_element_type.789, %constant.2877)
  %cos.3 = f32[] cosine(%mul.1621)
  %add.1955 = f32[] add(%cos.3, %constant.2872)
  %constant.2878 = f32[] constant(0.0005)
  %mul.1622 = f32[] multiply(%add.1955, %constant.2878)
  %constant.2879 = f32[] constant(0.5)
  %mul.1623 = f32[] multiply(%add.1955, %constant.2879)
  %sub.65 = f32[] subtract(%constant.2872, %mul.1623)
  %constant.2880 = f32[] constant(0.0001)
  %mul.1624 = f32[] multiply(%sub.65, %constant.2880)
  %add.1956 = f32[] add(%mul.1622, %mul.1624)
  %select_n.1053 = f32[] select(%lt.512, %add.1954, %add.1956)
  %constant.2881 = f32[] constant(-1)
  %mul.1625 = f32[] multiply(%select_n.1053, %constant.2881)
  %mul.1626 = f32[4096]{0} broadcast(%mul.1625), dimensions={}
  %param.3 = s32[2,8192]{1,0} parameter(876), sharding={devices=[8,1]<=[8]}
  %eq.395 = s32[2,8192,128256]{2,1,0} broadcast(%param.3), dimensions={0,1}
  %iota.147 = s32[2,8192,128256]{2,1,0} iota(), iota_dimension=2
  %eq.396 = pred[2,8192,128256]{2,1,0} compare(%eq.395, %iota.147), direction=EQ
  %convert_element_type.790 = bf16[2,8192,128256]{2,1,0} convert(%eq.396)
  %param.4 = f32[128256,512]{1,0} parameter(291), sharding={devices=[1,8]<=[8]}
  %convert_element_type.791 = bf16[128256,512]{1,0} convert(%param.4)
  %all-gather = bf16[128256,4096]{1,0} all-gather(%convert_element_type.791), channel_id=1, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.98 = bf16[2,8192,4096]{2,1,0} dot(%convert_element_type.790, %all-gather), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.62 = bf16[2,8192,4096]{2,1,0} copy(%dot.98)
  %sharding_constraint.63 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.62)
  %convert_element_type.792 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.63)
  %square.2 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.792, %convert_element_type.792)
  %constant.2882 = f32[] constant(0)
  %reduce.128 = f32[2,8192]{1,0} reduce(%square.2, %constant.2882), dimensions={2}, to_apply=%region_0.2724
  %constant.2883 = f32[] constant(0.000244140625)
  %broadcast.5097 = f32[2,8192]{1,0} broadcast(%constant.2883), dimensions={}
  %div.362 = f32[2,8192]{1,0} multiply(%reduce.128, %broadcast.5097)
  %constant.2884 = f32[] constant(1e-05)
  %broadcast.5098 = f32[2,8192]{1,0} broadcast(%constant.2884), dimensions={}
  %add.1957 = f32[2,8192]{1,0} add(%div.362, %broadcast.5098)
  %rsqrt.64 = f32[2,8192]{1,0} rsqrt(%add.1957)
  %mul.1631 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.64), dimensions={0,1}
  %mul.1632 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.792, %mul.1631)
  %convert_element_type.793 = bf16[2,8192,4096]{2,1,0} convert(%mul.1632)
  %param.5 = f32[4096]{0} parameter(6), sharding={replicated}
  %convert_element_type.794 = bf16[4096]{0} convert(%param.5)
  %mul.1633 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.794), dimensions={2}
  %mul.1638 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.793, %mul.1633)
  %sharding_constraint.64 = bf16[2,8192,4096]{2,1,0} copy(%mul.1638)
  %sharding_constraint.65 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.64)
  %param.6 = f32[512,32,128]{2,1,0} parameter(9), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.795 = bf16[512,32,128]{2,1,0} convert(%param.6)
  %all-gather.1 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.795), channel_id=2, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.99 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.65, %all-gather.1), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.7 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.99), exponent_bits=8, mantissa_bits=7
  %convert_element_type.796 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.7)
  %param.7 = s32[2,8192]{1,0} parameter(877), sharding={devices=[8,1]<=[8]}
  %convert_element_type.797 = f32[2,8192]{1,0} convert(%param.7)
  %div.363 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.797), dimensions={0,1}
  %broadcast.5099 = f32[128]{0} broadcast(%constant.2872), dimensions={}
  %constant.2885 = f32[] constant(6.28318548)
  %broadcast.5100 = f32[128]{0} broadcast(%constant.2885), dimensions={}
  %constant.2886 = f32[] constant(500000)
  %broadcast.5101 = f32[128]{0} broadcast(%constant.2886), dimensions={}
  %iota.148 = s32[64]{0} iota(), iota_dimension=0
  %constant.2887 = s32[] constant(2)
  %broadcast.5102 = s32[64]{0} broadcast(%constant.2887), dimensions={}
  %mul.1639 = s32[64]{0} multiply(%iota.148, %broadcast.5102)
  %convert_element_type.798 = f32[64]{0} convert(%mul.1639)
  %constant.2888 = f32[] constant(0.0078125)
  %broadcast.5103 = f32[64]{0} broadcast(%constant.2888), dimensions={}
  %div.364 = f32[64]{0} multiply(%convert_element_type.798, %broadcast.5103)
  %broadcast_in_dim.273 = f32[64,2]{1,0} broadcast(%div.364), dimensions={0}
  %reshape.7630 = f32[128]{0} reshape(%broadcast_in_dim.273)
  %pow.3 = f32[128]{0} power(%broadcast.5101, %reshape.7630)
  %div.365 = f32[128]{0} multiply(%broadcast.5100, %pow.3)
  %constant.2889 = f32[] constant(2048)
  %broadcast.5104 = f32[128]{0} broadcast(%constant.2889), dimensions={}
  %lt.513 = pred[128]{0} compare(%div.365, %broadcast.5104), direction=LT
  %convert_element_type.799 = s32[128]{0} convert(%lt.513)
  %rem.509 = s32[128]{0} broadcast(%constant.2871), dimensions={}
  %select_n.1054 = pred[128]{0} compare(%convert_element_type.799, %rem.509), direction=LT
  %constant.2890 = f32[] constant(8192)
  %broadcast.5105 = f32[128]{0} broadcast(%constant.2890), dimensions={}
  %gt.0 = pred[128]{0} compare(%div.365, %broadcast.5105), direction=GT
  %convert_element_type.800 = s32[128]{0} convert(%gt.0)
  %select_n.1056 = pred[128]{0} compare(%convert_element_type.800, %rem.509), direction=LT
  %pow.4 = f32[128]{0} negate(%reshape.7630)
  %pow.5 = f32[128]{0} power(%broadcast.5101, %pow.4)
  %multiply.1968 = f32[128]{0} multiply(%broadcast.5105, %pow.5)
  %constant.2891 = f32[] constant(0.159154937)
  %broadcast.5106 = f32[128]{0} broadcast(%constant.2891), dimensions={}
  %div.366 = f32[128]{0} multiply(%multiply.1968, %broadcast.5106)
  %broadcast.5107 = f32[128]{0} broadcast(%constant.2881), dimensions={}
  %sub.66 = f32[128]{0} add(%div.366, %broadcast.5107)
  %constant.2894 = f32[] constant(0.333333343)
  %broadcast.5108 = f32[128]{0} broadcast(%constant.2894), dimensions={}
  %div.367 = f32[128]{0} multiply(%sub.66, %broadcast.5108)
  %sub.67 = f32[128]{0} subtract(%broadcast.5099, %div.367)
  %mul.1640 = f32[128]{0} multiply(%sub.67, %pow.5)
  %constant.2895 = f32[] constant(0.125)
  %broadcast.5109 = f32[128]{0} broadcast(%constant.2895), dimensions={}
  %div.368 = f32[128]{0} multiply(%mul.1640, %broadcast.5109)
  %mul.1641 = f32[128]{0} multiply(%div.367, %pow.5)
  %add.1958 = f32[128]{0} add(%div.368, %mul.1641)
  %div.369 = f32[128]{0} multiply(%pow.5, %broadcast.5109)
  %select_n.1057 = f32[128]{0} select(%select_n.1056, %add.1958, %div.369)
  %select_n.1058 = f32[128]{0} select(%select_n.1054, %select_n.1057, %pow.5)
  %div.370 = f32[128]{0} divide(%broadcast.5099, %select_n.1058)
  %div.371 = f32[2,8192,1,128]{3,2,1,0} broadcast(%div.370), dimensions={3}
  %div.372 = f32[2,8192,1,128]{3,2,1,0} divide(%div.363, %div.371)
  %cos.4 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.372)
  %mul.1642 = f32[2,8192,128]{2,1,0} reshape(%cos.4)
  %mul.1643 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.1642), dimensions={0,1,3}
  %mul.1644 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.796, %mul.1643)
  %iota.149 = s32[128]{0} iota(), iota_dimension=0
  %rem.510 = s32[128]{0} and(%iota.149, %rem.509)
  %jit_remainder_.0 = s32[128]{0} broadcast(%constant.2873), dimensions={}
  %lt.514 = pred[128]{0} compare(%rem.510, %jit_remainder_.0), direction=LT
  %ne.828 = pred[128]{0} compare(%rem.510, %jit_remainder_.0), direction=NE
  %and.453 = pred[128]{0} and(%lt.514, %ne.828)
  %add.1959 = s32[128]{0} broadcast(%constant.2887), dimensions={}
  %add.1963 = s32[128]{0} add(%rem.510, %add.1959)
  %select_n.1059 = s32[128]{0} select(%and.453, %add.1963, %rem.510)
  %select_n.1060 = pred[128]{0} compare(%select_n.1059, %rem.509), direction=LT
  %reshape.7631 = pred[2,8192,32,128]{3,2,1,0} broadcast(%select_n.1060), dimensions={3}
  %slice.11 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.7), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.12 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.7), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.1 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.11, %slice.12), dimensions={3}
  %slice.13 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.7), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.14 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.7), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.2 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.13, %slice.14), dimensions={3}
  %select_n.1061 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.1, %concatenate.2)
  %convert_element_type.801 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1061)
  %sin.0 = f32[2,8192,1,128]{3,2,1,0} sine(%div.372)
  %mul.1645 = f32[2,8192,128]{2,1,0} reshape(%sin.0)
  %mul.1647 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.1645), dimensions={0,1,3}
  %mul.1648 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.801, %mul.1647)
  %constant.2935 = s32[2]{0} constant({-1, 1})
  %broadcast_in_dim.274 = s32[64,2]{1,0} broadcast(%constant.2935), dimensions={1}
  %reshape.7637 = s32[128]{0} reshape(%broadcast_in_dim.274)
  %convert_element_type.802 = f32[128]{0} convert(%reshape.7637)
  %mul.1649 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.802), dimensions={3}
  %mul.1650 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1648, %mul.1649)
  %add.1964 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1644, %mul.1650)
  %convert_element_type.803 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.1964)
  %sharding_constraint.66 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.803)
  %param.8 = f32[512,8,128]{2,1,0} parameter(7), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.804 = bf16[512,8,128]{2,1,0} convert(%param.8)
  %all-gather.2 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.804), channel_id=3, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.100 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.65, %all-gather.2), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.8 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.100), exponent_bits=8, mantissa_bits=7
  %convert_element_type.805 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.8)
  %mul.1655 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.1642), dimensions={0,1,3}
  %mul.1656 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.805, %mul.1655)
  %reshape.7639 = pred[2,8192,8,128]{3,2,1,0} broadcast(%select_n.1060), dimensions={3}
  %slice.15 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.8), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.16 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.8), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.3 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.15, %slice.16), dimensions={3}
  %slice.17 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.8), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.18 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.8), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.4 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.17, %slice.18), dimensions={3}
  %select_n.1070 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.3, %concatenate.4)
  %convert_element_type.810 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1070)
  %mul.1658 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.1645), dimensions={0,1,3}
  %mul.1659 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.810, %mul.1658)
  %mul.1660 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.802), dimensions={3}
  %mul.1661 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1659, %mul.1660)
  %add.1967 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1656, %mul.1661)
  %convert_element_type.812 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.1967)
  %sharding_constraint.68 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.812)
  %param.9 = f32[512,8,128]{2,1,0} parameter(10), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.813 = bf16[512,8,128]{2,1,0} convert(%param.9)
  %all-gather.3 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.813), channel_id=4, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.101 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.65, %all-gather.3), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.9 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.101), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.69 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.9)
  %constant.2973 = bf16[0]{0} constant({})
  %constant.2974 = u32[] constant(0)
  %broadcast.5110 = u32[16]{0} broadcast(%constant.2974), dimensions={}
  %constant.2987 = s32[8]{0} constant({0, 2, 4, 6, 8, 10, 12, 14})
  %partition-id = u32[] partition-id()
  %dynamic-slice.9 = s32[1]{0} dynamic-slice(%constant.2987, %partition-id), dynamic_slice_sizes={1}
  %reshape.7647 = s32[] reshape(%dynamic-slice.9)
  %dynamic-slice.10 = u32[2]{0} dynamic-slice(%broadcast.5110, %reshape.7647), dynamic_slice_sizes={2}
  %constant.2988 = s32[1]{0} constant({0})
  %param.10 = s32[2,8192]{1,0} parameter(878), sharding={devices=[8,1]<=[8]}
  %eq.397 = s32[2,8192,8192]{2,1,0} broadcast(%param.10), dimensions={0,1}
  %eq.398 = s32[2,8192,8192]{2,1,0} broadcast(%param.10), dimensions={0,2}
  %eq.399 = pred[2,8192,8192]{2,1,0} compare(%eq.397, %eq.398), direction=EQ
  %iota.152 = s32[8192,8192]{1,0} iota(), iota_dimension=1
  %iota.153 = s32[8192,8192]{1,0} iota(), iota_dimension=0
  %le.0 = pred[8192,8192]{1,0} compare(%iota.152, %iota.153), direction=LE
  %and.455 = pred[2,8192,8192]{2,1,0} broadcast(%le.0), dimensions={1,2}
  %and.456 = pred[2,8192,8192]{2,1,0} and(%eq.399, %and.455)
  %broadcast_in_dim.277 = f32[2,8192,8192]{2,1,0} broadcast(%constant.2882), dimensions={}
  %constant.2975 = f32[] constant(-2.38197633e+38)
  %broadcast_in_dim.278 = f32[2,8192,8192]{2,1,0} broadcast(%constant.2975), dimensions={}
  %select_n.1071 = f32[2,8192,8192]{2,1,0} select(%and.456, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.830 = pred[2,8192,8192]{2,1,0} compare(%select_n.1071, %broadcast_in_dim.277), direction=NE
  %not.65 = pred[2,8192,8192]{2,1,0} not(%ne.830)
  %convert_element_type.814 = s32[2,8192,8192]{2,1,0} convert(%not.65)
  %reduce.129 = s32[2,8192]{1,0} reduce(%convert_element_type.814, %constant.2873), dimensions={1}, to_apply=%region_1.2913
  %reduce_sum.3990 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.129)
  %slice.19 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.3990), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.0 = s32[2,1]{1,0} reshape(%slice.19)
  %reshape.7648 = s32[2]{0} reshape(%squeeze.0)
  %broadcast.5111 = s32[2]{0} broadcast(%constant.2873), dimensions={}
  %lt.517 = pred[2]{0} compare(%reshape.7648, %broadcast.5111), direction=LT
  %select_n.1072 = s32[2]{0} select(%lt.517, %broadcast.5111, %reshape.7648)
  %reduce_window_sum.192 = s32[2]{0} reduce-window(%select_n.1072, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.33._custom_call_lowering_rule
  %concatenate.39 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.192), dimensions={0}
  %reduce.130 = s32[2,8192]{1,0} reduce(%convert_element_type.814, %constant.2873), dimensions={2}, to_apply=%region_2.2922
  %reduce_sum.3991 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.130)
  %constant.2985 = s32[] constant(-2147483648)
  %reduce.131 = s32[2,1]{1,0} reduce(%reduce_sum.3991, %constant.2985), dimensions={3,2}, to_apply=%region_3.2929
  %reshape.7649 = s32[2]{0} reshape(%reduce.131)
  %lt.518 = pred[2]{0} compare(%reshape.7649, %broadcast.5111), direction=LT
  %select_n.1073 = s32[2]{0} select(%lt.518, %broadcast.5111, %reshape.7649)
  %reduce_window_sum.193 = s32[2]{0} reduce-window(%select_n.1073, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.33._custom_call_lowering_rule.clone
  %concatenate.44 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.193), dimensions={0}
  %constant.2986 = f32[0]{0} constant({})
  %te_fused_attn_forward_ffi.45 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.66, %sharding_constraint.68, %sharding_constraint.69, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.45), index=0
  %reduce_precision.10 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.70 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.10)
  %param.11 = f32[32,128,512]{2,1,0} parameter(8), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.816 = bf16[32,128,512]{2,1,0} convert(%param.11)
  %all-gather.4 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.816), channel_id=5, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.102 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.70, %all-gather.4), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.11 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.102), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.71 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.11)
  %add.1968 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.63, %sharding_constraint.71)
  %convert_element_type.817 = f32[2,8192,4096]{2,1,0} convert(%add.1968)
  %square.3 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.817, %convert_element_type.817)
  %reduce.132 = f32[2,8192]{1,0} reduce(%square.3, %constant.2882), dimensions={2}, to_apply=%region_4.2948
  %div.383 = f32[2,8192]{1,0} multiply(%reduce.132, %broadcast.5097)
  %add.1969 = f32[2,8192]{1,0} add(%div.383, %broadcast.5098)
  %rsqrt.65 = f32[2,8192]{1,0} rsqrt(%add.1969)
  %mul.1662 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.65), dimensions={0,1}
  %mul.1663 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.817, %mul.1662)
  %convert_element_type.818 = bf16[2,8192,4096]{2,1,0} convert(%mul.1663)
  %param.12 = f32[4096]{0} parameter(5), sharding={replicated}
  %convert_element_type.819 = bf16[4096]{0} convert(%param.12)
  %mul.1664 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.819), dimensions={2}
  %mul.1669 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.818, %mul.1664)
  %sharding_constraint.72 = bf16[2,8192,4096]{2,1,0} copy(%mul.1669)
  %param.13 = f32[512,14336]{1,0} parameter(2), sharding={devices=[8,1]<=[8]}
  %convert_element_type.820 = bf16[512,14336]{1,0} convert(%param.13)
  %all-gather.5 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.820), channel_id=6, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.103 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.72, %all-gather.5), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.12 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.103), exponent_bits=8, mantissa_bits=7
  %constant.2993 = bf16[] constant(1)
  %jit_silu_.0 = bf16[2,8192,14336]{2,1,0} broadcast(%constant.2993), dimensions={}
  %neg.126 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.12)
  %exp.126 = bf16[2,8192,14336]{2,1,0} exponential(%neg.126)
  %add.1970 = bf16[2,8192,14336]{2,1,0} add(%exp.126, %jit_silu_.0)
  %div.384 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.1970)
  %mul.1670 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.12, %div.384)
  %param.14 = f32[512,14336]{1,0} parameter(3), sharding={devices=[8,1]<=[8]}
  %convert_element_type.821 = bf16[512,14336]{1,0} convert(%param.14)
  %all-gather.6 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.821), channel_id=7, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.104 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.72, %all-gather.6), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.13 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.104), exponent_bits=8, mantissa_bits=7
  %mul.1671 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1670, %reduce_precision.13)
  %sharding_constraint.73 = bf16[2,8192,14336]{2,1,0} copy(%mul.1671)
  %param.15 = f32[14336,512]{1,0} parameter(4), sharding={devices=[1,8]<=[8]}
  %convert_element_type.822 = bf16[14336,512]{1,0} convert(%param.15)
  %all-gather.7 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.822), channel_id=8, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.105 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.73, %all-gather.7), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.74 = bf16[2,8192,4096]{2,1,0} copy(%dot.105)
  %add.1971 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.74, %add.1968)
  %sharding_constraint.75 = bf16[2,8192,4096]{2,1,0} copy(%add.1971)
  %sharding_constraint.76 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.75)
  %convert_element_type.823 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.76)
  %square.4 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.823, %convert_element_type.823)
  %reduce.133 = f32[2,8192]{1,0} reduce(%square.4, %constant.2882), dimensions={2}, to_apply=%region_5.2986
  %div.385 = f32[2,8192]{1,0} multiply(%reduce.133, %broadcast.5097)
  %add.1972 = f32[2,8192]{1,0} add(%div.385, %broadcast.5098)
  %rsqrt.66 = f32[2,8192]{1,0} rsqrt(%add.1972)
  %mul.1676 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.66), dimensions={0,1}
  %mul.1677 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.823, %mul.1676)
  %convert_element_type.824 = bf16[2,8192,4096]{2,1,0} convert(%mul.1677)
  %param.16 = f32[4096]{0} parameter(15), sharding={replicated}
  %convert_element_type.825 = bf16[4096]{0} convert(%param.16)
  %mul.1678 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.825), dimensions={2}
  %mul.1679 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.824, %mul.1678)
  %sharding_constraint.77 = bf16[2,8192,4096]{2,1,0} copy(%mul.1679)
  %sharding_constraint.78 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.77)
  %param.17 = f32[512,32,128]{2,1,0} parameter(18), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.826 = bf16[512,32,128]{2,1,0} convert(%param.17)
  %all-gather.8 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.826), channel_id=9, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.106 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.78, %all-gather.8), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.14 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.106), exponent_bits=8, mantissa_bits=7
  %convert_element_type.827 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.14)
  %mul.1685 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.827, %mul.1643)
  %slice.20 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.14), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.21 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.14), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.5 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.20, %slice.21), dimensions={3}
  %slice.22 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.14), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.23 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.14), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.6 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.22, %slice.23), dimensions={3}
  %select_n.1081 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.5, %concatenate.6)
  %convert_element_type.832 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1081)
  %mul.1688 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.832, %mul.1647)
  %mul.1690 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1688, %mul.1649)
  %add.1975 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1685, %mul.1690)
  %convert_element_type.834 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.1975)
  %sharding_constraint.79 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.834)
  %param.18 = f32[512,8,128]{2,1,0} parameter(16), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.835 = bf16[512,8,128]{2,1,0} convert(%param.18)
  %all-gather.9 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.835), channel_id=10, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.107 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.78, %all-gather.9), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.15 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.107), exponent_bits=8, mantissa_bits=7
  %convert_element_type.836 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.15)
  %mul.1696 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.836, %mul.1655)
  %slice.24 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.15), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.25 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.15), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.7 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.24, %slice.25), dimensions={3}
  %slice.26 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.15), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.27 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.15), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.8 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.26, %slice.27), dimensions={3}
  %select_n.1089 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.7, %concatenate.8)
  %convert_element_type.841 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1089)
  %mul.1699 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.841, %mul.1658)
  %mul.1701 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1699, %mul.1660)
  %add.1978 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1696, %mul.1701)
  %convert_element_type.843 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.1978)
  %sharding_constraint.81 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.843)
  %param.19 = f32[512,8,128]{2,1,0} parameter(19), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.844 = bf16[512,8,128]{2,1,0} convert(%param.19)
  %all-gather.10 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.844), channel_id=11, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.108 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.78, %all-gather.10), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.16 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.108), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.82 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.16)
  %te_fused_attn_forward_ffi.0 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.79, %sharding_constraint.81, %sharding_constraint.82, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.1 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.0), index=0
  %reduce_precision.17 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.1), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.83 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.17)
  %param.20 = f32[32,128,512]{2,1,0} parameter(17), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.847 = bf16[32,128,512]{2,1,0} convert(%param.20)
  %all-gather.11 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.847), channel_id=12, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.109 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.83, %all-gather.11), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.18 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.109), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.84 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.18)
  %add.1979 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.76, %sharding_constraint.84)
  %convert_element_type.848 = f32[2,8192,4096]{2,1,0} convert(%add.1979)
  %square.5 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.848, %convert_element_type.848)
  %reduce.137 = f32[2,8192]{1,0} reduce(%square.5, %constant.2882), dimensions={2}, to_apply=%region_9.3178
  %div.406 = f32[2,8192]{1,0} multiply(%reduce.137, %broadcast.5097)
  %add.1980 = f32[2,8192]{1,0} add(%div.406, %broadcast.5098)
  %rsqrt.67 = f32[2,8192]{1,0} rsqrt(%add.1980)
  %mul.1702 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.67), dimensions={0,1}
  %mul.1703 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.848, %mul.1702)
  %convert_element_type.849 = bf16[2,8192,4096]{2,1,0} convert(%mul.1703)
  %param.21 = f32[4096]{0} parameter(14), sharding={replicated}
  %convert_element_type.850 = bf16[4096]{0} convert(%param.21)
  %mul.1704 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.850), dimensions={2}
  %mul.1706 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.849, %mul.1704)
  %sharding_constraint.85 = bf16[2,8192,4096]{2,1,0} copy(%mul.1706)
  %param.22 = f32[512,14336]{1,0} parameter(11), sharding={devices=[8,1]<=[8]}
  %convert_element_type.851 = bf16[512,14336]{1,0} convert(%param.22)
  %all-gather.12 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.851), channel_id=13, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.110 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.85, %all-gather.12), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.19 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.110), exponent_bits=8, mantissa_bits=7
  %neg.127 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.19)
  %exp.127 = bf16[2,8192,14336]{2,1,0} exponential(%neg.127)
  %add.1984 = bf16[2,8192,14336]{2,1,0} add(%exp.127, %jit_silu_.0)
  %div.407 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.1984)
  %mul.1707 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.19, %div.407)
  %param.23 = f32[512,14336]{1,0} parameter(12), sharding={devices=[8,1]<=[8]}
  %convert_element_type.852 = bf16[512,14336]{1,0} convert(%param.23)
  %all-gather.13 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.852), channel_id=14, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.111 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.85, %all-gather.13), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.20 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.111), exponent_bits=8, mantissa_bits=7
  %mul.1708 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1707, %reduce_precision.20)
  %sharding_constraint.86 = bf16[2,8192,14336]{2,1,0} copy(%mul.1708)
  %param.24 = f32[14336,512]{1,0} parameter(13), sharding={devices=[1,8]<=[8]}
  %convert_element_type.853 = bf16[14336,512]{1,0} convert(%param.24)
  %all-gather.14 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.853), channel_id=15, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.112 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.86, %all-gather.14), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.87 = bf16[2,8192,4096]{2,1,0} copy(%dot.112)
  %add.1985 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.87, %add.1979)
  %sharding_constraint.88 = bf16[2,8192,4096]{2,1,0} copy(%add.1985)
  %sharding_constraint.89 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.88)
  %convert_element_type.854 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.89)
  %square.6 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.854, %convert_element_type.854)
  %reduce.138 = f32[2,8192]{1,0} reduce(%square.6, %constant.2882), dimensions={2}, to_apply=%region_10.3214
  %div.408 = f32[2,8192]{1,0} multiply(%reduce.138, %broadcast.5097)
  %add.1986 = f32[2,8192]{1,0} add(%div.408, %broadcast.5098)
  %rsqrt.68 = f32[2,8192]{1,0} rsqrt(%add.1986)
  %mul.1709 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.68), dimensions={0,1}
  %mul.1710 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.854, %mul.1709)
  %convert_element_type.855 = bf16[2,8192,4096]{2,1,0} convert(%mul.1710)
  %param.25 = f32[4096]{0} parameter(114), sharding={replicated}
  %convert_element_type.856 = bf16[4096]{0} convert(%param.25)
  %mul.1711 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.856), dimensions={2}
  %mul.1712 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.855, %mul.1711)
  %sharding_constraint.90 = bf16[2,8192,4096]{2,1,0} copy(%mul.1712)
  %sharding_constraint.91 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.90)
  %param.26 = f32[512,32,128]{2,1,0} parameter(117), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.857 = bf16[512,32,128]{2,1,0} convert(%param.26)
  %all-gather.15 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.857), channel_id=16, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.113 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.91, %all-gather.15), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.21 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.113), exponent_bits=8, mantissa_bits=7
  %convert_element_type.858 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.21)
  %mul.1718 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.858, %mul.1643)
  %slice.29 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.21), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.30 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.21), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.11 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.29, %slice.30), dimensions={3}
  %slice.31 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.21), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.32 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.21), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.12 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.31, %slice.32), dimensions={3}
  %select_n.1101 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.11, %concatenate.12)
  %convert_element_type.863 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1101)
  %mul.1722 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.863, %mul.1647)
  %mul.1725 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1722, %mul.1649)
  %add.1989 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1718, %mul.1725)
  %convert_element_type.865 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.1989)
  %sharding_constraint.92 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.865)
  %param.27 = f32[512,8,128]{2,1,0} parameter(115), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.866 = bf16[512,8,128]{2,1,0} convert(%param.27)
  %all-gather.16 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.866), channel_id=17, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.114 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.91, %all-gather.16), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.22 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.114), exponent_bits=8, mantissa_bits=7
  %convert_element_type.867 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.22)
  %mul.1731 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.867, %mul.1655)
  %slice.33 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.22), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.34 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.22), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.13 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.33, %slice.34), dimensions={3}
  %slice.35 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.22), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.36 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.22), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.14 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.35, %slice.36), dimensions={3}
  %select_n.1110 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.13, %concatenate.14)
  %convert_element_type.872 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1110)
  %mul.1734 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.872, %mul.1658)
  %mul.1736 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1734, %mul.1660)
  %add.1992 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1731, %mul.1736)
  %convert_element_type.874 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.1992)
  %sharding_constraint.94 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.874)
  %param.28 = f32[512,8,128]{2,1,0} parameter(118), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.875 = bf16[512,8,128]{2,1,0} convert(%param.28)
  %all-gather.17 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.875), channel_id=18, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.115 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.91, %all-gather.17), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.23 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.115), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.95 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.23)
  %te_fused_attn_forward_ffi.4 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.92, %sharding_constraint.94, %sharding_constraint.95, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.2 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.4), index=0
  %reduce_precision.24 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.2), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.96 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.24)
  %param.29 = f32[32,128,512]{2,1,0} parameter(116), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.878 = bf16[32,128,512]{2,1,0} convert(%param.29)
  %all-gather.18 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.878), channel_id=19, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.116 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.96, %all-gather.18), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.25 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.116), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.97 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.25)
  %add.1993 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.89, %sharding_constraint.97)
  %convert_element_type.879 = f32[2,8192,4096]{2,1,0} convert(%add.1993)
  %square.7 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.879, %convert_element_type.879)
  %reduce.142 = f32[2,8192]{1,0} reduce(%square.7, %constant.2882), dimensions={2}, to_apply=%region_14.3406
  %div.429 = f32[2,8192]{1,0} multiply(%reduce.142, %broadcast.5097)
  %add.1994 = f32[2,8192]{1,0} add(%div.429, %broadcast.5098)
  %rsqrt.69 = f32[2,8192]{1,0} rsqrt(%add.1994)
  %mul.1737 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.69), dimensions={0,1}
  %mul.1738 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.879, %mul.1737)
  %convert_element_type.880 = bf16[2,8192,4096]{2,1,0} convert(%mul.1738)
  %param.30 = f32[4096]{0} parameter(113), sharding={replicated}
  %convert_element_type.881 = bf16[4096]{0} convert(%param.30)
  %mul.1739 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.881), dimensions={2}
  %mul.1740 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.880, %mul.1739)
  %sharding_constraint.98 = bf16[2,8192,4096]{2,1,0} copy(%mul.1740)
  %param.31 = f32[512,14336]{1,0} parameter(110), sharding={devices=[8,1]<=[8]}
  %convert_element_type.882 = bf16[512,14336]{1,0} convert(%param.31)
  %all-gather.19 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.882), channel_id=20, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.117 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.98, %all-gather.19), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.26 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.117), exponent_bits=8, mantissa_bits=7
  %neg.128 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.26)
  %exp.128 = bf16[2,8192,14336]{2,1,0} exponential(%neg.128)
  %add.1995 = bf16[2,8192,14336]{2,1,0} add(%exp.128, %jit_silu_.0)
  %div.430 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.1995)
  %mul.1741 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.26, %div.430)
  %param.32 = f32[512,14336]{1,0} parameter(111), sharding={devices=[8,1]<=[8]}
  %convert_element_type.883 = bf16[512,14336]{1,0} convert(%param.32)
  %all-gather.20 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.883), channel_id=21, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.118 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.98, %all-gather.20), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.27 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.118), exponent_bits=8, mantissa_bits=7
  %mul.1742 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1741, %reduce_precision.27)
  %sharding_constraint.99 = bf16[2,8192,14336]{2,1,0} copy(%mul.1742)
  %param.33 = f32[14336,512]{1,0} parameter(112), sharding={devices=[1,8]<=[8]}
  %convert_element_type.884 = bf16[14336,512]{1,0} convert(%param.33)
  %all-gather.21 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.884), channel_id=22, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.119 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.99, %all-gather.21), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.100 = bf16[2,8192,4096]{2,1,0} copy(%dot.119)
  %add.1996 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.100, %add.1993)
  %sharding_constraint.101 = bf16[2,8192,4096]{2,1,0} copy(%add.1996)
  %sharding_constraint.102 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.101)
  %convert_element_type.885 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.102)
  %square.8 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.885, %convert_element_type.885)
  %reduce.143 = f32[2,8192]{1,0} reduce(%square.8, %constant.2882), dimensions={2}, to_apply=%region_15.3442
  %div.431 = f32[2,8192]{1,0} multiply(%reduce.143, %broadcast.5097)
  %add.1997 = f32[2,8192]{1,0} add(%div.431, %broadcast.5098)
  %rsqrt.70 = f32[2,8192]{1,0} rsqrt(%add.1997)
  %mul.1743 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.70), dimensions={0,1}
  %mul.1744 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.885, %mul.1743)
  %convert_element_type.886 = bf16[2,8192,4096]{2,1,0} convert(%mul.1744)
  %param.34 = f32[4096]{0} parameter(213), sharding={replicated}
  %convert_element_type.887 = bf16[4096]{0} convert(%param.34)
  %mul.1745 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.887), dimensions={2}
  %mul.1746 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.886, %mul.1745)
  %sharding_constraint.103 = bf16[2,8192,4096]{2,1,0} copy(%mul.1746)
  %sharding_constraint.104 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.103)
  %param.35 = f32[512,32,128]{2,1,0} parameter(216), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.888 = bf16[512,32,128]{2,1,0} convert(%param.35)
  %all-gather.22 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.888), channel_id=23, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.120 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.104, %all-gather.22), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.28 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.120), exponent_bits=8, mantissa_bits=7
  %convert_element_type.889 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.28)
  %mul.1764 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.889, %mul.1643)
  %slice.38 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.28), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.39 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.28), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.17 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.38, %slice.39), dimensions={3}
  %slice.40 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.28), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.41 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.28), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.18 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.40, %slice.41), dimensions={3}
  %select_n.1126 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.17, %concatenate.18)
  %convert_element_type.894 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1126)
  %mul.1767 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.894, %mul.1647)
  %mul.1769 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1767, %mul.1649)
  %add.2000 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1764, %mul.1769)
  %convert_element_type.896 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2000)
  %sharding_constraint.105 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.896)
  %param.36 = f32[512,8,128]{2,1,0} parameter(214), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.897 = bf16[512,8,128]{2,1,0} convert(%param.36)
  %all-gather.23 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.897), channel_id=24, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.121 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.104, %all-gather.23), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.29 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.121), exponent_bits=8, mantissa_bits=7
  %convert_element_type.898 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.29)
  %mul.1775 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.898, %mul.1655)
  %slice.42 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.29), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.43 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.29), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.19 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.42, %slice.43), dimensions={3}
  %slice.44 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.29), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.45 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.29), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.20 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.44, %slice.45), dimensions={3}
  %select_n.1134 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.19, %concatenate.20)
  %convert_element_type.903 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1134)
  %mul.1778 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.903, %mul.1658)
  %mul.1780 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1778, %mul.1660)
  %add.2007 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1775, %mul.1780)
  %convert_element_type.905 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2007)
  %sharding_constraint.107 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.905)
  %param.37 = f32[512,8,128]{2,1,0} parameter(217), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.906 = bf16[512,8,128]{2,1,0} convert(%param.37)
  %all-gather.24 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.906), channel_id=25, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.122 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.104, %all-gather.24), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.30 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.122), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.108 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.30)
  %te_fused_attn_forward_ffi.8 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.105, %sharding_constraint.107, %sharding_constraint.108, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.3 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.8), index=0
  %reduce_precision.31 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.3), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.109 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.31)
  %param.38 = f32[32,128,512]{2,1,0} parameter(215), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.909 = bf16[32,128,512]{2,1,0} convert(%param.38)
  %all-gather.25 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.909), channel_id=26, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.123 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.109, %all-gather.25), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.32 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.123), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.110 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.32)
  %add.2008 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.102, %sharding_constraint.110)
  %convert_element_type.910 = f32[2,8192,4096]{2,1,0} convert(%add.2008)
  %square.9 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.910, %convert_element_type.910)
  %reduce.147 = f32[2,8192]{1,0} reduce(%square.9, %constant.2882), dimensions={2}, to_apply=%region_19.3634
  %div.452 = f32[2,8192]{1,0} multiply(%reduce.147, %broadcast.5097)
  %add.2009 = f32[2,8192]{1,0} add(%div.452, %broadcast.5098)
  %rsqrt.71 = f32[2,8192]{1,0} rsqrt(%add.2009)
  %mul.1782 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.71), dimensions={0,1}
  %mul.1783 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.910, %mul.1782)
  %convert_element_type.911 = bf16[2,8192,4096]{2,1,0} convert(%mul.1783)
  %param.39 = f32[4096]{0} parameter(212), sharding={replicated}
  %convert_element_type.912 = bf16[4096]{0} convert(%param.39)
  %mul.1784 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.912), dimensions={2}
  %mul.1785 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.911, %mul.1784)
  %sharding_constraint.111 = bf16[2,8192,4096]{2,1,0} copy(%mul.1785)
  %param.40 = f32[512,14336]{1,0} parameter(209), sharding={devices=[8,1]<=[8]}
  %convert_element_type.913 = bf16[512,14336]{1,0} convert(%param.40)
  %all-gather.26 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.913), channel_id=27, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.124 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.111, %all-gather.26), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.33 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.124), exponent_bits=8, mantissa_bits=7
  %neg.129 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.33)
  %exp.129 = bf16[2,8192,14336]{2,1,0} exponential(%neg.129)
  %add.2010 = bf16[2,8192,14336]{2,1,0} add(%exp.129, %jit_silu_.0)
  %div.453 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2010)
  %mul.1786 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.33, %div.453)
  %param.41 = f32[512,14336]{1,0} parameter(210), sharding={devices=[8,1]<=[8]}
  %convert_element_type.914 = bf16[512,14336]{1,0} convert(%param.41)
  %all-gather.27 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.914), channel_id=28, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.125 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.111, %all-gather.27), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.34 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.125), exponent_bits=8, mantissa_bits=7
  %mul.1787 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1786, %reduce_precision.34)
  %sharding_constraint.112 = bf16[2,8192,14336]{2,1,0} copy(%mul.1787)
  %param.42 = f32[14336,512]{1,0} parameter(211), sharding={devices=[1,8]<=[8]}
  %convert_element_type.915 = bf16[14336,512]{1,0} convert(%param.42)
  %all-gather.28 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.915), channel_id=29, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.126 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.112, %all-gather.28), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.113 = bf16[2,8192,4096]{2,1,0} copy(%dot.126)
  %add.2011 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.113, %add.2008)
  %sharding_constraint.114 = bf16[2,8192,4096]{2,1,0} copy(%add.2011)
  %sharding_constraint.115 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.114)
  %convert_element_type.916 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.115)
  %square.10 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.916, %convert_element_type.916)
  %reduce.148 = f32[2,8192]{1,0} reduce(%square.10, %constant.2882), dimensions={2}, to_apply=%region_20.3670
  %div.454 = f32[2,8192]{1,0} multiply(%reduce.148, %broadcast.5097)
  %add.2012 = f32[2,8192]{1,0} add(%div.454, %broadcast.5098)
  %rsqrt.72 = f32[2,8192]{1,0} rsqrt(%add.2012)
  %mul.1788 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.72), dimensions={0,1}
  %mul.1789 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.916, %mul.1788)
  %convert_element_type.917 = bf16[2,8192,4096]{2,1,0} convert(%mul.1789)
  %param.43 = f32[4096]{0} parameter(240), sharding={replicated}
  %convert_element_type.918 = bf16[4096]{0} convert(%param.43)
  %mul.1790 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.918), dimensions={2}
  %mul.1791 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.917, %mul.1790)
  %sharding_constraint.116 = bf16[2,8192,4096]{2,1,0} copy(%mul.1791)
  %sharding_constraint.117 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.116)
  %param.44 = f32[512,32,128]{2,1,0} parameter(243), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.919 = bf16[512,32,128]{2,1,0} convert(%param.44)
  %all-gather.29 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.919), channel_id=30, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.127 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.117, %all-gather.29), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.35 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.127), exponent_bits=8, mantissa_bits=7
  %convert_element_type.920 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.35)
  %mul.1798 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.920, %mul.1643)
  %slice.47 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.35), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.48 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.35), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.23 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.47, %slice.48), dimensions={3}
  %slice.49 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.35), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.50 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.35), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.24 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.49, %slice.50), dimensions={3}
  %select_n.1145 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.23, %concatenate.24)
  %convert_element_type.925 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1145)
  %mul.1802 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.925, %mul.1647)
  %mul.1804 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1802, %mul.1649)
  %add.2015 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1798, %mul.1804)
  %convert_element_type.927 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2015)
  %sharding_constraint.118 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.927)
  %param.45 = f32[512,8,128]{2,1,0} parameter(241), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.928 = bf16[512,8,128]{2,1,0} convert(%param.45)
  %all-gather.30 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.928), channel_id=31, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.128 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.117, %all-gather.30), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.36 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.128), exponent_bits=8, mantissa_bits=7
  %convert_element_type.929 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.36)
  %mul.1810 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.929, %mul.1655)
  %slice.51 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.36), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.52 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.36), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.25 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.51, %slice.52), dimensions={3}
  %slice.53 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.36), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.54 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.36), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.26 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.53, %slice.54), dimensions={3}
  %select_n.1158 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.25, %concatenate.26)
  %convert_element_type.934 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1158)
  %mul.1813 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.934, %mul.1658)
  %mul.1815 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1813, %mul.1660)
  %add.2018 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1810, %mul.1815)
  %convert_element_type.936 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2018)
  %sharding_constraint.120 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.936)
  %param.46 = f32[512,8,128]{2,1,0} parameter(244), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.937 = bf16[512,8,128]{2,1,0} convert(%param.46)
  %all-gather.31 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.937), channel_id=32, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.129 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.117, %all-gather.31), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.37 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.129), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.121 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.37)
  %te_fused_attn_forward_ffi.12 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.118, %sharding_constraint.120, %sharding_constraint.121, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.4 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.12), index=0
  %reduce_precision.38 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.4), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.122 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.38)
  %param.47 = f32[32,128,512]{2,1,0} parameter(242), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.940 = bf16[32,128,512]{2,1,0} convert(%param.47)
  %all-gather.32 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.940), channel_id=33, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.130 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.122, %all-gather.32), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.39 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.130), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.123 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.39)
  %add.2019 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.115, %sharding_constraint.123)
  %convert_element_type.941 = f32[2,8192,4096]{2,1,0} convert(%add.2019)
  %square.11 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.941, %convert_element_type.941)
  %reduce.152 = f32[2,8192]{1,0} reduce(%square.11, %constant.2882), dimensions={2}, to_apply=%region_24.3862
  %div.475 = f32[2,8192]{1,0} multiply(%reduce.152, %broadcast.5097)
  %add.2020 = f32[2,8192]{1,0} add(%div.475, %broadcast.5098)
  %rsqrt.73 = f32[2,8192]{1,0} rsqrt(%add.2020)
  %mul.1816 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.73), dimensions={0,1}
  %mul.1817 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.941, %mul.1816)
  %convert_element_type.942 = bf16[2,8192,4096]{2,1,0} convert(%mul.1817)
  %param.48 = f32[4096]{0} parameter(239), sharding={replicated}
  %convert_element_type.943 = bf16[4096]{0} convert(%param.48)
  %mul.1818 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.943), dimensions={2}
  %mul.1819 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.942, %mul.1818)
  %sharding_constraint.124 = bf16[2,8192,4096]{2,1,0} copy(%mul.1819)
  %param.49 = f32[512,14336]{1,0} parameter(236), sharding={devices=[8,1]<=[8]}
  %convert_element_type.944 = bf16[512,14336]{1,0} convert(%param.49)
  %all-gather.33 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.944), channel_id=34, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.131 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.124, %all-gather.33), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.40 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.131), exponent_bits=8, mantissa_bits=7
  %neg.130 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.40)
  %exp.130 = bf16[2,8192,14336]{2,1,0} exponential(%neg.130)
  %add.2021 = bf16[2,8192,14336]{2,1,0} add(%exp.130, %jit_silu_.0)
  %div.476 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2021)
  %mul.1820 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.40, %div.476)
  %param.50 = f32[512,14336]{1,0} parameter(237), sharding={devices=[8,1]<=[8]}
  %convert_element_type.945 = bf16[512,14336]{1,0} convert(%param.50)
  %all-gather.34 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.945), channel_id=35, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.132 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.124, %all-gather.34), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.41 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.132), exponent_bits=8, mantissa_bits=7
  %mul.1821 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1820, %reduce_precision.41)
  %sharding_constraint.125 = bf16[2,8192,14336]{2,1,0} copy(%mul.1821)
  %param.51 = f32[14336,512]{1,0} parameter(238), sharding={devices=[1,8]<=[8]}
  %convert_element_type.946 = bf16[14336,512]{1,0} convert(%param.51)
  %all-gather.35 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.946), channel_id=36, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.133 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.125, %all-gather.35), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.126 = bf16[2,8192,4096]{2,1,0} copy(%dot.133)
  %add.2022 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.126, %add.2019)
  %sharding_constraint.127 = bf16[2,8192,4096]{2,1,0} copy(%add.2022)
  %sharding_constraint.128 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.127)
  %convert_element_type.947 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.128)
  %square.12 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.947, %convert_element_type.947)
  %reduce.153 = f32[2,8192]{1,0} reduce(%square.12, %constant.2882), dimensions={2}, to_apply=%region_25.3898
  %div.477 = f32[2,8192]{1,0} multiply(%reduce.153, %broadcast.5097)
  %add.2026 = f32[2,8192]{1,0} add(%div.477, %broadcast.5098)
  %rsqrt.74 = f32[2,8192]{1,0} rsqrt(%add.2026)
  %mul.1822 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.74), dimensions={0,1}
  %mul.1827 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.947, %mul.1822)
  %convert_element_type.948 = bf16[2,8192,4096]{2,1,0} convert(%mul.1827)
  %param.52 = f32[4096]{0} parameter(249), sharding={replicated}
  %convert_element_type.949 = bf16[4096]{0} convert(%param.52)
  %mul.1832 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.949), dimensions={2}
  %mul.1833 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.948, %mul.1832)
  %sharding_constraint.129 = bf16[2,8192,4096]{2,1,0} copy(%mul.1833)
  %sharding_constraint.130 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.129)
  %param.53 = f32[512,32,128]{2,1,0} parameter(252), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.950 = bf16[512,32,128]{2,1,0} convert(%param.53)
  %all-gather.36 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.950), channel_id=37, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.134 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.130, %all-gather.36), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.42 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.134), exponent_bits=8, mantissa_bits=7
  %convert_element_type.951 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.42)
  %mul.1843 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.951, %mul.1643)
  %slice.56 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.42), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.57 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.42), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.29 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.56, %slice.57), dimensions={3}
  %slice.58 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.42), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.59 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.42), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.30 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.58, %slice.59), dimensions={3}
  %select_n.1170 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.29, %concatenate.30)
  %convert_element_type.956 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1170)
  %mul.1846 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.956, %mul.1647)
  %mul.1848 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1846, %mul.1649)
  %add.2029 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1843, %mul.1848)
  %convert_element_type.958 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2029)
  %sharding_constraint.131 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.958)
  %param.54 = f32[512,8,128]{2,1,0} parameter(250), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.959 = bf16[512,8,128]{2,1,0} convert(%param.54)
  %all-gather.37 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.959), channel_id=38, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.135 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.130, %all-gather.37), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.43 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.135), exponent_bits=8, mantissa_bits=7
  %convert_element_type.960 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.43)
  %mul.1854 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.960, %mul.1655)
  %slice.60 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.43), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.61 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.43), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.31 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.60, %slice.61), dimensions={3}
  %slice.62 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.43), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.63 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.43), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.32 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.62, %slice.63), dimensions={3}
  %select_n.1178 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.31, %concatenate.32)
  %convert_element_type.965 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1178)
  %mul.1857 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.965, %mul.1658)
  %mul.1859 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1857, %mul.1660)
  %add.2032 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1854, %mul.1859)
  %convert_element_type.967 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2032)
  %sharding_constraint.133 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.967)
  %param.55 = f32[512,8,128]{2,1,0} parameter(253), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.968 = bf16[512,8,128]{2,1,0} convert(%param.55)
  %all-gather.38 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.968), channel_id=39, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.136 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.130, %all-gather.38), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.44 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.136), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.134 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.44)
  %te_fused_attn_forward_ffi.16 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.131, %sharding_constraint.133, %sharding_constraint.134, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.5 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.16), index=0
  %reduce_precision.45 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.5), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.135 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.45)
  %param.56 = f32[32,128,512]{2,1,0} parameter(251), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.971 = bf16[32,128,512]{2,1,0} convert(%param.56)
  %all-gather.39 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.971), channel_id=40, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.137 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.135, %all-gather.39), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.46 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.137), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.136 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.46)
  %add.2033 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.128, %sharding_constraint.136)
  %convert_element_type.972 = f32[2,8192,4096]{2,1,0} convert(%add.2033)
  %square.13 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.972, %convert_element_type.972)
  %reduce.157 = f32[2,8192]{1,0} reduce(%square.13, %constant.2882), dimensions={2}, to_apply=%region_29.4090
  %div.498 = f32[2,8192]{1,0} multiply(%reduce.157, %broadcast.5097)
  %add.2034 = f32[2,8192]{1,0} add(%div.498, %broadcast.5098)
  %rsqrt.75 = f32[2,8192]{1,0} rsqrt(%add.2034)
  %mul.1860 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.75), dimensions={0,1}
  %mul.1861 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.972, %mul.1860)
  %convert_element_type.973 = bf16[2,8192,4096]{2,1,0} convert(%mul.1861)
  %param.57 = f32[4096]{0} parameter(248), sharding={replicated}
  %convert_element_type.974 = bf16[4096]{0} convert(%param.57)
  %mul.1862 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.974), dimensions={2}
  %mul.1863 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.973, %mul.1862)
  %sharding_constraint.137 = bf16[2,8192,4096]{2,1,0} copy(%mul.1863)
  %param.58 = f32[512,14336]{1,0} parameter(245), sharding={devices=[8,1]<=[8]}
  %convert_element_type.975 = bf16[512,14336]{1,0} convert(%param.58)
  %all-gather.40 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.975), channel_id=41, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.138 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.137, %all-gather.40), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.47 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.138), exponent_bits=8, mantissa_bits=7
  %neg.131 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.47)
  %exp.131 = bf16[2,8192,14336]{2,1,0} exponential(%neg.131)
  %add.2035 = bf16[2,8192,14336]{2,1,0} add(%exp.131, %jit_silu_.0)
  %div.499 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2035)
  %mul.1864 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.47, %div.499)
  %param.59 = f32[512,14336]{1,0} parameter(246), sharding={devices=[8,1]<=[8]}
  %convert_element_type.976 = bf16[512,14336]{1,0} convert(%param.59)
  %all-gather.41 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.976), channel_id=42, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.139 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.137, %all-gather.41), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.48 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.139), exponent_bits=8, mantissa_bits=7
  %mul.1865 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1864, %reduce_precision.48)
  %sharding_constraint.138 = bf16[2,8192,14336]{2,1,0} copy(%mul.1865)
  %param.60 = f32[14336,512]{1,0} parameter(247), sharding={devices=[1,8]<=[8]}
  %convert_element_type.977 = bf16[14336,512]{1,0} convert(%param.60)
  %all-gather.42 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.977), channel_id=43, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.140 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.138, %all-gather.42), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.139 = bf16[2,8192,4096]{2,1,0} copy(%dot.140)
  %add.2036 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.139, %add.2033)
  %sharding_constraint.140 = bf16[2,8192,4096]{2,1,0} copy(%add.2036)
  %sharding_constraint.141 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.140)
  %convert_element_type.978 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.141)
  %square.14 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.978, %convert_element_type.978)
  %reduce.158 = f32[2,8192]{1,0} reduce(%square.14, %constant.2882), dimensions={2}, to_apply=%region_30.4126
  %div.500 = f32[2,8192]{1,0} multiply(%reduce.158, %broadcast.5097)
  %add.2037 = f32[2,8192]{1,0} add(%div.500, %broadcast.5098)
  %rsqrt.76 = f32[2,8192]{1,0} rsqrt(%add.2037)
  %mul.1866 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.76), dimensions={0,1}
  %mul.1867 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.978, %mul.1866)
  %convert_element_type.979 = bf16[2,8192,4096]{2,1,0} convert(%mul.1867)
  %param.61 = f32[4096]{0} parameter(258), sharding={replicated}
  %convert_element_type.980 = bf16[4096]{0} convert(%param.61)
  %mul.1868 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.980), dimensions={2}
  %mul.1869 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.979, %mul.1868)
  %sharding_constraint.142 = bf16[2,8192,4096]{2,1,0} copy(%mul.1869)
  %sharding_constraint.143 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.142)
  %param.62 = f32[512,32,128]{2,1,0} parameter(261), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.981 = bf16[512,32,128]{2,1,0} convert(%param.62)
  %all-gather.43 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.981), channel_id=44, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.141 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.143, %all-gather.43), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.49 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.141), exponent_bits=8, mantissa_bits=7
  %convert_element_type.982 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.49)
  %mul.1875 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.982, %mul.1643)
  %slice.65 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.49), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.66 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.49), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.35 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.65, %slice.66), dimensions={3}
  %slice.67 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.49), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.68 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.49), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.36 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.67, %slice.68), dimensions={3}
  %select_n.1190 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.35, %concatenate.36)
  %convert_element_type.987 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1190)
  %mul.1878 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.987, %mul.1647)
  %mul.1880 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1878, %mul.1649)
  %add.2040 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1875, %mul.1880)
  %convert_element_type.989 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2040)
  %sharding_constraint.144 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.989)
  %param.63 = f32[512,8,128]{2,1,0} parameter(259), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.990 = bf16[512,8,128]{2,1,0} convert(%param.63)
  %all-gather.44 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.990), channel_id=45, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.142 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.143, %all-gather.44), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.50 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.142), exponent_bits=8, mantissa_bits=7
  %convert_element_type.991 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.50)
  %mul.1886 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.991, %mul.1655)
  %slice.69 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.50), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.70 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.50), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.37 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.69, %slice.70), dimensions={3}
  %slice.71 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.50), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.72 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.50), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.38 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.71, %slice.72), dimensions={3}
  %select_n.1198 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.37, %concatenate.38)
  %convert_element_type.996 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1198)
  %mul.1889 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.996, %mul.1658)
  %mul.1891 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1889, %mul.1660)
  %add.2047 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1886, %mul.1891)
  %convert_element_type.998 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2047)
  %sharding_constraint.146 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.998)
  %param.64 = f32[512,8,128]{2,1,0} parameter(262), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.999 = bf16[512,8,128]{2,1,0} convert(%param.64)
  %all-gather.45 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.999), channel_id=46, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.143 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.143, %all-gather.45), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.51 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.143), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.147 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.51)
  %te_fused_attn_forward_ffi.20 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.144, %sharding_constraint.146, %sharding_constraint.147, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.6 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.20), index=0
  %reduce_precision.52 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.6), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.148 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.52)
  %param.65 = f32[32,128,512]{2,1,0} parameter(260), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1002 = bf16[32,128,512]{2,1,0} convert(%param.65)
  %all-gather.46 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1002), channel_id=47, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.144 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.148, %all-gather.46), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.53 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.144), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.149 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.53)
  %add.2048 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.141, %sharding_constraint.149)
  %convert_element_type.1003 = f32[2,8192,4096]{2,1,0} convert(%add.2048)
  %square.15 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1003, %convert_element_type.1003)
  %reduce.162 = f32[2,8192]{1,0} reduce(%square.15, %constant.2882), dimensions={2}, to_apply=%region_34.4318
  %div.521 = f32[2,8192]{1,0} multiply(%reduce.162, %broadcast.5097)
  %add.2049 = f32[2,8192]{1,0} add(%div.521, %broadcast.5098)
  %rsqrt.77 = f32[2,8192]{1,0} rsqrt(%add.2049)
  %mul.1892 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.77), dimensions={0,1}
  %mul.1893 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1003, %mul.1892)
  %convert_element_type.1004 = bf16[2,8192,4096]{2,1,0} convert(%mul.1893)
  %param.66 = f32[4096]{0} parameter(257), sharding={replicated}
  %convert_element_type.1005 = bf16[4096]{0} convert(%param.66)
  %mul.1894 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1005), dimensions={2}
  %mul.1895 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1004, %mul.1894)
  %sharding_constraint.150 = bf16[2,8192,4096]{2,1,0} copy(%mul.1895)
  %param.67 = f32[512,14336]{1,0} parameter(254), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1006 = bf16[512,14336]{1,0} convert(%param.67)
  %all-gather.47 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1006), channel_id=48, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.145 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.150, %all-gather.47), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.54 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.145), exponent_bits=8, mantissa_bits=7
  %neg.132 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.54)
  %exp.132 = bf16[2,8192,14336]{2,1,0} exponential(%neg.132)
  %add.2050 = bf16[2,8192,14336]{2,1,0} add(%exp.132, %jit_silu_.0)
  %div.522 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2050)
  %mul.1896 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.54, %div.522)
  %param.68 = f32[512,14336]{1,0} parameter(255), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1007 = bf16[512,14336]{1,0} convert(%param.68)
  %all-gather.48 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1007), channel_id=49, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.146 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.150, %all-gather.48), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.55 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.146), exponent_bits=8, mantissa_bits=7
  %mul.1897 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1896, %reduce_precision.55)
  %sharding_constraint.151 = bf16[2,8192,14336]{2,1,0} copy(%mul.1897)
  %param.69 = f32[14336,512]{1,0} parameter(256), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1008 = bf16[14336,512]{1,0} convert(%param.69)
  %all-gather.49 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1008), channel_id=50, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.147 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.151, %all-gather.49), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.152 = bf16[2,8192,4096]{2,1,0} copy(%dot.147)
  %add.2051 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.152, %add.2048)
  %sharding_constraint.153 = bf16[2,8192,4096]{2,1,0} copy(%add.2051)
  %sharding_constraint.154 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.153)
  %convert_element_type.1009 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.154)
  %square.16 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1009, %convert_element_type.1009)
  %reduce.163 = f32[2,8192]{1,0} reduce(%square.16, %constant.2882), dimensions={2}, to_apply=%region_35.4354
  %div.523 = f32[2,8192]{1,0} multiply(%reduce.163, %broadcast.5097)
  %add.2052 = f32[2,8192]{1,0} add(%div.523, %broadcast.5098)
  %rsqrt.78 = f32[2,8192]{1,0} rsqrt(%add.2052)
  %mul.1898 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.78), dimensions={0,1}
  %mul.1899 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1009, %mul.1898)
  %convert_element_type.1010 = bf16[2,8192,4096]{2,1,0} convert(%mul.1899)
  %param.70 = f32[4096]{0} parameter(267), sharding={replicated}
  %convert_element_type.1011 = bf16[4096]{0} convert(%param.70)
  %mul.1900 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1011), dimensions={2}
  %mul.1901 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1010, %mul.1900)
  %sharding_constraint.155 = bf16[2,8192,4096]{2,1,0} copy(%mul.1901)
  %sharding_constraint.156 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.155)
  %param.71 = f32[512,32,128]{2,1,0} parameter(270), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1012 = bf16[512,32,128]{2,1,0} convert(%param.71)
  %all-gather.50 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1012), channel_id=51, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.148 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.156, %all-gather.50), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.56 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.148), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1013 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.56)
  %mul.1907 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1013, %mul.1643)
  %slice.74 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.56), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.75 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.56), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.42 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.74, %slice.75), dimensions={3}
  %slice.76 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.56), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.77 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.56), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.43 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.76, %slice.77), dimensions={3}
  %select_n.1212 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.42, %concatenate.43)
  %convert_element_type.1018 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1212)
  %mul.1914 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1018, %mul.1647)
  %mul.1920 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1914, %mul.1649)
  %add.2055 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1907, %mul.1920)
  %convert_element_type.1020 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2055)
  %sharding_constraint.157 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1020)
  %param.72 = f32[512,8,128]{2,1,0} parameter(268), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1021 = bf16[512,8,128]{2,1,0} convert(%param.72)
  %all-gather.51 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1021), channel_id=52, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.149 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.156, %all-gather.51), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.57 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.149), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1022 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.57)
  %mul.1926 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1022, %mul.1655)
  %slice.78 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.57), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.79 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.57), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.45 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.78, %slice.79), dimensions={3}
  %slice.80 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.57), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.81 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.57), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.46 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.80, %slice.81), dimensions={3}
  %select_n.1220 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.45, %concatenate.46)
  %convert_element_type.1027 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1220)
  %mul.1930 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1027, %mul.1658)
  %mul.1932 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1930, %mul.1660)
  %add.2058 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1926, %mul.1932)
  %convert_element_type.1029 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2058)
  %sharding_constraint.159 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1029)
  %param.73 = f32[512,8,128]{2,1,0} parameter(271), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1030 = bf16[512,8,128]{2,1,0} convert(%param.73)
  %all-gather.52 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1030), channel_id=53, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.150 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.156, %all-gather.52), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.58 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.150), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.160 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.58)
  %te_fused_attn_forward_ffi.24 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.157, %sharding_constraint.159, %sharding_constraint.160, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.7 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.24), index=0
  %reduce_precision.59 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.7), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.161 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.59)
  %param.74 = f32[32,128,512]{2,1,0} parameter(269), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1033 = bf16[32,128,512]{2,1,0} convert(%param.74)
  %all-gather.53 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1033), channel_id=54, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.151 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.161, %all-gather.53), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.60 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.151), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.162 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.60)
  %add.2059 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.154, %sharding_constraint.162)
  %convert_element_type.1034 = f32[2,8192,4096]{2,1,0} convert(%add.2059)
  %square.17 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1034, %convert_element_type.1034)
  %reduce.167 = f32[2,8192]{1,0} reduce(%square.17, %constant.2882), dimensions={2}, to_apply=%region_39.4546
  %div.544 = f32[2,8192]{1,0} multiply(%reduce.167, %broadcast.5097)
  %add.2060 = f32[2,8192]{1,0} add(%div.544, %broadcast.5098)
  %rsqrt.79 = f32[2,8192]{1,0} rsqrt(%add.2060)
  %mul.1933 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.79), dimensions={0,1}
  %mul.1934 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1034, %mul.1933)
  %convert_element_type.1035 = bf16[2,8192,4096]{2,1,0} convert(%mul.1934)
  %param.75 = f32[4096]{0} parameter(266), sharding={replicated}
  %convert_element_type.1036 = bf16[4096]{0} convert(%param.75)
  %mul.1935 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1036), dimensions={2}
  %mul.1936 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1035, %mul.1935)
  %sharding_constraint.163 = bf16[2,8192,4096]{2,1,0} copy(%mul.1936)
  %param.76 = f32[512,14336]{1,0} parameter(263), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1037 = bf16[512,14336]{1,0} convert(%param.76)
  %all-gather.54 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1037), channel_id=55, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.152 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.163, %all-gather.54), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.61 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.152), exponent_bits=8, mantissa_bits=7
  %neg.133 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.61)
  %exp.133 = bf16[2,8192,14336]{2,1,0} exponential(%neg.133)
  %add.2061 = bf16[2,8192,14336]{2,1,0} add(%exp.133, %jit_silu_.0)
  %div.545 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2061)
  %mul.1937 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.61, %div.545)
  %param.77 = f32[512,14336]{1,0} parameter(264), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1038 = bf16[512,14336]{1,0} convert(%param.77)
  %all-gather.55 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1038), channel_id=56, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.153 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.163, %all-gather.55), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.62 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.153), exponent_bits=8, mantissa_bits=7
  %mul.1938 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1937, %reduce_precision.62)
  %sharding_constraint.164 = bf16[2,8192,14336]{2,1,0} copy(%mul.1938)
  %param.78 = f32[14336,512]{1,0} parameter(265), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1039 = bf16[14336,512]{1,0} convert(%param.78)
  %all-gather.56 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1039), channel_id=57, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.154 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.164, %all-gather.56), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.165 = bf16[2,8192,4096]{2,1,0} copy(%dot.154)
  %add.2062 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.165, %add.2059)
  %sharding_constraint.166 = bf16[2,8192,4096]{2,1,0} copy(%add.2062)
  %sharding_constraint.167 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.166)
  %convert_element_type.1040 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.167)
  %square.18 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1040, %convert_element_type.1040)
  %reduce.168 = f32[2,8192]{1,0} reduce(%square.18, %constant.2882), dimensions={2}, to_apply=%region_40.4582
  %div.546 = f32[2,8192]{1,0} multiply(%reduce.168, %broadcast.5097)
  %add.2063 = f32[2,8192]{1,0} add(%div.546, %broadcast.5098)
  %rsqrt.80 = f32[2,8192]{1,0} rsqrt(%add.2063)
  %mul.1939 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.80), dimensions={0,1}
  %mul.1940 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1040, %mul.1939)
  %convert_element_type.1041 = bf16[2,8192,4096]{2,1,0} convert(%mul.1940)
  %param.79 = f32[4096]{0} parameter(276), sharding={replicated}
  %convert_element_type.1042 = bf16[4096]{0} convert(%param.79)
  %mul.1941 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1042), dimensions={2}
  %mul.1942 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1041, %mul.1941)
  %sharding_constraint.168 = bf16[2,8192,4096]{2,1,0} copy(%mul.1942)
  %sharding_constraint.169 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.168)
  %param.80 = f32[512,32,128]{2,1,0} parameter(279), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1043 = bf16[512,32,128]{2,1,0} convert(%param.80)
  %all-gather.57 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1043), channel_id=58, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.155 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.169, %all-gather.57), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.63 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.155), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1044 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.63)
  %mul.1952 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1044, %mul.1643)
  %slice.83 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.63), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.84 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.63), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.49 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.83, %slice.84), dimensions={3}
  %slice.85 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.63), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.86 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.63), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.50 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.85, %slice.86), dimensions={3}
  %select_n.1236 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.49, %concatenate.50)
  %convert_element_type.1052 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1236)
  %mul.1959 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1052, %mul.1647)
  %mul.1961 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1959, %mul.1649)
  %add.2069 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1952, %mul.1961)
  %convert_element_type.1054 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2069)
  %sharding_constraint.170 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1054)
  %param.81 = f32[512,8,128]{2,1,0} parameter(277), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1055 = bf16[512,8,128]{2,1,0} convert(%param.81)
  %all-gather.58 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1055), channel_id=59, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.156 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.169, %all-gather.58), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.64 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.156), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1056 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.64)
  %mul.1967 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1056, %mul.1655)
  %slice.87 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.64), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.88 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.64), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.51 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.87, %slice.88), dimensions={3}
  %slice.89 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.64), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.90 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.64), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.52 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.89, %slice.90), dimensions={3}
  %select_n.1245 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.51, %concatenate.52)
  %convert_element_type.1061 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1245)
  %mul.1970 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1061, %mul.1658)
  %mul.1972 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.1970, %mul.1660)
  %add.2072 = f32[2,8192,8,128]{3,2,1,0} add(%mul.1967, %mul.1972)
  %convert_element_type.1063 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2072)
  %sharding_constraint.172 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1063)
  %param.82 = f32[512,8,128]{2,1,0} parameter(280), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1064 = bf16[512,8,128]{2,1,0} convert(%param.82)
  %all-gather.59 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1064), channel_id=60, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.157 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.169, %all-gather.59), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.65 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.157), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.173 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.65)
  %te_fused_attn_forward_ffi.28 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.170, %sharding_constraint.172, %sharding_constraint.173, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.8 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.28), index=0
  %reduce_precision.66 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.8), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.174 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.66)
  %param.83 = f32[32,128,512]{2,1,0} parameter(278), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1069 = bf16[32,128,512]{2,1,0} convert(%param.83)
  %all-gather.60 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1069), channel_id=61, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.158 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.174, %all-gather.60), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.67 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.158), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.175 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.67)
  %add.2073 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.167, %sharding_constraint.175)
  %convert_element_type.1070 = f32[2,8192,4096]{2,1,0} convert(%add.2073)
  %square.19 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1070, %convert_element_type.1070)
  %reduce.172 = f32[2,8192]{1,0} reduce(%square.19, %constant.2882), dimensions={2}, to_apply=%region_44.4774
  %div.567 = f32[2,8192]{1,0} multiply(%reduce.172, %broadcast.5097)
  %add.2074 = f32[2,8192]{1,0} add(%div.567, %broadcast.5098)
  %rsqrt.81 = f32[2,8192]{1,0} rsqrt(%add.2074)
  %mul.1973 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.81), dimensions={0,1}
  %mul.1974 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1070, %mul.1973)
  %convert_element_type.1071 = bf16[2,8192,4096]{2,1,0} convert(%mul.1974)
  %param.84 = f32[4096]{0} parameter(275), sharding={replicated}
  %convert_element_type.1072 = bf16[4096]{0} convert(%param.84)
  %mul.1975 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1072), dimensions={2}
  %mul.1976 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1071, %mul.1975)
  %sharding_constraint.176 = bf16[2,8192,4096]{2,1,0} copy(%mul.1976)
  %param.85 = f32[512,14336]{1,0} parameter(272), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1073 = bf16[512,14336]{1,0} convert(%param.85)
  %all-gather.61 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1073), channel_id=62, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.159 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.176, %all-gather.61), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.68 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.159), exponent_bits=8, mantissa_bits=7
  %neg.134 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.68)
  %exp.134 = bf16[2,8192,14336]{2,1,0} exponential(%neg.134)
  %add.2075 = bf16[2,8192,14336]{2,1,0} add(%exp.134, %jit_silu_.0)
  %div.568 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2075)
  %mul.1977 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.68, %div.568)
  %param.86 = f32[512,14336]{1,0} parameter(273), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1074 = bf16[512,14336]{1,0} convert(%param.86)
  %all-gather.62 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1074), channel_id=63, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.160 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.176, %all-gather.62), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.69 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.160), exponent_bits=8, mantissa_bits=7
  %mul.1978 = bf16[2,8192,14336]{2,1,0} multiply(%mul.1977, %reduce_precision.69)
  %sharding_constraint.177 = bf16[2,8192,14336]{2,1,0} copy(%mul.1978)
  %param.87 = f32[14336,512]{1,0} parameter(274), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1075 = bf16[14336,512]{1,0} convert(%param.87)
  %all-gather.63 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1075), channel_id=64, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.161 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.177, %all-gather.63), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.178 = bf16[2,8192,4096]{2,1,0} copy(%dot.161)
  %add.2076 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.178, %add.2073)
  %sharding_constraint.179 = bf16[2,8192,4096]{2,1,0} copy(%add.2076)
  %sharding_constraint.180 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.179)
  %convert_element_type.1077 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.180)
  %square.20 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1077, %convert_element_type.1077)
  %reduce.173 = f32[2,8192]{1,0} reduce(%square.20, %constant.2882), dimensions={2}, to_apply=%region_45.4810
  %div.569 = f32[2,8192]{1,0} multiply(%reduce.173, %broadcast.5097)
  %add.2077 = f32[2,8192]{1,0} add(%div.569, %broadcast.5098)
  %rsqrt.82 = f32[2,8192]{1,0} rsqrt(%add.2077)
  %mul.1979 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.82), dimensions={0,1}
  %mul.1980 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1077, %mul.1979)
  %convert_element_type.1078 = bf16[2,8192,4096]{2,1,0} convert(%mul.1980)
  %param.88 = f32[4096]{0} parameter(285), sharding={replicated}
  %convert_element_type.1080 = bf16[4096]{0} convert(%param.88)
  %mul.1981 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1080), dimensions={2}
  %mul.1982 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1078, %mul.1981)
  %sharding_constraint.181 = bf16[2,8192,4096]{2,1,0} copy(%mul.1982)
  %sharding_constraint.182 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.181)
  %param.89 = f32[512,32,128]{2,1,0} parameter(288), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1081 = bf16[512,32,128]{2,1,0} convert(%param.89)
  %all-gather.64 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1081), channel_id=65, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.162 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.182, %all-gather.64), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.70 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.162), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1083 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.70)
  %mul.1989 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1083, %mul.1643)
  %slice.92 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.70), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.93 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.70), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.55 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.92, %slice.93), dimensions={3}
  %slice.94 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.70), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.95 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.70), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.56 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.94, %slice.95), dimensions={3}
  %select_n.1256 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.55, %concatenate.56)
  %convert_element_type.1088 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1256)
  %mul.1992 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1088, %mul.1647)
  %mul.1994 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.1992, %mul.1649)
  %add.2080 = f32[2,8192,32,128]{3,2,1,0} add(%mul.1989, %mul.1994)
  %convert_element_type.1090 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2080)
  %sharding_constraint.183 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1090)
  %param.90 = f32[512,8,128]{2,1,0} parameter(286), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1091 = bf16[512,8,128]{2,1,0} convert(%param.90)
  %all-gather.65 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1091), channel_id=66, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.163 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.182, %all-gather.65), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.71 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.163), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1092 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.71)
  %mul.2000 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1092, %mul.1655)
  %slice.96 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.71), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.97 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.71), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.57 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.96, %slice.97), dimensions={3}
  %slice.98 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.71), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.99 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.71), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.58 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.98, %slice.99), dimensions={3}
  %select_n.1264 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.57, %concatenate.58)
  %convert_element_type.1097 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1264)
  %mul.2005 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1097, %mul.1658)
  %mul.2007 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2005, %mul.1660)
  %add.2084 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2000, %mul.2007)
  %convert_element_type.1099 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2084)
  %sharding_constraint.185 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1099)
  %param.91 = f32[512,8,128]{2,1,0} parameter(289), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1100 = bf16[512,8,128]{2,1,0} convert(%param.91)
  %all-gather.66 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1100), channel_id=67, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.164 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.182, %all-gather.66), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.72 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.164), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.186 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.72)
  %te_fused_attn_forward_ffi.32 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.183, %sharding_constraint.185, %sharding_constraint.186, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.9 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.32), index=0
  %reduce_precision.73 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.9), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.187 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.73)
  %param.92 = f32[32,128,512]{2,1,0} parameter(287), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1103 = bf16[32,128,512]{2,1,0} convert(%param.92)
  %all-gather.67 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1103), channel_id=68, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.165 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.187, %all-gather.67), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.74 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.165), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.188 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.74)
  %add.2085 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.180, %sharding_constraint.188)
  %convert_element_type.1104 = f32[2,8192,4096]{2,1,0} convert(%add.2085)
  %square.21 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1104, %convert_element_type.1104)
  %reduce.177 = f32[2,8192]{1,0} reduce(%square.21, %constant.2882), dimensions={2}, to_apply=%region_49.5002
  %div.590 = f32[2,8192]{1,0} multiply(%reduce.177, %broadcast.5097)
  %add.2089 = f32[2,8192]{1,0} add(%div.590, %broadcast.5098)
  %rsqrt.83 = f32[2,8192]{1,0} rsqrt(%add.2089)
  %mul.2008 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.83), dimensions={0,1}
  %mul.2009 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1104, %mul.2008)
  %convert_element_type.1105 = bf16[2,8192,4096]{2,1,0} convert(%mul.2009)
  %param.93 = f32[4096]{0} parameter(284), sharding={replicated}
  %convert_element_type.1106 = bf16[4096]{0} convert(%param.93)
  %mul.2010 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1106), dimensions={2}
  %mul.2011 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1105, %mul.2010)
  %sharding_constraint.189 = bf16[2,8192,4096]{2,1,0} copy(%mul.2011)
  %param.94 = f32[512,14336]{1,0} parameter(281), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1107 = bf16[512,14336]{1,0} convert(%param.94)
  %all-gather.68 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1107), channel_id=69, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.166 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.189, %all-gather.68), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.75 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.166), exponent_bits=8, mantissa_bits=7
  %neg.135 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.75)
  %exp.135 = bf16[2,8192,14336]{2,1,0} exponential(%neg.135)
  %add.2090 = bf16[2,8192,14336]{2,1,0} add(%exp.135, %jit_silu_.0)
  %div.591 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2090)
  %mul.2012 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.75, %div.591)
  %param.95 = f32[512,14336]{1,0} parameter(282), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1108 = bf16[512,14336]{1,0} convert(%param.95)
  %all-gather.69 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1108), channel_id=70, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.167 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.189, %all-gather.69), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.76 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.167), exponent_bits=8, mantissa_bits=7
  %mul.2013 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2012, %reduce_precision.76)
  %sharding_constraint.190 = bf16[2,8192,14336]{2,1,0} copy(%mul.2013)
  %param.96 = f32[14336,512]{1,0} parameter(283), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1109 = bf16[14336,512]{1,0} convert(%param.96)
  %all-gather.70 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1109), channel_id=71, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.168 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.190, %all-gather.70), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.191 = bf16[2,8192,4096]{2,1,0} copy(%dot.168)
  %add.2091 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.191, %add.2085)
  %sharding_constraint.192 = bf16[2,8192,4096]{2,1,0} copy(%add.2091)
  %sharding_constraint.193 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.192)
  %convert_element_type.1110 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.193)
  %square.22 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1110, %convert_element_type.1110)
  %reduce.178 = f32[2,8192]{1,0} reduce(%square.22, %constant.2882), dimensions={2}, to_apply=%region_50.5038
  %div.592 = f32[2,8192]{1,0} multiply(%reduce.178, %broadcast.5097)
  %add.2092 = f32[2,8192]{1,0} add(%div.592, %broadcast.5098)
  %rsqrt.84 = f32[2,8192]{1,0} rsqrt(%add.2092)
  %mul.2014 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.84), dimensions={0,1}
  %mul.2015 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1110, %mul.2014)
  %convert_element_type.1111 = bf16[2,8192,4096]{2,1,0} convert(%mul.2015)
  %param.97 = f32[4096]{0} parameter(24), sharding={replicated}
  %convert_element_type.1112 = bf16[4096]{0} convert(%param.97)
  %mul.2016 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1112), dimensions={2}
  %mul.2017 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1111, %mul.2016)
  %sharding_constraint.194 = bf16[2,8192,4096]{2,1,0} copy(%mul.2017)
  %sharding_constraint.195 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.194)
  %param.98 = f32[512,32,128]{2,1,0} parameter(27), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1113 = bf16[512,32,128]{2,1,0} convert(%param.98)
  %all-gather.71 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1113), channel_id=72, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.169 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.195, %all-gather.71), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.77 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.169), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1114 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.77)
  %mul.2023 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1114, %mul.1643)
  %slice.101 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.77), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.102 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.77), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.61 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.101, %slice.102), dimensions={3}
  %slice.103 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.77), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.104 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.77), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.62 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.103, %slice.104), dimensions={3}
  %select_n.1276 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.61, %concatenate.62)
  %convert_element_type.1119 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1276)
  %mul.2026 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1119, %mul.1647)
  %mul.2032 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2026, %mul.1649)
  %add.2095 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2023, %mul.2032)
  %convert_element_type.1121 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2095)
  %sharding_constraint.196 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1121)
  %param.99 = f32[512,8,128]{2,1,0} parameter(25), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1122 = bf16[512,8,128]{2,1,0} convert(%param.99)
  %all-gather.72 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1122), channel_id=73, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.170 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.195, %all-gather.72), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.78 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.170), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1123 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.78)
  %mul.2046 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1123, %mul.1655)
  %slice.105 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.78), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.106 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.78), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.63 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.105, %slice.106), dimensions={3}
  %slice.107 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.78), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.108 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.78), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.64 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.107, %slice.108), dimensions={3}
  %select_n.1284 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.63, %concatenate.64)
  %convert_element_type.1129 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1284)
  %mul.2049 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1129, %mul.1658)
  %mul.2051 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2049, %mul.1660)
  %add.2098 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2046, %mul.2051)
  %convert_element_type.1131 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2098)
  %sharding_constraint.198 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1131)
  %param.100 = f32[512,8,128]{2,1,0} parameter(28), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1132 = bf16[512,8,128]{2,1,0} convert(%param.100)
  %all-gather.73 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1132), channel_id=74, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.171 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.195, %all-gather.73), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.79 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.171), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.199 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.79)
  %te_fused_attn_forward_ffi.36 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.196, %sharding_constraint.198, %sharding_constraint.199, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.10 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.36), index=0
  %reduce_precision.80 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.10), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.200 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.80)
  %param.101 = f32[32,128,512]{2,1,0} parameter(26), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1135 = bf16[32,128,512]{2,1,0} convert(%param.101)
  %all-gather.74 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1135), channel_id=75, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.172 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.200, %all-gather.74), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.81 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.172), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.201 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.81)
  %add.2099 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.193, %sharding_constraint.201)
  %convert_element_type.1137 = f32[2,8192,4096]{2,1,0} convert(%add.2099)
  %square.23 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1137, %convert_element_type.1137)
  %reduce.182 = f32[2,8192]{1,0} reduce(%square.23, %constant.2882), dimensions={2}, to_apply=%region_54.5230
  %div.613 = f32[2,8192]{1,0} multiply(%reduce.182, %broadcast.5097)
  %add.2100 = f32[2,8192]{1,0} add(%div.613, %broadcast.5098)
  %rsqrt.85 = f32[2,8192]{1,0} rsqrt(%add.2100)
  %mul.2052 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.85), dimensions={0,1}
  %mul.2053 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1137, %mul.2052)
  %convert_element_type.1139 = bf16[2,8192,4096]{2,1,0} convert(%mul.2053)
  %param.102 = f32[4096]{0} parameter(23), sharding={replicated}
  %convert_element_type.1140 = bf16[4096]{0} convert(%param.102)
  %mul.2054 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1140), dimensions={2}
  %mul.2055 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1139, %mul.2054)
  %sharding_constraint.202 = bf16[2,8192,4096]{2,1,0} copy(%mul.2055)
  %param.103 = f32[512,14336]{1,0} parameter(20), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1141 = bf16[512,14336]{1,0} convert(%param.103)
  %all-gather.75 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1141), channel_id=76, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.173 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.202, %all-gather.75), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.82 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.173), exponent_bits=8, mantissa_bits=7
  %neg.136 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.82)
  %exp.136 = bf16[2,8192,14336]{2,1,0} exponential(%neg.136)
  %add.2101 = bf16[2,8192,14336]{2,1,0} add(%exp.136, %jit_silu_.0)
  %div.614 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2101)
  %mul.2056 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.82, %div.614)
  %param.104 = f32[512,14336]{1,0} parameter(21), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1142 = bf16[512,14336]{1,0} convert(%param.104)
  %all-gather.76 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1142), channel_id=77, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.174 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.202, %all-gather.76), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.83 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.174), exponent_bits=8, mantissa_bits=7
  %mul.2057 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2056, %reduce_precision.83)
  %sharding_constraint.203 = bf16[2,8192,14336]{2,1,0} copy(%mul.2057)
  %param.105 = f32[14336,512]{1,0} parameter(22), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1143 = bf16[14336,512]{1,0} convert(%param.105)
  %all-gather.77 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1143), channel_id=78, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.175 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.203, %all-gather.77), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.204 = bf16[2,8192,4096]{2,1,0} copy(%dot.175)
  %add.2102 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.204, %add.2099)
  %sharding_constraint.205 = bf16[2,8192,4096]{2,1,0} copy(%add.2102)
  %sharding_constraint.206 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.205)
  %convert_element_type.1144 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.206)
  %square.24 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1144, %convert_element_type.1144)
  %reduce.183 = f32[2,8192]{1,0} reduce(%square.24, %constant.2882), dimensions={2}, to_apply=%region_55.5266
  %div.615 = f32[2,8192]{1,0} multiply(%reduce.183, %broadcast.5097)
  %add.2103 = f32[2,8192]{1,0} add(%div.615, %broadcast.5098)
  %rsqrt.86 = f32[2,8192]{1,0} rsqrt(%add.2103)
  %mul.2058 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.86), dimensions={0,1}
  %mul.2059 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1144, %mul.2058)
  %convert_element_type.1145 = bf16[2,8192,4096]{2,1,0} convert(%mul.2059)
  %param.106 = f32[4096]{0} parameter(33), sharding={replicated}
  %convert_element_type.1146 = bf16[4096]{0} convert(%param.106)
  %mul.2060 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1146), dimensions={2}
  %mul.2061 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1145, %mul.2060)
  %sharding_constraint.207 = bf16[2,8192,4096]{2,1,0} copy(%mul.2061)
  %sharding_constraint.208 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.207)
  %param.107 = f32[512,32,128]{2,1,0} parameter(36), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1147 = bf16[512,32,128]{2,1,0} convert(%param.107)
  %all-gather.78 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1147), channel_id=79, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.176 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.208, %all-gather.78), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.84 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.176), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1148 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.84)
  %mul.2068 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1148, %mul.1643)
  %slice.110 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.84), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.111 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.84), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.67 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.110, %slice.111), dimensions={3}
  %slice.112 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.84), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.113 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.84), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.68 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.112, %slice.113), dimensions={3}
  %select_n.1297 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.67, %concatenate.68)
  %convert_element_type.1153 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1297)
  %mul.2071 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1153, %mul.1647)
  %mul.2073 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2071, %mul.1649)
  %add.2106 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2068, %mul.2073)
  %convert_element_type.1156 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2106)
  %sharding_constraint.209 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1156)
  %param.108 = f32[512,8,128]{2,1,0} parameter(34), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1157 = bf16[512,8,128]{2,1,0} convert(%param.108)
  %all-gather.79 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1157), channel_id=80, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.177 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.208, %all-gather.79), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.85 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.177), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1158 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.85)
  %mul.2081 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1158, %mul.1655)
  %slice.114 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.85), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.115 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.85), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.69 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.114, %slice.115), dimensions={3}
  %slice.116 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.85), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.117 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.85), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.70 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.116, %slice.117), dimensions={3}
  %select_n.1305 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.69, %concatenate.70)
  %convert_element_type.1163 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1305)
  %mul.2084 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1163, %mul.1658)
  %mul.2086 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2084, %mul.1660)
  %add.2112 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2081, %mul.2086)
  %convert_element_type.1165 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2112)
  %sharding_constraint.211 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1165)
  %param.109 = f32[512,8,128]{2,1,0} parameter(37), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1166 = bf16[512,8,128]{2,1,0} convert(%param.109)
  %all-gather.80 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1166), channel_id=81, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.178 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.208, %all-gather.80), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.86 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.178), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.212 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.86)
  %te_fused_attn_forward_ffi.40 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.209, %sharding_constraint.211, %sharding_constraint.212, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.11 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.40), index=0
  %reduce_precision.87 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.11), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.213 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.87)
  %param.110 = f32[32,128,512]{2,1,0} parameter(35), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1170 = bf16[32,128,512]{2,1,0} convert(%param.110)
  %all-gather.81 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1170), channel_id=82, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.179 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.213, %all-gather.81), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.88 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.179), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.214 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.88)
  %add.2113 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.206, %sharding_constraint.214)
  %convert_element_type.1171 = f32[2,8192,4096]{2,1,0} convert(%add.2113)
  %square.25 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1171, %convert_element_type.1171)
  %reduce.187 = f32[2,8192]{1,0} reduce(%square.25, %constant.2882), dimensions={2}, to_apply=%region_59.5458
  %div.636 = f32[2,8192]{1,0} multiply(%reduce.187, %broadcast.5097)
  %add.2114 = f32[2,8192]{1,0} add(%div.636, %broadcast.5098)
  %rsqrt.87 = f32[2,8192]{1,0} rsqrt(%add.2114)
  %mul.2087 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.87), dimensions={0,1}
  %mul.2088 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1171, %mul.2087)
  %convert_element_type.1172 = bf16[2,8192,4096]{2,1,0} convert(%mul.2088)
  %param.111 = f32[4096]{0} parameter(32), sharding={replicated}
  %convert_element_type.1174 = bf16[4096]{0} convert(%param.111)
  %mul.2089 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1174), dimensions={2}
  %mul.2090 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1172, %mul.2089)
  %sharding_constraint.215 = bf16[2,8192,4096]{2,1,0} copy(%mul.2090)
  %param.112 = f32[512,14336]{1,0} parameter(29), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1175 = bf16[512,14336]{1,0} convert(%param.112)
  %all-gather.82 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1175), channel_id=83, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.180 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.215, %all-gather.82), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.89 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.180), exponent_bits=8, mantissa_bits=7
  %neg.137 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.89)
  %exp.137 = bf16[2,8192,14336]{2,1,0} exponential(%neg.137)
  %add.2115 = bf16[2,8192,14336]{2,1,0} add(%exp.137, %jit_silu_.0)
  %div.637 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2115)
  %mul.2091 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.89, %div.637)
  %param.113 = f32[512,14336]{1,0} parameter(30), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1176 = bf16[512,14336]{1,0} convert(%param.113)
  %all-gather.83 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1176), channel_id=84, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.181 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.215, %all-gather.83), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.90 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.181), exponent_bits=8, mantissa_bits=7
  %mul.2092 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2091, %reduce_precision.90)
  %sharding_constraint.216 = bf16[2,8192,14336]{2,1,0} copy(%mul.2092)
  %param.114 = f32[14336,512]{1,0} parameter(31), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1177 = bf16[14336,512]{1,0} convert(%param.114)
  %all-gather.84 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1177), channel_id=85, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.182 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.216, %all-gather.84), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.217 = bf16[2,8192,4096]{2,1,0} copy(%dot.182)
  %add.2116 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.217, %add.2113)
  %sharding_constraint.218 = bf16[2,8192,4096]{2,1,0} copy(%add.2116)
  %sharding_constraint.219 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.218)
  %convert_element_type.1179 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.219)
  %square.26 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1179, %convert_element_type.1179)
  %reduce.188 = f32[2,8192]{1,0} reduce(%square.26, %constant.2882), dimensions={2}, to_apply=%region_60.5494
  %div.638 = f32[2,8192]{1,0} multiply(%reduce.188, %broadcast.5097)
  %add.2117 = f32[2,8192]{1,0} add(%div.638, %broadcast.5098)
  %rsqrt.88 = f32[2,8192]{1,0} rsqrt(%add.2117)
  %mul.2093 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.88), dimensions={0,1}
  %mul.2094 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1179, %mul.2093)
  %convert_element_type.1180 = bf16[2,8192,4096]{2,1,0} convert(%mul.2094)
  %param.115 = f32[4096]{0} parameter(42), sharding={replicated}
  %convert_element_type.1181 = bf16[4096]{0} convert(%param.115)
  %mul.2095 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1181), dimensions={2}
  %mul.2096 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1180, %mul.2095)
  %sharding_constraint.220 = bf16[2,8192,4096]{2,1,0} copy(%mul.2096)
  %sharding_constraint.221 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.220)
  %param.116 = f32[512,32,128]{2,1,0} parameter(45), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1182 = bf16[512,32,128]{2,1,0} convert(%param.116)
  %all-gather.85 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1182), channel_id=86, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.183 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.221, %all-gather.85), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.91 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.183), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1183 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.91)
  %mul.2102 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1183, %mul.1643)
  %slice.119 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.91), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.120 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.91), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.73 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.119, %slice.120), dimensions={3}
  %slice.121 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.91), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.122 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.91), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.74 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.121, %slice.122), dimensions={3}
  %select_n.1317 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.73, %concatenate.74)
  %convert_element_type.1189 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1317)
  %mul.2113 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1189, %mul.1647)
  %mul.2119 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2113, %mul.1649)
  %add.2121 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2102, %mul.2119)
  %convert_element_type.1191 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2121)
  %sharding_constraint.222 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1191)
  %param.117 = f32[512,8,128]{2,1,0} parameter(43), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1192 = bf16[512,8,128]{2,1,0} convert(%param.117)
  %all-gather.86 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1192), channel_id=87, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.184 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.221, %all-gather.86), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.92 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.184), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1193 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.92)
  %mul.2125 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1193, %mul.1655)
  %slice.123 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.92), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.124 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.92), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.75 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.123, %slice.124), dimensions={3}
  %slice.125 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.92), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.126 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.92), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.76 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.125, %slice.126), dimensions={3}
  %select_n.1325 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.75, %concatenate.76)
  %convert_element_type.1198 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1325)
  %mul.2128 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1198, %mul.1658)
  %mul.2130 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2128, %mul.1660)
  %add.2124 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2125, %mul.2130)
  %convert_element_type.1200 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2124)
  %sharding_constraint.224 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1200)
  %param.118 = f32[512,8,128]{2,1,0} parameter(46), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1201 = bf16[512,8,128]{2,1,0} convert(%param.118)
  %all-gather.87 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1201), channel_id=88, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.185 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.221, %all-gather.87), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.93 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.185), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.225 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.93)
  %te_fused_attn_forward_ffi.44 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.222, %sharding_constraint.224, %sharding_constraint.225, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.12 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.44), index=0
  %reduce_precision.94 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.12), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.226 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.94)
  %param.119 = f32[32,128,512]{2,1,0} parameter(44), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1205 = bf16[32,128,512]{2,1,0} convert(%param.119)
  %all-gather.88 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1205), channel_id=89, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.186 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.226, %all-gather.88), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.95 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.186), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.227 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.95)
  %add.2125 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.219, %sharding_constraint.227)
  %convert_element_type.1206 = f32[2,8192,4096]{2,1,0} convert(%add.2125)
  %square.27 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1206, %convert_element_type.1206)
  %reduce.192 = f32[2,8192]{1,0} reduce(%square.27, %constant.2882), dimensions={2}, to_apply=%region_64.5686
  %div.659 = f32[2,8192]{1,0} multiply(%reduce.192, %broadcast.5097)
  %add.2126 = f32[2,8192]{1,0} add(%div.659, %broadcast.5098)
  %rsqrt.89 = f32[2,8192]{1,0} rsqrt(%add.2126)
  %mul.2131 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.89), dimensions={0,1}
  %mul.2132 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1206, %mul.2131)
  %convert_element_type.1207 = bf16[2,8192,4096]{2,1,0} convert(%mul.2132)
  %param.120 = f32[4096]{0} parameter(41), sharding={replicated}
  %convert_element_type.1208 = bf16[4096]{0} convert(%param.120)
  %mul.2133 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1208), dimensions={2}
  %mul.2134 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1207, %mul.2133)
  %sharding_constraint.228 = bf16[2,8192,4096]{2,1,0} copy(%mul.2134)
  %param.121 = f32[512,14336]{1,0} parameter(38), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1209 = bf16[512,14336]{1,0} convert(%param.121)
  %all-gather.89 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1209), channel_id=90, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.187 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.228, %all-gather.89), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.96 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.187), exponent_bits=8, mantissa_bits=7
  %neg.138 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.96)
  %exp.138 = bf16[2,8192,14336]{2,1,0} exponential(%neg.138)
  %add.2127 = bf16[2,8192,14336]{2,1,0} add(%exp.138, %jit_silu_.0)
  %div.660 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2127)
  %mul.2135 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.96, %div.660)
  %param.122 = f32[512,14336]{1,0} parameter(39), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1210 = bf16[512,14336]{1,0} convert(%param.122)
  %all-gather.90 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1210), channel_id=91, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.188 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.228, %all-gather.90), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.97 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.188), exponent_bits=8, mantissa_bits=7
  %mul.2136 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2135, %reduce_precision.97)
  %sharding_constraint.229 = bf16[2,8192,14336]{2,1,0} copy(%mul.2136)
  %param.123 = f32[14336,512]{1,0} parameter(40), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1211 = bf16[14336,512]{1,0} convert(%param.123)
  %all-gather.91 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1211), channel_id=92, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.189 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.229, %all-gather.91), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.230 = bf16[2,8192,4096]{2,1,0} copy(%dot.189)
  %add.2131 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.230, %add.2125)
  %sharding_constraint.231 = bf16[2,8192,4096]{2,1,0} copy(%add.2131)
  %sharding_constraint.232 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.231)
  %convert_element_type.1213 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.232)
  %square.28 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1213, %convert_element_type.1213)
  %reduce.193 = f32[2,8192]{1,0} reduce(%square.28, %constant.2882), dimensions={2}, to_apply=%region_65.5722
  %div.661 = f32[2,8192]{1,0} multiply(%reduce.193, %broadcast.5097)
  %add.2132 = f32[2,8192]{1,0} add(%div.661, %broadcast.5098)
  %rsqrt.90 = f32[2,8192]{1,0} rsqrt(%add.2132)
  %mul.2137 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.90), dimensions={0,1}
  %mul.2138 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1213, %mul.2137)
  %convert_element_type.1215 = bf16[2,8192,4096]{2,1,0} convert(%mul.2138)
  %param.124 = f32[4096]{0} parameter(51), sharding={replicated}
  %convert_element_type.1216 = bf16[4096]{0} convert(%param.124)
  %mul.2139 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1216), dimensions={2}
  %mul.2140 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1215, %mul.2139)
  %sharding_constraint.233 = bf16[2,8192,4096]{2,1,0} copy(%mul.2140)
  %sharding_constraint.234 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.233)
  %param.125 = f32[512,32,128]{2,1,0} parameter(54), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1217 = bf16[512,32,128]{2,1,0} convert(%param.125)
  %all-gather.92 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1217), channel_id=93, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.190 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.234, %all-gather.92), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.98 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.190), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1218 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.98)
  %mul.2146 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1218, %mul.1643)
  %slice.128 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.98), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.129 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.98), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.79 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.128, %slice.129), dimensions={3}
  %slice.130 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.98), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.131 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.98), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.80 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.130, %slice.131), dimensions={3}
  %select_n.1337 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.79, %concatenate.80)
  %convert_element_type.1223 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1337)
  %mul.2149 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1223, %mul.1647)
  %mul.2151 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2149, %mul.1649)
  %add.2135 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2146, %mul.2151)
  %convert_element_type.1225 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2135)
  %sharding_constraint.235 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1225)
  %param.126 = f32[512,8,128]{2,1,0} parameter(52), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1226 = bf16[512,8,128]{2,1,0} convert(%param.126)
  %all-gather.93 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1226), channel_id=94, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.191 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.234, %all-gather.93), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.99 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.191), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1227 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.99)
  %mul.2157 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1227, %mul.1655)
  %slice.132 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.99), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.133 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.99), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.81 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.132, %slice.133), dimensions={3}
  %slice.134 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.99), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.135 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.99), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.82 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.134, %slice.135), dimensions={3}
  %select_n.1344 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.81, %concatenate.82)
  %convert_element_type.1233 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1344)
  %mul.2160 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1233, %mul.1658)
  %mul.2162 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2160, %mul.1660)
  %add.2138 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2157, %mul.2162)
  %convert_element_type.1235 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2138)
  %sharding_constraint.237 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1235)
  %param.127 = f32[512,8,128]{2,1,0} parameter(55), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1236 = bf16[512,8,128]{2,1,0} convert(%param.127)
  %all-gather.94 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1236), channel_id=95, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.192 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.234, %all-gather.94), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.100 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.192), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.238 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.100)
  %te_fused_attn_forward_ffi.52 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.235, %sharding_constraint.237, %sharding_constraint.238, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.13 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.52), index=0
  %reduce_precision.101 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.13), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.239 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.101)
  %param.128 = f32[32,128,512]{2,1,0} parameter(53), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1239 = bf16[32,128,512]{2,1,0} convert(%param.128)
  %all-gather.95 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1239), channel_id=96, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.193 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.239, %all-gather.95), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.102 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.193), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.240 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.102)
  %add.2139 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.232, %sharding_constraint.240)
  %convert_element_type.1240 = f32[2,8192,4096]{2,1,0} convert(%add.2139)
  %square.29 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1240, %convert_element_type.1240)
  %reduce.197 = f32[2,8192]{1,0} reduce(%square.29, %constant.2882), dimensions={2}, to_apply=%region_69.5914
  %div.682 = f32[2,8192]{1,0} multiply(%reduce.197, %broadcast.5097)
  %add.2140 = f32[2,8192]{1,0} add(%div.682, %broadcast.5098)
  %rsqrt.91 = f32[2,8192]{1,0} rsqrt(%add.2140)
  %mul.2163 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.91), dimensions={0,1}
  %mul.2164 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1240, %mul.2163)
  %convert_element_type.1241 = bf16[2,8192,4096]{2,1,0} convert(%mul.2164)
  %param.129 = f32[4096]{0} parameter(50), sharding={replicated}
  %convert_element_type.1242 = bf16[4096]{0} convert(%param.129)
  %mul.2165 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1242), dimensions={2}
  %mul.2166 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1241, %mul.2165)
  %sharding_constraint.241 = bf16[2,8192,4096]{2,1,0} copy(%mul.2166)
  %param.130 = f32[512,14336]{1,0} parameter(47), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1243 = bf16[512,14336]{1,0} convert(%param.130)
  %all-gather.96 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1243), channel_id=97, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.194 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.241, %all-gather.96), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.103 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.194), exponent_bits=8, mantissa_bits=7
  %neg.139 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.103)
  %exp.139 = bf16[2,8192,14336]{2,1,0} exponential(%neg.139)
  %add.2141 = bf16[2,8192,14336]{2,1,0} add(%exp.139, %jit_silu_.0)
  %div.683 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2141)
  %mul.2167 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.103, %div.683)
  %param.131 = f32[512,14336]{1,0} parameter(48), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1245 = bf16[512,14336]{1,0} convert(%param.131)
  %all-gather.97 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1245), channel_id=98, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.195 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.241, %all-gather.97), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.104 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.195), exponent_bits=8, mantissa_bits=7
  %mul.2168 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2167, %reduce_precision.104)
  %sharding_constraint.242 = bf16[2,8192,14336]{2,1,0} copy(%mul.2168)
  %param.132 = f32[14336,512]{1,0} parameter(49), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1246 = bf16[14336,512]{1,0} convert(%param.132)
  %all-gather.98 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1246), channel_id=99, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.196 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.242, %all-gather.98), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.243 = bf16[2,8192,4096]{2,1,0} copy(%dot.196)
  %add.2142 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.243, %add.2139)
  %sharding_constraint.244 = bf16[2,8192,4096]{2,1,0} copy(%add.2142)
  %sharding_constraint.245 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.244)
  %convert_element_type.1247 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.245)
  %square.30 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1247, %convert_element_type.1247)
  %reduce.198 = f32[2,8192]{1,0} reduce(%square.30, %constant.2882), dimensions={2}, to_apply=%region_70.5950
  %div.684 = f32[2,8192]{1,0} multiply(%reduce.198, %broadcast.5097)
  %add.2143 = f32[2,8192]{1,0} add(%div.684, %broadcast.5098)
  %rsqrt.92 = f32[2,8192]{1,0} rsqrt(%add.2143)
  %mul.2169 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.92), dimensions={0,1}
  %mul.2170 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1247, %mul.2169)
  %convert_element_type.1248 = bf16[2,8192,4096]{2,1,0} convert(%mul.2170)
  %param.133 = f32[4096]{0} parameter(60), sharding={replicated}
  %convert_element_type.1250 = bf16[4096]{0} convert(%param.133)
  %mul.2171 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1250), dimensions={2}
  %mul.2172 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1248, %mul.2171)
  %sharding_constraint.246 = bf16[2,8192,4096]{2,1,0} copy(%mul.2172)
  %sharding_constraint.247 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.246)
  %param.134 = f32[512,32,128]{2,1,0} parameter(63), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1251 = bf16[512,32,128]{2,1,0} convert(%param.134)
  %all-gather.99 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1251), channel_id=100, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.197 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.247, %all-gather.99), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.105 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.197), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1252 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.105)
  %mul.2178 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1252, %mul.1643)
  %slice.137 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.105), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.138 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.105), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.85 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.137, %slice.138), dimensions={3}
  %slice.139 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.105), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.140 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.105), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.86 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.139, %slice.140), dimensions={3}
  %select_n.1357 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.85, %concatenate.86)
  %convert_element_type.1258 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1357)
  %mul.2181 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1258, %mul.1647)
  %mul.2183 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2181, %mul.1649)
  %add.2146 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2178, %mul.2183)
  %convert_element_type.1260 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2146)
  %sharding_constraint.248 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1260)
  %param.135 = f32[512,8,128]{2,1,0} parameter(61), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1262 = bf16[512,8,128]{2,1,0} convert(%param.135)
  %all-gather.100 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1262), channel_id=101, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.198 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.247, %all-gather.100), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.106 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.198), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1263 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.106)
  %mul.2193 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1263, %mul.1655)
  %slice.141 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.106), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.142 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.106), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.87 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.141, %slice.142), dimensions={3}
  %slice.143 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.106), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.144 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.106), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.88 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.143, %slice.144), dimensions={3}
  %select_n.1364 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.87, %concatenate.88)
  %convert_element_type.1268 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1364)
  %mul.2200 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1268, %mul.1658)
  %mul.2202 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2200, %mul.1660)
  %add.2152 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2193, %mul.2202)
  %convert_element_type.1270 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2152)
  %sharding_constraint.250 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1270)
  %param.136 = f32[512,8,128]{2,1,0} parameter(64), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1271 = bf16[512,8,128]{2,1,0} convert(%param.136)
  %all-gather.101 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1271), channel_id=102, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.199 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.247, %all-gather.101), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.107 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.199), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.251 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.107)
  %te_fused_attn_forward_ffi.56 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.248, %sharding_constraint.250, %sharding_constraint.251, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.14 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.56), index=0
  %reduce_precision.108 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.14), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.252 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.108)
  %param.137 = f32[32,128,512]{2,1,0} parameter(62), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1274 = bf16[32,128,512]{2,1,0} convert(%param.137)
  %all-gather.102 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1274), channel_id=103, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.200 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.252, %all-gather.102), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.109 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.200), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.253 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.109)
  %add.2153 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.245, %sharding_constraint.253)
  %convert_element_type.1275 = f32[2,8192,4096]{2,1,0} convert(%add.2153)
  %square.31 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1275, %convert_element_type.1275)
  %reduce.202 = f32[2,8192]{1,0} reduce(%square.31, %constant.2882), dimensions={2}, to_apply=%region_74.6142
  %div.705 = f32[2,8192]{1,0} multiply(%reduce.202, %broadcast.5097)
  %add.2154 = f32[2,8192]{1,0} add(%div.705, %broadcast.5098)
  %rsqrt.93 = f32[2,8192]{1,0} rsqrt(%add.2154)
  %mul.2203 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.93), dimensions={0,1}
  %mul.2204 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1275, %mul.2203)
  %convert_element_type.1276 = bf16[2,8192,4096]{2,1,0} convert(%mul.2204)
  %param.138 = f32[4096]{0} parameter(59), sharding={replicated}
  %convert_element_type.1277 = bf16[4096]{0} convert(%param.138)
  %mul.2205 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1277), dimensions={2}
  %mul.2206 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1276, %mul.2205)
  %sharding_constraint.254 = bf16[2,8192,4096]{2,1,0} copy(%mul.2206)
  %param.139 = f32[512,14336]{1,0} parameter(56), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1278 = bf16[512,14336]{1,0} convert(%param.139)
  %all-gather.103 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1278), channel_id=104, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.201 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.254, %all-gather.103), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.110 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.201), exponent_bits=8, mantissa_bits=7
  %neg.140 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.110)
  %exp.140 = bf16[2,8192,14336]{2,1,0} exponential(%neg.140)
  %add.2155 = bf16[2,8192,14336]{2,1,0} add(%exp.140, %jit_silu_.0)
  %div.706 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2155)
  %mul.2207 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.110, %div.706)
  %param.140 = f32[512,14336]{1,0} parameter(57), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1279 = bf16[512,14336]{1,0} convert(%param.140)
  %all-gather.104 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1279), channel_id=105, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.202 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.254, %all-gather.104), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.111 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.202), exponent_bits=8, mantissa_bits=7
  %mul.2209 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2207, %reduce_precision.111)
  %sharding_constraint.255 = bf16[2,8192,14336]{2,1,0} copy(%mul.2209)
  %param.141 = f32[14336,512]{1,0} parameter(58), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1280 = bf16[14336,512]{1,0} convert(%param.141)
  %all-gather.105 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1280), channel_id=106, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.203 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.255, %all-gather.105), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.256 = bf16[2,8192,4096]{2,1,0} copy(%dot.203)
  %add.2156 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.256, %add.2153)
  %sharding_constraint.257 = bf16[2,8192,4096]{2,1,0} copy(%add.2156)
  %sharding_constraint.258 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.257)
  %convert_element_type.1281 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.258)
  %square.32 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1281, %convert_element_type.1281)
  %reduce.203 = f32[2,8192]{1,0} reduce(%square.32, %constant.2882), dimensions={2}, to_apply=%region_75.6178
  %div.707 = f32[2,8192]{1,0} multiply(%reduce.203, %broadcast.5097)
  %add.2157 = f32[2,8192]{1,0} add(%div.707, %broadcast.5098)
  %rsqrt.94 = f32[2,8192]{1,0} rsqrt(%add.2157)
  %mul.2210 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.94), dimensions={0,1}
  %mul.2211 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1281, %mul.2210)
  %convert_element_type.1282 = bf16[2,8192,4096]{2,1,0} convert(%mul.2211)
  %param.142 = f32[4096]{0} parameter(69), sharding={replicated}
  %convert_element_type.1283 = bf16[4096]{0} convert(%param.142)
  %mul.2212 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1283), dimensions={2}
  %mul.2213 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1282, %mul.2212)
  %sharding_constraint.259 = bf16[2,8192,4096]{2,1,0} copy(%mul.2213)
  %sharding_constraint.260 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.259)
  %param.143 = f32[512,32,128]{2,1,0} parameter(72), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1284 = bf16[512,32,128]{2,1,0} convert(%param.143)
  %all-gather.106 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1284), channel_id=107, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.204 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.260, %all-gather.106), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.112 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.204), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1285 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.112)
  %mul.2219 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1285, %mul.1643)
  %slice.146 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.112), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.147 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.112), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.91 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.146, %slice.147), dimensions={3}
  %slice.148 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.112), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.149 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.112), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.92 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.148, %slice.149), dimensions={3}
  %select_n.1374 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.91, %concatenate.92)
  %convert_element_type.1290 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1374)
  %mul.2222 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1290, %mul.1647)
  %mul.2224 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2222, %mul.1649)
  %add.2160 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2219, %mul.2224)
  %convert_element_type.1292 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2160)
  %sharding_constraint.261 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1292)
  %param.144 = f32[512,8,128]{2,1,0} parameter(70), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1293 = bf16[512,8,128]{2,1,0} convert(%param.144)
  %all-gather.107 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1293), channel_id=108, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.205 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.260, %all-gather.107), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.113 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.205), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1294 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.113)
  %mul.2238 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1294, %mul.1655)
  %slice.150 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.113), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.151 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.113), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.93 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.150, %slice.151), dimensions={3}
  %slice.152 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.113), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.153 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.113), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.94 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.152, %slice.153), dimensions={3}
  %select_n.1384 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.93, %concatenate.94)
  %convert_element_type.1300 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1384)
  %mul.2241 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1300, %mul.1658)
  %mul.2243 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2241, %mul.1660)
  %add.2163 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2238, %mul.2243)
  %convert_element_type.1302 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2163)
  %sharding_constraint.263 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1302)
  %param.145 = f32[512,8,128]{2,1,0} parameter(73), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1304 = bf16[512,8,128]{2,1,0} convert(%param.145)
  %all-gather.108 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1304), channel_id=109, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.206 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.260, %all-gather.108), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.114 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.206), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.264 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.114)
  %te_fused_attn_forward_ffi.60 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.261, %sharding_constraint.263, %sharding_constraint.264, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.15 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.60), index=0
  %reduce_precision.115 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.15), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.265 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.115)
  %param.146 = f32[32,128,512]{2,1,0} parameter(71), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1307 = bf16[32,128,512]{2,1,0} convert(%param.146)
  %all-gather.109 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1307), channel_id=110, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.207 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.265, %all-gather.109), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.116 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.207), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.266 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.116)
  %add.2164 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.258, %sharding_constraint.266)
  %convert_element_type.1308 = f32[2,8192,4096]{2,1,0} convert(%add.2164)
  %square.33 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1308, %convert_element_type.1308)
  %reduce.207 = f32[2,8192]{1,0} reduce(%square.33, %constant.2882), dimensions={2}, to_apply=%region_79.6370
  %div.728 = f32[2,8192]{1,0} multiply(%reduce.207, %broadcast.5097)
  %add.2165 = f32[2,8192]{1,0} add(%div.728, %broadcast.5098)
  %rsqrt.95 = f32[2,8192]{1,0} rsqrt(%add.2165)
  %mul.2244 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.95), dimensions={0,1}
  %mul.2245 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1308, %mul.2244)
  %convert_element_type.1309 = bf16[2,8192,4096]{2,1,0} convert(%mul.2245)
  %param.147 = f32[4096]{0} parameter(68), sharding={replicated}
  %convert_element_type.1310 = bf16[4096]{0} convert(%param.147)
  %mul.2246 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1310), dimensions={2}
  %mul.2247 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1309, %mul.2246)
  %sharding_constraint.267 = bf16[2,8192,4096]{2,1,0} copy(%mul.2247)
  %param.148 = f32[512,14336]{1,0} parameter(65), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1311 = bf16[512,14336]{1,0} convert(%param.148)
  %all-gather.110 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1311), channel_id=111, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.208 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.267, %all-gather.110), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.117 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.208), exponent_bits=8, mantissa_bits=7
  %neg.141 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.117)
  %exp.141 = bf16[2,8192,14336]{2,1,0} exponential(%neg.141)
  %add.2166 = bf16[2,8192,14336]{2,1,0} add(%exp.141, %jit_silu_.0)
  %div.729 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2166)
  %mul.2248 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.117, %div.729)
  %param.149 = f32[512,14336]{1,0} parameter(66), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1312 = bf16[512,14336]{1,0} convert(%param.149)
  %all-gather.111 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1312), channel_id=112, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.209 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.267, %all-gather.111), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.118 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.209), exponent_bits=8, mantissa_bits=7
  %mul.2249 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2248, %reduce_precision.118)
  %sharding_constraint.268 = bf16[2,8192,14336]{2,1,0} copy(%mul.2249)
  %param.150 = f32[14336,512]{1,0} parameter(67), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1313 = bf16[14336,512]{1,0} convert(%param.150)
  %all-gather.112 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1313), channel_id=113, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.210 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.268, %all-gather.112), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.269 = bf16[2,8192,4096]{2,1,0} copy(%dot.210)
  %add.2167 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.269, %add.2164)
  %sharding_constraint.270 = bf16[2,8192,4096]{2,1,0} copy(%add.2167)
  %sharding_constraint.271 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.270)
  %convert_element_type.1314 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.271)
  %square.34 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1314, %convert_element_type.1314)
  %reduce.208 = f32[2,8192]{1,0} reduce(%square.34, %constant.2882), dimensions={2}, to_apply=%region_80.6406
  %div.730 = f32[2,8192]{1,0} multiply(%reduce.208, %broadcast.5097)
  %add.2168 = f32[2,8192]{1,0} add(%div.730, %broadcast.5098)
  %rsqrt.96 = f32[2,8192]{1,0} rsqrt(%add.2168)
  %mul.2250 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.96), dimensions={0,1}
  %mul.2251 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1314, %mul.2250)
  %convert_element_type.1315 = bf16[2,8192,4096]{2,1,0} convert(%mul.2251)
  %param.151 = f32[4096]{0} parameter(78), sharding={replicated}
  %convert_element_type.1316 = bf16[4096]{0} convert(%param.151)
  %mul.2252 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1316), dimensions={2}
  %mul.2253 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1315, %mul.2252)
  %sharding_constraint.272 = bf16[2,8192,4096]{2,1,0} copy(%mul.2253)
  %sharding_constraint.273 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.272)
  %param.152 = f32[512,32,128]{2,1,0} parameter(81), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1317 = bf16[512,32,128]{2,1,0} convert(%param.152)
  %all-gather.113 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1317), channel_id=114, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.211 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.273, %all-gather.113), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.119 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.211), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1318 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.119)
  %mul.2259 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1318, %mul.1643)
  %slice.155 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.119), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.156 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.119), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.97 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.155, %slice.156), dimensions={3}
  %slice.157 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.119), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.158 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.119), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.98 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.157, %slice.158), dimensions={3}
  %select_n.1394 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.97, %concatenate.98)
  %convert_element_type.1324 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1394)
  %mul.2262 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1324, %mul.1647)
  %mul.2264 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2262, %mul.1649)
  %add.2174 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2259, %mul.2264)
  %convert_element_type.1327 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2174)
  %sharding_constraint.274 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1327)
  %param.153 = f32[512,8,128]{2,1,0} parameter(79), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1328 = bf16[512,8,128]{2,1,0} convert(%param.153)
  %all-gather.114 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1328), channel_id=115, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.212 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.273, %all-gather.114), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.120 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.212), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1329 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.120)
  %mul.2271 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1329, %mul.1655)
  %slice.159 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.120), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.160 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.120), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.99 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.159, %slice.160), dimensions={3}
  %slice.161 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.120), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.162 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.120), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.100 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.161, %slice.162), dimensions={3}
  %select_n.1404 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.99, %concatenate.100)
  %convert_element_type.1334 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1404)
  %mul.2274 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1334, %mul.1658)
  %mul.2276 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2274, %mul.1660)
  %add.2178 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2271, %mul.2276)
  %convert_element_type.1336 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2178)
  %sharding_constraint.276 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1336)
  %param.154 = f32[512,8,128]{2,1,0} parameter(82), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1337 = bf16[512,8,128]{2,1,0} convert(%param.154)
  %all-gather.115 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1337), channel_id=116, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.213 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.273, %all-gather.115), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.121 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.213), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.277 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.121)
  %te_fused_attn_forward_ffi.64 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.274, %sharding_constraint.276, %sharding_constraint.277, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.16 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.64), index=0
  %reduce_precision.122 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.16), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.278 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.122)
  %param.155 = f32[32,128,512]{2,1,0} parameter(80), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1340 = bf16[32,128,512]{2,1,0} convert(%param.155)
  %all-gather.116 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1340), channel_id=117, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.214 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.278, %all-gather.116), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.123 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.214), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.279 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.123)
  %add.2179 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.271, %sharding_constraint.279)
  %convert_element_type.1343 = f32[2,8192,4096]{2,1,0} convert(%add.2179)
  %square.35 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1343, %convert_element_type.1343)
  %reduce.212 = f32[2,8192]{1,0} reduce(%square.35, %constant.2882), dimensions={2}, to_apply=%region_84.6598
  %div.751 = f32[2,8192]{1,0} multiply(%reduce.212, %broadcast.5097)
  %add.2180 = f32[2,8192]{1,0} add(%div.751, %broadcast.5098)
  %rsqrt.97 = f32[2,8192]{1,0} rsqrt(%add.2180)
  %mul.2277 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.97), dimensions={0,1}
  %mul.2278 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1343, %mul.2277)
  %convert_element_type.1344 = bf16[2,8192,4096]{2,1,0} convert(%mul.2278)
  %param.156 = f32[4096]{0} parameter(77), sharding={replicated}
  %convert_element_type.1345 = bf16[4096]{0} convert(%param.156)
  %mul.2279 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1345), dimensions={2}
  %mul.2280 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1344, %mul.2279)
  %sharding_constraint.280 = bf16[2,8192,4096]{2,1,0} copy(%mul.2280)
  %param.157 = f32[512,14336]{1,0} parameter(74), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1346 = bf16[512,14336]{1,0} convert(%param.157)
  %all-gather.117 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1346), channel_id=118, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.215 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.280, %all-gather.117), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.124 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.215), exponent_bits=8, mantissa_bits=7
  %neg.142 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.124)
  %exp.142 = bf16[2,8192,14336]{2,1,0} exponential(%neg.142)
  %add.2181 = bf16[2,8192,14336]{2,1,0} add(%exp.142, %jit_silu_.0)
  %div.752 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2181)
  %mul.2281 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.124, %div.752)
  %param.158 = f32[512,14336]{1,0} parameter(75), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1347 = bf16[512,14336]{1,0} convert(%param.158)
  %all-gather.118 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1347), channel_id=119, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.216 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.280, %all-gather.118), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.125 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.216), exponent_bits=8, mantissa_bits=7
  %mul.2282 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2281, %reduce_precision.125)
  %sharding_constraint.281 = bf16[2,8192,14336]{2,1,0} copy(%mul.2282)
  %param.159 = f32[14336,512]{1,0} parameter(76), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1348 = bf16[14336,512]{1,0} convert(%param.159)
  %all-gather.119 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1348), channel_id=120, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.217 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.281, %all-gather.119), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.282 = bf16[2,8192,4096]{2,1,0} copy(%dot.217)
  %add.2182 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.282, %add.2179)
  %sharding_constraint.283 = bf16[2,8192,4096]{2,1,0} copy(%add.2182)
  %sharding_constraint.284 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.283)
  %convert_element_type.1350 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.284)
  %square.36 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1350, %convert_element_type.1350)
  %reduce.213 = f32[2,8192]{1,0} reduce(%square.36, %constant.2882), dimensions={2}, to_apply=%region_85.6634
  %div.753 = f32[2,8192]{1,0} multiply(%reduce.213, %broadcast.5097)
  %add.2183 = f32[2,8192]{1,0} add(%div.753, %broadcast.5098)
  %rsqrt.98 = f32[2,8192]{1,0} rsqrt(%add.2183)
  %mul.2284 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.98), dimensions={0,1}
  %mul.2286 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1350, %mul.2284)
  %convert_element_type.1351 = bf16[2,8192,4096]{2,1,0} convert(%mul.2286)
  %param.160 = f32[4096]{0} parameter(87), sharding={replicated}
  %convert_element_type.1352 = bf16[4096]{0} convert(%param.160)
  %mul.2287 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1352), dimensions={2}
  %mul.2288 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1351, %mul.2287)
  %sharding_constraint.285 = bf16[2,8192,4096]{2,1,0} copy(%mul.2288)
  %sharding_constraint.286 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.285)
  %param.161 = f32[512,32,128]{2,1,0} parameter(90), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1353 = bf16[512,32,128]{2,1,0} convert(%param.161)
  %all-gather.120 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1353), channel_id=121, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.218 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.286, %all-gather.120), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.126 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.218), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1354 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.126)
  %mul.2294 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1354, %mul.1643)
  %slice.164 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.126), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.165 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.126), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.103 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.164, %slice.165), dimensions={3}
  %slice.166 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.126), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.167 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.126), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.104 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.166, %slice.167), dimensions={3}
  %select_n.1414 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.103, %concatenate.104)
  %convert_element_type.1359 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1414)
  %mul.2297 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1359, %mul.1647)
  %mul.2299 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2297, %mul.1649)
  %add.2186 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2294, %mul.2299)
  %convert_element_type.1361 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2186)
  %sharding_constraint.287 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1361)
  %param.162 = f32[512,8,128]{2,1,0} parameter(88), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1363 = bf16[512,8,128]{2,1,0} convert(%param.162)
  %all-gather.121 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1363), channel_id=122, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.219 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.286, %all-gather.121), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.127 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.219), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1364 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.127)
  %mul.2305 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1364, %mul.1655)
  %slice.168 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.127), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.169 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.127), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.105 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.168, %slice.169), dimensions={3}
  %slice.170 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.127), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.171 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.127), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.106 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.170, %slice.171), dimensions={3}
  %select_n.1426 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.105, %concatenate.106)
  %convert_element_type.1370 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1426)
  %mul.2308 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1370, %mul.1658)
  %mul.2318 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2308, %mul.1660)
  %add.2190 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2305, %mul.2318)
  %convert_element_type.1372 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2190)
  %sharding_constraint.289 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1372)
  %param.163 = f32[512,8,128]{2,1,0} parameter(91), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1374 = bf16[512,8,128]{2,1,0} convert(%param.163)
  %all-gather.122 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1374), channel_id=123, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.220 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.286, %all-gather.122), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.128 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.220), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.290 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.128)
  %te_fused_attn_forward_ffi.68 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.287, %sharding_constraint.289, %sharding_constraint.290, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.17 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.68), index=0
  %reduce_precision.129 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.17), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.291 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.129)
  %param.164 = f32[32,128,512]{2,1,0} parameter(89), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1377 = bf16[32,128,512]{2,1,0} convert(%param.164)
  %all-gather.123 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1377), channel_id=124, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.221 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.291, %all-gather.123), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.130 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.221), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.292 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.130)
  %add.2194 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.284, %sharding_constraint.292)
  %convert_element_type.1378 = f32[2,8192,4096]{2,1,0} convert(%add.2194)
  %square.37 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1378, %convert_element_type.1378)
  %reduce.217 = f32[2,8192]{1,0} reduce(%square.37, %constant.2882), dimensions={2}, to_apply=%region_89.6826
  %div.774 = f32[2,8192]{1,0} multiply(%reduce.217, %broadcast.5097)
  %add.2195 = f32[2,8192]{1,0} add(%div.774, %broadcast.5098)
  %rsqrt.99 = f32[2,8192]{1,0} rsqrt(%add.2195)
  %mul.2319 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.99), dimensions={0,1}
  %mul.2324 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1378, %mul.2319)
  %convert_element_type.1379 = bf16[2,8192,4096]{2,1,0} convert(%mul.2324)
  %param.165 = f32[4096]{0} parameter(86), sharding={replicated}
  %convert_element_type.1380 = bf16[4096]{0} convert(%param.165)
  %mul.2325 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1380), dimensions={2}
  %mul.2326 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1379, %mul.2325)
  %sharding_constraint.293 = bf16[2,8192,4096]{2,1,0} copy(%mul.2326)
  %param.166 = f32[512,14336]{1,0} parameter(83), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1381 = bf16[512,14336]{1,0} convert(%param.166)
  %all-gather.124 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1381), channel_id=125, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.222 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.293, %all-gather.124), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.131 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.222), exponent_bits=8, mantissa_bits=7
  %neg.143 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.131)
  %exp.143 = bf16[2,8192,14336]{2,1,0} exponential(%neg.143)
  %add.2196 = bf16[2,8192,14336]{2,1,0} add(%exp.143, %jit_silu_.0)
  %div.775 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2196)
  %mul.2327 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.131, %div.775)
  %param.167 = f32[512,14336]{1,0} parameter(84), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1382 = bf16[512,14336]{1,0} convert(%param.167)
  %all-gather.125 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1382), channel_id=126, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.223 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.293, %all-gather.125), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.132 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.223), exponent_bits=8, mantissa_bits=7
  %mul.2328 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2327, %reduce_precision.132)
  %sharding_constraint.294 = bf16[2,8192,14336]{2,1,0} copy(%mul.2328)
  %param.168 = f32[14336,512]{1,0} parameter(85), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1383 = bf16[14336,512]{1,0} convert(%param.168)
  %all-gather.126 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1383), channel_id=127, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.224 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.294, %all-gather.126), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.295 = bf16[2,8192,4096]{2,1,0} copy(%dot.224)
  %add.2197 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.295, %add.2194)
  %sharding_constraint.296 = bf16[2,8192,4096]{2,1,0} copy(%add.2197)
  %sharding_constraint.297 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.296)
  %convert_element_type.1384 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.297)
  %square.38 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1384, %convert_element_type.1384)
  %reduce.218 = f32[2,8192]{1,0} reduce(%square.38, %constant.2882), dimensions={2}, to_apply=%region_90.6862
  %div.776 = f32[2,8192]{1,0} multiply(%reduce.218, %broadcast.5097)
  %add.2198 = f32[2,8192]{1,0} add(%div.776, %broadcast.5098)
  %rsqrt.100 = f32[2,8192]{1,0} rsqrt(%add.2198)
  %mul.2329 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.100), dimensions={0,1}
  %mul.2330 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1384, %mul.2329)
  %convert_element_type.1385 = bf16[2,8192,4096]{2,1,0} convert(%mul.2330)
  %param.169 = f32[4096]{0} parameter(96), sharding={replicated}
  %convert_element_type.1386 = bf16[4096]{0} convert(%param.169)
  %mul.2331 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1386), dimensions={2}
  %mul.2332 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1385, %mul.2331)
  %sharding_constraint.298 = bf16[2,8192,4096]{2,1,0} copy(%mul.2332)
  %sharding_constraint.299 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.298)
  %param.170 = f32[512,32,128]{2,1,0} parameter(99), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1387 = bf16[512,32,128]{2,1,0} convert(%param.170)
  %all-gather.127 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1387), channel_id=128, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.225 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.299, %all-gather.127), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.133 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.225), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1390 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.133)
  %mul.2338 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1390, %mul.1643)
  %slice.173 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.133), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.174 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.133), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.109 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.173, %slice.174), dimensions={3}
  %slice.175 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.133), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.176 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.133), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.110 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.175, %slice.176), dimensions={3}
  %select_n.1436 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.109, %concatenate.110)
  %convert_element_type.1395 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1436)
  %mul.2341 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1395, %mul.1647)
  %mul.2344 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2341, %mul.1649)
  %add.2201 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2338, %mul.2344)
  %convert_element_type.1397 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2201)
  %sharding_constraint.300 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1397)
  %param.171 = f32[512,8,128]{2,1,0} parameter(97), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1399 = bf16[512,8,128]{2,1,0} convert(%param.171)
  %all-gather.128 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1399), channel_id=129, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.226 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.299, %all-gather.128), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.134 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.226), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1400 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.134)
  %mul.2350 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1400, %mul.1655)
  %slice.177 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.134), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.178 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.134), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.111 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.177, %slice.178), dimensions={3}
  %slice.179 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.134), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.180 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.134), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.112 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.179, %slice.180), dimensions={3}
  %select_n.1450 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.111, %concatenate.112)
  %convert_element_type.1407 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1450)
  %mul.2353 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1407, %mul.1658)
  %mul.2355 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2353, %mul.1660)
  %add.2204 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2350, %mul.2355)
  %convert_element_type.1409 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2204)
  %sharding_constraint.302 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1409)
  %param.172 = f32[512,8,128]{2,1,0} parameter(100), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1410 = bf16[512,8,128]{2,1,0} convert(%param.172)
  %all-gather.129 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1410), channel_id=130, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.227 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.299, %all-gather.129), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.135 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.227), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.303 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.135)
  %te_fused_attn_forward_ffi.72 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.300, %sharding_constraint.302, %sharding_constraint.303, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.18 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.72), index=0
  %reduce_precision.136 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.18), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.304 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.136)
  %param.173 = f32[32,128,512]{2,1,0} parameter(98), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1413 = bf16[32,128,512]{2,1,0} convert(%param.173)
  %all-gather.130 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1413), channel_id=131, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.228 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.304, %all-gather.130), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.137 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.228), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.305 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.137)
  %add.2205 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.297, %sharding_constraint.305)
  %convert_element_type.1414 = f32[2,8192,4096]{2,1,0} convert(%add.2205)
  %square.39 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1414, %convert_element_type.1414)
  %reduce.222 = f32[2,8192]{1,0} reduce(%square.39, %constant.2882), dimensions={2}, to_apply=%region_94.7054
  %div.797 = f32[2,8192]{1,0} multiply(%reduce.222, %broadcast.5097)
  %add.2206 = f32[2,8192]{1,0} add(%div.797, %broadcast.5098)
  %rsqrt.101 = f32[2,8192]{1,0} rsqrt(%add.2206)
  %mul.2356 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.101), dimensions={0,1}
  %mul.2357 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1414, %mul.2356)
  %convert_element_type.1415 = bf16[2,8192,4096]{2,1,0} convert(%mul.2357)
  %param.174 = f32[4096]{0} parameter(95), sharding={replicated}
  %convert_element_type.1416 = bf16[4096]{0} convert(%param.174)
  %mul.2358 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1416), dimensions={2}
  %mul.2360 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1415, %mul.2358)
  %sharding_constraint.306 = bf16[2,8192,4096]{2,1,0} copy(%mul.2360)
  %param.175 = f32[512,14336]{1,0} parameter(92), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1417 = bf16[512,14336]{1,0} convert(%param.175)
  %all-gather.131 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1417), channel_id=132, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.229 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.306, %all-gather.131), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.138 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.229), exponent_bits=8, mantissa_bits=7
  %neg.144 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.138)
  %exp.144 = bf16[2,8192,14336]{2,1,0} exponential(%neg.144)
  %add.2207 = bf16[2,8192,14336]{2,1,0} add(%exp.144, %jit_silu_.0)
  %div.798 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2207)
  %mul.2362 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.138, %div.798)
  %param.176 = f32[512,14336]{1,0} parameter(93), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1418 = bf16[512,14336]{1,0} convert(%param.176)
  %all-gather.132 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1418), channel_id=133, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.230 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.306, %all-gather.132), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.139 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.230), exponent_bits=8, mantissa_bits=7
  %mul.2363 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2362, %reduce_precision.139)
  %sharding_constraint.307 = bf16[2,8192,14336]{2,1,0} copy(%mul.2363)
  %param.177 = f32[14336,512]{1,0} parameter(94), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1419 = bf16[14336,512]{1,0} convert(%param.177)
  %all-gather.133 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1419), channel_id=134, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.231 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.307, %all-gather.133), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.308 = bf16[2,8192,4096]{2,1,0} copy(%dot.231)
  %add.2208 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.308, %add.2205)
  %sharding_constraint.309 = bf16[2,8192,4096]{2,1,0} copy(%add.2208)
  %sharding_constraint.310 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.309)
  %convert_element_type.1420 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.310)
  %square.40 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1420, %convert_element_type.1420)
  %reduce.223 = f32[2,8192]{1,0} reduce(%square.40, %constant.2882), dimensions={2}, to_apply=%region_95.7090
  %div.799 = f32[2,8192]{1,0} multiply(%reduce.223, %broadcast.5097)
  %add.2209 = f32[2,8192]{1,0} add(%div.799, %broadcast.5098)
  %rsqrt.102 = f32[2,8192]{1,0} rsqrt(%add.2209)
  %mul.2364 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.102), dimensions={0,1}
  %mul.2365 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1420, %mul.2364)
  %convert_element_type.1421 = bf16[2,8192,4096]{2,1,0} convert(%mul.2365)
  %param.178 = f32[4096]{0} parameter(105), sharding={replicated}
  %convert_element_type.1422 = bf16[4096]{0} convert(%param.178)
  %mul.2366 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1422), dimensions={2}
  %mul.2367 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1421, %mul.2366)
  %sharding_constraint.311 = bf16[2,8192,4096]{2,1,0} copy(%mul.2367)
  %sharding_constraint.312 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.311)
  %param.179 = f32[512,32,128]{2,1,0} parameter(108), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1423 = bf16[512,32,128]{2,1,0} convert(%param.179)
  %all-gather.134 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1423), channel_id=135, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.232 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.312, %all-gather.134), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.140 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.232), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1424 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.140)
  %mul.2373 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1424, %mul.1643)
  %slice.182 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.140), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.183 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.140), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.115 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.182, %slice.183), dimensions={3}
  %slice.184 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.140), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.185 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.140), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.116 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.184, %slice.185), dimensions={3}
  %select_n.1463 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.115, %concatenate.116)
  %convert_element_type.1430 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1463)
  %mul.2376 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1430, %mul.1647)
  %mul.2378 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2376, %mul.1649)
  %add.2215 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2373, %mul.2378)
  %convert_element_type.1432 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2215)
  %sharding_constraint.313 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1432)
  %param.180 = f32[512,8,128]{2,1,0} parameter(106), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1434 = bf16[512,8,128]{2,1,0} convert(%param.180)
  %all-gather.135 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1434), channel_id=136, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.233 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.312, %all-gather.135), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.141 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.233), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1436 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.141)
  %mul.2384 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1436, %mul.1655)
  %slice.186 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.141), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.187 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.141), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.117 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.186, %slice.187), dimensions={3}
  %slice.188 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.141), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.189 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.141), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.118 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.188, %slice.189), dimensions={3}
  %select_n.1470 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.117, %concatenate.118)
  %convert_element_type.1441 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1470)
  %mul.2395 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1441, %mul.1658)
  %mul.2401 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2395, %mul.1660)
  %add.2218 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2384, %mul.2401)
  %convert_element_type.1443 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2218)
  %sharding_constraint.315 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1443)
  %param.181 = f32[512,8,128]{2,1,0} parameter(109), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1444 = bf16[512,8,128]{2,1,0} convert(%param.181)
  %all-gather.136 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1444), channel_id=137, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.234 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.312, %all-gather.136), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.142 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.234), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.316 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.142)
  %te_fused_attn_forward_ffi.76 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.313, %sharding_constraint.315, %sharding_constraint.316, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.19 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.76), index=0
  %reduce_precision.143 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.19), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.317 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.143)
  %param.182 = f32[32,128,512]{2,1,0} parameter(107), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1447 = bf16[32,128,512]{2,1,0} convert(%param.182)
  %all-gather.137 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1447), channel_id=138, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.235 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.317, %all-gather.137), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.144 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.235), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.318 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.144)
  %add.2219 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.310, %sharding_constraint.318)
  %convert_element_type.1448 = f32[2,8192,4096]{2,1,0} convert(%add.2219)
  %square.41 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1448, %convert_element_type.1448)
  %reduce.227 = f32[2,8192]{1,0} reduce(%square.41, %constant.2882), dimensions={2}, to_apply=%region_99.7282
  %div.820 = f32[2,8192]{1,0} multiply(%reduce.227, %broadcast.5097)
  %add.2220 = f32[2,8192]{1,0} add(%div.820, %broadcast.5098)
  %rsqrt.103 = f32[2,8192]{1,0} rsqrt(%add.2220)
  %mul.2402 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.103), dimensions={0,1}
  %mul.2403 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1448, %mul.2402)
  %convert_element_type.1449 = bf16[2,8192,4096]{2,1,0} convert(%mul.2403)
  %param.183 = f32[4096]{0} parameter(104), sharding={replicated}
  %convert_element_type.1450 = bf16[4096]{0} convert(%param.183)
  %mul.2404 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1450), dimensions={2}
  %mul.2405 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1449, %mul.2404)
  %sharding_constraint.319 = bf16[2,8192,4096]{2,1,0} copy(%mul.2405)
  %param.184 = f32[512,14336]{1,0} parameter(101), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1452 = bf16[512,14336]{1,0} convert(%param.184)
  %all-gather.138 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1452), channel_id=139, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.236 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.319, %all-gather.138), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.145 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.236), exponent_bits=8, mantissa_bits=7
  %neg.145 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.145)
  %exp.145 = bf16[2,8192,14336]{2,1,0} exponential(%neg.145)
  %add.2221 = bf16[2,8192,14336]{2,1,0} add(%exp.145, %jit_silu_.0)
  %div.821 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2221)
  %mul.2406 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.145, %div.821)
  %param.185 = f32[512,14336]{1,0} parameter(102), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1453 = bf16[512,14336]{1,0} convert(%param.185)
  %all-gather.139 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1453), channel_id=140, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.237 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.319, %all-gather.139), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.146 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.237), exponent_bits=8, mantissa_bits=7
  %mul.2407 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2406, %reduce_precision.146)
  %sharding_constraint.320 = bf16[2,8192,14336]{2,1,0} copy(%mul.2407)
  %param.186 = f32[14336,512]{1,0} parameter(103), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1454 = bf16[14336,512]{1,0} convert(%param.186)
  %all-gather.140 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1454), channel_id=141, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.238 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.320, %all-gather.140), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.321 = bf16[2,8192,4096]{2,1,0} copy(%dot.238)
  %add.2222 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.321, %add.2219)
  %sharding_constraint.322 = bf16[2,8192,4096]{2,1,0} copy(%add.2222)
  %sharding_constraint.323 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.322)
  %convert_element_type.1455 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.323)
  %square.42 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1455, %convert_element_type.1455)
  %reduce.228 = f32[2,8192]{1,0} reduce(%square.42, %constant.2882), dimensions={2}, to_apply=%region_100.7318
  %div.822 = f32[2,8192]{1,0} multiply(%reduce.228, %broadcast.5097)
  %add.2223 = f32[2,8192]{1,0} add(%div.822, %broadcast.5098)
  %rsqrt.104 = f32[2,8192]{1,0} rsqrt(%add.2223)
  %mul.2408 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.104), dimensions={0,1}
  %mul.2409 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1455, %mul.2408)
  %convert_element_type.1456 = bf16[2,8192,4096]{2,1,0} convert(%mul.2409)
  %param.187 = f32[4096]{0} parameter(123), sharding={replicated}
  %convert_element_type.1457 = bf16[4096]{0} convert(%param.187)
  %mul.2410 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1457), dimensions={2}
  %mul.2411 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1456, %mul.2410)
  %sharding_constraint.324 = bf16[2,8192,4096]{2,1,0} copy(%mul.2411)
  %sharding_constraint.325 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.324)
  %param.188 = f32[512,32,128]{2,1,0} parameter(126), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1458 = bf16[512,32,128]{2,1,0} convert(%param.188)
  %all-gather.141 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1458), channel_id=142, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.239 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.325, %all-gather.141), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.147 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.239), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1459 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.147)
  %mul.2417 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1459, %mul.1643)
  %slice.191 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.147), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.192 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.147), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.121 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.191, %slice.192), dimensions={3}
  %slice.193 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.147), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.194 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.147), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.122 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.193, %slice.194), dimensions={3}
  %select_n.1483 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.121, %concatenate.122)
  %convert_element_type.1464 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1483)
  %mul.2420 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1464, %mul.1647)
  %mul.2422 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2420, %mul.1649)
  %add.2227 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2417, %mul.2422)
  %convert_element_type.1467 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2227)
  %sharding_constraint.326 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1467)
  %param.189 = f32[512,8,128]{2,1,0} parameter(124), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1468 = bf16[512,8,128]{2,1,0} convert(%param.189)
  %all-gather.142 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1468), channel_id=143, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.240 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.325, %all-gather.142), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.148 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.240), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1469 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.148)
  %mul.2428 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1469, %mul.1655)
  %slice.195 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.148), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.196 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.148), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.123 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.195, %slice.196), dimensions={3}
  %slice.197 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.148), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.198 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.148), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.124 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.197, %slice.198), dimensions={3}
  %select_n.1490 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.123, %concatenate.124)
  %convert_element_type.1476 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1490)
  %mul.2431 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1476, %mul.1658)
  %mul.2433 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2431, %mul.1660)
  %add.2230 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2428, %mul.2433)
  %convert_element_type.1478 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2230)
  %sharding_constraint.328 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1478)
  %param.190 = f32[512,8,128]{2,1,0} parameter(127), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1479 = bf16[512,8,128]{2,1,0} convert(%param.190)
  %all-gather.143 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1479), channel_id=144, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.241 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.325, %all-gather.143), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.149 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.241), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.329 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.149)
  %te_fused_attn_forward_ffi.80 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.326, %sharding_constraint.328, %sharding_constraint.329, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.20 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.80), index=0
  %reduce_precision.150 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.20), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.330 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.150)
  %param.191 = f32[32,128,512]{2,1,0} parameter(125), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1483 = bf16[32,128,512]{2,1,0} convert(%param.191)
  %all-gather.144 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1483), channel_id=145, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.242 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.330, %all-gather.144), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.151 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.242), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.331 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.151)
  %add.2231 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.323, %sharding_constraint.331)
  %convert_element_type.1484 = f32[2,8192,4096]{2,1,0} convert(%add.2231)
  %square.43 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1484, %convert_element_type.1484)
  %reduce.232 = f32[2,8192]{1,0} reduce(%square.43, %constant.2882), dimensions={2}, to_apply=%region_104.7510
  %div.843 = f32[2,8192]{1,0} multiply(%reduce.232, %broadcast.5097)
  %add.2232 = f32[2,8192]{1,0} add(%div.843, %broadcast.5098)
  %rsqrt.105 = f32[2,8192]{1,0} rsqrt(%add.2232)
  %mul.2434 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.105), dimensions={0,1}
  %mul.2435 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1484, %mul.2434)
  %convert_element_type.1485 = bf16[2,8192,4096]{2,1,0} convert(%mul.2435)
  %param.192 = f32[4096]{0} parameter(122), sharding={replicated}
  %convert_element_type.1486 = bf16[4096]{0} convert(%param.192)
  %mul.2436 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1486), dimensions={2}
  %mul.2437 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1485, %mul.2436)
  %sharding_constraint.332 = bf16[2,8192,4096]{2,1,0} copy(%mul.2437)
  %param.193 = f32[512,14336]{1,0} parameter(119), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1487 = bf16[512,14336]{1,0} convert(%param.193)
  %all-gather.145 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1487), channel_id=146, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.243 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.332, %all-gather.145), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.152 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.243), exponent_bits=8, mantissa_bits=7
  %neg.146 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.152)
  %exp.146 = bf16[2,8192,14336]{2,1,0} exponential(%neg.146)
  %add.2236 = bf16[2,8192,14336]{2,1,0} add(%exp.146, %jit_silu_.0)
  %div.844 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2236)
  %mul.2438 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.152, %div.844)
  %param.194 = f32[512,14336]{1,0} parameter(120), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1488 = bf16[512,14336]{1,0} convert(%param.194)
  %all-gather.146 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1488), channel_id=147, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.244 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.332, %all-gather.146), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.153 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.244), exponent_bits=8, mantissa_bits=7
  %mul.2439 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2438, %reduce_precision.153)
  %sharding_constraint.333 = bf16[2,8192,14336]{2,1,0} copy(%mul.2439)
  %param.195 = f32[14336,512]{1,0} parameter(121), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1489 = bf16[14336,512]{1,0} convert(%param.195)
  %all-gather.147 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1489), channel_id=148, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.245 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.333, %all-gather.147), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.334 = bf16[2,8192,4096]{2,1,0} copy(%dot.245)
  %add.2237 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.334, %add.2231)
  %sharding_constraint.335 = bf16[2,8192,4096]{2,1,0} copy(%add.2237)
  %sharding_constraint.336 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.335)
  %convert_element_type.1490 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.336)
  %square.44 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1490, %convert_element_type.1490)
  %reduce.233 = f32[2,8192]{1,0} reduce(%square.44, %constant.2882), dimensions={2}, to_apply=%region_105.7546
  %div.845 = f32[2,8192]{1,0} multiply(%reduce.233, %broadcast.5097)
  %add.2238 = f32[2,8192]{1,0} add(%div.845, %broadcast.5098)
  %rsqrt.106 = f32[2,8192]{1,0} rsqrt(%add.2238)
  %mul.2440 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.106), dimensions={0,1}
  %mul.2441 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1490, %mul.2440)
  %convert_element_type.1491 = bf16[2,8192,4096]{2,1,0} convert(%mul.2441)
  %param.196 = f32[4096]{0} parameter(132), sharding={replicated}
  %convert_element_type.1492 = bf16[4096]{0} convert(%param.196)
  %mul.2442 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1492), dimensions={2}
  %mul.2443 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1491, %mul.2442)
  %sharding_constraint.337 = bf16[2,8192,4096]{2,1,0} copy(%mul.2443)
  %sharding_constraint.338 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.337)
  %param.197 = f32[512,32,128]{2,1,0} parameter(135), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1493 = bf16[512,32,128]{2,1,0} convert(%param.197)
  %all-gather.148 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1493), channel_id=149, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.246 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.338, %all-gather.148), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.154 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.246), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1494 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.154)
  %mul.2449 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1494, %mul.1643)
  %slice.200 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.154), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.201 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.154), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.127 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.200, %slice.201), dimensions={3}
  %slice.202 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.154), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.203 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.154), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.128 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.202, %slice.203), dimensions={3}
  %select_n.1505 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.127, %concatenate.128)
  %convert_element_type.1499 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1505)
  %mul.2452 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1499, %mul.1647)
  %mul.2454 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2452, %mul.1649)
  %add.2241 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2449, %mul.2454)
  %convert_element_type.1502 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2241)
  %sharding_constraint.339 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1502)
  %param.198 = f32[512,8,128]{2,1,0} parameter(133), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1503 = bf16[512,8,128]{2,1,0} convert(%param.198)
  %all-gather.149 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1503), channel_id=150, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.247 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.338, %all-gather.149), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.155 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.247), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1504 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.155)
  %mul.2460 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1504, %mul.1655)
  %slice.204 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.155), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.205 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.155), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.129 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.204, %slice.205), dimensions={3}
  %slice.206 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.155), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.207 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.155), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.130 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.206, %slice.207), dimensions={3}
  %select_n.1512 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.129, %concatenate.130)
  %convert_element_type.1510 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1512)
  %mul.2463 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1510, %mul.1658)
  %mul.2465 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2463, %mul.1660)
  %add.2244 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2460, %mul.2465)
  %convert_element_type.1513 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2244)
  %sharding_constraint.341 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1513)
  %param.199 = f32[512,8,128]{2,1,0} parameter(136), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1514 = bf16[512,8,128]{2,1,0} convert(%param.199)
  %all-gather.150 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1514), channel_id=151, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.248 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.338, %all-gather.150), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.156 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.248), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.342 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.156)
  %te_fused_attn_forward_ffi.84 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.339, %sharding_constraint.341, %sharding_constraint.342, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.21 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.84), index=0
  %reduce_precision.157 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.21), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.343 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.157)
  %param.200 = f32[32,128,512]{2,1,0} parameter(134), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1517 = bf16[32,128,512]{2,1,0} convert(%param.200)
  %all-gather.151 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1517), channel_id=152, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.249 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.343, %all-gather.151), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.158 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.249), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.344 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.158)
  %add.2245 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.336, %sharding_constraint.344)
  %convert_element_type.1518 = f32[2,8192,4096]{2,1,0} convert(%add.2245)
  %square.45 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1518, %convert_element_type.1518)
  %reduce.237 = f32[2,8192]{1,0} reduce(%square.45, %constant.2882), dimensions={2}, to_apply=%region_109.7738
  %div.866 = f32[2,8192]{1,0} multiply(%reduce.237, %broadcast.5097)
  %add.2246 = f32[2,8192]{1,0} add(%div.866, %broadcast.5098)
  %rsqrt.107 = f32[2,8192]{1,0} rsqrt(%add.2246)
  %mul.2466 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.107), dimensions={0,1}
  %mul.2467 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1518, %mul.2466)
  %convert_element_type.1519 = bf16[2,8192,4096]{2,1,0} convert(%mul.2467)
  %param.201 = f32[4096]{0} parameter(131), sharding={replicated}
  %convert_element_type.1520 = bf16[4096]{0} convert(%param.201)
  %mul.2468 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1520), dimensions={2}
  %mul.2469 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1519, %mul.2468)
  %sharding_constraint.345 = bf16[2,8192,4096]{2,1,0} copy(%mul.2469)
  %param.202 = f32[512,14336]{1,0} parameter(128), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1521 = bf16[512,14336]{1,0} convert(%param.202)
  %all-gather.152 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1521), channel_id=153, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.250 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.345, %all-gather.152), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.159 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.250), exponent_bits=8, mantissa_bits=7
  %neg.147 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.159)
  %exp.147 = bf16[2,8192,14336]{2,1,0} exponential(%neg.147)
  %add.2247 = bf16[2,8192,14336]{2,1,0} add(%exp.147, %jit_silu_.0)
  %div.867 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2247)
  %mul.2474 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.159, %div.867)
  %param.203 = f32[512,14336]{1,0} parameter(129), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1522 = bf16[512,14336]{1,0} convert(%param.203)
  %all-gather.153 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1522), channel_id=154, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.251 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.345, %all-gather.153), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.160 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.251), exponent_bits=8, mantissa_bits=7
  %mul.2475 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2474, %reduce_precision.160)
  %sharding_constraint.346 = bf16[2,8192,14336]{2,1,0} copy(%mul.2475)
  %param.204 = f32[14336,512]{1,0} parameter(130), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1523 = bf16[14336,512]{1,0} convert(%param.204)
  %all-gather.154 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1523), channel_id=155, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.252 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.346, %all-gather.154), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.347 = bf16[2,8192,4096]{2,1,0} copy(%dot.252)
  %add.2248 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.347, %add.2245)
  %sharding_constraint.348 = bf16[2,8192,4096]{2,1,0} copy(%add.2248)
  %sharding_constraint.349 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.348)
  %convert_element_type.1524 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.349)
  %square.46 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1524, %convert_element_type.1524)
  %reduce.238 = f32[2,8192]{1,0} reduce(%square.46, %constant.2882), dimensions={2}, to_apply=%region_110.7774
  %div.868 = f32[2,8192]{1,0} multiply(%reduce.238, %broadcast.5097)
  %add.2249 = f32[2,8192]{1,0} add(%div.868, %broadcast.5098)
  %rsqrt.108 = f32[2,8192]{1,0} rsqrt(%add.2249)
  %mul.2476 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.108), dimensions={0,1}
  %mul.2481 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1524, %mul.2476)
  %convert_element_type.1525 = bf16[2,8192,4096]{2,1,0} convert(%mul.2481)
  %param.205 = f32[4096]{0} parameter(141), sharding={replicated}
  %convert_element_type.1526 = bf16[4096]{0} convert(%param.205)
  %mul.2482 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1526), dimensions={2}
  %mul.2483 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1525, %mul.2482)
  %sharding_constraint.350 = bf16[2,8192,4096]{2,1,0} copy(%mul.2483)
  %sharding_constraint.351 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.350)
  %param.206 = f32[512,32,128]{2,1,0} parameter(144), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1528 = bf16[512,32,128]{2,1,0} convert(%param.206)
  %all-gather.155 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1528), channel_id=156, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.253 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.351, %all-gather.155), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.161 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.253), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1529 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.161)
  %mul.2490 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1529, %mul.1643)
  %slice.209 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.161), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.210 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.161), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.133 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.209, %slice.210), dimensions={3}
  %slice.211 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.161), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.212 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.161), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.134 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.211, %slice.212), dimensions={3}
  %select_n.1526 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.133, %concatenate.134)
  %convert_element_type.1534 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1526)
  %mul.2493 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1534, %mul.1647)
  %mul.2495 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2493, %mul.1649)
  %add.2252 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2490, %mul.2495)
  %convert_element_type.1536 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2252)
  %sharding_constraint.352 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1536)
  %param.207 = f32[512,8,128]{2,1,0} parameter(142), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1537 = bf16[512,8,128]{2,1,0} convert(%param.207)
  %all-gather.156 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1537), channel_id=157, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.254 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.351, %all-gather.156), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.162 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.254), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1538 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.162)
  %mul.2501 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1538, %mul.1655)
  %slice.213 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.162), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.214 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.162), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.135 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.213, %slice.214), dimensions={3}
  %slice.215 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.162), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.216 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.162), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.136 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.215, %slice.216), dimensions={3}
  %select_n.1533 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.135, %concatenate.136)
  %convert_element_type.1544 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1533)
  %mul.2504 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1544, %mul.1658)
  %mul.2506 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2504, %mul.1660)
  %add.2258 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2501, %mul.2506)
  %convert_element_type.1547 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2258)
  %sharding_constraint.354 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1547)
  %param.208 = f32[512,8,128]{2,1,0} parameter(145), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1548 = bf16[512,8,128]{2,1,0} convert(%param.208)
  %all-gather.157 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1548), channel_id=158, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.255 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.351, %all-gather.157), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.163 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.255), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.355 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.163)
  %te_fused_attn_forward_ffi.88 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.352, %sharding_constraint.354, %sharding_constraint.355, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.22 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.88), index=0
  %reduce_precision.164 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.22), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.356 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.164)
  %param.209 = f32[32,128,512]{2,1,0} parameter(143), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1552 = bf16[32,128,512]{2,1,0} convert(%param.209)
  %all-gather.158 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1552), channel_id=159, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.256 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.356, %all-gather.158), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.165 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.256), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.357 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.165)
  %add.2259 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.349, %sharding_constraint.357)
  %convert_element_type.1553 = f32[2,8192,4096]{2,1,0} convert(%add.2259)
  %square.47 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1553, %convert_element_type.1553)
  %reduce.242 = f32[2,8192]{1,0} reduce(%square.47, %constant.2882), dimensions={2}, to_apply=%region_114.7966
  %div.889 = f32[2,8192]{1,0} multiply(%reduce.242, %broadcast.5097)
  %add.2260 = f32[2,8192]{1,0} add(%div.889, %broadcast.5098)
  %rsqrt.109 = f32[2,8192]{1,0} rsqrt(%add.2260)
  %mul.2507 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.109), dimensions={0,1}
  %mul.2512 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1553, %mul.2507)
  %convert_element_type.1554 = bf16[2,8192,4096]{2,1,0} convert(%mul.2512)
  %param.210 = f32[4096]{0} parameter(140), sharding={replicated}
  %convert_element_type.1555 = bf16[4096]{0} convert(%param.210)
  %mul.2513 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1555), dimensions={2}
  %mul.2514 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1554, %mul.2513)
  %sharding_constraint.358 = bf16[2,8192,4096]{2,1,0} copy(%mul.2514)
  %param.211 = f32[512,14336]{1,0} parameter(137), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1556 = bf16[512,14336]{1,0} convert(%param.211)
  %all-gather.159 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1556), channel_id=160, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.257 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.358, %all-gather.159), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.166 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.257), exponent_bits=8, mantissa_bits=7
  %neg.148 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.166)
  %exp.148 = bf16[2,8192,14336]{2,1,0} exponential(%neg.148)
  %add.2261 = bf16[2,8192,14336]{2,1,0} add(%exp.148, %jit_silu_.0)
  %div.890 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2261)
  %mul.2519 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.166, %div.890)
  %param.212 = f32[512,14336]{1,0} parameter(138), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1557 = bf16[512,14336]{1,0} convert(%param.212)
  %all-gather.160 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1557), channel_id=161, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.258 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.358, %all-gather.160), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.167 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.258), exponent_bits=8, mantissa_bits=7
  %mul.2520 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2519, %reduce_precision.167)
  %sharding_constraint.359 = bf16[2,8192,14336]{2,1,0} copy(%mul.2520)
  %param.213 = f32[14336,512]{1,0} parameter(139), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1559 = bf16[14336,512]{1,0} convert(%param.213)
  %all-gather.161 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1559), channel_id=162, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.259 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.359, %all-gather.161), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.360 = bf16[2,8192,4096]{2,1,0} copy(%dot.259)
  %add.2262 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.360, %add.2259)
  %sharding_constraint.361 = bf16[2,8192,4096]{2,1,0} copy(%add.2262)
  %sharding_constraint.362 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.361)
  %convert_element_type.1560 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.362)
  %square.48 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1560, %convert_element_type.1560)
  %reduce.243 = f32[2,8192]{1,0} reduce(%square.48, %constant.2882), dimensions={2}, to_apply=%region_115.8002
  %div.891 = f32[2,8192]{1,0} multiply(%reduce.243, %broadcast.5097)
  %add.2263 = f32[2,8192]{1,0} add(%div.891, %broadcast.5098)
  %rsqrt.110 = f32[2,8192]{1,0} rsqrt(%add.2263)
  %mul.2521 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.110), dimensions={0,1}
  %mul.2522 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1560, %mul.2521)
  %convert_element_type.1561 = bf16[2,8192,4096]{2,1,0} convert(%mul.2522)
  %param.214 = f32[4096]{0} parameter(150), sharding={replicated}
  %convert_element_type.1562 = bf16[4096]{0} convert(%param.214)
  %mul.2523 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1562), dimensions={2}
  %mul.2524 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1561, %mul.2523)
  %sharding_constraint.363 = bf16[2,8192,4096]{2,1,0} copy(%mul.2524)
  %sharding_constraint.364 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.363)
  %param.215 = f32[512,32,128]{2,1,0} parameter(153), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1563 = bf16[512,32,128]{2,1,0} convert(%param.215)
  %all-gather.162 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1563), channel_id=163, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.260 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.364, %all-gather.162), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.168 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.260), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1564 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.168)
  %mul.2530 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1564, %mul.1643)
  %slice.218 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.168), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.219 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.168), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.139 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.218, %slice.219), dimensions={3}
  %slice.220 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.168), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.221 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.168), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.140 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.220, %slice.221), dimensions={3}
  %select_n.1546 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.139, %concatenate.140)
  %convert_element_type.1569 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1546)
  %mul.2533 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1569, %mul.1647)
  %mul.2535 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2533, %mul.1649)
  %add.2266 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2530, %mul.2535)
  %convert_element_type.1571 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2266)
  %sharding_constraint.365 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1571)
  %param.216 = f32[512,8,128]{2,1,0} parameter(151), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1572 = bf16[512,8,128]{2,1,0} convert(%param.216)
  %all-gather.163 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1572), channel_id=164, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.261 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.364, %all-gather.163), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.169 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.261), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1573 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.169)
  %mul.2541 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1573, %mul.1655)
  %slice.222 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.169), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.223 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.169), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.141 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.222, %slice.223), dimensions={3}
  %slice.224 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.169), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.225 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.169), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.142 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.224, %slice.225), dimensions={3}
  %select_n.1553 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.141, %concatenate.142)
  %convert_element_type.1578 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1553)
  %mul.2544 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1578, %mul.1658)
  %mul.2546 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2544, %mul.1660)
  %add.2269 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2541, %mul.2546)
  %convert_element_type.1580 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2269)
  %sharding_constraint.367 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1580)
  %param.217 = f32[512,8,128]{2,1,0} parameter(154), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1581 = bf16[512,8,128]{2,1,0} convert(%param.217)
  %all-gather.164 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1581), channel_id=165, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.262 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.364, %all-gather.164), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.170 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.262), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.368 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.170)
  %te_fused_attn_forward_ffi.92 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.365, %sharding_constraint.367, %sharding_constraint.368, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.23 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.92), index=0
  %reduce_precision.171 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.23), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.369 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.171)
  %param.218 = f32[32,128,512]{2,1,0} parameter(152), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1584 = bf16[32,128,512]{2,1,0} convert(%param.218)
  %all-gather.165 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1584), channel_id=166, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.263 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.369, %all-gather.165), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.172 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.263), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.370 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.172)
  %add.2270 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.362, %sharding_constraint.370)
  %convert_element_type.1586 = f32[2,8192,4096]{2,1,0} convert(%add.2270)
  %square.49 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1586, %convert_element_type.1586)
  %reduce.247 = f32[2,8192]{1,0} reduce(%square.49, %constant.2882), dimensions={2}, to_apply=%region_119.8194
  %div.912 = f32[2,8192]{1,0} multiply(%reduce.247, %broadcast.5097)
  %add.2271 = f32[2,8192]{1,0} add(%div.912, %broadcast.5098)
  %rsqrt.111 = f32[2,8192]{1,0} rsqrt(%add.2271)
  %mul.2547 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.111), dimensions={0,1}
  %mul.2549 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1586, %mul.2547)
  %convert_element_type.1587 = bf16[2,8192,4096]{2,1,0} convert(%mul.2549)
  %param.219 = f32[4096]{0} parameter(149), sharding={replicated}
  %convert_element_type.1588 = bf16[4096]{0} convert(%param.219)
  %mul.2550 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1588), dimensions={2}
  %mul.2551 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1587, %mul.2550)
  %sharding_constraint.371 = bf16[2,8192,4096]{2,1,0} copy(%mul.2551)
  %param.220 = f32[512,14336]{1,0} parameter(146), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1589 = bf16[512,14336]{1,0} convert(%param.220)
  %all-gather.166 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1589), channel_id=167, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.264 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.371, %all-gather.166), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.173 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.264), exponent_bits=8, mantissa_bits=7
  %neg.149 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.173)
  %exp.149 = bf16[2,8192,14336]{2,1,0} exponential(%neg.149)
  %add.2272 = bf16[2,8192,14336]{2,1,0} add(%exp.149, %jit_silu_.0)
  %div.913 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2272)
  %mul.2552 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.173, %div.913)
  %param.221 = f32[512,14336]{1,0} parameter(147), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1590 = bf16[512,14336]{1,0} convert(%param.221)
  %all-gather.167 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1590), channel_id=168, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.265 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.371, %all-gather.167), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.174 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.265), exponent_bits=8, mantissa_bits=7
  %mul.2553 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2552, %reduce_precision.174)
  %sharding_constraint.372 = bf16[2,8192,14336]{2,1,0} copy(%mul.2553)
  %param.222 = f32[14336,512]{1,0} parameter(148), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1591 = bf16[14336,512]{1,0} convert(%param.222)
  %all-gather.168 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1591), channel_id=169, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.266 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.372, %all-gather.168), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.373 = bf16[2,8192,4096]{2,1,0} copy(%dot.266)
  %add.2273 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.373, %add.2270)
  %sharding_constraint.374 = bf16[2,8192,4096]{2,1,0} copy(%add.2273)
  %sharding_constraint.375 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.374)
  %convert_element_type.1592 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.375)
  %square.50 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1592, %convert_element_type.1592)
  %reduce.248 = f32[2,8192]{1,0} reduce(%square.50, %constant.2882), dimensions={2}, to_apply=%region_120.8230
  %div.914 = f32[2,8192]{1,0} multiply(%reduce.248, %broadcast.5097)
  %add.2274 = f32[2,8192]{1,0} add(%div.914, %broadcast.5098)
  %rsqrt.112 = f32[2,8192]{1,0} rsqrt(%add.2274)
  %mul.2554 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.112), dimensions={0,1}
  %mul.2555 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1592, %mul.2554)
  %convert_element_type.1594 = bf16[2,8192,4096]{2,1,0} convert(%mul.2555)
  %param.223 = f32[4096]{0} parameter(159), sharding={replicated}
  %convert_element_type.1595 = bf16[4096]{0} convert(%param.223)
  %mul.2556 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1595), dimensions={2}
  %mul.2557 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1594, %mul.2556)
  %sharding_constraint.376 = bf16[2,8192,4096]{2,1,0} copy(%mul.2557)
  %sharding_constraint.377 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.376)
  %param.224 = f32[512,32,128]{2,1,0} parameter(162), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1596 = bf16[512,32,128]{2,1,0} convert(%param.224)
  %all-gather.169 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1596), channel_id=170, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.267 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.377, %all-gather.169), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.175 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.267), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1597 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.175)
  %mul.2563 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1597, %mul.1643)
  %slice.227 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.175), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.228 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.175), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.145 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.227, %slice.228), dimensions={3}
  %slice.229 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.175), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.230 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.175), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.146 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.229, %slice.230), dimensions={3}
  %select_n.1563 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.145, %concatenate.146)
  %convert_element_type.1602 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1563)
  %mul.2568 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1602, %mul.1647)
  %mul.2570 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2568, %mul.1649)
  %add.2280 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2563, %mul.2570)
  %convert_element_type.1604 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2280)
  %sharding_constraint.378 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1604)
  %param.225 = f32[512,8,128]{2,1,0} parameter(160), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1605 = bf16[512,8,128]{2,1,0} convert(%param.225)
  %all-gather.170 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1605), channel_id=171, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.268 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.377, %all-gather.170), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.176 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.268), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1606 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.176)
  %mul.2576 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1606, %mul.1655)
  %slice.231 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.176), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.232 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.176), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.147 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.231, %slice.232), dimensions={3}
  %slice.233 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.176), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.234 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.176), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.148 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.233, %slice.234), dimensions={3}
  %select_n.1573 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.147, %concatenate.148)
  %convert_element_type.1612 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1573)
  %mul.2579 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1612, %mul.1658)
  %mul.2581 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2579, %mul.1660)
  %add.2283 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2576, %mul.2581)
  %convert_element_type.1614 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2283)
  %sharding_constraint.380 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1614)
  %param.226 = f32[512,8,128]{2,1,0} parameter(163), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1615 = bf16[512,8,128]{2,1,0} convert(%param.226)
  %all-gather.171 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1615), channel_id=172, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.269 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.377, %all-gather.171), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.177 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.269), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.381 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.177)
  %te_fused_attn_forward_ffi.96 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.378, %sharding_constraint.380, %sharding_constraint.381, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.24 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.96), index=0
  %reduce_precision.178 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.24), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.382 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.178)
  %param.227 = f32[32,128,512]{2,1,0} parameter(161), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1619 = bf16[32,128,512]{2,1,0} convert(%param.227)
  %all-gather.172 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1619), channel_id=173, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.270 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.382, %all-gather.172), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.179 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.270), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.383 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.179)
  %add.2284 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.375, %sharding_constraint.383)
  %convert_element_type.1620 = f32[2,8192,4096]{2,1,0} convert(%add.2284)
  %square.51 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1620, %convert_element_type.1620)
  %reduce.252 = f32[2,8192]{1,0} reduce(%square.51, %constant.2882), dimensions={2}, to_apply=%region_124.8422
  %div.935 = f32[2,8192]{1,0} multiply(%reduce.252, %broadcast.5097)
  %add.2285 = f32[2,8192]{1,0} add(%div.935, %broadcast.5098)
  %rsqrt.113 = f32[2,8192]{1,0} rsqrt(%add.2285)
  %mul.2582 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.113), dimensions={0,1}
  %mul.2583 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1620, %mul.2582)
  %convert_element_type.1621 = bf16[2,8192,4096]{2,1,0} convert(%mul.2583)
  %param.228 = f32[4096]{0} parameter(158), sharding={replicated}
  %convert_element_type.1622 = bf16[4096]{0} convert(%param.228)
  %mul.2584 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1622), dimensions={2}
  %mul.2585 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1621, %mul.2584)
  %sharding_constraint.384 = bf16[2,8192,4096]{2,1,0} copy(%mul.2585)
  %param.229 = f32[512,14336]{1,0} parameter(155), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1623 = bf16[512,14336]{1,0} convert(%param.229)
  %all-gather.173 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1623), channel_id=174, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.271 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.384, %all-gather.173), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.180 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.271), exponent_bits=8, mantissa_bits=7
  %neg.150 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.180)
  %exp.150 = bf16[2,8192,14336]{2,1,0} exponential(%neg.150)
  %add.2287 = bf16[2,8192,14336]{2,1,0} add(%exp.150, %jit_silu_.0)
  %div.936 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2287)
  %mul.2586 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.180, %div.936)
  %param.230 = f32[512,14336]{1,0} parameter(156), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1624 = bf16[512,14336]{1,0} convert(%param.230)
  %all-gather.174 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1624), channel_id=175, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.272 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.384, %all-gather.174), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.181 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.272), exponent_bits=8, mantissa_bits=7
  %mul.2587 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2586, %reduce_precision.181)
  %sharding_constraint.385 = bf16[2,8192,14336]{2,1,0} copy(%mul.2587)
  %param.231 = f32[14336,512]{1,0} parameter(157), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1625 = bf16[14336,512]{1,0} convert(%param.231)
  %all-gather.175 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1625), channel_id=176, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.273 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.385, %all-gather.175), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.386 = bf16[2,8192,4096]{2,1,0} copy(%dot.273)
  %add.2288 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.386, %add.2284)
  %sharding_constraint.387 = bf16[2,8192,4096]{2,1,0} copy(%add.2288)
  %sharding_constraint.388 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.387)
  %convert_element_type.1626 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.388)
  %square.52 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1626, %convert_element_type.1626)
  %reduce.253 = f32[2,8192]{1,0} reduce(%square.52, %constant.2882), dimensions={2}, to_apply=%region_125.8458
  %div.937 = f32[2,8192]{1,0} multiply(%reduce.253, %broadcast.5097)
  %add.2289 = f32[2,8192]{1,0} add(%div.937, %broadcast.5098)
  %rsqrt.114 = f32[2,8192]{1,0} rsqrt(%add.2289)
  %mul.2588 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.114), dimensions={0,1}
  %mul.2589 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1626, %mul.2588)
  %convert_element_type.1627 = bf16[2,8192,4096]{2,1,0} convert(%mul.2589)
  %param.232 = f32[4096]{0} parameter(168), sharding={replicated}
  %convert_element_type.1628 = bf16[4096]{0} convert(%param.232)
  %mul.2594 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1628), dimensions={2}
  %mul.2599 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1627, %mul.2594)
  %sharding_constraint.389 = bf16[2,8192,4096]{2,1,0} copy(%mul.2599)
  %sharding_constraint.390 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.389)
  %param.233 = f32[512,32,128]{2,1,0} parameter(171), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1629 = bf16[512,32,128]{2,1,0} convert(%param.233)
  %all-gather.176 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1629), channel_id=177, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.274 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.390, %all-gather.176), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.182 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.274), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1630 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.182)
  %mul.2609 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1630, %mul.1643)
  %slice.236 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.182), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.237 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.182), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.151 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.236, %slice.237), dimensions={3}
  %slice.238 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.182), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.239 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.182), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.152 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.238, %slice.239), dimensions={3}
  %select_n.1583 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.151, %concatenate.152)
  %convert_element_type.1637 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1583)
  %mul.2612 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1637, %mul.1647)
  %mul.2614 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2612, %mul.1649)
  %add.2292 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2609, %mul.2614)
  %convert_element_type.1640 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2292)
  %sharding_constraint.391 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1640)
  %param.234 = f32[512,8,128]{2,1,0} parameter(169), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1641 = bf16[512,8,128]{2,1,0} convert(%param.234)
  %all-gather.177 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1641), channel_id=178, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.275 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.390, %all-gather.177), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.183 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.275), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1642 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.183)
  %mul.2620 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1642, %mul.1655)
  %slice.240 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.183), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.241 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.183), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.153 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.240, %slice.241), dimensions={3}
  %slice.242 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.183), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.243 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.183), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.154 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.242, %slice.243), dimensions={3}
  %select_n.1593 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.153, %concatenate.154)
  %convert_element_type.1649 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1593)
  %mul.2623 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1649, %mul.1658)
  %mul.2626 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2623, %mul.1660)
  %add.2295 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2620, %mul.2626)
  %convert_element_type.1651 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2295)
  %sharding_constraint.393 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1651)
  %param.235 = f32[512,8,128]{2,1,0} parameter(172), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1652 = bf16[512,8,128]{2,1,0} convert(%param.235)
  %all-gather.178 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1652), channel_id=179, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.276 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.390, %all-gather.178), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.184 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.276), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.394 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.184)
  %te_fused_attn_forward_ffi.100 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.391, %sharding_constraint.393, %sharding_constraint.394, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.25 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.100), index=0
  %reduce_precision.185 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.25), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.395 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.185)
  %param.236 = f32[32,128,512]{2,1,0} parameter(170), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1656 = bf16[32,128,512]{2,1,0} convert(%param.236)
  %all-gather.179 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1656), channel_id=180, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.277 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.395, %all-gather.179), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.186 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.277), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.396 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.186)
  %add.2299 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.388, %sharding_constraint.396)
  %convert_element_type.1657 = f32[2,8192,4096]{2,1,0} convert(%add.2299)
  %square.53 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1657, %convert_element_type.1657)
  %reduce.257 = f32[2,8192]{1,0} reduce(%square.53, %constant.2882), dimensions={2}, to_apply=%region_129.8650
  %div.958 = f32[2,8192]{1,0} multiply(%reduce.257, %broadcast.5097)
  %add.2300 = f32[2,8192]{1,0} add(%div.958, %broadcast.5098)
  %rsqrt.115 = f32[2,8192]{1,0} rsqrt(%add.2300)
  %mul.2627 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.115), dimensions={0,1}
  %mul.2628 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1657, %mul.2627)
  %convert_element_type.1658 = bf16[2,8192,4096]{2,1,0} convert(%mul.2628)
  %param.237 = f32[4096]{0} parameter(167), sharding={replicated}
  %convert_element_type.1659 = bf16[4096]{0} convert(%param.237)
  %mul.2629 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1659), dimensions={2}
  %mul.2630 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1658, %mul.2629)
  %sharding_constraint.397 = bf16[2,8192,4096]{2,1,0} copy(%mul.2630)
  %param.238 = f32[512,14336]{1,0} parameter(164), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1660 = bf16[512,14336]{1,0} convert(%param.238)
  %all-gather.180 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1660), channel_id=181, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.278 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.397, %all-gather.180), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.187 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.278), exponent_bits=8, mantissa_bits=7
  %neg.151 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.187)
  %exp.151 = bf16[2,8192,14336]{2,1,0} exponential(%neg.151)
  %add.2301 = bf16[2,8192,14336]{2,1,0} add(%exp.151, %jit_silu_.0)
  %div.959 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2301)
  %mul.2631 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.187, %div.959)
  %param.239 = f32[512,14336]{1,0} parameter(165), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1661 = bf16[512,14336]{1,0} convert(%param.239)
  %all-gather.181 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1661), channel_id=182, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.279 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.397, %all-gather.181), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.188 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.279), exponent_bits=8, mantissa_bits=7
  %mul.2632 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2631, %reduce_precision.188)
  %sharding_constraint.398 = bf16[2,8192,14336]{2,1,0} copy(%mul.2632)
  %param.240 = f32[14336,512]{1,0} parameter(166), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1662 = bf16[14336,512]{1,0} convert(%param.240)
  %all-gather.182 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1662), channel_id=183, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.280 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.398, %all-gather.182), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.399 = bf16[2,8192,4096]{2,1,0} copy(%dot.280)
  %add.2302 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.399, %add.2299)
  %sharding_constraint.400 = bf16[2,8192,4096]{2,1,0} copy(%add.2302)
  %sharding_constraint.401 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.400)
  %convert_element_type.1663 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.401)
  %square.54 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1663, %convert_element_type.1663)
  %reduce.258 = f32[2,8192]{1,0} reduce(%square.54, %constant.2882), dimensions={2}, to_apply=%region_130.8686
  %div.960 = f32[2,8192]{1,0} multiply(%reduce.258, %broadcast.5097)
  %add.2303 = f32[2,8192]{1,0} add(%div.960, %broadcast.5098)
  %rsqrt.116 = f32[2,8192]{1,0} rsqrt(%add.2303)
  %mul.2633 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.116), dimensions={0,1}
  %mul.2634 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1663, %mul.2633)
  %convert_element_type.1664 = bf16[2,8192,4096]{2,1,0} convert(%mul.2634)
  %param.241 = f32[4096]{0} parameter(177), sharding={replicated}
  %convert_element_type.1665 = bf16[4096]{0} convert(%param.241)
  %mul.2635 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1665), dimensions={2}
  %mul.2636 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1664, %mul.2635)
  %sharding_constraint.402 = bf16[2,8192,4096]{2,1,0} copy(%mul.2636)
  %sharding_constraint.403 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.402)
  %param.242 = f32[512,32,128]{2,1,0} parameter(180), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1666 = bf16[512,32,128]{2,1,0} convert(%param.242)
  %all-gather.183 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1666), channel_id=184, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.281 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.403, %all-gather.183), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.189 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.281), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1667 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.189)
  %mul.2644 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1667, %mul.1643)
  %slice.245 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.189), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.246 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.189), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.157 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.245, %slice.246), dimensions={3}
  %slice.247 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.189), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.248 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.189), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.158 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.247, %slice.248), dimensions={3}
  %select_n.1603 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.157, %concatenate.158)
  %convert_element_type.1674 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1603)
  %mul.2647 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1674, %mul.1647)
  %mul.2649 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2647, %mul.1649)
  %add.2306 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2644, %mul.2649)
  %convert_element_type.1676 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2306)
  %sharding_constraint.404 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1676)
  %param.243 = f32[512,8,128]{2,1,0} parameter(178), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1677 = bf16[512,8,128]{2,1,0} convert(%param.243)
  %all-gather.184 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1677), channel_id=185, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.282 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.403, %all-gather.184), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.190 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.282), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1678 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.190)
  %mul.2655 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1678, %mul.1655)
  %slice.249 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.190), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.250 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.190), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.159 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.249, %slice.250), dimensions={3}
  %slice.251 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.190), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.252 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.190), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.160 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.251, %slice.252), dimensions={3}
  %select_n.1613 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.159, %concatenate.160)
  %convert_element_type.1686 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1613)
  %mul.2658 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1686, %mul.1658)
  %mul.2660 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2658, %mul.1660)
  %add.2309 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2655, %mul.2660)
  %convert_element_type.1688 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2309)
  %sharding_constraint.406 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1688)
  %param.244 = f32[512,8,128]{2,1,0} parameter(181), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1689 = bf16[512,8,128]{2,1,0} convert(%param.244)
  %all-gather.185 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1689), channel_id=186, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.283 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.403, %all-gather.185), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.191 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.283), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.407 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.191)
  %te_fused_attn_forward_ffi.104 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.404, %sharding_constraint.406, %sharding_constraint.407, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.26 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.104), index=0
  %reduce_precision.192 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.26), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.408 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.192)
  %param.245 = f32[32,128,512]{2,1,0} parameter(179), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1692 = bf16[32,128,512]{2,1,0} convert(%param.245)
  %all-gather.186 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1692), channel_id=187, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.284 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.408, %all-gather.186), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.193 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.284), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.409 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.193)
  %add.2310 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.401, %sharding_constraint.409)
  %convert_element_type.1693 = f32[2,8192,4096]{2,1,0} convert(%add.2310)
  %square.55 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1693, %convert_element_type.1693)
  %reduce.262 = f32[2,8192]{1,0} reduce(%square.55, %constant.2882), dimensions={2}, to_apply=%region_134.8878
  %div.981 = f32[2,8192]{1,0} multiply(%reduce.262, %broadcast.5097)
  %add.2311 = f32[2,8192]{1,0} add(%div.981, %broadcast.5098)
  %rsqrt.117 = f32[2,8192]{1,0} rsqrt(%add.2311)
  %mul.2661 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.117), dimensions={0,1}
  %mul.2662 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1693, %mul.2661)
  %convert_element_type.1694 = bf16[2,8192,4096]{2,1,0} convert(%mul.2662)
  %param.246 = f32[4096]{0} parameter(176), sharding={replicated}
  %convert_element_type.1695 = bf16[4096]{0} convert(%param.246)
  %mul.2663 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1695), dimensions={2}
  %mul.2664 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1694, %mul.2663)
  %sharding_constraint.410 = bf16[2,8192,4096]{2,1,0} copy(%mul.2664)
  %param.247 = f32[512,14336]{1,0} parameter(173), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1696 = bf16[512,14336]{1,0} convert(%param.247)
  %all-gather.187 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1696), channel_id=188, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.285 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.410, %all-gather.187), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.194 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.285), exponent_bits=8, mantissa_bits=7
  %neg.152 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.194)
  %exp.152 = bf16[2,8192,14336]{2,1,0} exponential(%neg.152)
  %add.2312 = bf16[2,8192,14336]{2,1,0} add(%exp.152, %jit_silu_.0)
  %div.982 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2312)
  %mul.2665 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.194, %div.982)
  %param.248 = f32[512,14336]{1,0} parameter(174), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1697 = bf16[512,14336]{1,0} convert(%param.248)
  %all-gather.188 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1697), channel_id=189, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.286 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.410, %all-gather.188), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.195 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.286), exponent_bits=8, mantissa_bits=7
  %mul.2670 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2665, %reduce_precision.195)
  %sharding_constraint.411 = bf16[2,8192,14336]{2,1,0} copy(%mul.2670)
  %param.249 = f32[14336,512]{1,0} parameter(175), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1698 = bf16[14336,512]{1,0} convert(%param.249)
  %all-gather.189 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1698), channel_id=190, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.287 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.411, %all-gather.189), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.412 = bf16[2,8192,4096]{2,1,0} copy(%dot.287)
  %add.2313 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.412, %add.2310)
  %sharding_constraint.413 = bf16[2,8192,4096]{2,1,0} copy(%add.2313)
  %sharding_constraint.414 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.413)
  %convert_element_type.1699 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.414)
  %square.56 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1699, %convert_element_type.1699)
  %reduce.263 = f32[2,8192]{1,0} reduce(%square.56, %constant.2882), dimensions={2}, to_apply=%region_135.8914
  %div.983 = f32[2,8192]{1,0} multiply(%reduce.263, %broadcast.5097)
  %add.2314 = f32[2,8192]{1,0} add(%div.983, %broadcast.5098)
  %rsqrt.118 = f32[2,8192]{1,0} rsqrt(%add.2314)
  %mul.2675 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.118), dimensions={0,1}
  %mul.2676 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1699, %mul.2675)
  %convert_element_type.1700 = bf16[2,8192,4096]{2,1,0} convert(%mul.2676)
  %param.250 = f32[4096]{0} parameter(186), sharding={replicated}
  %convert_element_type.1701 = bf16[4096]{0} convert(%param.250)
  %mul.2681 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1701), dimensions={2}
  %mul.2682 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1700, %mul.2681)
  %sharding_constraint.415 = bf16[2,8192,4096]{2,1,0} copy(%mul.2682)
  %sharding_constraint.416 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.415)
  %param.251 = f32[512,32,128]{2,1,0} parameter(189), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1702 = bf16[512,32,128]{2,1,0} convert(%param.251)
  %all-gather.190 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1702), channel_id=191, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.288 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.416, %all-gather.190), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.196 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.288), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1703 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.196)
  %mul.2689 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1703, %mul.1643)
  %slice.254 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.196), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.255 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.196), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.163 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.254, %slice.255), dimensions={3}
  %slice.256 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.196), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.257 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.196), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.164 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.256, %slice.257), dimensions={3}
  %select_n.1623 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.163, %concatenate.164)
  %convert_element_type.1709 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1623)
  %mul.2692 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1709, %mul.1647)
  %mul.2694 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2692, %mul.1649)
  %add.2320 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2689, %mul.2694)
  %convert_element_type.1711 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2320)
  %sharding_constraint.417 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1711)
  %param.252 = f32[512,8,128]{2,1,0} parameter(187), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1712 = bf16[512,8,128]{2,1,0} convert(%param.252)
  %all-gather.191 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1712), channel_id=192, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.289 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.416, %all-gather.191), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.197 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.289), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1713 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.197)
  %mul.2703 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1713, %mul.1655)
  %slice.258 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.197), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.259 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.197), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.165 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.258, %slice.259), dimensions={3}
  %slice.260 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.197), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.261 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.197), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.166 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.260, %slice.261), dimensions={3}
  %select_n.1633 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.165, %concatenate.166)
  %convert_element_type.1720 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1633)
  %mul.2707 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1720, %mul.1658)
  %mul.2711 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2707, %mul.1660)
  %add.2323 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2703, %mul.2711)
  %convert_element_type.1722 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2323)
  %sharding_constraint.419 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1722)
  %param.253 = f32[512,8,128]{2,1,0} parameter(190), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1723 = bf16[512,8,128]{2,1,0} convert(%param.253)
  %all-gather.192 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1723), channel_id=193, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.290 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.416, %all-gather.192), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.198 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.290), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.420 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.198)
  %te_fused_attn_forward_ffi.108 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.417, %sharding_constraint.419, %sharding_constraint.420, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.27 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.108), index=0
  %reduce_precision.199 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.27), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.421 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.199)
  %param.254 = f32[32,128,512]{2,1,0} parameter(188), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1726 = bf16[32,128,512]{2,1,0} convert(%param.254)
  %all-gather.193 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1726), channel_id=194, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.291 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.421, %all-gather.193), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.200 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.291), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.422 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.200)
  %add.2325 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.414, %sharding_constraint.422)
  %convert_element_type.1727 = f32[2,8192,4096]{2,1,0} convert(%add.2325)
  %square.57 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1727, %convert_element_type.1727)
  %reduce.267 = f32[2,8192]{1,0} reduce(%square.57, %constant.2882), dimensions={2}, to_apply=%region_139.9106
  %div.1004 = f32[2,8192]{1,0} multiply(%reduce.267, %broadcast.5097)
  %add.2326 = f32[2,8192]{1,0} add(%div.1004, %broadcast.5098)
  %rsqrt.119 = f32[2,8192]{1,0} rsqrt(%add.2326)
  %mul.2712 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.119), dimensions={0,1}
  %mul.2713 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1727, %mul.2712)
  %convert_element_type.1728 = bf16[2,8192,4096]{2,1,0} convert(%mul.2713)
  %param.255 = f32[4096]{0} parameter(185), sharding={replicated}
  %convert_element_type.1729 = bf16[4096]{0} convert(%param.255)
  %mul.2714 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1729), dimensions={2}
  %mul.2715 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1728, %mul.2714)
  %sharding_constraint.423 = bf16[2,8192,4096]{2,1,0} copy(%mul.2715)
  %param.256 = f32[512,14336]{1,0} parameter(182), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1730 = bf16[512,14336]{1,0} convert(%param.256)
  %all-gather.194 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1730), channel_id=195, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.292 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.423, %all-gather.194), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.201 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.292), exponent_bits=8, mantissa_bits=7
  %neg.153 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.201)
  %exp.153 = bf16[2,8192,14336]{2,1,0} exponential(%neg.153)
  %add.2327 = bf16[2,8192,14336]{2,1,0} add(%exp.153, %jit_silu_.0)
  %div.1005 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2327)
  %mul.2716 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.201, %div.1005)
  %param.257 = f32[512,14336]{1,0} parameter(183), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1731 = bf16[512,14336]{1,0} convert(%param.257)
  %all-gather.195 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1731), channel_id=196, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.293 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.423, %all-gather.195), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.202 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.293), exponent_bits=8, mantissa_bits=7
  %mul.2717 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2716, %reduce_precision.202)
  %sharding_constraint.424 = bf16[2,8192,14336]{2,1,0} copy(%mul.2717)
  %param.258 = f32[14336,512]{1,0} parameter(184), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1733 = bf16[14336,512]{1,0} convert(%param.258)
  %all-gather.196 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1733), channel_id=197, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.294 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.424, %all-gather.196), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.425 = bf16[2,8192,4096]{2,1,0} copy(%dot.294)
  %add.2328 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.425, %add.2325)
  %sharding_constraint.426 = bf16[2,8192,4096]{2,1,0} copy(%add.2328)
  %sharding_constraint.427 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.426)
  %convert_element_type.1734 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.427)
  %square.58 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1734, %convert_element_type.1734)
  %reduce.268 = f32[2,8192]{1,0} reduce(%square.58, %constant.2882), dimensions={2}, to_apply=%region_140.9142
  %div.1006 = f32[2,8192]{1,0} multiply(%reduce.268, %broadcast.5097)
  %add.2329 = f32[2,8192]{1,0} add(%div.1006, %broadcast.5098)
  %rsqrt.120 = f32[2,8192]{1,0} rsqrt(%add.2329)
  %mul.2718 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.120), dimensions={0,1}
  %mul.2719 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1734, %mul.2718)
  %convert_element_type.1735 = bf16[2,8192,4096]{2,1,0} convert(%mul.2719)
  %param.259 = f32[4096]{0} parameter(195), sharding={replicated}
  %convert_element_type.1736 = bf16[4096]{0} convert(%param.259)
  %mul.2720 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1736), dimensions={2}
  %mul.2721 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1735, %mul.2720)
  %sharding_constraint.428 = bf16[2,8192,4096]{2,1,0} copy(%mul.2721)
  %sharding_constraint.429 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.428)
  %param.260 = f32[512,32,128]{2,1,0} parameter(198), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1737 = bf16[512,32,128]{2,1,0} convert(%param.260)
  %all-gather.197 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1737), channel_id=198, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.295 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.429, %all-gather.197), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.203 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.295), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1738 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.203)
  %mul.2727 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1738, %mul.1643)
  %slice.263 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.203), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.264 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.203), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.169 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.263, %slice.264), dimensions={3}
  %slice.265 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.203), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.266 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.203), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.170 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.265, %slice.266), dimensions={3}
  %select_n.1643 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.169, %concatenate.170)
  %convert_element_type.1743 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1643)
  %mul.2730 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1743, %mul.1647)
  %mul.2732 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2730, %mul.1649)
  %add.2332 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2727, %mul.2732)
  %convert_element_type.1745 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2332)
  %sharding_constraint.430 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1745)
  %param.261 = f32[512,8,128]{2,1,0} parameter(196), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1747 = bf16[512,8,128]{2,1,0} convert(%param.261)
  %all-gather.198 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1747), channel_id=199, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.296 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.429, %all-gather.198), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.204 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.296), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1748 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.204)
  %mul.2742 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1748, %mul.1655)
  %slice.267 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.204), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.268 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.204), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.171 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.267, %slice.268), dimensions={3}
  %slice.269 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.204), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.270 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.204), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.172 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.269, %slice.270), dimensions={3}
  %select_n.1653 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.171, %concatenate.172)
  %convert_element_type.1754 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1653)
  %mul.2745 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1754, %mul.1658)
  %mul.2747 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2745, %mul.1660)
  %add.2335 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2742, %mul.2747)
  %convert_element_type.1757 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2335)
  %sharding_constraint.432 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1757)
  %param.262 = f32[512,8,128]{2,1,0} parameter(199), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1758 = bf16[512,8,128]{2,1,0} convert(%param.262)
  %all-gather.199 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1758), channel_id=200, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.297 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.429, %all-gather.199), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.205 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.297), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.433 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.205)
  %te_fused_attn_forward_ffi.112 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.430, %sharding_constraint.432, %sharding_constraint.433, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.28 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.112), index=0
  %reduce_precision.206 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.28), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.434 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.206)
  %param.263 = f32[32,128,512]{2,1,0} parameter(197), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1761 = bf16[32,128,512]{2,1,0} convert(%param.263)
  %all-gather.200 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1761), channel_id=201, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.298 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.434, %all-gather.200), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.207 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.298), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.435 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.207)
  %add.2336 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.427, %sharding_constraint.435)
  %convert_element_type.1762 = f32[2,8192,4096]{2,1,0} convert(%add.2336)
  %square.59 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1762, %convert_element_type.1762)
  %reduce.272 = f32[2,8192]{1,0} reduce(%square.59, %constant.2882), dimensions={2}, to_apply=%region_144.9334
  %div.1027 = f32[2,8192]{1,0} multiply(%reduce.272, %broadcast.5097)
  %add.2337 = f32[2,8192]{1,0} add(%div.1027, %broadcast.5098)
  %rsqrt.121 = f32[2,8192]{1,0} rsqrt(%add.2337)
  %mul.2748 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.121), dimensions={0,1}
  %mul.2749 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1762, %mul.2748)
  %convert_element_type.1764 = bf16[2,8192,4096]{2,1,0} convert(%mul.2749)
  %param.264 = f32[4096]{0} parameter(194), sharding={replicated}
  %convert_element_type.1765 = bf16[4096]{0} convert(%param.264)
  %mul.2750 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1765), dimensions={2}
  %mul.2755 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1764, %mul.2750)
  %sharding_constraint.436 = bf16[2,8192,4096]{2,1,0} copy(%mul.2755)
  %param.265 = f32[512,14336]{1,0} parameter(191), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1766 = bf16[512,14336]{1,0} convert(%param.265)
  %all-gather.201 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1766), channel_id=202, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.299 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.436, %all-gather.201), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.208 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.299), exponent_bits=8, mantissa_bits=7
  %neg.154 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.208)
  %exp.154 = bf16[2,8192,14336]{2,1,0} exponential(%neg.154)
  %add.2341 = bf16[2,8192,14336]{2,1,0} add(%exp.154, %jit_silu_.0)
  %div.1028 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2341)
  %mul.2756 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.208, %div.1028)
  %param.266 = f32[512,14336]{1,0} parameter(192), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1767 = bf16[512,14336]{1,0} convert(%param.266)
  %all-gather.202 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1767), channel_id=203, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.300 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.436, %all-gather.202), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.209 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.300), exponent_bits=8, mantissa_bits=7
  %mul.2757 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2756, %reduce_precision.209)
  %sharding_constraint.437 = bf16[2,8192,14336]{2,1,0} copy(%mul.2757)
  %param.267 = f32[14336,512]{1,0} parameter(193), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1768 = bf16[14336,512]{1,0} convert(%param.267)
  %all-gather.203 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1768), channel_id=204, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.301 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.437, %all-gather.203), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.438 = bf16[2,8192,4096]{2,1,0} copy(%dot.301)
  %add.2342 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.438, %add.2336)
  %sharding_constraint.439 = bf16[2,8192,4096]{2,1,0} copy(%add.2342)
  %sharding_constraint.440 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.439)
  %convert_element_type.1769 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.440)
  %square.60 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1769, %convert_element_type.1769)
  %reduce.273 = f32[2,8192]{1,0} reduce(%square.60, %constant.2882), dimensions={2}, to_apply=%region_145.9370
  %div.1029 = f32[2,8192]{1,0} multiply(%reduce.273, %broadcast.5097)
  %add.2343 = f32[2,8192]{1,0} add(%div.1029, %broadcast.5098)
  %rsqrt.122 = f32[2,8192]{1,0} rsqrt(%add.2343)
  %mul.2762 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.122), dimensions={0,1}
  %mul.2763 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1769, %mul.2762)
  %convert_element_type.1770 = bf16[2,8192,4096]{2,1,0} convert(%mul.2763)
  %param.268 = f32[4096]{0} parameter(204), sharding={replicated}
  %convert_element_type.1771 = bf16[4096]{0} convert(%param.268)
  %mul.2764 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1771), dimensions={2}
  %mul.2765 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1770, %mul.2764)
  %sharding_constraint.441 = bf16[2,8192,4096]{2,1,0} copy(%mul.2765)
  %sharding_constraint.442 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.441)
  %param.269 = f32[512,32,128]{2,1,0} parameter(207), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1772 = bf16[512,32,128]{2,1,0} convert(%param.269)
  %all-gather.204 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1772), channel_id=205, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.302 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.442, %all-gather.204), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.210 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.302), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1773 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.210)
  %mul.2772 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1773, %mul.1643)
  %slice.272 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.210), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.273 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.210), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.175 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.272, %slice.273), dimensions={3}
  %slice.274 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.210), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.275 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.210), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.176 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.274, %slice.275), dimensions={3}
  %select_n.1663 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.175, %concatenate.176)
  %convert_element_type.1778 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1663)
  %mul.2775 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1778, %mul.1647)
  %mul.2777 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2775, %mul.1649)
  %add.2346 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2772, %mul.2777)
  %convert_element_type.1780 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2346)
  %sharding_constraint.443 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1780)
  %param.270 = f32[512,8,128]{2,1,0} parameter(205), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1781 = bf16[512,8,128]{2,1,0} convert(%param.270)
  %all-gather.205 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1781), channel_id=206, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.303 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.442, %all-gather.205), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.211 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.303), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1783 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.211)
  %mul.2783 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1783, %mul.1655)
  %slice.276 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.211), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.277 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.211), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.177 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.276, %slice.277), dimensions={3}
  %slice.278 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.211), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.279 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.211), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.178 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.278, %slice.279), dimensions={3}
  %select_n.1673 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.177, %concatenate.178)
  %convert_element_type.1788 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1673)
  %mul.2787 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1788, %mul.1658)
  %mul.2793 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2787, %mul.1660)
  %add.2349 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2783, %mul.2793)
  %convert_element_type.1791 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2349)
  %sharding_constraint.445 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1791)
  %param.271 = f32[512,8,128]{2,1,0} parameter(208), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1793 = bf16[512,8,128]{2,1,0} convert(%param.271)
  %all-gather.206 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1793), channel_id=207, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.304 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.442, %all-gather.206), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.212 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.304), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.446 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.212)
  %te_fused_attn_forward_ffi.116 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.443, %sharding_constraint.445, %sharding_constraint.446, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.29 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.116), index=0
  %reduce_precision.213 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.29), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.447 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.213)
  %param.272 = f32[32,128,512]{2,1,0} parameter(206), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1796 = bf16[32,128,512]{2,1,0} convert(%param.272)
  %all-gather.207 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1796), channel_id=208, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.305 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.447, %all-gather.207), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.214 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.305), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.448 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.214)
  %add.2350 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.440, %sharding_constraint.448)
  %convert_element_type.1797 = f32[2,8192,4096]{2,1,0} convert(%add.2350)
  %square.61 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1797, %convert_element_type.1797)
  %reduce.277 = f32[2,8192]{1,0} reduce(%square.61, %constant.2882), dimensions={2}, to_apply=%region_149.9562
  %div.1050 = f32[2,8192]{1,0} multiply(%reduce.277, %broadcast.5097)
  %add.2351 = f32[2,8192]{1,0} add(%div.1050, %broadcast.5098)
  %rsqrt.123 = f32[2,8192]{1,0} rsqrt(%add.2351)
  %mul.2794 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.123), dimensions={0,1}
  %mul.2795 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1797, %mul.2794)
  %convert_element_type.1798 = bf16[2,8192,4096]{2,1,0} convert(%mul.2795)
  %param.273 = f32[4096]{0} parameter(203), sharding={replicated}
  %convert_element_type.1799 = bf16[4096]{0} convert(%param.273)
  %mul.2801 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1799), dimensions={2}
  %mul.2802 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1798, %mul.2801)
  %sharding_constraint.449 = bf16[2,8192,4096]{2,1,0} copy(%mul.2802)
  %param.274 = f32[512,14336]{1,0} parameter(200), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1800 = bf16[512,14336]{1,0} convert(%param.274)
  %all-gather.208 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1800), channel_id=209, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.306 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.449, %all-gather.208), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.215 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.306), exponent_bits=8, mantissa_bits=7
  %neg.155 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.215)
  %exp.155 = bf16[2,8192,14336]{2,1,0} exponential(%neg.155)
  %add.2352 = bf16[2,8192,14336]{2,1,0} add(%exp.155, %jit_silu_.0)
  %div.1051 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2352)
  %mul.2803 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.215, %div.1051)
  %param.275 = f32[512,14336]{1,0} parameter(201), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1801 = bf16[512,14336]{1,0} convert(%param.275)
  %all-gather.209 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1801), channel_id=210, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.307 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.449, %all-gather.209), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.216 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.307), exponent_bits=8, mantissa_bits=7
  %mul.2804 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2803, %reduce_precision.216)
  %sharding_constraint.450 = bf16[2,8192,14336]{2,1,0} copy(%mul.2804)
  %param.276 = f32[14336,512]{1,0} parameter(202), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1802 = bf16[14336,512]{1,0} convert(%param.276)
  %all-gather.210 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1802), channel_id=211, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.308 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.450, %all-gather.210), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.451 = bf16[2,8192,4096]{2,1,0} copy(%dot.308)
  %add.2353 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.451, %add.2350)
  %sharding_constraint.452 = bf16[2,8192,4096]{2,1,0} copy(%add.2353)
  %sharding_constraint.453 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.452)
  %convert_element_type.1803 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.453)
  %square.62 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1803, %convert_element_type.1803)
  %reduce.278 = f32[2,8192]{1,0} reduce(%square.62, %constant.2882), dimensions={2}, to_apply=%region_150.9598
  %div.1052 = f32[2,8192]{1,0} multiply(%reduce.278, %broadcast.5097)
  %add.2354 = f32[2,8192]{1,0} add(%div.1052, %broadcast.5098)
  %rsqrt.124 = f32[2,8192]{1,0} rsqrt(%add.2354)
  %mul.2805 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.124), dimensions={0,1}
  %mul.2806 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1803, %mul.2805)
  %convert_element_type.1804 = bf16[2,8192,4096]{2,1,0} convert(%mul.2806)
  %param.277 = f32[4096]{0} parameter(222), sharding={replicated}
  %convert_element_type.1805 = bf16[4096]{0} convert(%param.277)
  %mul.2807 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1805), dimensions={2}
  %mul.2808 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1804, %mul.2807)
  %sharding_constraint.454 = bf16[2,8192,4096]{2,1,0} copy(%mul.2808)
  %sharding_constraint.455 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.454)
  %param.278 = f32[512,32,128]{2,1,0} parameter(225), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1806 = bf16[512,32,128]{2,1,0} convert(%param.278)
  %all-gather.211 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1806), channel_id=212, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.309 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.455, %all-gather.211), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.217 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.309), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1807 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.217)
  %mul.2817 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1807, %mul.1643)
  %slice.281 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.217), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.282 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.217), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.181 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.281, %slice.282), dimensions={3}
  %slice.283 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.217), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.284 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.217), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.182 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.283, %slice.284), dimensions={3}
  %select_n.1683 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.181, %concatenate.182)
  %convert_element_type.1813 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1683)
  %mul.2822 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1813, %mul.1647)
  %mul.2824 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2822, %mul.1649)
  %add.2357 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2817, %mul.2824)
  %convert_element_type.1815 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2357)
  %sharding_constraint.456 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1815)
  %param.279 = f32[512,8,128]{2,1,0} parameter(223), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1816 = bf16[512,8,128]{2,1,0} convert(%param.279)
  %all-gather.212 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1816), channel_id=213, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.310 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.455, %all-gather.212), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.218 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.310), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1817 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.218)
  %mul.2831 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1817, %mul.1655)
  %slice.285 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.218), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.286 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.218), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.183 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.285, %slice.286), dimensions={3}
  %slice.287 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.218), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.288 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.218), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.184 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.287, %slice.288), dimensions={3}
  %select_n.1693 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.183, %concatenate.184)
  %convert_element_type.1823 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1693)
  %mul.2835 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1823, %mul.1658)
  %mul.2837 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2835, %mul.1660)
  %add.2364 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2831, %mul.2837)
  %convert_element_type.1825 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2364)
  %sharding_constraint.458 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1825)
  %param.280 = f32[512,8,128]{2,1,0} parameter(226), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1826 = bf16[512,8,128]{2,1,0} convert(%param.280)
  %all-gather.213 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1826), channel_id=214, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.311 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.455, %all-gather.213), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.219 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.311), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.459 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.219)
  %te_fused_attn_forward_ffi.120 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.456, %sharding_constraint.458, %sharding_constraint.459, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.30 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.120), index=0
  %reduce_precision.220 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.30), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.460 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.220)
  %param.281 = f32[32,128,512]{2,1,0} parameter(224), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1830 = bf16[32,128,512]{2,1,0} convert(%param.281)
  %all-gather.214 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1830), channel_id=215, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.312 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.460, %all-gather.214), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.221 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.312), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.461 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.221)
  %add.2365 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.453, %sharding_constraint.461)
  %convert_element_type.1831 = f32[2,8192,4096]{2,1,0} convert(%add.2365)
  %square.63 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1831, %convert_element_type.1831)
  %reduce.282 = f32[2,8192]{1,0} reduce(%square.63, %constant.2882), dimensions={2}, to_apply=%region_154.9790
  %div.1074 = f32[2,8192]{1,0} multiply(%reduce.282, %broadcast.5097)
  %add.2366 = f32[2,8192]{1,0} add(%div.1074, %broadcast.5098)
  %rsqrt.125 = f32[2,8192]{1,0} rsqrt(%add.2366)
  %mul.2838 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.125), dimensions={0,1}
  %mul.2839 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1831, %mul.2838)
  %convert_element_type.1833 = bf16[2,8192,4096]{2,1,0} convert(%mul.2839)
  %param.282 = f32[4096]{0} parameter(221), sharding={replicated}
  %convert_element_type.1834 = bf16[4096]{0} convert(%param.282)
  %mul.2840 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1834), dimensions={2}
  %mul.2841 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1833, %mul.2840)
  %sharding_constraint.462 = bf16[2,8192,4096]{2,1,0} copy(%mul.2841)
  %param.283 = f32[512,14336]{1,0} parameter(218), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1835 = bf16[512,14336]{1,0} convert(%param.283)
  %all-gather.215 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1835), channel_id=216, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.313 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.462, %all-gather.215), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.222 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.313), exponent_bits=8, mantissa_bits=7
  %neg.156 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.222)
  %exp.156 = bf16[2,8192,14336]{2,1,0} exponential(%neg.156)
  %add.2367 = bf16[2,8192,14336]{2,1,0} add(%exp.156, %jit_silu_.0)
  %div.1075 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2367)
  %mul.2842 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.222, %div.1075)
  %param.284 = f32[512,14336]{1,0} parameter(219), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1836 = bf16[512,14336]{1,0} convert(%param.284)
  %all-gather.216 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1836), channel_id=217, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.314 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.462, %all-gather.216), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.223 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.314), exponent_bits=8, mantissa_bits=7
  %mul.2843 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2842, %reduce_precision.223)
  %sharding_constraint.463 = bf16[2,8192,14336]{2,1,0} copy(%mul.2843)
  %param.285 = f32[14336,512]{1,0} parameter(220), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1837 = bf16[14336,512]{1,0} convert(%param.285)
  %all-gather.217 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1837), channel_id=218, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.315 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.463, %all-gather.217), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.464 = bf16[2,8192,4096]{2,1,0} copy(%dot.315)
  %add.2368 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.464, %add.2365)
  %sharding_constraint.465 = bf16[2,8192,4096]{2,1,0} copy(%add.2368)
  %sharding_constraint.466 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.465)
  %convert_element_type.1838 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.466)
  %square.64 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1838, %convert_element_type.1838)
  %reduce.283 = f32[2,8192]{1,0} reduce(%square.64, %constant.2882), dimensions={2}, to_apply=%region_155.9826
  %div.1076 = f32[2,8192]{1,0} multiply(%reduce.283, %broadcast.5097)
  %add.2369 = f32[2,8192]{1,0} add(%div.1076, %broadcast.5098)
  %rsqrt.126 = f32[2,8192]{1,0} rsqrt(%add.2369)
  %mul.2844 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.126), dimensions={0,1}
  %mul.2846 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1838, %mul.2844)
  %convert_element_type.1840 = bf16[2,8192,4096]{2,1,0} convert(%mul.2846)
  %param.286 = f32[4096]{0} parameter(231), sharding={replicated}
  %convert_element_type.1841 = bf16[4096]{0} convert(%param.286)
  %mul.2848 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1841), dimensions={2}
  %mul.2849 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1840, %mul.2848)
  %sharding_constraint.467 = bf16[2,8192,4096]{2,1,0} copy(%mul.2849)
  %sharding_constraint.468 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.467)
  %param.287 = f32[512,32,128]{2,1,0} parameter(234), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1842 = bf16[512,32,128]{2,1,0} convert(%param.287)
  %all-gather.218 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1842), channel_id=219, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.316 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.468, %all-gather.218), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.224 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%dot.316), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1843 = f32[2,8192,32,128]{3,2,1,0} convert(%reduce_precision.224)
  %mul.2857 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1843, %mul.1643)
  %slice.290 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.224), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.291 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.224), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.187 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.290, %slice.291), dimensions={3}
  %slice.292 = bf16[2,8192,32,1]{3,2,1,0} slice(%reduce_precision.224), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.293 = bf16[2,8192,32,127]{3,2,1,0} slice(%reduce_precision.224), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.188 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.292, %slice.293), dimensions={3}
  %select_n.1705 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.187, %concatenate.188)
  %convert_element_type.1848 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1705)
  %mul.2860 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1848, %mul.1647)
  %mul.2862 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2860, %mul.1649)
  %add.2372 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2857, %mul.2862)
  %convert_element_type.1850 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2372)
  %sharding_constraint.469 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1850)
  %param.288 = f32[512,8,128]{2,1,0} parameter(232), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1851 = bf16[512,8,128]{2,1,0} convert(%param.288)
  %all-gather.219 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1851), channel_id=220, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.317 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.468, %all-gather.219), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.225 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.317), exponent_bits=8, mantissa_bits=7
  %convert_element_type.1852 = f32[2,8192,8,128]{3,2,1,0} convert(%reduce_precision.225)
  %mul.2875 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1852, %mul.1655)
  %slice.294 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.225), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.295 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.225), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.189 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.294, %slice.295), dimensions={3}
  %slice.296 = bf16[2,8192,8,1]{3,2,1,0} slice(%reduce_precision.225), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.297 = bf16[2,8192,8,127]{3,2,1,0} slice(%reduce_precision.225), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.190 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.296, %slice.297), dimensions={3}
  %select_n.1715 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.189, %concatenate.190)
  %convert_element_type.1857 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1715)
  %mul.2886 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1857, %mul.1658)
  %mul.2888 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2886, %mul.1660)
  %add.2375 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2875, %mul.2888)
  %convert_element_type.1859 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2375)
  %sharding_constraint.471 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1859)
  %param.289 = f32[512,8,128]{2,1,0} parameter(235), sharding={devices=[8,1,1]<=[8]}
  %convert_element_type.1860 = bf16[512,8,128]{2,1,0} convert(%param.289)
  %all-gather.220 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1860), channel_id=221, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.318 = bf16[2,8192,8,128]{3,2,1,0} dot(%sharding_constraint.468, %all-gather.220), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.226 = bf16[2,8192,8,128]{3,2,1,0} reduce-precision(%dot.318), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.472 = bf16[2,8192,8,128]{3,2,1,0} copy(%reduce_precision.226)
  %te_fused_attn_forward_ffi.124 = (bf16[2,8192,32,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, u8[48]{0}) custom-call(%sharding_constraint.469, %sharding_constraint.471, %sharding_constraint.472, %constant.2973, %dynamic-slice.10, /*index=5*/%concatenate.39, %concatenate.44, %constant.2986, %constant.2986, %constant.2986, /*index=10*/%constant.2986, %constant.2986, %constant.2986), custom_call_target="te_fused_attn_forward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u32[2]{0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.31 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.124), index=0
  %reduce_precision.227 = bf16[2,8192,32,128]{3,2,1,0} reduce-precision(%get-tuple-element.31), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.473 = bf16[2,8192,32,128]{3,2,1,0} copy(%reduce_precision.227)
  %param.290 = f32[32,128,512]{2,1,0} parameter(233), sharding={devices=[1,1,8]<=[8]}
  %convert_element_type.1863 = bf16[32,128,512]{2,1,0} convert(%param.290)
  %all-gather.221 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1863), channel_id=222, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.319 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.473, %all-gather.221), lhs_contracting_dims={2,3}, rhs_contracting_dims={0,1}
  %reduce_precision.228 = bf16[2,8192,4096]{2,1,0} reduce-precision(%dot.319), exponent_bits=8, mantissa_bits=7
  %sharding_constraint.474 = bf16[2,8192,4096]{2,1,0} copy(%reduce_precision.228)
  %add.2376 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.466, %sharding_constraint.474)
  %convert_element_type.1864 = f32[2,8192,4096]{2,1,0} convert(%add.2376)
  %square.65 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1864, %convert_element_type.1864)
  %reduce.287 = f32[2,8192]{1,0} reduce(%square.65, %constant.2882), dimensions={2}, to_apply=%region_159.10018
  %div.1097 = f32[2,8192]{1,0} multiply(%reduce.287, %broadcast.5097)
  %add.2377 = f32[2,8192]{1,0} add(%div.1097, %broadcast.5098)
  %rsqrt.127 = f32[2,8192]{1,0} rsqrt(%add.2377)
  %mul.2889 = f32[2,8192,4096]{2,1,0} broadcast(%rsqrt.127), dimensions={0,1}
  %mul.2890 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1864, %mul.2889)
  %convert_element_type.1865 = bf16[2,8192,4096]{2,1,0} convert(%mul.2890)
  %param.291 = f32[4096]{0} parameter(230), sharding={replicated}
  %convert_element_type.1867 = bf16[4096]{0} convert(%param.291)
  %mul.2891 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1867), dimensions={2}
  %mul.2892 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1865, %mul.2891)
  %sharding_constraint.475 = bf16[2,8192,4096]{2,1,0} copy(%mul.2892)
  %param.292 = f32[512,14336]{1,0} parameter(227), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1868 = bf16[512,14336]{1,0} convert(%param.292)
  %all-gather.222 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1868), channel_id=223, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.320 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.475, %all-gather.222), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.229 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.320), exponent_bits=8, mantissa_bits=7
  %neg.157 = bf16[2,8192,14336]{2,1,0} negate(%reduce_precision.229)
  %exp.157 = bf16[2,8192,14336]{2,1,0} exponential(%neg.157)
  %add.2378 = bf16[2,8192,14336]{2,1,0} add(%exp.157, %jit_silu_.0)
  %div.1098 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2378)
  %mul.2893 = bf16[2,8192,14336]{2,1,0} multiply(%reduce_precision.229, %div.1098)
  %param.293 = f32[512,14336]{1,0} parameter(228), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1869 = bf16[512,14336]{1,0} convert(%param.293)
  %all-gather.223 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1869), channel_id=224, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.321 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.475, %all-gather.223), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %reduce_precision.230 = bf16[2,8192,14336]{2,1,0} reduce-precision(%dot.321), exponent_bits=8, mantissa_bits=7
  %mul.2894 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2893, %reduce_precision.230)
  %sharding_constraint.476 = bf16[2,8192,14336]{2,1,0} copy(%mul.2894)
  %param.294 = f32[14336,512]{1,0} parameter(229), sharding={devices=[1,8]<=[8]}
  %convert_element_type.1870 = bf16[14336,512]{1,0} convert(%param.294)
  %all-gather.224 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1870), channel_id=225, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.322 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.476, %all-gather.224), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.477 = bf16[2,8192,4096]{2,1,0} copy(%dot.322)
  %add.2379 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.477, %add.2376)
  %sharding_constraint.478 = bf16[2,8192,4096]{2,1,0} copy(%add.2379)
  %convert_element_type.1871 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.478)
  %square.66 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1871, %convert_element_type.1871)
  %reduce.288 = f32[2,8192]{1,0} reduce(%square.66, %constant.2882), dimensions={2}, to_apply=%region_160.10053
  %div.1099 = f32[2,8192]{1,0} multiply(%reduce.288, %broadcast.5097)
  %add.2383 = f32[2,8192]{1,0} add(%div.1099, %broadcast.5098)
  %add.2384 = f32[2,8192,1]{2,1,0} reshape(%add.2383)
  %rsqrt.128 = f32[2,8192,1]{2,1,0} rsqrt(%add.2384)
  %mul.2895 = f32[2,8192]{1,0} reshape(%rsqrt.128)
  %mul.2896 = f32[2,8192,4096]{2,1,0} broadcast(%mul.2895), dimensions={0,1}
  %mul.2897 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1871, %mul.2896)
  %convert_element_type.1872 = bf16[2,8192,4096]{2,1,0} convert(%mul.2897)
  %param.295 = s32[2,8192]{1,0} parameter(880), sharding={devices=[8,1]<=[8]}
  %broadcast.5143 = s32[2,8192]{1,0} broadcast(%constant.2873), dimensions={}
  %ne.930 = pred[2,8192]{1,0} compare(%param.295, %broadcast.5143), direction=NE
  %convert_element_type.1873 = s32[2,8192]{1,0} convert(%ne.930)
  %reduce.289 = s32[] reduce(%convert_element_type.1873, %constant.2873), dimensions={0,1}, to_apply=%region_161.10070
  %all-reduce = s32[] all-reduce(%reduce.289), channel_id=226, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_161.10070.clone
  %convert_element_type.1875 = f32[] convert(%all-reduce)
  %constant.5660 = f32[] constant(1e-08)
  %add.2385 = f32[] add(%convert_element_type.1875, %constant.5660)
  %div.1100 = f32[] divide(%constant.2872, %add.2385)
  %broadcast_in_dim.467 = f32[2,8192]{1,0} broadcast(%div.1100), dimensions={}
  %broadcast.5144 = f32[2,8192]{1,0} broadcast(%constant.2882), dimensions={}
  %mul.2898 = f32[2,8192]{1,0} select(%ne.930, %broadcast_in_dim.467, %broadcast.5144)
  %sharding_constraint.479 = f32[2,8192]{1,0} copy(%mul.2898)
  %mul.2899 = f32[2,8192,128256]{2,1,0} broadcast(%sharding_constraint.479), dimensions={0,1}
  %convert_element_type.1876 = bf16[4096]{0} convert(%param.1)
  %mul.2900 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1876), dimensions={2}
  %mul.2901 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1872, %mul.2900)
  %param.296 = f32[512,128256]{1,0} parameter(290), sharding={devices=[8,1]<=[8]}
  %convert_element_type.1877 = bf16[512,128256]{1,0} convert(%param.296)
  %all-gather.225 = bf16[4096,128256]{1,0} all-gather(%convert_element_type.1877), channel_id=227, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.323 = bf16[2,8192,128256]{2,1,0} dot(%mul.2901, %all-gather.225), lhs_contracting_dims={2}, rhs_contracting_dims={0}
  %sharding_constraint.480 = bf16[2,8192,128256]{2,1,0} copy(%dot.323)
  %convert_element_type.1878 = f32[2,8192,128256]{2,1,0} convert(%sharding_constraint.480)
  %constant.5661 = f32[] constant(-inf)
  %reduce.290 = f32[2,8192]{1,0} reduce(%convert_element_type.1878, %constant.5661), dimensions={2}, to_apply=%region_162.10092
  %sub.194 = f32[2,8192,128256]{2,1,0} broadcast(%reduce.290), dimensions={0,1}
  %sub.195 = f32[2,8192,128256]{2,1,0} subtract(%convert_element_type.1878, %sub.194)
  %exp.158 = f32[2,8192,128256]{2,1,0} exponential(%sub.195)
  %reduce.291 = f32[2,8192]{1,0} reduce(%exp.158, %constant.2882), dimensions={2}, to_apply=%region_163.10100
  %log.2 = f32[2,8192]{1,0} log(%reduce.291)
  %add.2386 = f32[2,8192]{1,0} add(%log.2, %reduce.290)
  %mul.2902 = f32[2,8192]{1,0} multiply(%add.2386, %broadcast.5144)
  %add.2387 = f32[2,8192]{1,0} broadcast(%constant.2872), dimensions={}
  %add.2388 = f32[2,8192]{1,0} add(%mul.2902, %add.2387)
  %mul.2903 = f32[2,8192,128256]{2,1,0} broadcast(%add.2388), dimensions={0,1}
  %mul.2904 = f32[2,8192,128256]{2,1,0} multiply(%mul.2903, %exp.158)
  %div.1101 = f32[2,8192,128256]{2,1,0} broadcast(%reduce.291), dimensions={0,1}
  %div.1102 = f32[2,8192,128256]{2,1,0} divide(%mul.2904, %div.1101)
  %param.297 = s32[2,8192]{1,0} parameter(879), sharding={devices=[8,1]<=[8]}
  %eq.493 = s32[2,8192,128256]{2,1,0} broadcast(%param.297), dimensions={0,1}
  %iota.340 = s32[2,8192,128256]{2,1,0} iota(), iota_dimension=2
  %eq.494 = pred[2,8192,128256]{2,1,0} compare(%eq.493, %iota.340), direction=EQ
  %convert_element_type.1879 = f32[2,8192,128256]{2,1,0} convert(%eq.494)
  %sub.196 = f32[2,8192,128256]{2,1,0} subtract(%div.1102, %convert_element_type.1879)
  %mul.2906 = f32[2,8192,128256]{2,1,0} multiply(%mul.2899, %sub.196)
  %convert_element_type.1880 = bf16[2,8192,128256]{2,1,0} convert(%mul.2906)
  %sharding_constraint.481 = bf16[2,8192,128256]{2,1,0} copy(%convert_element_type.1880)
  %dot.324 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.481, %all-gather.225), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %mul.2907 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.1872, %dot.324)
  %constant.5662 = bf16[] constant(0)
  %reduce.292 = bf16[4096]{0} reduce(%mul.2907, %constant.5662), dimensions={0,1}, to_apply=%region_164.10125
  %all-reduce.1 = bf16[4096]{0} all-reduce(%reduce.292), channel_id=228, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_164.10125.clone
  %convert_element_type.1881 = f32[4096]{0} convert(%all-reduce.1)
  %mul.2908 = f32[4096]{0} multiply(%convert_element_type.1881, %convert_element_type.1881)
  %reduce.293 = f32[] reduce(%mul.2908, %constant.2882), dimensions={0}, to_apply=%region_165.10132
  %get-tuple-element.32 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.45), index=1
  %get-tuple-element.33 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.45), index=2
  %sharding_constraint.482 = u32[2,4]{1,0} copy(%get-tuple-element.33)
  %get-tuple-element.34 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.0), index=1
  %get-tuple-element.35 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.0), index=2
  %sharding_constraint.483 = u32[2,4]{1,0} copy(%get-tuple-element.35)
  %get-tuple-element.36 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.4), index=1
  %get-tuple-element.37 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.4), index=2
  %sharding_constraint.484 = u32[2,4]{1,0} copy(%get-tuple-element.37)
  %get-tuple-element.38 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.8), index=1
  %get-tuple-element.39 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.8), index=2
  %sharding_constraint.485 = u32[2,4]{1,0} copy(%get-tuple-element.39)
  %get-tuple-element.40 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.12), index=1
  %get-tuple-element.41 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.12), index=2
  %sharding_constraint.486 = u32[2,4]{1,0} copy(%get-tuple-element.41)
  %get-tuple-element.42 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.16), index=1
  %get-tuple-element.43 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.16), index=2
  %sharding_constraint.487 = u32[2,4]{1,0} copy(%get-tuple-element.43)
  %get-tuple-element.44 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.20), index=1
  %get-tuple-element.45 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.20), index=2
  %sharding_constraint.488 = u32[2,4]{1,0} copy(%get-tuple-element.45)
  %get-tuple-element.46 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.24), index=1
  %get-tuple-element.47 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.24), index=2
  %sharding_constraint.489 = u32[2,4]{1,0} copy(%get-tuple-element.47)
  %get-tuple-element.48 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.28), index=1
  %get-tuple-element.49 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.28), index=2
  %sharding_constraint.490 = u32[2,4]{1,0} copy(%get-tuple-element.49)
  %get-tuple-element.50 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.32), index=1
  %get-tuple-element.51 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.32), index=2
  %sharding_constraint.491 = u32[2,4]{1,0} copy(%get-tuple-element.51)
  %get-tuple-element.52 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.36), index=1
  %get-tuple-element.53 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.36), index=2
  %sharding_constraint.492 = u32[2,4]{1,0} copy(%get-tuple-element.53)
  %get-tuple-element.54 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.40), index=1
  %get-tuple-element.55 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.40), index=2
  %sharding_constraint.493 = u32[2,4]{1,0} copy(%get-tuple-element.55)
  %get-tuple-element.56 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.44), index=1
  %get-tuple-element.57 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.44), index=2
  %sharding_constraint.494 = u32[2,4]{1,0} copy(%get-tuple-element.57)
  %get-tuple-element.58 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.52), index=1
  %get-tuple-element.59 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.52), index=2
  %sharding_constraint.495 = u32[2,4]{1,0} copy(%get-tuple-element.59)
  %get-tuple-element.60 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.56), index=1
  %get-tuple-element.61 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.56), index=2
  %sharding_constraint.496 = u32[2,4]{1,0} copy(%get-tuple-element.61)
  %get-tuple-element.62 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.60), index=1
  %get-tuple-element.63 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.60), index=2
  %sharding_constraint.497 = u32[2,4]{1,0} copy(%get-tuple-element.63)
  %get-tuple-element.64 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.64), index=1
  %get-tuple-element.65 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.64), index=2
  %sharding_constraint.498 = u32[2,4]{1,0} copy(%get-tuple-element.65)
  %get-tuple-element.66 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.68), index=1
  %get-tuple-element.67 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.68), index=2
  %sharding_constraint.499 = u32[2,4]{1,0} copy(%get-tuple-element.67)
  %get-tuple-element.68 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.72), index=1
  %get-tuple-element.69 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.72), index=2
  %sharding_constraint.500 = u32[2,4]{1,0} copy(%get-tuple-element.69)
  %get-tuple-element.70 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.76), index=1
  %get-tuple-element.71 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.76), index=2
  %sharding_constraint.501 = u32[2,4]{1,0} copy(%get-tuple-element.71)
  %get-tuple-element.72 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.80), index=1
  %get-tuple-element.73 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.80), index=2
  %sharding_constraint.502 = u32[2,4]{1,0} copy(%get-tuple-element.73)
  %get-tuple-element.74 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.84), index=1
  %get-tuple-element.75 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.84), index=2
  %sharding_constraint.503 = u32[2,4]{1,0} copy(%get-tuple-element.75)
  %get-tuple-element.76 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.88), index=1
  %get-tuple-element.77 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.88), index=2
  %sharding_constraint.504 = u32[2,4]{1,0} copy(%get-tuple-element.77)
  %get-tuple-element.78 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.92), index=1
  %get-tuple-element.79 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.92), index=2
  %sharding_constraint.505 = u32[2,4]{1,0} copy(%get-tuple-element.79)
  %get-tuple-element.80 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.96), index=1
  %get-tuple-element.81 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.96), index=2
  %sharding_constraint.506 = u32[2,4]{1,0} copy(%get-tuple-element.81)
  %get-tuple-element.82 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.100), index=1
  %get-tuple-element.83 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.100), index=2
  %sharding_constraint.507 = u32[2,4]{1,0} copy(%get-tuple-element.83)
  %get-tuple-element.84 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.104), index=1
  %get-tuple-element.85 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.104), index=2
  %sharding_constraint.508 = u32[2,4]{1,0} copy(%get-tuple-element.85)
  %get-tuple-element.86 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.108), index=1
  %get-tuple-element.87 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.108), index=2
  %sharding_constraint.509 = u32[2,4]{1,0} copy(%get-tuple-element.87)
  %get-tuple-element.88 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.112), index=1
  %get-tuple-element.89 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.112), index=2
  %sharding_constraint.510 = u32[2,4]{1,0} copy(%get-tuple-element.89)
  %get-tuple-element.90 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.116), index=1
  %get-tuple-element.91 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.116), index=2
  %sharding_constraint.511 = u32[2,4]{1,0} copy(%get-tuple-element.91)
  %get-tuple-element.92 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.120), index=1
  %get-tuple-element.93 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.120), index=2
  %sharding_constraint.512 = u32[2,4]{1,0} copy(%get-tuple-element.93)
  %get-tuple-element.94 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%te_fused_attn_forward_ffi.124), index=1
  %get-tuple-element.95 = u32[2,4]{1,0} get-tuple-element(%te_fused_attn_forward_ffi.124), index=2
  %sharding_constraint.513 = u32[2,4]{1,0} copy(%get-tuple-element.95)
  %mul.2910 = bf16[2,8192,4096]{2,1,0} multiply(%dot.324, %mul.2900)
  %convert_element_type.1882 = f32[2,8192,4096]{2,1,0} convert(%mul.2910)
  %mul.2913 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1882, %mul.2896)
  %mul.2914 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1871, %convert_element_type.1882)
  %reduce.294 = f32[2,8192]{1,0} reduce(%mul.2914, %constant.2882), dimensions={2}, to_apply=%region_166.10176
  %reshape.8206 = f32[2,8192,1]{2,1,0} reshape(%reduce.294)
  %div.1103 = f32[2,8192,1]{2,1,0} divide(%rsqrt.128, %add.2384)
  %constant.5663 = f32[] constant(-0.5)
  %broadcast.5145 = f32[2,8192,1]{2,1,0} broadcast(%constant.5663), dimensions={}
  %mul.2915 = f32[2,8192,1]{2,1,0} multiply(%div.1103, %broadcast.5145)
  %mul.2916 = f32[2,8192,1]{2,1,0} multiply(%reshape.8206, %mul.2915)
  %constant.5664 = f32[] constant(0.00048828125)
  %mul.2917 = f32[2,8192,1]{2,1,0} broadcast(%constant.5664), dimensions={}
  %mul.2918 = f32[2,8192,1]{2,1,0} multiply(%mul.2916, %mul.2917)
  %mul.2919 = f32[2,8192]{1,0} reshape(%mul.2918)
  %mul.2920 = f32[2,8192,4096]{2,1,0} broadcast(%mul.2919), dimensions={0,1}
  %mul.2922 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1871, %mul.2920)
  %add_any.83 = f32[2,8192,4096]{2,1,0} add(%mul.2913, %mul.2922)
  %convert_element_type.1883 = bf16[2,8192,4096]{2,1,0} convert(%add_any.83)
  %tuple.95 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.224, %reduce_precision.225, %reduce_precision.226, %get-tuple-element.94, %sharding_constraint.513, /*index=5*/%reduce_precision.227, %reduce_precision.228, %reduce_precision.229, %reduce_precision.230, %constant.2935, /*index=10*/%constant.2935, %param.292, %param.293, %param.294, %param.291, /*index=15*/%param.286, %param.288, %param.290, %param.287, %param.289, /*index=20*/%sharding_constraint.465, %param.10, %param.7, %convert_element_type.1883)
  %remat2.52 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.95)
  %get-tuple-element.96 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.52), index=23
  %sharding_constraint.514 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.96)
  %get-tuple-element.97 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.52), index=7
  %neg.158 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.97)
  %exp.159 = bf16[2,8192,14336]{2,1,0} exponential(%neg.158)
  %add.2389 = bf16[2,8192,14336]{2,1,0} add(%exp.159, %jit_silu_.0)
  %div.1104 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2389)
  %mul.2924 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.97, %div.1104)
  %sharding_constraint.515 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.514)
  %get-tuple-element.98 = f32[14336,512]{1,0} get-tuple-element(%remat2.52), index=13
  %convert_element_type.1884 = bf16[14336,512]{1,0} convert(%get-tuple-element.98)
  %all-gather.226 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1884), channel_id=229, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.325 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.515, %all-gather.226), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.516 = bf16[2,8192,14336]{2,1,0} copy(%dot.325)
  %mul.2925 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2924, %sharding_constraint.516)
  %get-tuple-element.99 = f32[512,14336]{1,0} get-tuple-element(%remat2.52), index=12
  %convert_element_type.1885 = bf16[512,14336]{1,0} convert(%get-tuple-element.99)
  %all-gather.227 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1885), channel_id=230, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.326 = bf16[2,8192,4096]{2,1,0} dot(%mul.2925, %all-gather.227), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.100 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.52), index=8
  %mul.2926 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.516, %get-tuple-element.100)
  %mul.2927 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2926, %div.1104)
  %mul.2928 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.97, %mul.2926)
  %sub.197 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1104)
  %mul.2929 = bf16[2,8192,14336]{2,1,0} multiply(%div.1104, %sub.197)
  %mul.2930 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2928, %mul.2929)
  %add_any.84 = bf16[2,8192,14336]{2,1,0} add(%mul.2927, %mul.2930)
  %get-tuple-element.101 = f32[512,14336]{1,0} get-tuple-element(%remat2.52), index=11
  %convert_element_type.1886 = bf16[512,14336]{1,0} convert(%get-tuple-element.101)
  %all-gather.228 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1886), channel_id=231, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.327 = bf16[2,8192,4096]{2,1,0} dot(%add_any.84, %all-gather.228), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.85 = bf16[2,8192,4096]{2,1,0} add(%dot.326, %dot.327)
  %sharding_constraint.517 = bf16[2,8192,4096]{2,1,0} copy(%add_any.85)
  %get-tuple-element.102 = f32[4096]{0} get-tuple-element(%remat2.52), index=14
  %convert_element_type.1887 = bf16[4096]{0} convert(%get-tuple-element.102)
  %mul.2931 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1887), dimensions={2}
  %mul.2932 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.517, %mul.2931)
  %convert_element_type.1888 = f32[2,8192,4096]{2,1,0} convert(%mul.2932)
  %get-tuple-element.103 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.52), index=20
  %sharding_constraint.518 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.103)
  %get-tuple-element.104 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.52), index=6
  %sharding_constraint.519 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.104)
  %add.2390 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.518, %sharding_constraint.519)
  %convert_element_type.1889 = f32[2,8192,4096]{2,1,0} convert(%add.2390)
  %square.67 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1889, %convert_element_type.1889)
  %reduce.295 = f32[2,8192]{1,0} reduce(%square.67, %constant.2882), dimensions={2}, to_apply=%region_167.10256
  %div.1105 = f32[2,8192]{1,0} multiply(%reduce.295, %broadcast.5097)
  %add.2391 = f32[2,8192]{1,0} add(%div.1105, %broadcast.5098)
  %add.2392 = f32[2,8192,1]{2,1,0} reshape(%add.2391)
  %rsqrt.129 = f32[2,8192,1]{2,1,0} rsqrt(%add.2392)
  %mul.2933 = f32[2,8192]{1,0} reshape(%rsqrt.129)
  %mul.2934 = f32[2,8192,4096]{2,1,0} broadcast(%mul.2933), dimensions={0,1}
  %mul.2935 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1888, %mul.2934)
  %mul.2936 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1889, %convert_element_type.1888)
  %reduce.296 = f32[2,8192]{1,0} reduce(%mul.2936, %constant.2882), dimensions={2}, to_apply=%region_168.10269
  %reshape.8207 = f32[2,8192,1]{2,1,0} reshape(%reduce.296)
  %div.1106 = f32[2,8192,1]{2,1,0} divide(%rsqrt.129, %add.2392)
  %mul.2937 = f32[2,8192,1]{2,1,0} multiply(%div.1106, %broadcast.5145)
  %mul.2938 = f32[2,8192,1]{2,1,0} multiply(%reshape.8207, %mul.2937)
  %mul.2939 = f32[2,8192,1]{2,1,0} multiply(%mul.2938, %mul.2917)
  %mul.2940 = f32[2,8192]{1,0} reshape(%mul.2939)
  %mul.2941 = f32[2,8192,4096]{2,1,0} broadcast(%mul.2940), dimensions={0,1}
  %mul.2942 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1889, %mul.2941)
  %add_any.86 = f32[2,8192,4096]{2,1,0} add(%mul.2935, %mul.2942)
  %convert_element_type.1890 = bf16[2,8192,4096]{2,1,0} convert(%add_any.86)
  %add_any.87 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.514, %convert_element_type.1890)
  %get-tuple-element.105 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.52), index=0
  %convert_element_type.1891 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.105)
  %get-tuple-element.106 = s32[2,8192]{1,0} get-tuple-element(%remat2.52), index=22
  %convert_element_type.1893 = f32[2,8192]{1,0} convert(%get-tuple-element.106)
  %div.1107 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.1893), dimensions={0,1}
  %div.1116 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1107, %div.371)
  %cos.68 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1116)
  %mul.2946 = f32[2,8192,128]{2,1,0} reshape(%cos.68)
  %mul.2951 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.2946), dimensions={0,1,3}
  %mul.2956 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1891, %mul.2951)
  %slice.299 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.105), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.300 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.105), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.193 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.299, %slice.300), dimensions={3}
  %slice.301 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.105), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.302 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.105), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.194 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.301, %slice.302), dimensions={3}
  %select_n.1725 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.193, %concatenate.194)
  %convert_element_type.1898 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1725)
  %sin.64 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1116)
  %mul.2962 = f32[2,8192,128]{2,1,0} reshape(%sin.64)
  %mul.2963 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.2962), dimensions={0,1,3}
  %mul.2964 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1898, %mul.2963)
  %get-tuple-element.107 = s32[2]{0} get-tuple-element(%remat2.52), index=9
  %broadcast_in_dim.469 = s32[64,2]{1,0} broadcast(%get-tuple-element.107), dimensions={1}
  %reshape.8215 = s32[128]{0} reshape(%broadcast_in_dim.469)
  %convert_element_type.1899 = f32[128]{0} convert(%reshape.8215)
  %mul.2965 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.1899), dimensions={3}
  %mul.2966 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2964, %mul.2965)
  %add.2395 = f32[2,8192,32,128]{3,2,1,0} add(%mul.2956, %mul.2966)
  %convert_element_type.1900 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2395)
  %sharding_constraint.520 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1900)
  %get-tuple-element.108 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.52), index=1
  %convert_element_type.1901 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.108)
  %mul.2972 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.2946), dimensions={0,1,3}
  %mul.2974 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1901, %mul.2972)
  %slice.303 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.108), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.304 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.108), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.195 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.303, %slice.304), dimensions={3}
  %slice.305 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.108), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.306 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.108), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.196 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.305, %slice.306), dimensions={3}
  %select_n.1739 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.195, %concatenate.196)
  %convert_element_type.1906 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1739)
  %mul.2976 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.2962), dimensions={0,1,3}
  %mul.2977 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1906, %mul.2976)
  %get-tuple-element.109 = s32[2]{0} get-tuple-element(%remat2.52), index=10
  %broadcast_in_dim.471 = s32[64,2]{1,0} broadcast(%get-tuple-element.109), dimensions={1}
  %reshape.8222 = s32[128]{0} reshape(%broadcast_in_dim.471)
  %convert_element_type.1907 = f32[128]{0} convert(%reshape.8222)
  %mul.2978 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.1907), dimensions={3}
  %mul.2979 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2977, %mul.2978)
  %add.2398 = f32[2,8192,8,128]{3,2,1,0} add(%mul.2974, %mul.2979)
  %convert_element_type.1908 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2398)
  %sharding_constraint.521 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1908)
  %get-tuple-element.110 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.52), index=2
  %sharding_constraint.522 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.110)
  %get-tuple-element.111 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.52), index=3
  %get-tuple-element.112 = u32[2,4]{1,0} get-tuple-element(%remat2.52), index=4
  %get-tuple-element.113 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.52), index=5
  %sharding_constraint.523 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.113)
  %sharding_constraint.524 = bf16[2,8192,4096]{2,1,0} copy(%add_any.87)
  %get-tuple-element.114 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.52), index=17
  %convert_element_type.1909 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.114)
  %all-gather.229 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1909), channel_id=232, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.328 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.524, %all-gather.229), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.525 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.328)
  %get-tuple-element.115 = s32[2,8192]{1,0} get-tuple-element(%remat2.52), index=21
  %eq.495 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.115), dimensions={0,1}
  %eq.496 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.115), dimensions={0,2}
  %eq.497 = pred[2,8192,8192]{2,1,0} compare(%eq.495, %eq.496), direction=EQ
  %and.584 = pred[2,8192,8192]{2,1,0} and(%eq.497, %and.455)
  %select_n.1740 = f32[2,8192,8192]{2,1,0} select(%and.584, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.935 = pred[2,8192,8192]{2,1,0} compare(%select_n.1740, %broadcast_in_dim.277), direction=NE
  %not.97 = pred[2,8192,8192]{2,1,0} not(%ne.935)
  %convert_element_type.1910 = s32[2,8192,8192]{2,1,0} convert(%not.97)
  %reduce.297 = s32[2,8192]{1,0} reduce(%convert_element_type.1910, %constant.2873), dimensions={1}, to_apply=%region_169.10421
  %reduce_sum.4057 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.297)
  %slice.307 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4057), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.32 = s32[2,1]{1,0} reshape(%slice.307)
  %reshape.8224 = s32[2]{0} reshape(%squeeze.32)
  %lt.709 = pred[2]{0} compare(%reshape.8224, %broadcast.5111), direction=LT
  %select_n.1741 = s32[2]{0} select(%lt.709, %broadcast.5111, %reshape.8224)
  %reduce_window_sum.256 = s32[2]{0} reduce-window(%select_n.1741, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule
  %concatenate.197 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.256), dimensions={0}
  %reduce.298 = s32[2,8192]{1,0} reduce(%convert_element_type.1910, %constant.2873), dimensions={2}, to_apply=%region_170.10430
  %reduce_sum.4060 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.298)
  %reduce.299 = s32[2,1]{1,0} reduce(%reduce_sum.4060, %constant.2985), dimensions={3,2}, to_apply=%region_171.10436
  %reshape.8225 = s32[2]{0} reshape(%reduce.299)
  %lt.710 = pred[2]{0} compare(%reshape.8225, %broadcast.5111), direction=LT
  %select_n.1742 = s32[2]{0} select(%lt.710, %broadcast.5111, %reshape.8225)
  %reduce_window_sum.257 = s32[2]{0} reduce-window(%select_n.1742, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.clone
  %concatenate.198 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.257), dimensions={0}
  %te_fused_attn_backward_ffi.48 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.520, %sharding_constraint.521, %sharding_constraint.522, %constant.2973, %get-tuple-element.111, /*index=5*/%get-tuple-element.112, %sharding_constraint.523, %sharding_constraint.525, %concatenate.197, %concatenate.198, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.116 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.48), index=2
  %sharding_constraint.526 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.116)
  %get-tuple-element.117 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.52), index=19
  %convert_element_type.1914 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.117)
  %all-gather.230 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1914), channel_id=233, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.329 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.526, %all-gather.230), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.118 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.48), index=1
  %sharding_constraint.527 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.118)
  %convert_element_type.1915 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.527)
  %mul.2982 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1915, %mul.2972)
  %convert_element_type.1916 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.2982)
  %eq.498 = pred[128]{0} compare(%select_n.1059, %rem.509), direction=EQ
  %reshape.8226 = pred[2,8192,8,128]{3,2,1,0} broadcast(%eq.498), dimensions={3}
  %mul.2984 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1915, %mul.2978)
  %mul.2987 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.2984, %mul.2976)
  %convert_element_type.1917 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.2987)
  %broadcast.5147 = bf16[2,8192,8,128]{3,2,1,0} broadcast(%constant.5662), dimensions={}
  %select_n.1744 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.1917, %broadcast.5147)
  %slice.308 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1744), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.2 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.308, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.88 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.1916, %pad.2)
  %slice.309 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1744), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.3 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.309, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.89 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.88, %pad.3)
  %eq.499 = pred[128]{0} compare(%select_n.1059, %jit_remainder_.0), direction=EQ
  %reshape.8231 = pred[2,8192,8,128]{3,2,1,0} broadcast(%eq.499), dimensions={3}
  %select_n.1746 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.1917, %broadcast.5147)
  %slice.310 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1746), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.4 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.310, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.90 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.89, %pad.4)
  %slice.311 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1746), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.5 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.311, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.91 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.90, %pad.5)
  %get-tuple-element.119 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.52), index=16
  %convert_element_type.1918 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.119)
  %all-gather.231 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1918), channel_id=234, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.330 = bf16[2,8192,4096]{2,1,0} dot(%add_any.91, %all-gather.231), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.92 = bf16[2,8192,4096]{2,1,0} add(%dot.329, %dot.330)
  %sharding_constraint.528 = bf16[2,8192,4096]{2,1,0} copy(%add_any.92)
  %get-tuple-element.120 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.48), index=0
  %sharding_constraint.529 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.120)
  %convert_element_type.1919 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.529)
  %mul.2990 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1919, %mul.2951)
  %convert_element_type.1921 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.2990)
  %reshape.8237 = pred[2,8192,32,128]{3,2,1,0} broadcast(%eq.498), dimensions={3}
  %mul.2994 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1919, %mul.2965)
  %mul.2999 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.2994, %mul.2963)
  %convert_element_type.1922 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.2999)
  %broadcast.5148 = bf16[2,8192,32,128]{3,2,1,0} broadcast(%constant.5662), dimensions={}
  %select_n.1748 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.1922, %broadcast.5148)
  %slice.312 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1748), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.6 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.312, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.93 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.1921, %pad.6)
  %slice.313 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1748), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.7 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.313, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.94 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.93, %pad.7)
  %reshape.8243 = pred[2,8192,32,128]{3,2,1,0} broadcast(%eq.499), dimensions={3}
  %select_n.1750 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.1922, %broadcast.5148)
  %slice.314 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1750), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.8 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.314, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.95 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.94, %pad.8)
  %slice.315 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1750), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.9 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.315, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.96 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.95, %pad.9)
  %get-tuple-element.121 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.52), index=18
  %convert_element_type.1923 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.121)
  %all-gather.232 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1923), channel_id=235, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.331 = bf16[2,8192,4096]{2,1,0} dot(%add_any.96, %all-gather.232), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.530 = bf16[2,8192,4096]{2,1,0} copy(%dot.331)
  %add_any.97 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.528, %sharding_constraint.530)
  %sharding_constraint.531 = bf16[2,8192,4096]{2,1,0} copy(%add_any.97)
  %get-tuple-element.122 = f32[4096]{0} get-tuple-element(%remat2.52), index=15
  %convert_element_type.1925 = bf16[4096]{0} convert(%get-tuple-element.122)
  %mul.3000 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1925), dimensions={2}
  %mul.3001 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.531, %mul.3000)
  %convert_element_type.1926 = f32[2,8192,4096]{2,1,0} convert(%mul.3001)
  %convert_element_type.1927 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.518)
  %square.68 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1927, %convert_element_type.1927)
  %reduce.300 = f32[2,8192]{1,0} reduce(%square.68, %constant.2882), dimensions={2}, to_apply=%region_172.10526
  %div.1127 = f32[2,8192]{1,0} multiply(%reduce.300, %broadcast.5097)
  %add.2407 = f32[2,8192]{1,0} add(%div.1127, %broadcast.5098)
  %add.2408 = f32[2,8192,1]{2,1,0} reshape(%add.2407)
  %rsqrt.130 = f32[2,8192,1]{2,1,0} rsqrt(%add.2408)
  %mul.3002 = f32[2,8192]{1,0} reshape(%rsqrt.130)
  %mul.3003 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3002), dimensions={0,1}
  %mul.3004 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1926, %mul.3003)
  %mul.3005 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1927, %convert_element_type.1926)
  %reduce.301 = f32[2,8192]{1,0} reduce(%mul.3005, %constant.2882), dimensions={2}, to_apply=%region_173.10539
  %reshape.8249 = f32[2,8192,1]{2,1,0} reshape(%reduce.301)
  %div.1128 = f32[2,8192,1]{2,1,0} divide(%rsqrt.130, %add.2408)
  %mul.3007 = f32[2,8192,1]{2,1,0} multiply(%div.1128, %broadcast.5145)
  %mul.3008 = f32[2,8192,1]{2,1,0} multiply(%reshape.8249, %mul.3007)
  %mul.3009 = f32[2,8192,1]{2,1,0} multiply(%mul.3008, %mul.2917)
  %mul.3010 = f32[2,8192]{1,0} reshape(%mul.3009)
  %mul.3011 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3010), dimensions={0,1}
  %mul.3012 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1927, %mul.3011)
  %add_any.98 = f32[2,8192,4096]{2,1,0} add(%mul.3004, %mul.3012)
  %convert_element_type.1928 = bf16[2,8192,4096]{2,1,0} convert(%add_any.98)
  %add_any.99 = bf16[2,8192,4096]{2,1,0} add(%add_any.87, %convert_element_type.1928)
  %sharding_constraint.532 = bf16[2,8192,4096]{2,1,0} copy(%add_any.99)
  %tuple.97 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.217, %reduce_precision.218, %reduce_precision.219, %get-tuple-element.92, %sharding_constraint.512, /*index=5*/%reduce_precision.220, %reduce_precision.221, %reduce_precision.222, %reduce_precision.223, %constant.2935, /*index=10*/%constant.2935, %param.283, %param.284, %param.285, %param.282, /*index=15*/%param.277, %param.279, %param.281, %param.278, %param.280, /*index=20*/%sharding_constraint.452, %param.10, %param.7, %sharding_constraint.532)
  %remat2.53 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.97)
  %get-tuple-element.123 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.53), index=23
  %sharding_constraint.533 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.123)
  %get-tuple-element.124 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.53), index=7
  %neg.159 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.124)
  %exp.160 = bf16[2,8192,14336]{2,1,0} exponential(%neg.159)
  %add.2409 = bf16[2,8192,14336]{2,1,0} add(%exp.160, %jit_silu_.0)
  %div.1130 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2409)
  %mul.3013 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.124, %div.1130)
  %sharding_constraint.534 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.533)
  %get-tuple-element.125 = f32[14336,512]{1,0} get-tuple-element(%remat2.53), index=13
  %convert_element_type.1930 = bf16[14336,512]{1,0} convert(%get-tuple-element.125)
  %all-gather.233 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1930), channel_id=236, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.332 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.534, %all-gather.233), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.535 = bf16[2,8192,14336]{2,1,0} copy(%dot.332)
  %mul.3014 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3013, %sharding_constraint.535)
  %get-tuple-element.126 = f32[512,14336]{1,0} get-tuple-element(%remat2.53), index=12
  %convert_element_type.1931 = bf16[512,14336]{1,0} convert(%get-tuple-element.126)
  %all-gather.234 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1931), channel_id=237, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.333 = bf16[2,8192,4096]{2,1,0} dot(%mul.3014, %all-gather.234), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.127 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.53), index=8
  %mul.3015 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.535, %get-tuple-element.127)
  %mul.3016 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3015, %div.1130)
  %mul.3017 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.124, %mul.3015)
  %sub.202 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1130)
  %mul.3018 = bf16[2,8192,14336]{2,1,0} multiply(%div.1130, %sub.202)
  %mul.3019 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3017, %mul.3018)
  %add_any.100 = bf16[2,8192,14336]{2,1,0} add(%mul.3016, %mul.3019)
  %get-tuple-element.128 = f32[512,14336]{1,0} get-tuple-element(%remat2.53), index=11
  %convert_element_type.1932 = bf16[512,14336]{1,0} convert(%get-tuple-element.128)
  %all-gather.235 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1932), channel_id=238, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.334 = bf16[2,8192,4096]{2,1,0} dot(%add_any.100, %all-gather.235), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.101 = bf16[2,8192,4096]{2,1,0} add(%dot.333, %dot.334)
  %sharding_constraint.536 = bf16[2,8192,4096]{2,1,0} copy(%add_any.101)
  %get-tuple-element.129 = f32[4096]{0} get-tuple-element(%remat2.53), index=14
  %convert_element_type.1933 = bf16[4096]{0} convert(%get-tuple-element.129)
  %mul.3020 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1933), dimensions={2}
  %mul.3021 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.536, %mul.3020)
  %convert_element_type.1934 = f32[2,8192,4096]{2,1,0} convert(%mul.3021)
  %get-tuple-element.130 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.53), index=20
  %sharding_constraint.537 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.130)
  %get-tuple-element.131 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.53), index=6
  %sharding_constraint.538 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.131)
  %add.2410 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.537, %sharding_constraint.538)
  %convert_element_type.1936 = f32[2,8192,4096]{2,1,0} convert(%add.2410)
  %square.69 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1936, %convert_element_type.1936)
  %reduce.302 = f32[2,8192]{1,0} reduce(%square.69, %constant.2882), dimensions={2}, to_apply=%region_174.10617
  %div.1131 = f32[2,8192]{1,0} multiply(%reduce.302, %broadcast.5097)
  %add.2411 = f32[2,8192]{1,0} add(%div.1131, %broadcast.5098)
  %add.2412 = f32[2,8192,1]{2,1,0} reshape(%add.2411)
  %rsqrt.131 = f32[2,8192,1]{2,1,0} rsqrt(%add.2412)
  %mul.3022 = f32[2,8192]{1,0} reshape(%rsqrt.131)
  %mul.3023 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3022), dimensions={0,1}
  %mul.3024 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1934, %mul.3023)
  %mul.3025 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1936, %convert_element_type.1934)
  %reduce.303 = f32[2,8192]{1,0} reduce(%mul.3025, %constant.2882), dimensions={2}, to_apply=%region_175.10630
  %reshape.8250 = f32[2,8192,1]{2,1,0} reshape(%reduce.303)
  %div.1132 = f32[2,8192,1]{2,1,0} divide(%rsqrt.131, %add.2412)
  %mul.3027 = f32[2,8192,1]{2,1,0} multiply(%div.1132, %broadcast.5145)
  %mul.3029 = f32[2,8192,1]{2,1,0} multiply(%reshape.8250, %mul.3027)
  %mul.3030 = f32[2,8192,1]{2,1,0} multiply(%mul.3029, %mul.2917)
  %mul.3031 = f32[2,8192]{1,0} reshape(%mul.3030)
  %mul.3036 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3031), dimensions={0,1}
  %mul.3043 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1936, %mul.3036)
  %add_any.102 = f32[2,8192,4096]{2,1,0} add(%mul.3024, %mul.3043)
  %convert_element_type.1937 = bf16[2,8192,4096]{2,1,0} convert(%add_any.102)
  %add_any.103 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.533, %convert_element_type.1937)
  %get-tuple-element.132 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.53), index=0
  %convert_element_type.1938 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.132)
  %get-tuple-element.133 = s32[2,8192]{1,0} get-tuple-element(%remat2.53), index=22
  %convert_element_type.1939 = f32[2,8192]{1,0} convert(%get-tuple-element.133)
  %div.1135 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.1939), dimensions={0,1}
  %div.1148 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1135, %div.371)
  %cos.70 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1148)
  %mul.3047 = f32[2,8192,128]{2,1,0} reshape(%cos.70)
  %mul.3048 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3047), dimensions={0,1,3}
  %mul.3049 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1938, %mul.3048)
  %slice.316 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.132), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.317 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.132), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.199 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.316, %slice.317), dimensions={3}
  %slice.318 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.132), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.319 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.132), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.200 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.318, %slice.319), dimensions={3}
  %select_n.1760 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.199, %concatenate.200)
  %convert_element_type.1943 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1760)
  %sin.66 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1148)
  %mul.3050 = f32[2,8192,128]{2,1,0} reshape(%sin.66)
  %mul.3054 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3050), dimensions={0,1,3}
  %mul.3055 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1943, %mul.3054)
  %get-tuple-element.134 = s32[2]{0} get-tuple-element(%remat2.53), index=9
  %broadcast_in_dim.475 = s32[64,2]{1,0} broadcast(%get-tuple-element.134), dimensions={1}
  %reshape.8258 = s32[128]{0} reshape(%broadcast_in_dim.475)
  %convert_element_type.1944 = f32[128]{0} convert(%reshape.8258)
  %mul.3056 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.1944), dimensions={3}
  %mul.3059 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3055, %mul.3056)
  %add.2415 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3049, %mul.3059)
  %convert_element_type.1945 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2415)
  %sharding_constraint.539 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1945)
  %get-tuple-element.135 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.53), index=1
  %convert_element_type.1946 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.135)
  %mul.3064 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3047), dimensions={0,1,3}
  %mul.3065 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1946, %mul.3064)
  %slice.320 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.135), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.321 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.135), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.201 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.320, %slice.321), dimensions={3}
  %slice.322 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.135), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.323 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.135), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.202 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.322, %slice.323), dimensions={3}
  %select_n.1767 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.201, %concatenate.202)
  %convert_element_type.1953 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1767)
  %mul.3067 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3050), dimensions={0,1,3}
  %mul.3068 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1953, %mul.3067)
  %get-tuple-element.136 = s32[2]{0} get-tuple-element(%remat2.53), index=10
  %broadcast_in_dim.477 = s32[64,2]{1,0} broadcast(%get-tuple-element.136), dimensions={1}
  %reshape.8265 = s32[128]{0} reshape(%broadcast_in_dim.477)
  %convert_element_type.1954 = f32[128]{0} convert(%reshape.8265)
  %mul.3069 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.1954), dimensions={3}
  %mul.3074 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3068, %mul.3069)
  %add.2418 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3065, %mul.3074)
  %convert_element_type.1955 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2418)
  %sharding_constraint.540 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.1955)
  %get-tuple-element.137 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.53), index=2
  %sharding_constraint.541 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.137)
  %get-tuple-element.138 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.53), index=3
  %get-tuple-element.139 = u32[2,4]{1,0} get-tuple-element(%remat2.53), index=4
  %get-tuple-element.140 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.53), index=5
  %sharding_constraint.542 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.140)
  %sharding_constraint.543 = bf16[2,8192,4096]{2,1,0} copy(%add_any.103)
  %get-tuple-element.141 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.53), index=17
  %convert_element_type.1956 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.141)
  %all-gather.236 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.1956), channel_id=239, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.335 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.543, %all-gather.236), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.544 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.335)
  %get-tuple-element.142 = s32[2,8192]{1,0} get-tuple-element(%remat2.53), index=21
  %eq.502 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.142), dimensions={0,1}
  %eq.503 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.142), dimensions={0,2}
  %eq.504 = pred[2,8192,8192]{2,1,0} compare(%eq.502, %eq.503), direction=EQ
  %and.592 = pred[2,8192,8192]{2,1,0} and(%eq.504, %and.455)
  %select_n.1768 = f32[2,8192,8192]{2,1,0} select(%and.592, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.943 = pred[2,8192,8192]{2,1,0} compare(%select_n.1768, %broadcast_in_dim.277), direction=NE
  %not.98 = pred[2,8192,8192]{2,1,0} not(%ne.943)
  %convert_element_type.1957 = s32[2,8192,8192]{2,1,0} convert(%not.98)
  %reduce.304 = s32[2,8192]{1,0} reduce(%convert_element_type.1957, %constant.2873), dimensions={1}, to_apply=%region_176.10782
  %reduce_sum.4061 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.304)
  %slice.324 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4061), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.33 = s32[2,1]{1,0} reshape(%slice.324)
  %reshape.8267 = s32[2]{0} reshape(%squeeze.33)
  %lt.719 = pred[2]{0} compare(%reshape.8267, %broadcast.5111), direction=LT
  %select_n.1769 = s32[2]{0} select(%lt.719, %broadcast.5111, %reshape.8267)
  %reduce_window_sum.258 = s32[2]{0} reduce-window(%select_n.1769, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.1
  %concatenate.203 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.258), dimensions={0}
  %reduce.305 = s32[2,8192]{1,0} reduce(%convert_element_type.1957, %constant.2873), dimensions={2}, to_apply=%region_177.10791
  %reduce_sum.4062 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.305)
  %reduce.306 = s32[2,1]{1,0} reduce(%reduce_sum.4062, %constant.2985), dimensions={3,2}, to_apply=%region_178.10797
  %reshape.8268 = s32[2]{0} reshape(%reduce.306)
  %lt.720 = pred[2]{0} compare(%reshape.8268, %broadcast.5111), direction=LT
  %select_n.1770 = s32[2]{0} select(%lt.720, %broadcast.5111, %reshape.8268)
  %reduce_window_sum.259 = s32[2]{0} reduce-window(%select_n.1770, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.1.clone
  %concatenate.204 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.259), dimensions={0}
  %te_fused_attn_backward_ffi.0 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.539, %sharding_constraint.540, %sharding_constraint.541, %constant.2973, %get-tuple-element.138, /*index=5*/%get-tuple-element.139, %sharding_constraint.542, %sharding_constraint.544, %concatenate.203, %concatenate.204, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.143 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.0), index=2
  %sharding_constraint.545 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.143)
  %get-tuple-element.144 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.53), index=19
  %convert_element_type.1959 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.144)
  %all-gather.237 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1959), channel_id=240, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.336 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.545, %all-gather.237), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.145 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.0), index=1
  %sharding_constraint.546 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.145)
  %convert_element_type.1961 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.546)
  %mul.3081 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1961, %mul.3064)
  %convert_element_type.1962 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3081)
  %mul.3083 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1961, %mul.3069)
  %mul.3086 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3083, %mul.3067)
  %convert_element_type.1964 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3086)
  %select_n.1772 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.1964, %broadcast.5147)
  %slice.325 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1772), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.10 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.325, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.104 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.1962, %pad.10)
  %slice.326 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1772), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.11 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.326, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.105 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.104, %pad.11)
  %select_n.1779 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.1964, %broadcast.5147)
  %slice.327 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1779), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.12 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.327, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.106 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.105, %pad.12)
  %slice.328 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1779), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.13 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.328, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.107 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.106, %pad.13)
  %get-tuple-element.146 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.53), index=16
  %convert_element_type.1965 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.146)
  %all-gather.238 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.1965), channel_id=241, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.337 = bf16[2,8192,4096]{2,1,0} dot(%add_any.107, %all-gather.238), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.108 = bf16[2,8192,4096]{2,1,0} add(%dot.336, %dot.337)
  %sharding_constraint.547 = bf16[2,8192,4096]{2,1,0} copy(%add_any.108)
  %get-tuple-element.147 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.0), index=0
  %sharding_constraint.548 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.147)
  %convert_element_type.1967 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.548)
  %mul.3089 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1967, %mul.3048)
  %convert_element_type.1968 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3089)
  %mul.3093 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1967, %mul.3056)
  %mul.3096 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3093, %mul.3054)
  %convert_element_type.1969 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3096)
  %select_n.1781 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.1969, %broadcast.5148)
  %slice.329 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1781), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.14 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.329, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.109 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.1968, %pad.14)
  %slice.330 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1781), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.15 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.330, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.110 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.109, %pad.15)
  %select_n.1783 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.1969, %broadcast.5148)
  %slice.331 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1783), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.16 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.331, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.111 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.110, %pad.16)
  %slice.332 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1783), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.17 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.332, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.112 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.111, %pad.17)
  %get-tuple-element.148 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.53), index=18
  %convert_element_type.1970 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.148)
  %all-gather.239 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.1970), channel_id=242, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.338 = bf16[2,8192,4096]{2,1,0} dot(%add_any.112, %all-gather.239), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.549 = bf16[2,8192,4096]{2,1,0} copy(%dot.338)
  %add_any.113 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.547, %sharding_constraint.549)
  %sharding_constraint.550 = bf16[2,8192,4096]{2,1,0} copy(%add_any.113)
  %get-tuple-element.149 = f32[4096]{0} get-tuple-element(%remat2.53), index=15
  %convert_element_type.1971 = bf16[4096]{0} convert(%get-tuple-element.149)
  %mul.3097 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1971), dimensions={2}
  %mul.3098 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.550, %mul.3097)
  %convert_element_type.1972 = f32[2,8192,4096]{2,1,0} convert(%mul.3098)
  %convert_element_type.1973 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.537)
  %square.70 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1973, %convert_element_type.1973)
  %reduce.307 = f32[2,8192]{1,0} reduce(%square.70, %constant.2882), dimensions={2}, to_apply=%region_179.10885
  %div.1167 = f32[2,8192]{1,0} multiply(%reduce.307, %broadcast.5097)
  %add.2426 = f32[2,8192]{1,0} add(%div.1167, %broadcast.5098)
  %add.2427 = f32[2,8192,1]{2,1,0} reshape(%add.2426)
  %rsqrt.132 = f32[2,8192,1]{2,1,0} rsqrt(%add.2427)
  %mul.3099 = f32[2,8192]{1,0} reshape(%rsqrt.132)
  %mul.3100 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3099), dimensions={0,1}
  %mul.3104 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1972, %mul.3100)
  %mul.3105 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1973, %convert_element_type.1972)
  %reduce.308 = f32[2,8192]{1,0} reduce(%mul.3105, %constant.2882), dimensions={2}, to_apply=%region_180.10898
  %reshape.8291 = f32[2,8192,1]{2,1,0} reshape(%reduce.308)
  %div.1168 = f32[2,8192,1]{2,1,0} divide(%rsqrt.132, %add.2427)
  %mul.3106 = f32[2,8192,1]{2,1,0} multiply(%div.1168, %broadcast.5145)
  %mul.3107 = f32[2,8192,1]{2,1,0} multiply(%reshape.8291, %mul.3106)
  %mul.3108 = f32[2,8192,1]{2,1,0} multiply(%mul.3107, %mul.2917)
  %mul.3109 = f32[2,8192]{1,0} reshape(%mul.3108)
  %mul.3111 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3109), dimensions={0,1}
  %mul.3112 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1973, %mul.3111)
  %add_any.114 = f32[2,8192,4096]{2,1,0} add(%mul.3104, %mul.3112)
  %convert_element_type.1974 = bf16[2,8192,4096]{2,1,0} convert(%add_any.114)
  %add_any.115 = bf16[2,8192,4096]{2,1,0} add(%add_any.103, %convert_element_type.1974)
  %sharding_constraint.551 = bf16[2,8192,4096]{2,1,0} copy(%add_any.115)
  %tuple.99 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.210, %reduce_precision.211, %reduce_precision.212, %get-tuple-element.90, %sharding_constraint.511, /*index=5*/%reduce_precision.213, %reduce_precision.214, %reduce_precision.215, %reduce_precision.216, %constant.2935, /*index=10*/%constant.2935, %param.274, %param.275, %param.276, %param.273, /*index=15*/%param.268, %param.270, %param.272, %param.269, %param.271, /*index=20*/%sharding_constraint.439, %param.10, %param.7, %sharding_constraint.551)
  %remat2.54 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.99)
  %get-tuple-element.150 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.54), index=23
  %sharding_constraint.552 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.150)
  %get-tuple-element.151 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.54), index=7
  %neg.160 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.151)
  %exp.161 = bf16[2,8192,14336]{2,1,0} exponential(%neg.160)
  %add.2428 = bf16[2,8192,14336]{2,1,0} add(%exp.161, %jit_silu_.0)
  %div.1169 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2428)
  %mul.3113 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.151, %div.1169)
  %sharding_constraint.553 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.552)
  %get-tuple-element.152 = f32[14336,512]{1,0} get-tuple-element(%remat2.54), index=13
  %convert_element_type.1975 = bf16[14336,512]{1,0} convert(%get-tuple-element.152)
  %all-gather.240 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.1975), channel_id=243, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.339 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.553, %all-gather.240), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.554 = bf16[2,8192,14336]{2,1,0} copy(%dot.339)
  %mul.3114 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3113, %sharding_constraint.554)
  %get-tuple-element.153 = f32[512,14336]{1,0} get-tuple-element(%remat2.54), index=12
  %convert_element_type.1976 = bf16[512,14336]{1,0} convert(%get-tuple-element.153)
  %all-gather.241 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1976), channel_id=244, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.340 = bf16[2,8192,4096]{2,1,0} dot(%mul.3114, %all-gather.241), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.154 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.54), index=8
  %mul.3118 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.554, %get-tuple-element.154)
  %mul.3119 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3118, %div.1169)
  %mul.3120 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.151, %mul.3118)
  %sub.207 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1169)
  %mul.3123 = bf16[2,8192,14336]{2,1,0} multiply(%div.1169, %sub.207)
  %mul.3124 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3120, %mul.3123)
  %add_any.116 = bf16[2,8192,14336]{2,1,0} add(%mul.3119, %mul.3124)
  %get-tuple-element.155 = f32[512,14336]{1,0} get-tuple-element(%remat2.54), index=11
  %convert_element_type.1977 = bf16[512,14336]{1,0} convert(%get-tuple-element.155)
  %all-gather.242 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.1977), channel_id=245, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.341 = bf16[2,8192,4096]{2,1,0} dot(%add_any.116, %all-gather.242), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.117 = bf16[2,8192,4096]{2,1,0} add(%dot.340, %dot.341)
  %sharding_constraint.555 = bf16[2,8192,4096]{2,1,0} copy(%add_any.117)
  %get-tuple-element.156 = f32[4096]{0} get-tuple-element(%remat2.54), index=14
  %convert_element_type.1978 = bf16[4096]{0} convert(%get-tuple-element.156)
  %mul.3125 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.1978), dimensions={2}
  %mul.3127 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.555, %mul.3125)
  %convert_element_type.1979 = f32[2,8192,4096]{2,1,0} convert(%mul.3127)
  %get-tuple-element.157 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.54), index=20
  %sharding_constraint.556 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.157)
  %get-tuple-element.158 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.54), index=6
  %sharding_constraint.557 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.158)
  %add.2429 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.556, %sharding_constraint.557)
  %convert_element_type.1980 = f32[2,8192,4096]{2,1,0} convert(%add.2429)
  %square.71 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1980, %convert_element_type.1980)
  %reduce.309 = f32[2,8192]{1,0} reduce(%square.71, %constant.2882), dimensions={2}, to_apply=%region_181.10976
  %div.1170 = f32[2,8192]{1,0} multiply(%reduce.309, %broadcast.5097)
  %add.2430 = f32[2,8192]{1,0} add(%div.1170, %broadcast.5098)
  %add.2431 = f32[2,8192,1]{2,1,0} reshape(%add.2430)
  %rsqrt.133 = f32[2,8192,1]{2,1,0} rsqrt(%add.2431)
  %mul.3129 = f32[2,8192]{1,0} reshape(%rsqrt.133)
  %mul.3130 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3129), dimensions={0,1}
  %mul.3131 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1979, %mul.3130)
  %mul.3132 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1980, %convert_element_type.1979)
  %reduce.310 = f32[2,8192]{1,0} reduce(%mul.3132, %constant.2882), dimensions={2}, to_apply=%region_182.10989
  %reshape.8292 = f32[2,8192,1]{2,1,0} reshape(%reduce.310)
  %div.1171 = f32[2,8192,1]{2,1,0} divide(%rsqrt.133, %add.2431)
  %mul.3133 = f32[2,8192,1]{2,1,0} multiply(%div.1171, %broadcast.5145)
  %mul.3134 = f32[2,8192,1]{2,1,0} multiply(%reshape.8292, %mul.3133)
  %mul.3135 = f32[2,8192,1]{2,1,0} multiply(%mul.3134, %mul.2917)
  %mul.3136 = f32[2,8192]{1,0} reshape(%mul.3135)
  %mul.3137 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3136), dimensions={0,1}
  %mul.3138 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1980, %mul.3137)
  %add_any.118 = f32[2,8192,4096]{2,1,0} add(%mul.3131, %mul.3138)
  %convert_element_type.1981 = bf16[2,8192,4096]{2,1,0} convert(%add_any.118)
  %add_any.119 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.552, %convert_element_type.1981)
  %get-tuple-element.159 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.54), index=0
  %convert_element_type.1982 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.159)
  %get-tuple-element.160 = s32[2,8192]{1,0} get-tuple-element(%remat2.54), index=22
  %convert_element_type.1983 = f32[2,8192]{1,0} convert(%get-tuple-element.160)
  %div.1172 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.1983), dimensions={0,1}
  %div.1181 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1172, %div.371)
  %cos.72 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1181)
  %mul.3142 = f32[2,8192,128]{2,1,0} reshape(%cos.72)
  %mul.3143 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3142), dimensions={0,1,3}
  %mul.3144 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1982, %mul.3143)
  %slice.333 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.159), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.334 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.159), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.205 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.333, %slice.334), dimensions={3}
  %slice.335 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.159), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.336 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.159), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.206 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.335, %slice.336), dimensions={3}
  %select_n.1790 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.205, %concatenate.206)
  %convert_element_type.1988 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1790)
  %sin.68 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1181)
  %mul.3145 = f32[2,8192,128]{2,1,0} reshape(%sin.68)
  %mul.3146 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3145), dimensions={0,1,3}
  %mul.3147 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.1988, %mul.3146)
  %get-tuple-element.161 = s32[2]{0} get-tuple-element(%remat2.54), index=9
  %broadcast_in_dim.481 = s32[64,2]{1,0} broadcast(%get-tuple-element.161), dimensions={1}
  %reshape.8300 = s32[128]{0} reshape(%broadcast_in_dim.481)
  %convert_element_type.1989 = f32[128]{0} convert(%reshape.8300)
  %mul.3148 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.1989), dimensions={3}
  %mul.3149 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3147, %mul.3148)
  %add.2434 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3144, %mul.3149)
  %convert_element_type.1990 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2434)
  %sharding_constraint.558 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.1990)
  %get-tuple-element.162 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.54), index=1
  %convert_element_type.1991 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.162)
  %mul.3162 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3142), dimensions={0,1,3}
  %mul.3167 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1991, %mul.3162)
  %slice.337 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.162), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.338 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.162), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.207 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.337, %slice.338), dimensions={3}
  %slice.339 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.162), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.340 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.162), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.208 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.339, %slice.340), dimensions={3}
  %select_n.1800 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.207, %concatenate.208)
  %convert_element_type.1998 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1800)
  %mul.3169 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3145), dimensions={0,1,3}
  %mul.3170 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.1998, %mul.3169)
  %get-tuple-element.163 = s32[2]{0} get-tuple-element(%remat2.54), index=10
  %broadcast_in_dim.483 = s32[64,2]{1,0} broadcast(%get-tuple-element.163), dimensions={1}
  %reshape.8307 = s32[128]{0} reshape(%broadcast_in_dim.483)
  %convert_element_type.1999 = f32[128]{0} convert(%reshape.8307)
  %mul.3171 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.1999), dimensions={3}
  %mul.3172 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3170, %mul.3171)
  %add.2437 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3167, %mul.3172)
  %convert_element_type.2000 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2437)
  %sharding_constraint.559 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2000)
  %get-tuple-element.164 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.54), index=2
  %sharding_constraint.560 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.164)
  %get-tuple-element.165 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.54), index=3
  %get-tuple-element.166 = u32[2,4]{1,0} get-tuple-element(%remat2.54), index=4
  %get-tuple-element.167 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.54), index=5
  %sharding_constraint.561 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.167)
  %sharding_constraint.562 = bf16[2,8192,4096]{2,1,0} copy(%add_any.119)
  %get-tuple-element.168 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.54), index=17
  %convert_element_type.2001 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.168)
  %all-gather.243 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2001), channel_id=246, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.342 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.562, %all-gather.243), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.563 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.342)
  %get-tuple-element.169 = s32[2,8192]{1,0} get-tuple-element(%remat2.54), index=21
  %eq.509 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.169), dimensions={0,1}
  %eq.510 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.169), dimensions={0,2}
  %eq.511 = pred[2,8192,8192]{2,1,0} compare(%eq.509, %eq.510), direction=EQ
  %and.600 = pred[2,8192,8192]{2,1,0} and(%eq.511, %and.455)
  %select_n.1801 = f32[2,8192,8192]{2,1,0} select(%and.600, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.951 = pred[2,8192,8192]{2,1,0} compare(%select_n.1801, %broadcast_in_dim.277), direction=NE
  %not.99 = pred[2,8192,8192]{2,1,0} not(%ne.951)
  %convert_element_type.2002 = s32[2,8192,8192]{2,1,0} convert(%not.99)
  %reduce.311 = s32[2,8192]{1,0} reduce(%convert_element_type.2002, %constant.2873), dimensions={1}, to_apply=%region_183.11141
  %reduce_sum.4066 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.311)
  %slice.341 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4066), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.34 = s32[2,1]{1,0} reshape(%slice.341)
  %reshape.8309 = s32[2]{0} reshape(%squeeze.34)
  %lt.729 = pred[2]{0} compare(%reshape.8309, %broadcast.5111), direction=LT
  %select_n.1806 = s32[2]{0} select(%lt.729, %broadcast.5111, %reshape.8309)
  %reduce_window_sum.260 = s32[2]{0} reduce-window(%select_n.1806, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.2
  %concatenate.209 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.260), dimensions={0}
  %reduce.312 = s32[2,8192]{1,0} reduce(%convert_element_type.2002, %constant.2873), dimensions={2}, to_apply=%region_184.11150
  %reduce_sum.4069 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.312)
  %reduce.313 = s32[2,1]{1,0} reduce(%reduce_sum.4069, %constant.2985), dimensions={3,2}, to_apply=%region_185.11156
  %reshape.8310 = s32[2]{0} reshape(%reduce.313)
  %lt.730 = pred[2]{0} compare(%reshape.8310, %broadcast.5111), direction=LT
  %select_n.1807 = s32[2]{0} select(%lt.730, %broadcast.5111, %reshape.8310)
  %reduce_window_sum.261 = s32[2]{0} reduce-window(%select_n.1807, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.2.clone
  %concatenate.210 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.261), dimensions={0}
  %te_fused_attn_backward_ffi.5 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.558, %sharding_constraint.559, %sharding_constraint.560, %constant.2973, %get-tuple-element.165, /*index=5*/%get-tuple-element.166, %sharding_constraint.561, %sharding_constraint.563, %concatenate.209, %concatenate.210, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.170 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.5), index=2
  %sharding_constraint.564 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.170)
  %get-tuple-element.171 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.54), index=19
  %convert_element_type.2004 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.171)
  %all-gather.244 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2004), channel_id=247, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.343 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.564, %all-gather.244), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.172 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.5), index=1
  %sharding_constraint.565 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.172)
  %convert_element_type.2005 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.565)
  %mul.3175 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2005, %mul.3162)
  %convert_element_type.2006 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3175)
  %mul.3177 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2005, %mul.3171)
  %mul.3180 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3177, %mul.3169)
  %convert_element_type.2007 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3180)
  %select_n.1809 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2007, %broadcast.5147)
  %slice.342 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1809), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.18 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.342, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.120 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2006, %pad.18)
  %slice.343 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1809), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.19 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.343, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.121 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.120, %pad.19)
  %select_n.1811 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2007, %broadcast.5147)
  %slice.344 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1811), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.20 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.344, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.122 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.121, %pad.20)
  %slice.345 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1811), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.21 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.345, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.123 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.122, %pad.21)
  %get-tuple-element.173 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.54), index=16
  %convert_element_type.2008 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.173)
  %all-gather.245 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2008), channel_id=248, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.344 = bf16[2,8192,4096]{2,1,0} dot(%add_any.123, %all-gather.245), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.124 = bf16[2,8192,4096]{2,1,0} add(%dot.343, %dot.344)
  %sharding_constraint.566 = bf16[2,8192,4096]{2,1,0} copy(%add_any.124)
  %get-tuple-element.174 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.5), index=0
  %sharding_constraint.567 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.174)
  %convert_element_type.2009 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.567)
  %mul.3185 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2009, %mul.3143)
  %convert_element_type.2010 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3185)
  %mul.3190 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2009, %mul.3148)
  %mul.3193 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3190, %mul.3146)
  %convert_element_type.2011 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3193)
  %select_n.1813 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2011, %broadcast.5148)
  %slice.346 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1813), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.22 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.346, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.125 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2010, %pad.22)
  %slice.347 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1813), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.23 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.347, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.126 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.125, %pad.23)
  %select_n.1815 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2011, %broadcast.5148)
  %slice.348 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1815), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.24 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.348, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.127 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.126, %pad.24)
  %slice.349 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1815), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.25 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.349, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.128 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.127, %pad.25)
  %get-tuple-element.175 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.54), index=18
  %convert_element_type.2012 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.175)
  %all-gather.246 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2012), channel_id=249, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.345 = bf16[2,8192,4096]{2,1,0} dot(%add_any.128, %all-gather.246), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.568 = bf16[2,8192,4096]{2,1,0} copy(%dot.345)
  %add_any.129 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.566, %sharding_constraint.568)
  %sharding_constraint.569 = bf16[2,8192,4096]{2,1,0} copy(%add_any.129)
  %get-tuple-element.176 = f32[4096]{0} get-tuple-element(%remat2.54), index=15
  %convert_element_type.2014 = bf16[4096]{0} convert(%get-tuple-element.176)
  %mul.3194 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2014), dimensions={2}
  %mul.3195 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.569, %mul.3194)
  %convert_element_type.2015 = f32[2,8192,4096]{2,1,0} convert(%mul.3195)
  %convert_element_type.2016 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.556)
  %square.72 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2016, %convert_element_type.2016)
  %reduce.314 = f32[2,8192]{1,0} reduce(%square.72, %constant.2882), dimensions={2}, to_apply=%region_186.11244
  %div.1192 = f32[2,8192]{1,0} multiply(%reduce.314, %broadcast.5097)
  %add.2442 = f32[2,8192]{1,0} add(%div.1192, %broadcast.5098)
  %add.2446 = f32[2,8192,1]{2,1,0} reshape(%add.2442)
  %rsqrt.134 = f32[2,8192,1]{2,1,0} rsqrt(%add.2446)
  %mul.3196 = f32[2,8192]{1,0} reshape(%rsqrt.134)
  %mul.3198 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3196), dimensions={0,1}
  %mul.3199 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2015, %mul.3198)
  %mul.3200 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2016, %convert_element_type.2015)
  %reduce.315 = f32[2,8192]{1,0} reduce(%mul.3200, %constant.2882), dimensions={2}, to_apply=%region_187.11257
  %reshape.8332 = f32[2,8192,1]{2,1,0} reshape(%reduce.315)
  %div.1193 = f32[2,8192,1]{2,1,0} divide(%rsqrt.134, %add.2446)
  %mul.3203 = f32[2,8192,1]{2,1,0} multiply(%div.1193, %broadcast.5145)
  %mul.3205 = f32[2,8192,1]{2,1,0} multiply(%reshape.8332, %mul.3203)
  %mul.3206 = f32[2,8192,1]{2,1,0} multiply(%mul.3205, %mul.2917)
  %mul.3207 = f32[2,8192]{1,0} reshape(%mul.3206)
  %mul.3208 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3207), dimensions={0,1}
  %mul.3209 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2016, %mul.3208)
  %add_any.130 = f32[2,8192,4096]{2,1,0} add(%mul.3199, %mul.3209)
  %convert_element_type.2017 = bf16[2,8192,4096]{2,1,0} convert(%add_any.130)
  %add_any.131 = bf16[2,8192,4096]{2,1,0} add(%add_any.119, %convert_element_type.2017)
  %sharding_constraint.570 = bf16[2,8192,4096]{2,1,0} copy(%add_any.131)
  %tuple.101 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.203, %reduce_precision.204, %reduce_precision.205, %get-tuple-element.88, %sharding_constraint.510, /*index=5*/%reduce_precision.206, %reduce_precision.207, %reduce_precision.208, %reduce_precision.209, %constant.2935, /*index=10*/%constant.2935, %param.265, %param.266, %param.267, %param.264, /*index=15*/%param.259, %param.261, %param.263, %param.260, %param.262, /*index=20*/%sharding_constraint.426, %param.10, %param.7, %sharding_constraint.570)
  %remat2.55 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.101)
  %get-tuple-element.177 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.55), index=23
  %sharding_constraint.571 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.177)
  %get-tuple-element.178 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.55), index=7
  %neg.161 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.178)
  %exp.162 = bf16[2,8192,14336]{2,1,0} exponential(%neg.161)
  %add.2447 = bf16[2,8192,14336]{2,1,0} add(%exp.162, %jit_silu_.0)
  %div.1194 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2447)
  %mul.3210 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.178, %div.1194)
  %sharding_constraint.572 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.571)
  %get-tuple-element.179 = f32[14336,512]{1,0} get-tuple-element(%remat2.55), index=13
  %convert_element_type.2018 = bf16[14336,512]{1,0} convert(%get-tuple-element.179)
  %all-gather.247 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2018), channel_id=250, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.346 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.572, %all-gather.247), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.573 = bf16[2,8192,14336]{2,1,0} copy(%dot.346)
  %mul.3211 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3210, %sharding_constraint.573)
  %get-tuple-element.180 = f32[512,14336]{1,0} get-tuple-element(%remat2.55), index=12
  %convert_element_type.2019 = bf16[512,14336]{1,0} convert(%get-tuple-element.180)
  %all-gather.248 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2019), channel_id=251, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.347 = bf16[2,8192,4096]{2,1,0} dot(%mul.3211, %all-gather.248), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.181 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.55), index=8
  %mul.3212 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.573, %get-tuple-element.181)
  %mul.3213 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3212, %div.1194)
  %mul.3214 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.178, %mul.3212)
  %sub.212 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1194)
  %mul.3215 = bf16[2,8192,14336]{2,1,0} multiply(%div.1194, %sub.212)
  %mul.3216 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3214, %mul.3215)
  %add_any.132 = bf16[2,8192,14336]{2,1,0} add(%mul.3213, %mul.3216)
  %get-tuple-element.182 = f32[512,14336]{1,0} get-tuple-element(%remat2.55), index=11
  %convert_element_type.2020 = bf16[512,14336]{1,0} convert(%get-tuple-element.182)
  %all-gather.249 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2020), channel_id=252, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.348 = bf16[2,8192,4096]{2,1,0} dot(%add_any.132, %all-gather.249), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.133 = bf16[2,8192,4096]{2,1,0} add(%dot.347, %dot.348)
  %sharding_constraint.574 = bf16[2,8192,4096]{2,1,0} copy(%add_any.133)
  %get-tuple-element.183 = f32[4096]{0} get-tuple-element(%remat2.55), index=14
  %convert_element_type.2021 = bf16[4096]{0} convert(%get-tuple-element.183)
  %mul.3217 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2021), dimensions={2}
  %mul.3218 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.574, %mul.3217)
  %convert_element_type.2022 = f32[2,8192,4096]{2,1,0} convert(%mul.3218)
  %get-tuple-element.184 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.55), index=20
  %sharding_constraint.575 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.184)
  %get-tuple-element.185 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.55), index=6
  %sharding_constraint.576 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.185)
  %add.2448 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.575, %sharding_constraint.576)
  %convert_element_type.2023 = f32[2,8192,4096]{2,1,0} convert(%add.2448)
  %square.73 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2023, %convert_element_type.2023)
  %reduce.316 = f32[2,8192]{1,0} reduce(%square.73, %constant.2882), dimensions={2}, to_apply=%region_188.11335
  %div.1195 = f32[2,8192]{1,0} multiply(%reduce.316, %broadcast.5097)
  %add.2449 = f32[2,8192]{1,0} add(%div.1195, %broadcast.5098)
  %add.2450 = f32[2,8192,1]{2,1,0} reshape(%add.2449)
  %rsqrt.135 = f32[2,8192,1]{2,1,0} rsqrt(%add.2450)
  %mul.3221 = f32[2,8192]{1,0} reshape(%rsqrt.135)
  %mul.3222 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3221), dimensions={0,1}
  %mul.3225 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2022, %mul.3222)
  %mul.3226 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2023, %convert_element_type.2022)
  %reduce.317 = f32[2,8192]{1,0} reduce(%mul.3226, %constant.2882), dimensions={2}, to_apply=%region_189.11348
  %reshape.8333 = f32[2,8192,1]{2,1,0} reshape(%reduce.317)
  %div.1196 = f32[2,8192,1]{2,1,0} divide(%rsqrt.135, %add.2450)
  %mul.3227 = f32[2,8192,1]{2,1,0} multiply(%div.1196, %broadcast.5145)
  %mul.3232 = f32[2,8192,1]{2,1,0} multiply(%reshape.8333, %mul.3227)
  %mul.3237 = f32[2,8192,1]{2,1,0} multiply(%mul.3232, %mul.2917)
  %mul.3238 = f32[2,8192]{1,0} reshape(%mul.3237)
  %mul.3243 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3238), dimensions={0,1}
  %mul.3244 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2023, %mul.3243)
  %add_any.134 = f32[2,8192,4096]{2,1,0} add(%mul.3225, %mul.3244)
  %convert_element_type.2024 = bf16[2,8192,4096]{2,1,0} convert(%add_any.134)
  %add_any.135 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.571, %convert_element_type.2024)
  %get-tuple-element.186 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.55), index=0
  %convert_element_type.2025 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.186)
  %get-tuple-element.187 = s32[2,8192]{1,0} get-tuple-element(%remat2.55), index=22
  %convert_element_type.2026 = f32[2,8192]{1,0} convert(%get-tuple-element.187)
  %div.1197 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2026), dimensions={0,1}
  %div.1207 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1197, %div.371)
  %cos.74 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1207)
  %mul.3248 = f32[2,8192,128]{2,1,0} reshape(%cos.74)
  %mul.3249 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3248), dimensions={0,1,3}
  %mul.3250 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2025, %mul.3249)
  %slice.350 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.186), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.351 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.186), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.211 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.350, %slice.351), dimensions={3}
  %slice.352 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.186), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.353 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.186), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.212 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.352, %slice.353), dimensions={3}
  %select_n.1825 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.211, %concatenate.212)
  %convert_element_type.2031 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1825)
  %sin.70 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1207)
  %mul.3251 = f32[2,8192,128]{2,1,0} reshape(%sin.70)
  %mul.3252 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3251), dimensions={0,1,3}
  %mul.3253 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2031, %mul.3252)
  %get-tuple-element.188 = s32[2]{0} get-tuple-element(%remat2.55), index=9
  %broadcast_in_dim.487 = s32[64,2]{1,0} broadcast(%get-tuple-element.188), dimensions={1}
  %reshape.8340 = s32[128]{0} reshape(%broadcast_in_dim.487)
  %convert_element_type.2033 = f32[128]{0} convert(%reshape.8340)
  %mul.3255 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2033), dimensions={3}
  %mul.3257 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3253, %mul.3255)
  %add.2453 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3250, %mul.3257)
  %convert_element_type.2034 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2453)
  %sharding_constraint.577 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2034)
  %get-tuple-element.189 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.55), index=1
  %convert_element_type.2035 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.189)
  %mul.3262 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3248), dimensions={0,1,3}
  %mul.3263 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2035, %mul.3262)
  %slice.354 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.189), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.355 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.189), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.213 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.354, %slice.355), dimensions={3}
  %slice.356 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.189), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.357 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.189), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.214 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.356, %slice.357), dimensions={3}
  %select_n.1832 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.213, %concatenate.214)
  %convert_element_type.2041 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1832)
  %mul.3268 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3251), dimensions={0,1,3}
  %mul.3269 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2041, %mul.3268)
  %get-tuple-element.190 = s32[2]{0} get-tuple-element(%remat2.55), index=10
  %broadcast_in_dim.489 = s32[64,2]{1,0} broadcast(%get-tuple-element.190), dimensions={1}
  %reshape.8347 = s32[128]{0} reshape(%broadcast_in_dim.489)
  %convert_element_type.2042 = f32[128]{0} convert(%reshape.8347)
  %mul.3270 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2042), dimensions={3}
  %mul.3271 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3269, %mul.3270)
  %add.2456 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3263, %mul.3271)
  %convert_element_type.2043 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2456)
  %sharding_constraint.578 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2043)
  %get-tuple-element.191 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.55), index=2
  %sharding_constraint.579 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.191)
  %get-tuple-element.192 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.55), index=3
  %get-tuple-element.193 = u32[2,4]{1,0} get-tuple-element(%remat2.55), index=4
  %get-tuple-element.194 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.55), index=5
  %sharding_constraint.580 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.194)
  %sharding_constraint.581 = bf16[2,8192,4096]{2,1,0} copy(%add_any.135)
  %get-tuple-element.195 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.55), index=17
  %convert_element_type.2045 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.195)
  %all-gather.250 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2045), channel_id=253, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.349 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.581, %all-gather.250), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.582 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.349)
  %get-tuple-element.196 = s32[2,8192]{1,0} get-tuple-element(%remat2.55), index=21
  %eq.516 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.196), dimensions={0,1}
  %eq.517 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.196), dimensions={0,2}
  %eq.518 = pred[2,8192,8192]{2,1,0} compare(%eq.516, %eq.517), direction=EQ
  %and.608 = pred[2,8192,8192]{2,1,0} and(%eq.518, %and.455)
  %select_n.1833 = f32[2,8192,8192]{2,1,0} select(%and.608, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.959 = pred[2,8192,8192]{2,1,0} compare(%select_n.1833, %broadcast_in_dim.277), direction=NE
  %not.100 = pred[2,8192,8192]{2,1,0} not(%ne.959)
  %convert_element_type.2046 = s32[2,8192,8192]{2,1,0} convert(%not.100)
  %reduce.318 = s32[2,8192]{1,0} reduce(%convert_element_type.2046, %constant.2873), dimensions={1}, to_apply=%region_190.11500
  %reduce_sum.4070 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.318)
  %slice.358 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4070), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.35 = s32[2,1]{1,0} reshape(%slice.358)
  %reshape.8350 = s32[2]{0} reshape(%squeeze.35)
  %lt.739 = pred[2]{0} compare(%reshape.8350, %broadcast.5111), direction=LT
  %select_n.1834 = s32[2]{0} select(%lt.739, %broadcast.5111, %reshape.8350)
  %reduce_window_sum.262 = s32[2]{0} reduce-window(%select_n.1834, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.3
  %concatenate.215 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.262), dimensions={0}
  %reduce.319 = s32[2,8192]{1,0} reduce(%convert_element_type.2046, %constant.2873), dimensions={2}, to_apply=%region_191.11509
  %reduce_sum.4071 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.319)
  %reduce.320 = s32[2,1]{1,0} reduce(%reduce_sum.4071, %constant.2985), dimensions={3,2}, to_apply=%region_192.11515
  %reshape.8351 = s32[2]{0} reshape(%reduce.320)
  %lt.740 = pred[2]{0} compare(%reshape.8351, %broadcast.5111), direction=LT
  %select_n.1835 = s32[2]{0} select(%lt.740, %broadcast.5111, %reshape.8351)
  %reduce_window_sum.263 = s32[2]{0} reduce-window(%select_n.1835, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.3.clone
  %concatenate.216 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.263), dimensions={0}
  %te_fused_attn_backward_ffi.10 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.577, %sharding_constraint.578, %sharding_constraint.579, %constant.2973, %get-tuple-element.192, /*index=5*/%get-tuple-element.193, %sharding_constraint.580, %sharding_constraint.582, %concatenate.215, %concatenate.216, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.197 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.10), index=2
  %sharding_constraint.583 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.197)
  %get-tuple-element.198 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.55), index=19
  %convert_element_type.2048 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.198)
  %all-gather.251 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2048), channel_id=254, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.350 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.583, %all-gather.251), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.199 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.10), index=1
  %sharding_constraint.584 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.199)
  %convert_element_type.2049 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.584)
  %mul.3274 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2049, %mul.3262)
  %convert_element_type.2050 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3274)
  %mul.3276 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2049, %mul.3270)
  %mul.3282 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3276, %mul.3268)
  %convert_element_type.2051 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3282)
  %select_n.1840 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2051, %broadcast.5147)
  %slice.359 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1840), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.26 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.359, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.136 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2050, %pad.26)
  %slice.360 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1840), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.27 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.360, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.137 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.136, %pad.27)
  %select_n.1842 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2051, %broadcast.5147)
  %slice.361 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1842), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.28 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.361, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.138 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.137, %pad.28)
  %slice.362 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1842), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.29 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.362, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.139 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.138, %pad.29)
  %get-tuple-element.200 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.55), index=16
  %convert_element_type.2052 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.200)
  %all-gather.252 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2052), channel_id=255, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.351 = bf16[2,8192,4096]{2,1,0} dot(%add_any.139, %all-gather.252), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.140 = bf16[2,8192,4096]{2,1,0} add(%dot.350, %dot.351)
  %sharding_constraint.585 = bf16[2,8192,4096]{2,1,0} copy(%add_any.140)
  %get-tuple-element.201 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.10), index=0
  %sharding_constraint.586 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.201)
  %convert_element_type.2053 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.586)
  %mul.3287 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2053, %mul.3249)
  %convert_element_type.2054 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3287)
  %mul.3289 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2053, %mul.3255)
  %mul.3292 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3289, %mul.3252)
  %convert_element_type.2055 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3292)
  %select_n.1844 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2055, %broadcast.5148)
  %slice.363 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1844), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.30 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.363, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.141 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2054, %pad.30)
  %slice.364 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1844), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.31 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.364, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.142 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.141, %pad.31)
  %select_n.1846 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2055, %broadcast.5148)
  %slice.365 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1846), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.32 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.365, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.143 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.142, %pad.32)
  %slice.366 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1846), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.33 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.366, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.144 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.143, %pad.33)
  %get-tuple-element.202 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.55), index=18
  %convert_element_type.2056 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.202)
  %all-gather.253 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2056), channel_id=256, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.352 = bf16[2,8192,4096]{2,1,0} dot(%add_any.144, %all-gather.253), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.587 = bf16[2,8192,4096]{2,1,0} copy(%dot.352)
  %add_any.145 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.585, %sharding_constraint.587)
  %sharding_constraint.588 = bf16[2,8192,4096]{2,1,0} copy(%add_any.145)
  %get-tuple-element.203 = f32[4096]{0} get-tuple-element(%remat2.55), index=15
  %convert_element_type.2057 = bf16[4096]{0} convert(%get-tuple-element.203)
  %mul.3293 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2057), dimensions={2}
  %mul.3294 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.588, %mul.3293)
  %convert_element_type.2058 = f32[2,8192,4096]{2,1,0} convert(%mul.3294)
  %convert_element_type.2059 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.575)
  %square.74 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2059, %convert_element_type.2059)
  %reduce.321 = f32[2,8192]{1,0} reduce(%square.74, %constant.2882), dimensions={2}, to_apply=%region_193.11603
  %div.1224 = f32[2,8192]{1,0} multiply(%reduce.321, %broadcast.5097)
  %add.2462 = f32[2,8192]{1,0} add(%div.1224, %broadcast.5098)
  %add.2463 = f32[2,8192,1]{2,1,0} reshape(%add.2462)
  %rsqrt.136 = f32[2,8192,1]{2,1,0} rsqrt(%add.2463)
  %mul.3295 = f32[2,8192]{1,0} reshape(%rsqrt.136)
  %mul.3296 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3295), dimensions={0,1}
  %mul.3297 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2058, %mul.3296)
  %mul.3299 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2059, %convert_element_type.2058)
  %reduce.322 = f32[2,8192]{1,0} reduce(%mul.3299, %constant.2882), dimensions={2}, to_apply=%region_194.11616
  %reshape.8373 = f32[2,8192,1]{2,1,0} reshape(%reduce.322)
  %div.1225 = f32[2,8192,1]{2,1,0} divide(%rsqrt.136, %add.2463)
  %mul.3300 = f32[2,8192,1]{2,1,0} multiply(%div.1225, %broadcast.5145)
  %mul.3301 = f32[2,8192,1]{2,1,0} multiply(%reshape.8373, %mul.3300)
  %mul.3302 = f32[2,8192,1]{2,1,0} multiply(%mul.3301, %mul.2917)
  %mul.3303 = f32[2,8192]{1,0} reshape(%mul.3302)
  %mul.3304 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3303), dimensions={0,1}
  %mul.3305 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2059, %mul.3304)
  %add_any.146 = f32[2,8192,4096]{2,1,0} add(%mul.3297, %mul.3305)
  %convert_element_type.2060 = bf16[2,8192,4096]{2,1,0} convert(%add_any.146)
  %add_any.147 = bf16[2,8192,4096]{2,1,0} add(%add_any.135, %convert_element_type.2060)
  %sharding_constraint.589 = bf16[2,8192,4096]{2,1,0} copy(%add_any.147)
  %tuple.103 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.196, %reduce_precision.197, %reduce_precision.198, %get-tuple-element.86, %sharding_constraint.509, /*index=5*/%reduce_precision.199, %reduce_precision.200, %reduce_precision.201, %reduce_precision.202, %constant.2935, /*index=10*/%constant.2935, %param.256, %param.257, %param.258, %param.255, /*index=15*/%param.250, %param.252, %param.254, %param.251, %param.253, /*index=20*/%sharding_constraint.413, %param.10, %param.7, %sharding_constraint.589)
  %remat2.56 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.103)
  %get-tuple-element.204 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.56), index=23
  %sharding_constraint.590 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.204)
  %get-tuple-element.205 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.56), index=7
  %neg.162 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.205)
  %exp.163 = bf16[2,8192,14336]{2,1,0} exponential(%neg.162)
  %add.2467 = bf16[2,8192,14336]{2,1,0} add(%exp.163, %jit_silu_.0)
  %div.1226 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2467)
  %mul.3306 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.205, %div.1226)
  %sharding_constraint.591 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.590)
  %get-tuple-element.206 = f32[14336,512]{1,0} get-tuple-element(%remat2.56), index=13
  %convert_element_type.2061 = bf16[14336,512]{1,0} convert(%get-tuple-element.206)
  %all-gather.254 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2061), channel_id=257, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.353 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.591, %all-gather.254), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.592 = bf16[2,8192,14336]{2,1,0} copy(%dot.353)
  %mul.3307 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3306, %sharding_constraint.592)
  %get-tuple-element.207 = f32[512,14336]{1,0} get-tuple-element(%remat2.56), index=12
  %convert_element_type.2062 = bf16[512,14336]{1,0} convert(%get-tuple-element.207)
  %all-gather.255 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2062), channel_id=258, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.354 = bf16[2,8192,4096]{2,1,0} dot(%mul.3307, %all-gather.255), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.208 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.56), index=8
  %mul.3308 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.592, %get-tuple-element.208)
  %mul.3309 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3308, %div.1226)
  %mul.3310 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.205, %mul.3308)
  %sub.217 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1226)
  %mul.3311 = bf16[2,8192,14336]{2,1,0} multiply(%div.1226, %sub.217)
  %mul.3312 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3310, %mul.3311)
  %add_any.148 = bf16[2,8192,14336]{2,1,0} add(%mul.3309, %mul.3312)
  %get-tuple-element.209 = f32[512,14336]{1,0} get-tuple-element(%remat2.56), index=11
  %convert_element_type.2064 = bf16[512,14336]{1,0} convert(%get-tuple-element.209)
  %all-gather.256 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2064), channel_id=259, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.355 = bf16[2,8192,4096]{2,1,0} dot(%add_any.148, %all-gather.256), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.149 = bf16[2,8192,4096]{2,1,0} add(%dot.354, %dot.355)
  %sharding_constraint.593 = bf16[2,8192,4096]{2,1,0} copy(%add_any.149)
  %get-tuple-element.210 = f32[4096]{0} get-tuple-element(%remat2.56), index=14
  %convert_element_type.2065 = bf16[4096]{0} convert(%get-tuple-element.210)
  %mul.3317 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2065), dimensions={2}
  %mul.3319 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.593, %mul.3317)
  %convert_element_type.2066 = f32[2,8192,4096]{2,1,0} convert(%mul.3319)
  %get-tuple-element.211 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.56), index=20
  %sharding_constraint.594 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.211)
  %get-tuple-element.212 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.56), index=6
  %sharding_constraint.595 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.212)
  %add.2469 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.594, %sharding_constraint.595)
  %convert_element_type.2067 = f32[2,8192,4096]{2,1,0} convert(%add.2469)
  %square.75 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2067, %convert_element_type.2067)
  %reduce.323 = f32[2,8192]{1,0} reduce(%square.75, %constant.2882), dimensions={2}, to_apply=%region_195.11694
  %div.1227 = f32[2,8192]{1,0} multiply(%reduce.323, %broadcast.5097)
  %add.2470 = f32[2,8192]{1,0} add(%div.1227, %broadcast.5098)
  %add.2471 = f32[2,8192,1]{2,1,0} reshape(%add.2470)
  %rsqrt.137 = f32[2,8192,1]{2,1,0} rsqrt(%add.2471)
  %mul.3324 = f32[2,8192]{1,0} reshape(%rsqrt.137)
  %mul.3325 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3324), dimensions={0,1}
  %mul.3326 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2066, %mul.3325)
  %mul.3327 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2067, %convert_element_type.2066)
  %reduce.324 = f32[2,8192]{1,0} reduce(%mul.3327, %constant.2882), dimensions={2}, to_apply=%region_196.11707
  %reshape.8374 = f32[2,8192,1]{2,1,0} reshape(%reduce.324)
  %div.1229 = f32[2,8192,1]{2,1,0} divide(%rsqrt.137, %add.2471)
  %mul.3328 = f32[2,8192,1]{2,1,0} multiply(%div.1229, %broadcast.5145)
  %mul.3333 = f32[2,8192,1]{2,1,0} multiply(%reshape.8374, %mul.3328)
  %mul.3334 = f32[2,8192,1]{2,1,0} multiply(%mul.3333, %mul.2917)
  %mul.3335 = f32[2,8192]{1,0} reshape(%mul.3334)
  %mul.3336 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3335), dimensions={0,1}
  %mul.3337 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2067, %mul.3336)
  %add_any.150 = f32[2,8192,4096]{2,1,0} add(%mul.3326, %mul.3337)
  %convert_element_type.2068 = bf16[2,8192,4096]{2,1,0} convert(%add_any.150)
  %add_any.151 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.590, %convert_element_type.2068)
  %get-tuple-element.213 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.56), index=0
  %convert_element_type.2069 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.213)
  %get-tuple-element.214 = s32[2,8192]{1,0} get-tuple-element(%remat2.56), index=22
  %convert_element_type.2070 = f32[2,8192]{1,0} convert(%get-tuple-element.214)
  %div.1230 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2070), dimensions={0,1}
  %div.1246 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1230, %div.371)
  %cos.76 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1246)
  %mul.3341 = f32[2,8192,128]{2,1,0} reshape(%cos.76)
  %mul.3342 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3341), dimensions={0,1,3}
  %mul.3346 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2069, %mul.3342)
  %slice.367 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.213), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.368 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.213), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.217 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.367, %slice.368), dimensions={3}
  %slice.369 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.213), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.370 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.213), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.218 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.369, %slice.370), dimensions={3}
  %select_n.1853 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.217, %concatenate.218)
  %convert_element_type.2076 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1853)
  %sin.72 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1246)
  %mul.3347 = f32[2,8192,128]{2,1,0} reshape(%sin.72)
  %mul.3348 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3347), dimensions={0,1,3}
  %mul.3355 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2076, %mul.3348)
  %get-tuple-element.215 = s32[2]{0} get-tuple-element(%remat2.56), index=9
  %broadcast_in_dim.493 = s32[64,2]{1,0} broadcast(%get-tuple-element.215), dimensions={1}
  %reshape.8381 = s32[128]{0} reshape(%broadcast_in_dim.493)
  %convert_element_type.2077 = f32[128]{0} convert(%reshape.8381)
  %mul.3356 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2077), dimensions={3}
  %mul.3357 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3355, %mul.3356)
  %add.2474 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3346, %mul.3357)
  %convert_element_type.2078 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2474)
  %sharding_constraint.596 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2078)
  %get-tuple-element.216 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.56), index=1
  %convert_element_type.2079 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.216)
  %mul.3366 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3341), dimensions={0,1,3}
  %mul.3367 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2079, %mul.3366)
  %slice.371 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.216), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.372 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.216), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.219 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.371, %slice.372), dimensions={3}
  %slice.373 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.216), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.374 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.216), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.220 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.373, %slice.374), dimensions={3}
  %select_n.1863 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.219, %concatenate.220)
  %convert_element_type.2084 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1863)
  %mul.3369 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3347), dimensions={0,1,3}
  %mul.3370 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2084, %mul.3369)
  %get-tuple-element.217 = s32[2]{0} get-tuple-element(%remat2.56), index=10
  %broadcast_in_dim.495 = s32[64,2]{1,0} broadcast(%get-tuple-element.217), dimensions={1}
  %reshape.8388 = s32[128]{0} reshape(%broadcast_in_dim.495)
  %convert_element_type.2085 = f32[128]{0} convert(%reshape.8388)
  %mul.3371 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2085), dimensions={3}
  %mul.3372 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3370, %mul.3371)
  %add.2477 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3367, %mul.3372)
  %convert_element_type.2086 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2477)
  %sharding_constraint.597 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2086)
  %get-tuple-element.218 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.56), index=2
  %sharding_constraint.598 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.218)
  %get-tuple-element.219 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.56), index=3
  %get-tuple-element.220 = u32[2,4]{1,0} get-tuple-element(%remat2.56), index=4
  %get-tuple-element.221 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.56), index=5
  %sharding_constraint.599 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.221)
  %sharding_constraint.600 = bf16[2,8192,4096]{2,1,0} copy(%add_any.151)
  %get-tuple-element.222 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.56), index=17
  %convert_element_type.2087 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.222)
  %all-gather.257 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2087), channel_id=260, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.356 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.600, %all-gather.257), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.601 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.356)
  %get-tuple-element.223 = s32[2,8192]{1,0} get-tuple-element(%remat2.56), index=21
  %eq.523 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.223), dimensions={0,1}
  %eq.524 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.223), dimensions={0,2}
  %eq.525 = pred[2,8192,8192]{2,1,0} compare(%eq.523, %eq.524), direction=EQ
  %and.616 = pred[2,8192,8192]{2,1,0} and(%eq.525, %and.455)
  %select_n.1864 = f32[2,8192,8192]{2,1,0} select(%and.616, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.967 = pred[2,8192,8192]{2,1,0} compare(%select_n.1864, %broadcast_in_dim.277), direction=NE
  %not.101 = pred[2,8192,8192]{2,1,0} not(%ne.967)
  %convert_element_type.2088 = s32[2,8192,8192]{2,1,0} convert(%not.101)
  %reduce.325 = s32[2,8192]{1,0} reduce(%convert_element_type.2088, %constant.2873), dimensions={1}, to_apply=%region_197.11859
  %reduce_sum.4072 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.325)
  %slice.375 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4072), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.36 = s32[2,1]{1,0} reshape(%slice.375)
  %reshape.8390 = s32[2]{0} reshape(%squeeze.36)
  %lt.749 = pred[2]{0} compare(%reshape.8390, %broadcast.5111), direction=LT
  %select_n.1865 = s32[2]{0} select(%lt.749, %broadcast.5111, %reshape.8390)
  %reduce_window_sum.264 = s32[2]{0} reduce-window(%select_n.1865, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.4
  %concatenate.221 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.264), dimensions={0}
  %reduce.326 = s32[2,8192]{1,0} reduce(%convert_element_type.2088, %constant.2873), dimensions={2}, to_apply=%region_198.11868
  %reduce_sum.4073 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.326)
  %reduce.327 = s32[2,1]{1,0} reduce(%reduce_sum.4073, %constant.2985), dimensions={3,2}, to_apply=%region_199.11874
  %reshape.8391 = s32[2]{0} reshape(%reduce.327)
  %lt.750 = pred[2]{0} compare(%reshape.8391, %broadcast.5111), direction=LT
  %select_n.1866 = s32[2]{0} select(%lt.750, %broadcast.5111, %reshape.8391)
  %reduce_window_sum.265 = s32[2]{0} reduce-window(%select_n.1866, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.4.clone
  %concatenate.222 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.265), dimensions={0}
  %te_fused_attn_backward_ffi.15 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.596, %sharding_constraint.597, %sharding_constraint.598, %constant.2973, %get-tuple-element.219, /*index=5*/%get-tuple-element.220, %sharding_constraint.599, %sharding_constraint.601, %concatenate.221, %concatenate.222, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.224 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.15), index=2
  %sharding_constraint.602 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.224)
  %get-tuple-element.225 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.56), index=19
  %convert_element_type.2091 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.225)
  %all-gather.258 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2091), channel_id=261, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.357 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.602, %all-gather.258), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.226 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.15), index=1
  %sharding_constraint.603 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.226)
  %convert_element_type.2092 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.603)
  %mul.3375 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2092, %mul.3366)
  %convert_element_type.2093 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3375)
  %mul.3377 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2092, %mul.3371)
  %mul.3380 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3377, %mul.3369)
  %convert_element_type.2094 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3380)
  %select_n.1868 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2094, %broadcast.5147)
  %slice.376 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1868), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.34 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.376, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.152 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2093, %pad.34)
  %slice.377 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1868), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.35 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.377, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.153 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.152, %pad.35)
  %select_n.1870 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2094, %broadcast.5147)
  %slice.378 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1870), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.36 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.378, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.154 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.153, %pad.36)
  %slice.379 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1870), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.37 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.379, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.155 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.154, %pad.37)
  %get-tuple-element.227 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.56), index=16
  %convert_element_type.2095 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.227)
  %all-gather.259 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2095), channel_id=262, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.358 = bf16[2,8192,4096]{2,1,0} dot(%add_any.155, %all-gather.259), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.156 = bf16[2,8192,4096]{2,1,0} add(%dot.357, %dot.358)
  %sharding_constraint.604 = bf16[2,8192,4096]{2,1,0} copy(%add_any.156)
  %get-tuple-element.228 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.15), index=0
  %sharding_constraint.605 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.228)
  %convert_element_type.2096 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.605)
  %mul.3383 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2096, %mul.3342)
  %convert_element_type.2097 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3383)
  %mul.3385 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2096, %mul.3356)
  %mul.3388 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3385, %mul.3348)
  %convert_element_type.2098 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3388)
  %select_n.1872 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2098, %broadcast.5148)
  %slice.380 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1872), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.38 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.380, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.157 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2097, %pad.38)
  %slice.381 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1872), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.39 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.381, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.158 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.157, %pad.39)
  %select_n.1874 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2098, %broadcast.5148)
  %slice.382 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1874), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.40 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.382, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.159 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.158, %pad.40)
  %slice.383 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1874), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.41 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.383, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.160 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.159, %pad.41)
  %get-tuple-element.229 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.56), index=18
  %convert_element_type.2099 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.229)
  %all-gather.260 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2099), channel_id=263, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.359 = bf16[2,8192,4096]{2,1,0} dot(%add_any.160, %all-gather.260), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.606 = bf16[2,8192,4096]{2,1,0} copy(%dot.359)
  %add_any.161 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.604, %sharding_constraint.606)
  %sharding_constraint.607 = bf16[2,8192,4096]{2,1,0} copy(%add_any.161)
  %get-tuple-element.230 = f32[4096]{0} get-tuple-element(%remat2.56), index=15
  %convert_element_type.2100 = bf16[4096]{0} convert(%get-tuple-element.230)
  %mul.3389 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2100), dimensions={2}
  %mul.3390 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.607, %mul.3389)
  %convert_element_type.2101 = f32[2,8192,4096]{2,1,0} convert(%mul.3390)
  %convert_element_type.2102 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.594)
  %square.76 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2102, %convert_element_type.2102)
  %reduce.328 = f32[2,8192]{1,0} reduce(%square.76, %constant.2882), dimensions={2}, to_apply=%region_200.11962
  %div.1257 = f32[2,8192]{1,0} multiply(%reduce.328, %broadcast.5097)
  %add.2482 = f32[2,8192]{1,0} add(%div.1257, %broadcast.5098)
  %add.2483 = f32[2,8192,1]{2,1,0} reshape(%add.2482)
  %rsqrt.138 = f32[2,8192,1]{2,1,0} rsqrt(%add.2483)
  %mul.3392 = f32[2,8192]{1,0} reshape(%rsqrt.138)
  %mul.3393 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3392), dimensions={0,1}
  %mul.3394 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2101, %mul.3393)
  %mul.3395 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2102, %convert_element_type.2101)
  %reduce.329 = f32[2,8192]{1,0} reduce(%mul.3395, %constant.2882), dimensions={2}, to_apply=%region_201.11975
  %reshape.8412 = f32[2,8192,1]{2,1,0} reshape(%reduce.329)
  %div.1258 = f32[2,8192,1]{2,1,0} divide(%rsqrt.138, %add.2483)
  %mul.3396 = f32[2,8192,1]{2,1,0} multiply(%div.1258, %broadcast.5145)
  %mul.3397 = f32[2,8192,1]{2,1,0} multiply(%reshape.8412, %mul.3396)
  %mul.3398 = f32[2,8192,1]{2,1,0} multiply(%mul.3397, %mul.2917)
  %mul.3399 = f32[2,8192]{1,0} reshape(%mul.3398)
  %mul.3400 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3399), dimensions={0,1}
  %mul.3401 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2102, %mul.3400)
  %add_any.162 = f32[2,8192,4096]{2,1,0} add(%mul.3394, %mul.3401)
  %convert_element_type.2104 = bf16[2,8192,4096]{2,1,0} convert(%add_any.162)
  %add_any.163 = bf16[2,8192,4096]{2,1,0} add(%add_any.151, %convert_element_type.2104)
  %sharding_constraint.608 = bf16[2,8192,4096]{2,1,0} copy(%add_any.163)
  %tuple.105 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.189, %reduce_precision.190, %reduce_precision.191, %get-tuple-element.84, %sharding_constraint.508, /*index=5*/%reduce_precision.192, %reduce_precision.193, %reduce_precision.194, %reduce_precision.195, %constant.2935, /*index=10*/%constant.2935, %param.247, %param.248, %param.249, %param.246, /*index=15*/%param.241, %param.243, %param.245, %param.242, %param.244, /*index=20*/%sharding_constraint.400, %param.10, %param.7, %sharding_constraint.608)
  %remat2.57 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.105)
  %get-tuple-element.231 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.57), index=23
  %sharding_constraint.609 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.231)
  %get-tuple-element.232 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.57), index=7
  %neg.163 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.232)
  %exp.164 = bf16[2,8192,14336]{2,1,0} exponential(%neg.163)
  %add.2484 = bf16[2,8192,14336]{2,1,0} add(%exp.164, %jit_silu_.0)
  %div.1259 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2484)
  %mul.3402 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.232, %div.1259)
  %sharding_constraint.610 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.609)
  %get-tuple-element.233 = f32[14336,512]{1,0} get-tuple-element(%remat2.57), index=13
  %convert_element_type.2105 = bf16[14336,512]{1,0} convert(%get-tuple-element.233)
  %all-gather.261 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2105), channel_id=264, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.360 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.610, %all-gather.261), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.611 = bf16[2,8192,14336]{2,1,0} copy(%dot.360)
  %mul.3403 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3402, %sharding_constraint.611)
  %get-tuple-element.234 = f32[512,14336]{1,0} get-tuple-element(%remat2.57), index=12
  %convert_element_type.2106 = bf16[512,14336]{1,0} convert(%get-tuple-element.234)
  %all-gather.262 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2106), channel_id=265, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.361 = bf16[2,8192,4096]{2,1,0} dot(%mul.3403, %all-gather.262), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.235 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.57), index=8
  %mul.3404 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.611, %get-tuple-element.235)
  %mul.3405 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3404, %div.1259)
  %mul.3406 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.232, %mul.3404)
  %sub.222 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1259)
  %mul.3408 = bf16[2,8192,14336]{2,1,0} multiply(%div.1259, %sub.222)
  %mul.3410 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3406, %mul.3408)
  %add_any.164 = bf16[2,8192,14336]{2,1,0} add(%mul.3405, %mul.3410)
  %get-tuple-element.236 = f32[512,14336]{1,0} get-tuple-element(%remat2.57), index=11
  %convert_element_type.2107 = bf16[512,14336]{1,0} convert(%get-tuple-element.236)
  %all-gather.263 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2107), channel_id=266, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.362 = bf16[2,8192,4096]{2,1,0} dot(%add_any.164, %all-gather.263), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.165 = bf16[2,8192,4096]{2,1,0} add(%dot.361, %dot.362)
  %sharding_constraint.612 = bf16[2,8192,4096]{2,1,0} copy(%add_any.165)
  %get-tuple-element.237 = f32[4096]{0} get-tuple-element(%remat2.57), index=14
  %convert_element_type.2109 = bf16[4096]{0} convert(%get-tuple-element.237)
  %mul.3413 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2109), dimensions={2}
  %mul.3414 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.612, %mul.3413)
  %convert_element_type.2110 = f32[2,8192,4096]{2,1,0} convert(%mul.3414)
  %get-tuple-element.238 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.57), index=20
  %sharding_constraint.613 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.238)
  %get-tuple-element.239 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.57), index=6
  %sharding_constraint.614 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.239)
  %add.2488 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.613, %sharding_constraint.614)
  %convert_element_type.2111 = f32[2,8192,4096]{2,1,0} convert(%add.2488)
  %square.77 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2111, %convert_element_type.2111)
  %reduce.330 = f32[2,8192]{1,0} reduce(%square.77, %constant.2882), dimensions={2}, to_apply=%region_202.12053
  %div.1260 = f32[2,8192]{1,0} multiply(%reduce.330, %broadcast.5097)
  %add.2489 = f32[2,8192]{1,0} add(%div.1260, %broadcast.5098)
  %add.2490 = f32[2,8192,1]{2,1,0} reshape(%add.2489)
  %rsqrt.139 = f32[2,8192,1]{2,1,0} rsqrt(%add.2490)
  %mul.3417 = f32[2,8192]{1,0} reshape(%rsqrt.139)
  %mul.3418 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3417), dimensions={0,1}
  %mul.3419 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2110, %mul.3418)
  %mul.3420 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2111, %convert_element_type.2110)
  %reduce.331 = f32[2,8192]{1,0} reduce(%mul.3420, %constant.2882), dimensions={2}, to_apply=%region_203.12066
  %reshape.8413 = f32[2,8192,1]{2,1,0} reshape(%reduce.331)
  %div.1261 = f32[2,8192,1]{2,1,0} divide(%rsqrt.139, %add.2490)
  %mul.3421 = f32[2,8192,1]{2,1,0} multiply(%div.1261, %broadcast.5145)
  %mul.3422 = f32[2,8192,1]{2,1,0} multiply(%reshape.8413, %mul.3421)
  %mul.3423 = f32[2,8192,1]{2,1,0} multiply(%mul.3422, %mul.2917)
  %mul.3424 = f32[2,8192]{1,0} reshape(%mul.3423)
  %mul.3426 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3424), dimensions={0,1}
  %mul.3427 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2111, %mul.3426)
  %add_any.166 = f32[2,8192,4096]{2,1,0} add(%mul.3419, %mul.3427)
  %convert_element_type.2112 = bf16[2,8192,4096]{2,1,0} convert(%add_any.166)
  %add_any.167 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.609, %convert_element_type.2112)
  %get-tuple-element.240 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.57), index=0
  %convert_element_type.2114 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.240)
  %get-tuple-element.241 = s32[2,8192]{1,0} get-tuple-element(%remat2.57), index=22
  %convert_element_type.2115 = f32[2,8192]{1,0} convert(%get-tuple-element.241)
  %div.1262 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2115), dimensions={0,1}
  %div.1271 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1262, %div.371)
  %cos.78 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1271)
  %mul.3432 = f32[2,8192,128]{2,1,0} reshape(%cos.78)
  %mul.3437 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3432), dimensions={0,1,3}
  %mul.3442 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2114, %mul.3437)
  %slice.384 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.240), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.385 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.240), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.223 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.384, %slice.385), dimensions={3}
  %slice.386 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.240), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.387 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.240), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.224 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.386, %slice.387), dimensions={3}
  %select_n.1884 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.223, %concatenate.224)
  %convert_element_type.2119 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1884)
  %sin.74 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1271)
  %mul.3443 = f32[2,8192,128]{2,1,0} reshape(%sin.74)
  %mul.3449 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3443), dimensions={0,1,3}
  %mul.3450 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2119, %mul.3449)
  %get-tuple-element.242 = s32[2]{0} get-tuple-element(%remat2.57), index=9
  %broadcast_in_dim.499 = s32[64,2]{1,0} broadcast(%get-tuple-element.242), dimensions={1}
  %reshape.8420 = s32[128]{0} reshape(%broadcast_in_dim.499)
  %convert_element_type.2121 = f32[128]{0} convert(%reshape.8420)
  %mul.3453 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2121), dimensions={3}
  %mul.3454 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3450, %mul.3453)
  %add.2493 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3442, %mul.3454)
  %convert_element_type.2122 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2493)
  %sharding_constraint.615 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2122)
  %get-tuple-element.243 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.57), index=1
  %convert_element_type.2123 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.243)
  %mul.3459 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3432), dimensions={0,1,3}
  %mul.3460 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2123, %mul.3459)
  %slice.388 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.243), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.389 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.243), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.225 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.388, %slice.389), dimensions={3}
  %slice.390 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.243), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.391 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.243), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.226 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.390, %slice.391), dimensions={3}
  %select_n.1891 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.225, %concatenate.226)
  %convert_element_type.2128 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1891)
  %mul.3463 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3443), dimensions={0,1,3}
  %mul.3464 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2128, %mul.3463)
  %get-tuple-element.244 = s32[2]{0} get-tuple-element(%remat2.57), index=10
  %broadcast_in_dim.501 = s32[64,2]{1,0} broadcast(%get-tuple-element.244), dimensions={1}
  %reshape.8427 = s32[128]{0} reshape(%broadcast_in_dim.501)
  %convert_element_type.2129 = f32[128]{0} convert(%reshape.8427)
  %mul.3465 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2129), dimensions={3}
  %mul.3466 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3464, %mul.3465)
  %add.2497 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3460, %mul.3466)
  %convert_element_type.2130 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2497)
  %sharding_constraint.616 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2130)
  %get-tuple-element.245 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.57), index=2
  %sharding_constraint.617 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.245)
  %get-tuple-element.246 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.57), index=3
  %get-tuple-element.247 = u32[2,4]{1,0} get-tuple-element(%remat2.57), index=4
  %get-tuple-element.248 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.57), index=5
  %sharding_constraint.618 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.248)
  %sharding_constraint.619 = bf16[2,8192,4096]{2,1,0} copy(%add_any.167)
  %get-tuple-element.249 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.57), index=17
  %convert_element_type.2131 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.249)
  %all-gather.264 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2131), channel_id=267, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.363 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.619, %all-gather.264), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.620 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.363)
  %get-tuple-element.250 = s32[2,8192]{1,0} get-tuple-element(%remat2.57), index=21
  %eq.530 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.250), dimensions={0,1}
  %eq.531 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.250), dimensions={0,2}
  %eq.532 = pred[2,8192,8192]{2,1,0} compare(%eq.530, %eq.531), direction=EQ
  %and.624 = pred[2,8192,8192]{2,1,0} and(%eq.532, %and.455)
  %select_n.1892 = f32[2,8192,8192]{2,1,0} select(%and.624, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.976 = pred[2,8192,8192]{2,1,0} compare(%select_n.1892, %broadcast_in_dim.277), direction=NE
  %not.102 = pred[2,8192,8192]{2,1,0} not(%ne.976)
  %convert_element_type.2132 = s32[2,8192,8192]{2,1,0} convert(%not.102)
  %reduce.332 = s32[2,8192]{1,0} reduce(%convert_element_type.2132, %constant.2873), dimensions={1}, to_apply=%region_204.12218
  %reduce_sum.4074 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.332)
  %slice.392 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4074), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.37 = s32[2,1]{1,0} reshape(%slice.392)
  %reshape.8429 = s32[2]{0} reshape(%squeeze.37)
  %lt.759 = pred[2]{0} compare(%reshape.8429, %broadcast.5111), direction=LT
  %select_n.1893 = s32[2]{0} select(%lt.759, %broadcast.5111, %reshape.8429)
  %reduce_window_sum.266 = s32[2]{0} reduce-window(%select_n.1893, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.5
  %concatenate.227 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.266), dimensions={0}
  %reduce.333 = s32[2,8192]{1,0} reduce(%convert_element_type.2132, %constant.2873), dimensions={2}, to_apply=%region_205.12227
  %reduce_sum.4075 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.333)
  %reduce.334 = s32[2,1]{1,0} reduce(%reduce_sum.4075, %constant.2985), dimensions={3,2}, to_apply=%region_206.12233
  %reshape.8430 = s32[2]{0} reshape(%reduce.334)
  %lt.760 = pred[2]{0} compare(%reshape.8430, %broadcast.5111), direction=LT
  %select_n.1894 = s32[2]{0} select(%lt.760, %broadcast.5111, %reshape.8430)
  %reduce_window_sum.267 = s32[2]{0} reduce-window(%select_n.1894, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.5.clone
  %concatenate.228 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.267), dimensions={0}
  %te_fused_attn_backward_ffi.20 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.615, %sharding_constraint.616, %sharding_constraint.617, %constant.2973, %get-tuple-element.246, /*index=5*/%get-tuple-element.247, %sharding_constraint.618, %sharding_constraint.620, %concatenate.227, %concatenate.228, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.251 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.20), index=2
  %sharding_constraint.621 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.251)
  %get-tuple-element.252 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.57), index=19
  %convert_element_type.2134 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.252)
  %all-gather.265 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2134), channel_id=268, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.364 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.621, %all-gather.265), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.253 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.20), index=1
  %sharding_constraint.622 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.253)
  %convert_element_type.2135 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.622)
  %mul.3470 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2135, %mul.3459)
  %convert_element_type.2136 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3470)
  %mul.3472 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2135, %mul.3465)
  %mul.3475 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3472, %mul.3463)
  %convert_element_type.2137 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3475)
  %select_n.1896 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2137, %broadcast.5147)
  %slice.393 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1896), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.42 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.393, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.168 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2136, %pad.42)
  %slice.394 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1896), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.43 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.394, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.169 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.168, %pad.43)
  %select_n.1898 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2137, %broadcast.5147)
  %slice.395 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1898), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.44 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.395, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.170 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.169, %pad.44)
  %slice.396 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1898), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.45 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.396, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.171 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.170, %pad.45)
  %get-tuple-element.254 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.57), index=16
  %convert_element_type.2138 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.254)
  %all-gather.266 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2138), channel_id=269, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.365 = bf16[2,8192,4096]{2,1,0} dot(%add_any.171, %all-gather.266), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.172 = bf16[2,8192,4096]{2,1,0} add(%dot.364, %dot.365)
  %sharding_constraint.623 = bf16[2,8192,4096]{2,1,0} copy(%add_any.172)
  %get-tuple-element.255 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.20), index=0
  %sharding_constraint.624 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.255)
  %convert_element_type.2139 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.624)
  %mul.3478 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2139, %mul.3437)
  %convert_element_type.2140 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3478)
  %mul.3480 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2139, %mul.3453)
  %mul.3487 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3480, %mul.3449)
  %convert_element_type.2141 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3487)
  %select_n.1903 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2141, %broadcast.5148)
  %slice.397 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1903), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.46 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.397, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.173 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2140, %pad.46)
  %slice.398 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1903), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.47 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.398, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.174 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.173, %pad.47)
  %select_n.1905 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2141, %broadcast.5148)
  %slice.399 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1905), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.48 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.399, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.175 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.174, %pad.48)
  %slice.400 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1905), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.49 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.400, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.176 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.175, %pad.49)
  %get-tuple-element.256 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.57), index=18
  %convert_element_type.2142 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.256)
  %all-gather.267 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2142), channel_id=270, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.366 = bf16[2,8192,4096]{2,1,0} dot(%add_any.176, %all-gather.267), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.625 = bf16[2,8192,4096]{2,1,0} copy(%dot.366)
  %add_any.177 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.623, %sharding_constraint.625)
  %sharding_constraint.626 = bf16[2,8192,4096]{2,1,0} copy(%add_any.177)
  %get-tuple-element.257 = f32[4096]{0} get-tuple-element(%remat2.57), index=15
  %convert_element_type.2143 = bf16[4096]{0} convert(%get-tuple-element.257)
  %mul.3488 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2143), dimensions={2}
  %mul.3489 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.626, %mul.3488)
  %convert_element_type.2144 = f32[2,8192,4096]{2,1,0} convert(%mul.3489)
  %convert_element_type.2145 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.613)
  %square.78 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2145, %convert_element_type.2145)
  %reduce.335 = f32[2,8192]{1,0} reduce(%square.78, %constant.2882), dimensions={2}, to_apply=%region_207.12321
  %div.1282 = f32[2,8192]{1,0} multiply(%reduce.335, %broadcast.5097)
  %add.2502 = f32[2,8192]{1,0} add(%div.1282, %broadcast.5098)
  %add.2503 = f32[2,8192,1]{2,1,0} reshape(%add.2502)
  %rsqrt.140 = f32[2,8192,1]{2,1,0} rsqrt(%add.2503)
  %mul.3490 = f32[2,8192]{1,0} reshape(%rsqrt.140)
  %mul.3491 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3490), dimensions={0,1}
  %mul.3492 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2144, %mul.3491)
  %mul.3496 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2145, %convert_element_type.2144)
  %reduce.336 = f32[2,8192]{1,0} reduce(%mul.3496, %constant.2882), dimensions={2}, to_apply=%region_208.12334
  %reshape.8454 = f32[2,8192,1]{2,1,0} reshape(%reduce.336)
  %div.1283 = f32[2,8192,1]{2,1,0} divide(%rsqrt.140, %add.2503)
  %mul.3497 = f32[2,8192,1]{2,1,0} multiply(%div.1283, %broadcast.5145)
  %mul.3498 = f32[2,8192,1]{2,1,0} multiply(%reshape.8454, %mul.3497)
  %mul.3499 = f32[2,8192,1]{2,1,0} multiply(%mul.3498, %mul.2917)
  %mul.3500 = f32[2,8192]{1,0} reshape(%mul.3499)
  %mul.3501 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3500), dimensions={0,1}
  %mul.3502 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2145, %mul.3501)
  %add_any.178 = f32[2,8192,4096]{2,1,0} add(%mul.3492, %mul.3502)
  %convert_element_type.2146 = bf16[2,8192,4096]{2,1,0} convert(%add_any.178)
  %add_any.179 = bf16[2,8192,4096]{2,1,0} add(%add_any.167, %convert_element_type.2146)
  %sharding_constraint.627 = bf16[2,8192,4096]{2,1,0} copy(%add_any.179)
  %tuple.107 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.182, %reduce_precision.183, %reduce_precision.184, %get-tuple-element.82, %sharding_constraint.507, /*index=5*/%reduce_precision.185, %reduce_precision.186, %reduce_precision.187, %reduce_precision.188, %constant.2935, /*index=10*/%constant.2935, %param.238, %param.239, %param.240, %param.237, /*index=15*/%param.232, %param.234, %param.236, %param.233, %param.235, /*index=20*/%sharding_constraint.387, %param.10, %param.7, %sharding_constraint.627)
  %remat2.58 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.107)
  %get-tuple-element.258 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.58), index=23
  %sharding_constraint.628 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.258)
  %get-tuple-element.259 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.58), index=7
  %neg.164 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.259)
  %exp.165 = bf16[2,8192,14336]{2,1,0} exponential(%neg.164)
  %add.2504 = bf16[2,8192,14336]{2,1,0} add(%exp.165, %jit_silu_.0)
  %div.1284 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2504)
  %mul.3503 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.259, %div.1284)
  %sharding_constraint.629 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.628)
  %get-tuple-element.260 = f32[14336,512]{1,0} get-tuple-element(%remat2.58), index=13
  %convert_element_type.2148 = bf16[14336,512]{1,0} convert(%get-tuple-element.260)
  %all-gather.268 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2148), channel_id=271, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.367 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.629, %all-gather.268), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.630 = bf16[2,8192,14336]{2,1,0} copy(%dot.367)
  %mul.3504 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3503, %sharding_constraint.630)
  %get-tuple-element.261 = f32[512,14336]{1,0} get-tuple-element(%remat2.58), index=12
  %convert_element_type.2149 = bf16[512,14336]{1,0} convert(%get-tuple-element.261)
  %all-gather.269 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2149), channel_id=272, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.368 = bf16[2,8192,4096]{2,1,0} dot(%mul.3504, %all-gather.269), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.262 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.58), index=8
  %mul.3505 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.630, %get-tuple-element.262)
  %mul.3506 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3505, %div.1284)
  %mul.3518 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.259, %mul.3505)
  %sub.227 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1284)
  %mul.3519 = bf16[2,8192,14336]{2,1,0} multiply(%div.1284, %sub.227)
  %mul.3524 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3518, %mul.3519)
  %add_any.180 = bf16[2,8192,14336]{2,1,0} add(%mul.3506, %mul.3524)
  %get-tuple-element.263 = f32[512,14336]{1,0} get-tuple-element(%remat2.58), index=11
  %convert_element_type.2150 = bf16[512,14336]{1,0} convert(%get-tuple-element.263)
  %all-gather.270 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2150), channel_id=273, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.369 = bf16[2,8192,4096]{2,1,0} dot(%add_any.180, %all-gather.270), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.181 = bf16[2,8192,4096]{2,1,0} add(%dot.368, %dot.369)
  %sharding_constraint.631 = bf16[2,8192,4096]{2,1,0} copy(%add_any.181)
  %get-tuple-element.264 = f32[4096]{0} get-tuple-element(%remat2.58), index=14
  %convert_element_type.2151 = bf16[4096]{0} convert(%get-tuple-element.264)
  %mul.3525 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2151), dimensions={2}
  %mul.3527 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.631, %mul.3525)
  %convert_element_type.2152 = f32[2,8192,4096]{2,1,0} convert(%mul.3527)
  %get-tuple-element.265 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.58), index=20
  %sharding_constraint.632 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.265)
  %get-tuple-element.266 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.58), index=6
  %sharding_constraint.633 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.266)
  %add.2505 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.632, %sharding_constraint.633)
  %convert_element_type.2153 = f32[2,8192,4096]{2,1,0} convert(%add.2505)
  %square.79 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2153, %convert_element_type.2153)
  %reduce.337 = f32[2,8192]{1,0} reduce(%square.79, %constant.2882), dimensions={2}, to_apply=%region_209.12412
  %div.1285 = f32[2,8192]{1,0} multiply(%reduce.337, %broadcast.5097)
  %add.2509 = f32[2,8192]{1,0} add(%div.1285, %broadcast.5098)
  %add.2510 = f32[2,8192,1]{2,1,0} reshape(%add.2509)
  %rsqrt.141 = f32[2,8192,1]{2,1,0} rsqrt(%add.2510)
  %mul.3528 = f32[2,8192]{1,0} reshape(%rsqrt.141)
  %mul.3529 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3528), dimensions={0,1}
  %mul.3530 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2152, %mul.3529)
  %mul.3531 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2153, %convert_element_type.2152)
  %reduce.338 = f32[2,8192]{1,0} reduce(%mul.3531, %constant.2882), dimensions={2}, to_apply=%region_210.12425
  %reshape.8455 = f32[2,8192,1]{2,1,0} reshape(%reduce.338)
  %div.1286 = f32[2,8192,1]{2,1,0} divide(%rsqrt.141, %add.2510)
  %mul.3532 = f32[2,8192,1]{2,1,0} multiply(%div.1286, %broadcast.5145)
  %mul.3533 = f32[2,8192,1]{2,1,0} multiply(%reshape.8455, %mul.3532)
  %mul.3534 = f32[2,8192,1]{2,1,0} multiply(%mul.3533, %mul.2917)
  %mul.3535 = f32[2,8192]{1,0} reshape(%mul.3534)
  %mul.3536 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3535), dimensions={0,1}
  %mul.3537 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2153, %mul.3536)
  %add_any.182 = f32[2,8192,4096]{2,1,0} add(%mul.3530, %mul.3537)
  %convert_element_type.2154 = bf16[2,8192,4096]{2,1,0} convert(%add_any.182)
  %add_any.183 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.628, %convert_element_type.2154)
  %get-tuple-element.267 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.58), index=0
  %convert_element_type.2156 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.267)
  %get-tuple-element.268 = s32[2,8192]{1,0} get-tuple-element(%remat2.58), index=22
  %convert_element_type.2157 = f32[2,8192]{1,0} convert(%get-tuple-element.268)
  %div.1287 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2157), dimensions={0,1}
  %div.1296 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1287, %div.371)
  %cos.80 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1296)
  %mul.3541 = f32[2,8192,128]{2,1,0} reshape(%cos.80)
  %mul.3542 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3541), dimensions={0,1,3}
  %mul.3543 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2156, %mul.3542)
  %slice.401 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.267), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.402 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.267), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.229 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.401, %slice.402), dimensions={3}
  %slice.403 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.267), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.404 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.267), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.230 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.403, %slice.404), dimensions={3}
  %select_n.1912 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.229, %concatenate.230)
  %convert_element_type.2161 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1912)
  %sin.76 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1296)
  %mul.3544 = f32[2,8192,128]{2,1,0} reshape(%sin.76)
  %mul.3545 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3544), dimensions={0,1,3}
  %mul.3547 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2161, %mul.3545)
  %get-tuple-element.269 = s32[2]{0} get-tuple-element(%remat2.58), index=9
  %broadcast_in_dim.505 = s32[64,2]{1,0} broadcast(%get-tuple-element.269), dimensions={1}
  %reshape.8462 = s32[128]{0} reshape(%broadcast_in_dim.505)
  %convert_element_type.2162 = f32[128]{0} convert(%reshape.8462)
  %mul.3549 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2162), dimensions={3}
  %mul.3550 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3547, %mul.3549)
  %add.2513 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3543, %mul.3550)
  %convert_element_type.2163 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2513)
  %sharding_constraint.634 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2163)
  %get-tuple-element.270 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.58), index=1
  %convert_element_type.2164 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.270)
  %mul.3555 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3541), dimensions={0,1,3}
  %mul.3556 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2164, %mul.3555)
  %slice.405 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.270), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.406 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.270), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.231 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.405, %slice.406), dimensions={3}
  %slice.407 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.270), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.408 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.270), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.232 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.407, %slice.408), dimensions={3}
  %select_n.1919 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.231, %concatenate.232)
  %convert_element_type.2169 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1919)
  %mul.3561 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3544), dimensions={0,1,3}
  %mul.3562 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2169, %mul.3561)
  %get-tuple-element.271 = s32[2]{0} get-tuple-element(%remat2.58), index=10
  %broadcast_in_dim.507 = s32[64,2]{1,0} broadcast(%get-tuple-element.271), dimensions={1}
  %reshape.8469 = s32[128]{0} reshape(%broadcast_in_dim.507)
  %convert_element_type.2170 = f32[128]{0} convert(%reshape.8469)
  %mul.3563 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2170), dimensions={3}
  %mul.3564 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3562, %mul.3563)
  %add.2516 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3556, %mul.3564)
  %convert_element_type.2171 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2516)
  %sharding_constraint.635 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2171)
  %get-tuple-element.272 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.58), index=2
  %sharding_constraint.636 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.272)
  %get-tuple-element.273 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.58), index=3
  %get-tuple-element.274 = u32[2,4]{1,0} get-tuple-element(%remat2.58), index=4
  %get-tuple-element.275 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.58), index=5
  %sharding_constraint.637 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.275)
  %sharding_constraint.638 = bf16[2,8192,4096]{2,1,0} copy(%add_any.183)
  %get-tuple-element.276 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.58), index=17
  %convert_element_type.2172 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.276)
  %all-gather.271 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2172), channel_id=274, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.370 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.638, %all-gather.271), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.639 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.370)
  %get-tuple-element.277 = s32[2,8192]{1,0} get-tuple-element(%remat2.58), index=21
  %eq.537 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.277), dimensions={0,1}
  %eq.538 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.277), dimensions={0,2}
  %eq.539 = pred[2,8192,8192]{2,1,0} compare(%eq.537, %eq.538), direction=EQ
  %and.632 = pred[2,8192,8192]{2,1,0} and(%eq.539, %and.455)
  %select_n.1920 = f32[2,8192,8192]{2,1,0} select(%and.632, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.984 = pred[2,8192,8192]{2,1,0} compare(%select_n.1920, %broadcast_in_dim.277), direction=NE
  %not.103 = pred[2,8192,8192]{2,1,0} not(%ne.984)
  %convert_element_type.2174 = s32[2,8192,8192]{2,1,0} convert(%not.103)
  %reduce.339 = s32[2,8192]{1,0} reduce(%convert_element_type.2174, %constant.2873), dimensions={1}, to_apply=%region_211.12577
  %reduce_sum.4076 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.339)
  %slice.409 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4076), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.38 = s32[2,1]{1,0} reshape(%slice.409)
  %reshape.8471 = s32[2]{0} reshape(%squeeze.38)
  %lt.769 = pred[2]{0} compare(%reshape.8471, %broadcast.5111), direction=LT
  %select_n.1924 = s32[2]{0} select(%lt.769, %broadcast.5111, %reshape.8471)
  %reduce_window_sum.268 = s32[2]{0} reduce-window(%select_n.1924, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.6
  %concatenate.233 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.268), dimensions={0}
  %reduce.340 = s32[2,8192]{1,0} reduce(%convert_element_type.2174, %constant.2873), dimensions={2}, to_apply=%region_212.12586
  %reduce_sum.4077 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.340)
  %reduce.341 = s32[2,1]{1,0} reduce(%reduce_sum.4077, %constant.2985), dimensions={3,2}, to_apply=%region_213.12592
  %reshape.8472 = s32[2]{0} reshape(%reduce.341)
  %lt.770 = pred[2]{0} compare(%reshape.8472, %broadcast.5111), direction=LT
  %select_n.1925 = s32[2]{0} select(%lt.770, %broadcast.5111, %reshape.8472)
  %reduce_window_sum.269 = s32[2]{0} reduce-window(%select_n.1925, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.6.clone
  %concatenate.234 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.269), dimensions={0}
  %te_fused_attn_backward_ffi.25 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.634, %sharding_constraint.635, %sharding_constraint.636, %constant.2973, %get-tuple-element.273, /*index=5*/%get-tuple-element.274, %sharding_constraint.637, %sharding_constraint.639, %concatenate.233, %concatenate.234, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.278 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.25), index=2
  %sharding_constraint.640 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.278)
  %get-tuple-element.279 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.58), index=19
  %convert_element_type.2176 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.279)
  %all-gather.272 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2176), channel_id=275, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.371 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.640, %all-gather.272), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.280 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.25), index=1
  %sharding_constraint.641 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.280)
  %convert_element_type.2177 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.641)
  %mul.3567 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2177, %mul.3555)
  %convert_element_type.2179 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3567)
  %mul.3569 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2177, %mul.3563)
  %mul.3575 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3569, %mul.3561)
  %convert_element_type.2180 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3575)
  %select_n.1927 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2180, %broadcast.5147)
  %slice.410 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1927), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.50 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.410, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.184 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2179, %pad.50)
  %slice.411 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1927), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.51 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.411, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.185 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.184, %pad.51)
  %select_n.1929 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2180, %broadcast.5147)
  %slice.412 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1929), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.52 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.412, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.186 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.185, %pad.52)
  %slice.413 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1929), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.53 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.413, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.187 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.186, %pad.53)
  %get-tuple-element.281 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.58), index=16
  %convert_element_type.2181 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.281)
  %all-gather.273 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2181), channel_id=276, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.372 = bf16[2,8192,4096]{2,1,0} dot(%add_any.187, %all-gather.273), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.188 = bf16[2,8192,4096]{2,1,0} add(%dot.371, %dot.372)
  %sharding_constraint.642 = bf16[2,8192,4096]{2,1,0} copy(%add_any.188)
  %get-tuple-element.282 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.25), index=0
  %sharding_constraint.643 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.282)
  %convert_element_type.2182 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.643)
  %mul.3580 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2182, %mul.3542)
  %convert_element_type.2183 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3580)
  %mul.3582 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2182, %mul.3549)
  %mul.3585 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3582, %mul.3545)
  %convert_element_type.2184 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3585)
  %select_n.1931 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2184, %broadcast.5148)
  %slice.414 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1931), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.54 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.414, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.189 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2183, %pad.54)
  %slice.415 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1931), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.55 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.415, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.190 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.189, %pad.55)
  %select_n.1933 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2184, %broadcast.5148)
  %slice.416 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1933), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.56 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.416, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.191 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.190, %pad.56)
  %slice.417 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1933), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.57 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.417, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.192 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.191, %pad.57)
  %get-tuple-element.283 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.58), index=18
  %convert_element_type.2185 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.283)
  %all-gather.274 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2185), channel_id=277, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.373 = bf16[2,8192,4096]{2,1,0} dot(%add_any.192, %all-gather.274), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.644 = bf16[2,8192,4096]{2,1,0} copy(%dot.373)
  %add_any.193 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.642, %sharding_constraint.644)
  %sharding_constraint.645 = bf16[2,8192,4096]{2,1,0} copy(%add_any.193)
  %get-tuple-element.284 = f32[4096]{0} get-tuple-element(%remat2.58), index=15
  %convert_element_type.2186 = bf16[4096]{0} convert(%get-tuple-element.284)
  %mul.3586 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2186), dimensions={2}
  %mul.3587 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.645, %mul.3586)
  %convert_element_type.2187 = f32[2,8192,4096]{2,1,0} convert(%mul.3587)
  %convert_element_type.2188 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.632)
  %square.80 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2188, %convert_element_type.2188)
  %reduce.342 = f32[2,8192]{1,0} reduce(%square.80, %constant.2882), dimensions={2}, to_apply=%region_214.12680
  %div.1307 = f32[2,8192]{1,0} multiply(%reduce.342, %broadcast.5097)
  %add.2521 = f32[2,8192]{1,0} add(%div.1307, %broadcast.5098)
  %add.2522 = f32[2,8192,1]{2,1,0} reshape(%add.2521)
  %rsqrt.142 = f32[2,8192,1]{2,1,0} rsqrt(%add.2522)
  %mul.3588 = f32[2,8192]{1,0} reshape(%rsqrt.142)
  %mul.3589 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3588), dimensions={0,1}
  %mul.3590 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2187, %mul.3589)
  %mul.3591 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2188, %convert_element_type.2187)
  %reduce.343 = f32[2,8192]{1,0} reduce(%mul.3591, %constant.2882), dimensions={2}, to_apply=%region_215.12693
  %reshape.8495 = f32[2,8192,1]{2,1,0} reshape(%reduce.343)
  %div.1308 = f32[2,8192,1]{2,1,0} divide(%rsqrt.142, %add.2522)
  %mul.3592 = f32[2,8192,1]{2,1,0} multiply(%div.1308, %broadcast.5145)
  %mul.3593 = f32[2,8192,1]{2,1,0} multiply(%reshape.8495, %mul.3592)
  %mul.3598 = f32[2,8192,1]{2,1,0} multiply(%mul.3593, %mul.2917)
  %mul.3599 = f32[2,8192]{1,0} reshape(%mul.3598)
  %mul.3600 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3599), dimensions={0,1}
  %mul.3605 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2188, %mul.3600)
  %add_any.194 = f32[2,8192,4096]{2,1,0} add(%mul.3590, %mul.3605)
  %convert_element_type.2189 = bf16[2,8192,4096]{2,1,0} convert(%add_any.194)
  %add_any.195 = bf16[2,8192,4096]{2,1,0} add(%add_any.183, %convert_element_type.2189)
  %sharding_constraint.646 = bf16[2,8192,4096]{2,1,0} copy(%add_any.195)
  %tuple.109 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.175, %reduce_precision.176, %reduce_precision.177, %get-tuple-element.80, %sharding_constraint.506, /*index=5*/%reduce_precision.178, %reduce_precision.179, %reduce_precision.180, %reduce_precision.181, %constant.2935, /*index=10*/%constant.2935, %param.229, %param.230, %param.231, %param.228, /*index=15*/%param.223, %param.225, %param.227, %param.224, %param.226, /*index=20*/%sharding_constraint.374, %param.10, %param.7, %sharding_constraint.646)
  %remat2.59 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.109)
  %get-tuple-element.285 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.59), index=23
  %sharding_constraint.647 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.285)
  %get-tuple-element.286 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.59), index=7
  %neg.165 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.286)
  %exp.166 = bf16[2,8192,14336]{2,1,0} exponential(%neg.165)
  %add.2523 = bf16[2,8192,14336]{2,1,0} add(%exp.166, %jit_silu_.0)
  %div.1309 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2523)
  %mul.3606 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.286, %div.1309)
  %sharding_constraint.648 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.647)
  %get-tuple-element.287 = f32[14336,512]{1,0} get-tuple-element(%remat2.59), index=13
  %convert_element_type.2190 = bf16[14336,512]{1,0} convert(%get-tuple-element.287)
  %all-gather.275 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2190), channel_id=278, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.374 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.648, %all-gather.275), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.649 = bf16[2,8192,14336]{2,1,0} copy(%dot.374)
  %mul.3607 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3606, %sharding_constraint.649)
  %get-tuple-element.288 = f32[512,14336]{1,0} get-tuple-element(%remat2.59), index=12
  %convert_element_type.2191 = bf16[512,14336]{1,0} convert(%get-tuple-element.288)
  %all-gather.276 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2191), channel_id=279, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.375 = bf16[2,8192,4096]{2,1,0} dot(%mul.3607, %all-gather.276), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.289 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.59), index=8
  %mul.3608 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.649, %get-tuple-element.289)
  %mul.3609 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3608, %div.1309)
  %mul.3610 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.286, %mul.3608)
  %sub.232 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1309)
  %mul.3611 = bf16[2,8192,14336]{2,1,0} multiply(%div.1309, %sub.232)
  %mul.3612 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3610, %mul.3611)
  %add_any.196 = bf16[2,8192,14336]{2,1,0} add(%mul.3609, %mul.3612)
  %get-tuple-element.290 = f32[512,14336]{1,0} get-tuple-element(%remat2.59), index=11
  %convert_element_type.2192 = bf16[512,14336]{1,0} convert(%get-tuple-element.290)
  %all-gather.277 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2192), channel_id=280, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.376 = bf16[2,8192,4096]{2,1,0} dot(%add_any.196, %all-gather.277), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.197 = bf16[2,8192,4096]{2,1,0} add(%dot.375, %dot.376)
  %sharding_constraint.650 = bf16[2,8192,4096]{2,1,0} copy(%add_any.197)
  %get-tuple-element.291 = f32[4096]{0} get-tuple-element(%remat2.59), index=14
  %convert_element_type.2195 = bf16[4096]{0} convert(%get-tuple-element.291)
  %mul.3614 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2195), dimensions={2}
  %mul.3615 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.650, %mul.3614)
  %convert_element_type.2196 = f32[2,8192,4096]{2,1,0} convert(%mul.3615)
  %get-tuple-element.292 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.59), index=20
  %sharding_constraint.651 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.292)
  %get-tuple-element.293 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.59), index=6
  %sharding_constraint.652 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.293)
  %add.2524 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.651, %sharding_constraint.652)
  %convert_element_type.2197 = f32[2,8192,4096]{2,1,0} convert(%add.2524)
  %square.81 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2197, %convert_element_type.2197)
  %reduce.344 = f32[2,8192]{1,0} reduce(%square.81, %constant.2882), dimensions={2}, to_apply=%region_216.12771
  %div.1310 = f32[2,8192]{1,0} multiply(%reduce.344, %broadcast.5097)
  %add.2525 = f32[2,8192]{1,0} add(%div.1310, %broadcast.5098)
  %add.2526 = f32[2,8192,1]{2,1,0} reshape(%add.2525)
  %rsqrt.143 = f32[2,8192,1]{2,1,0} rsqrt(%add.2526)
  %mul.3616 = f32[2,8192]{1,0} reshape(%rsqrt.143)
  %mul.3617 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3616), dimensions={0,1}
  %mul.3618 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2196, %mul.3617)
  %mul.3619 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2197, %convert_element_type.2196)
  %reduce.345 = f32[2,8192]{1,0} reduce(%mul.3619, %constant.2882), dimensions={2}, to_apply=%region_217.12784
  %reshape.8496 = f32[2,8192,1]{2,1,0} reshape(%reduce.345)
  %div.1311 = f32[2,8192,1]{2,1,0} divide(%rsqrt.143, %add.2526)
  %mul.3620 = f32[2,8192,1]{2,1,0} multiply(%div.1311, %broadcast.5145)
  %mul.3621 = f32[2,8192,1]{2,1,0} multiply(%reshape.8496, %mul.3620)
  %mul.3622 = f32[2,8192,1]{2,1,0} multiply(%mul.3621, %mul.2917)
  %mul.3623 = f32[2,8192]{1,0} reshape(%mul.3622)
  %mul.3624 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3623), dimensions={0,1}
  %mul.3625 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2197, %mul.3624)
  %add_any.198 = f32[2,8192,4096]{2,1,0} add(%mul.3618, %mul.3625)
  %convert_element_type.2198 = bf16[2,8192,4096]{2,1,0} convert(%add_any.198)
  %add_any.199 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.647, %convert_element_type.2198)
  %get-tuple-element.294 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.59), index=0
  %convert_element_type.2199 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.294)
  %get-tuple-element.295 = s32[2,8192]{1,0} get-tuple-element(%remat2.59), index=22
  %convert_element_type.2200 = f32[2,8192]{1,0} convert(%get-tuple-element.295)
  %div.1312 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2200), dimensions={0,1}
  %div.1321 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1312, %div.371)
  %cos.82 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1321)
  %mul.3629 = f32[2,8192,128]{2,1,0} reshape(%cos.82)
  %mul.3630 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3629), dimensions={0,1,3}
  %mul.3631 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2199, %mul.3630)
  %slice.418 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.294), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.419 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.294), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.235 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.418, %slice.419), dimensions={3}
  %slice.420 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.294), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.421 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.294), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.236 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.420, %slice.421), dimensions={3}
  %select_n.1940 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.235, %concatenate.236)
  %convert_element_type.2206 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1940)
  %sin.78 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1321)
  %mul.3636 = f32[2,8192,128]{2,1,0} reshape(%sin.78)
  %mul.3637 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3636), dimensions={0,1,3}
  %mul.3638 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2206, %mul.3637)
  %get-tuple-element.296 = s32[2]{0} get-tuple-element(%remat2.59), index=9
  %broadcast_in_dim.511 = s32[64,2]{1,0} broadcast(%get-tuple-element.296), dimensions={1}
  %reshape.8503 = s32[128]{0} reshape(%broadcast_in_dim.511)
  %convert_element_type.2207 = f32[128]{0} convert(%reshape.8503)
  %mul.3645 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2207), dimensions={3}
  %mul.3646 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3638, %mul.3645)
  %add.2532 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3631, %mul.3646)
  %convert_element_type.2208 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2532)
  %sharding_constraint.653 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2208)
  %get-tuple-element.297 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.59), index=1
  %convert_element_type.2209 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.297)
  %mul.3651 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3629), dimensions={0,1,3}
  %mul.3652 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2209, %mul.3651)
  %slice.422 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.297), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.423 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.297), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.237 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.422, %slice.423), dimensions={3}
  %slice.424 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.297), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.425 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.297), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.238 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.424, %slice.425), dimensions={3}
  %select_n.1950 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.237, %concatenate.238)
  %convert_element_type.2215 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1950)
  %mul.3655 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3636), dimensions={0,1,3}
  %mul.3656 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2215, %mul.3655)
  %get-tuple-element.298 = s32[2]{0} get-tuple-element(%remat2.59), index=10
  %broadcast_in_dim.513 = s32[64,2]{1,0} broadcast(%get-tuple-element.298), dimensions={1}
  %reshape.8510 = s32[128]{0} reshape(%broadcast_in_dim.513)
  %convert_element_type.2217 = f32[128]{0} convert(%reshape.8510)
  %mul.3658 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2217), dimensions={3}
  %mul.3659 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3656, %mul.3658)
  %add.2535 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3652, %mul.3659)
  %convert_element_type.2218 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2535)
  %sharding_constraint.654 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2218)
  %get-tuple-element.299 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.59), index=2
  %sharding_constraint.655 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.299)
  %get-tuple-element.300 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.59), index=3
  %get-tuple-element.301 = u32[2,4]{1,0} get-tuple-element(%remat2.59), index=4
  %get-tuple-element.302 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.59), index=5
  %sharding_constraint.656 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.302)
  %sharding_constraint.657 = bf16[2,8192,4096]{2,1,0} copy(%add_any.199)
  %get-tuple-element.303 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.59), index=17
  %convert_element_type.2219 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.303)
  %all-gather.278 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2219), channel_id=281, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.377 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.657, %all-gather.278), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.658 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.377)
  %get-tuple-element.304 = s32[2,8192]{1,0} get-tuple-element(%remat2.59), index=21
  %eq.544 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.304), dimensions={0,1}
  %eq.545 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.304), dimensions={0,2}
  %eq.546 = pred[2,8192,8192]{2,1,0} compare(%eq.544, %eq.545), direction=EQ
  %and.640 = pred[2,8192,8192]{2,1,0} and(%eq.546, %and.455)
  %select_n.1951 = f32[2,8192,8192]{2,1,0} select(%and.640, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.992 = pred[2,8192,8192]{2,1,0} compare(%select_n.1951, %broadcast_in_dim.277), direction=NE
  %not.104 = pred[2,8192,8192]{2,1,0} not(%ne.992)
  %convert_element_type.2220 = s32[2,8192,8192]{2,1,0} convert(%not.104)
  %reduce.346 = s32[2,8192]{1,0} reduce(%convert_element_type.2220, %constant.2873), dimensions={1}, to_apply=%region_218.12936
  %reduce_sum.4078 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.346)
  %slice.426 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4078), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.39 = s32[2,1]{1,0} reshape(%slice.426)
  %reshape.8512 = s32[2]{0} reshape(%squeeze.39)
  %lt.779 = pred[2]{0} compare(%reshape.8512, %broadcast.5111), direction=LT
  %select_n.1952 = s32[2]{0} select(%lt.779, %broadcast.5111, %reshape.8512)
  %reduce_window_sum.270 = s32[2]{0} reduce-window(%select_n.1952, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.7
  %concatenate.239 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.270), dimensions={0}
  %reduce.347 = s32[2,8192]{1,0} reduce(%convert_element_type.2220, %constant.2873), dimensions={2}, to_apply=%region_219.12945
  %reduce_sum.4079 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.347)
  %reduce.348 = s32[2,1]{1,0} reduce(%reduce_sum.4079, %constant.2985), dimensions={3,2}, to_apply=%region_220.12951
  %reshape.8514 = s32[2]{0} reshape(%reduce.348)
  %lt.780 = pred[2]{0} compare(%reshape.8514, %broadcast.5111), direction=LT
  %select_n.1953 = s32[2]{0} select(%lt.780, %broadcast.5111, %reshape.8514)
  %reduce_window_sum.271 = s32[2]{0} reduce-window(%select_n.1953, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.7.clone
  %concatenate.240 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.271), dimensions={0}
  %te_fused_attn_backward_ffi.30 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.653, %sharding_constraint.654, %sharding_constraint.655, %constant.2973, %get-tuple-element.300, /*index=5*/%get-tuple-element.301, %sharding_constraint.656, %sharding_constraint.658, %concatenate.239, %concatenate.240, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.305 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.30), index=2
  %sharding_constraint.659 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.305)
  %get-tuple-element.306 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.59), index=19
  %convert_element_type.2222 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.306)
  %all-gather.279 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2222), channel_id=282, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.378 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.659, %all-gather.279), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.307 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.30), index=1
  %sharding_constraint.660 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.307)
  %convert_element_type.2223 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.660)
  %mul.3662 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2223, %mul.3651)
  %convert_element_type.2224 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3662)
  %mul.3664 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2223, %mul.3658)
  %mul.3667 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3664, %mul.3655)
  %convert_element_type.2225 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3667)
  %select_n.1955 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2225, %broadcast.5147)
  %slice.427 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1955), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.58 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.427, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.200 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2224, %pad.58)
  %slice.428 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1955), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.59 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.428, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.201 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.200, %pad.59)
  %select_n.1957 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2225, %broadcast.5147)
  %slice.429 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1957), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.60 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.429, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.202 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.201, %pad.60)
  %slice.430 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1957), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.61 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.430, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.203 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.202, %pad.61)
  %get-tuple-element.308 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.59), index=16
  %convert_element_type.2226 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.308)
  %all-gather.280 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2226), channel_id=283, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.379 = bf16[2,8192,4096]{2,1,0} dot(%add_any.203, %all-gather.280), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.204 = bf16[2,8192,4096]{2,1,0} add(%dot.378, %dot.379)
  %sharding_constraint.661 = bf16[2,8192,4096]{2,1,0} copy(%add_any.204)
  %get-tuple-element.309 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.30), index=0
  %sharding_constraint.662 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.309)
  %convert_element_type.2227 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.662)
  %mul.3670 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2227, %mul.3630)
  %convert_element_type.2228 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3670)
  %mul.3673 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2227, %mul.3645)
  %mul.3678 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3673, %mul.3637)
  %convert_element_type.2229 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3678)
  %select_n.1959 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2229, %broadcast.5148)
  %slice.431 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1959), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.62 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.431, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.205 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2228, %pad.62)
  %slice.432 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1959), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.63 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.432, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.206 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.205, %pad.63)
  %select_n.1961 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2229, %broadcast.5148)
  %slice.433 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1961), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.64 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.433, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.207 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.206, %pad.64)
  %slice.434 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1961), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.65 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.434, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.208 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.207, %pad.65)
  %get-tuple-element.310 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.59), index=18
  %convert_element_type.2230 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.310)
  %all-gather.281 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2230), channel_id=284, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.380 = bf16[2,8192,4096]{2,1,0} dot(%add_any.208, %all-gather.281), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.663 = bf16[2,8192,4096]{2,1,0} copy(%dot.380)
  %add_any.209 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.661, %sharding_constraint.663)
  %sharding_constraint.664 = bf16[2,8192,4096]{2,1,0} copy(%add_any.209)
  %get-tuple-element.311 = f32[4096]{0} get-tuple-element(%remat2.59), index=15
  %convert_element_type.2233 = bf16[4096]{0} convert(%get-tuple-element.311)
  %mul.3681 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2233), dimensions={2}
  %mul.3682 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.664, %mul.3681)
  %convert_element_type.2234 = f32[2,8192,4096]{2,1,0} convert(%mul.3682)
  %convert_element_type.2235 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.651)
  %square.82 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2235, %convert_element_type.2235)
  %reduce.349 = f32[2,8192]{1,0} reduce(%square.82, %constant.2882), dimensions={2}, to_apply=%region_221.13039
  %div.1332 = f32[2,8192]{1,0} multiply(%reduce.349, %broadcast.5097)
  %add.2540 = f32[2,8192]{1,0} add(%div.1332, %broadcast.5098)
  %add.2541 = f32[2,8192,1]{2,1,0} reshape(%add.2540)
  %rsqrt.144 = f32[2,8192,1]{2,1,0} rsqrt(%add.2541)
  %mul.3683 = f32[2,8192]{1,0} reshape(%rsqrt.144)
  %mul.3684 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3683), dimensions={0,1}
  %mul.3685 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2234, %mul.3684)
  %mul.3686 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2235, %convert_element_type.2234)
  %reduce.350 = f32[2,8192]{1,0} reduce(%mul.3686, %constant.2882), dimensions={2}, to_apply=%region_222.13052
  %reshape.8539 = f32[2,8192,1]{2,1,0} reshape(%reduce.350)
  %div.1333 = f32[2,8192,1]{2,1,0} divide(%rsqrt.144, %add.2541)
  %mul.3687 = f32[2,8192,1]{2,1,0} multiply(%div.1333, %broadcast.5145)
  %mul.3689 = f32[2,8192,1]{2,1,0} multiply(%reshape.8539, %mul.3687)
  %mul.3691 = f32[2,8192,1]{2,1,0} multiply(%mul.3689, %mul.2917)
  %mul.3692 = f32[2,8192]{1,0} reshape(%mul.3691)
  %mul.3693 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3692), dimensions={0,1}
  %mul.3694 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2235, %mul.3693)
  %add_any.210 = f32[2,8192,4096]{2,1,0} add(%mul.3685, %mul.3694)
  %convert_element_type.2236 = bf16[2,8192,4096]{2,1,0} convert(%add_any.210)
  %add_any.211 = bf16[2,8192,4096]{2,1,0} add(%add_any.199, %convert_element_type.2236)
  %sharding_constraint.665 = bf16[2,8192,4096]{2,1,0} copy(%add_any.211)
  %tuple.111 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.168, %reduce_precision.169, %reduce_precision.170, %get-tuple-element.78, %sharding_constraint.505, /*index=5*/%reduce_precision.171, %reduce_precision.172, %reduce_precision.173, %reduce_precision.174, %constant.2935, /*index=10*/%constant.2935, %param.220, %param.221, %param.222, %param.219, /*index=15*/%param.214, %param.216, %param.218, %param.215, %param.217, /*index=20*/%sharding_constraint.361, %param.10, %param.7, %sharding_constraint.665)
  %remat2.60 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.111)
  %get-tuple-element.312 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.60), index=23
  %sharding_constraint.666 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.312)
  %get-tuple-element.313 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.60), index=7
  %neg.166 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.313)
  %exp.167 = bf16[2,8192,14336]{2,1,0} exponential(%neg.166)
  %add.2542 = bf16[2,8192,14336]{2,1,0} add(%exp.167, %jit_silu_.0)
  %div.1335 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2542)
  %mul.3695 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.313, %div.1335)
  %sharding_constraint.667 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.666)
  %get-tuple-element.314 = f32[14336,512]{1,0} get-tuple-element(%remat2.60), index=13
  %convert_element_type.2237 = bf16[14336,512]{1,0} convert(%get-tuple-element.314)
  %all-gather.282 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2237), channel_id=285, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.381 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.667, %all-gather.282), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.668 = bf16[2,8192,14336]{2,1,0} copy(%dot.381)
  %mul.3696 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3695, %sharding_constraint.668)
  %get-tuple-element.315 = f32[512,14336]{1,0} get-tuple-element(%remat2.60), index=12
  %convert_element_type.2238 = bf16[512,14336]{1,0} convert(%get-tuple-element.315)
  %all-gather.283 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2238), channel_id=286, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.382 = bf16[2,8192,4096]{2,1,0} dot(%mul.3696, %all-gather.283), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.316 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.60), index=8
  %mul.3697 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.668, %get-tuple-element.316)
  %mul.3698 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3697, %div.1335)
  %mul.3699 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.313, %mul.3697)
  %sub.237 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1335)
  %mul.3700 = bf16[2,8192,14336]{2,1,0} multiply(%div.1335, %sub.237)
  %mul.3701 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3699, %mul.3700)
  %add_any.212 = bf16[2,8192,14336]{2,1,0} add(%mul.3698, %mul.3701)
  %get-tuple-element.317 = f32[512,14336]{1,0} get-tuple-element(%remat2.60), index=11
  %convert_element_type.2239 = bf16[512,14336]{1,0} convert(%get-tuple-element.317)
  %all-gather.284 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2239), channel_id=287, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.383 = bf16[2,8192,4096]{2,1,0} dot(%add_any.212, %all-gather.284), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.213 = bf16[2,8192,4096]{2,1,0} add(%dot.382, %dot.383)
  %sharding_constraint.669 = bf16[2,8192,4096]{2,1,0} copy(%add_any.213)
  %get-tuple-element.318 = f32[4096]{0} get-tuple-element(%remat2.60), index=14
  %convert_element_type.2240 = bf16[4096]{0} convert(%get-tuple-element.318)
  %mul.3702 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2240), dimensions={2}
  %mul.3703 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.669, %mul.3702)
  %convert_element_type.2242 = f32[2,8192,4096]{2,1,0} convert(%mul.3703)
  %get-tuple-element.319 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.60), index=20
  %sharding_constraint.670 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.319)
  %get-tuple-element.320 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.60), index=6
  %sharding_constraint.671 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.320)
  %add.2543 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.670, %sharding_constraint.671)
  %convert_element_type.2243 = f32[2,8192,4096]{2,1,0} convert(%add.2543)
  %square.83 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2243, %convert_element_type.2243)
  %reduce.351 = f32[2,8192]{1,0} reduce(%square.83, %constant.2882), dimensions={2}, to_apply=%region_223.13130
  %div.1336 = f32[2,8192]{1,0} multiply(%reduce.351, %broadcast.5097)
  %add.2544 = f32[2,8192]{1,0} add(%div.1336, %broadcast.5098)
  %add.2545 = f32[2,8192,1]{2,1,0} reshape(%add.2544)
  %rsqrt.145 = f32[2,8192,1]{2,1,0} rsqrt(%add.2545)
  %mul.3704 = f32[2,8192]{1,0} reshape(%rsqrt.145)
  %mul.3705 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3704), dimensions={0,1}
  %mul.3706 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2242, %mul.3705)
  %mul.3707 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2243, %convert_element_type.2242)
  %reduce.352 = f32[2,8192]{1,0} reduce(%mul.3707, %constant.2882), dimensions={2}, to_apply=%region_224.13143
  %reshape.8540 = f32[2,8192,1]{2,1,0} reshape(%reduce.352)
  %div.1337 = f32[2,8192,1]{2,1,0} divide(%rsqrt.145, %add.2545)
  %mul.3708 = f32[2,8192,1]{2,1,0} multiply(%div.1337, %broadcast.5145)
  %mul.3709 = f32[2,8192,1]{2,1,0} multiply(%reshape.8540, %mul.3708)
  %mul.3711 = f32[2,8192,1]{2,1,0} multiply(%mul.3709, %mul.2917)
  %mul.3713 = f32[2,8192]{1,0} reshape(%mul.3711)
  %mul.3718 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3713), dimensions={0,1}
  %mul.3724 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2243, %mul.3718)
  %add_any.214 = f32[2,8192,4096]{2,1,0} add(%mul.3706, %mul.3724)
  %convert_element_type.2245 = bf16[2,8192,4096]{2,1,0} convert(%add_any.214)
  %add_any.215 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.666, %convert_element_type.2245)
  %get-tuple-element.321 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.60), index=0
  %convert_element_type.2246 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.321)
  %get-tuple-element.322 = s32[2,8192]{1,0} get-tuple-element(%remat2.60), index=22
  %convert_element_type.2248 = f32[2,8192]{1,0} convert(%get-tuple-element.322)
  %div.1338 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2248), dimensions={0,1}
  %div.1347 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1338, %div.371)
  %cos.84 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1347)
  %mul.3732 = f32[2,8192,128]{2,1,0} reshape(%cos.84)
  %mul.3733 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3732), dimensions={0,1,3}
  %mul.3734 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2246, %mul.3733)
  %slice.435 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.321), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.436 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.321), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.241 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.435, %slice.436), dimensions={3}
  %slice.437 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.321), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.438 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.321), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.242 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.437, %slice.438), dimensions={3}
  %select_n.1971 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.241, %concatenate.242)
  %convert_element_type.2252 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.1971)
  %sin.80 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1347)
  %mul.3738 = f32[2,8192,128]{2,1,0} reshape(%sin.80)
  %mul.3739 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3738), dimensions={0,1,3}
  %mul.3740 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2252, %mul.3739)
  %get-tuple-element.323 = s32[2]{0} get-tuple-element(%remat2.60), index=9
  %broadcast_in_dim.517 = s32[64,2]{1,0} broadcast(%get-tuple-element.323), dimensions={1}
  %reshape.8548 = s32[128]{0} reshape(%broadcast_in_dim.517)
  %convert_element_type.2253 = f32[128]{0} convert(%reshape.8548)
  %mul.3743 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2253), dimensions={3}
  %mul.3744 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3740, %mul.3743)
  %add.2551 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3734, %mul.3744)
  %convert_element_type.2254 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2551)
  %sharding_constraint.672 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2254)
  %get-tuple-element.324 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.60), index=1
  %convert_element_type.2255 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.324)
  %mul.3750 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3732), dimensions={0,1,3}
  %mul.3751 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2255, %mul.3750)
  %slice.439 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.324), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.440 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.324), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.243 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.439, %slice.440), dimensions={3}
  %slice.441 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.324), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.442 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.324), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.244 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.441, %slice.442), dimensions={3}
  %select_n.1978 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.243, %concatenate.244)
  %convert_element_type.2260 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.1978)
  %mul.3753 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3738), dimensions={0,1,3}
  %mul.3755 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2260, %mul.3753)
  %get-tuple-element.325 = s32[2]{0} get-tuple-element(%remat2.60), index=10
  %broadcast_in_dim.519 = s32[64,2]{1,0} broadcast(%get-tuple-element.325), dimensions={1}
  %reshape.8555 = s32[128]{0} reshape(%broadcast_in_dim.519)
  %convert_element_type.2261 = f32[128]{0} convert(%reshape.8555)
  %mul.3756 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2261), dimensions={3}
  %mul.3757 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3755, %mul.3756)
  %add.2554 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3751, %mul.3757)
  %convert_element_type.2262 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2554)
  %sharding_constraint.673 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2262)
  %get-tuple-element.326 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.60), index=2
  %sharding_constraint.674 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.326)
  %get-tuple-element.327 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.60), index=3
  %get-tuple-element.328 = u32[2,4]{1,0} get-tuple-element(%remat2.60), index=4
  %get-tuple-element.329 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.60), index=5
  %sharding_constraint.675 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.329)
  %sharding_constraint.676 = bf16[2,8192,4096]{2,1,0} copy(%add_any.215)
  %get-tuple-element.330 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.60), index=17
  %convert_element_type.2263 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.330)
  %all-gather.285 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2263), channel_id=288, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.384 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.676, %all-gather.285), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.677 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.384)
  %get-tuple-element.331 = s32[2,8192]{1,0} get-tuple-element(%remat2.60), index=21
  %eq.551 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.331), dimensions={0,1}
  %eq.552 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.331), dimensions={0,2}
  %eq.553 = pred[2,8192,8192]{2,1,0} compare(%eq.551, %eq.552), direction=EQ
  %and.648 = pred[2,8192,8192]{2,1,0} and(%eq.553, %and.455)
  %select_n.1979 = f32[2,8192,8192]{2,1,0} select(%and.648, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1000 = pred[2,8192,8192]{2,1,0} compare(%select_n.1979, %broadcast_in_dim.277), direction=NE
  %not.105 = pred[2,8192,8192]{2,1,0} not(%ne.1000)
  %convert_element_type.2264 = s32[2,8192,8192]{2,1,0} convert(%not.105)
  %reduce.353 = s32[2,8192]{1,0} reduce(%convert_element_type.2264, %constant.2873), dimensions={1}, to_apply=%region_225.13295
  %reduce_sum.4080 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.353)
  %slice.443 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4080), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.40 = s32[2,1]{1,0} reshape(%slice.443)
  %reshape.8557 = s32[2]{0} reshape(%squeeze.40)
  %lt.789 = pred[2]{0} compare(%reshape.8557, %broadcast.5111), direction=LT
  %select_n.1980 = s32[2]{0} select(%lt.789, %broadcast.5111, %reshape.8557)
  %reduce_window_sum.272 = s32[2]{0} reduce-window(%select_n.1980, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.8
  %concatenate.245 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.272), dimensions={0}
  %reduce.354 = s32[2,8192]{1,0} reduce(%convert_element_type.2264, %constant.2873), dimensions={2}, to_apply=%region_226.13304
  %reduce_sum.4081 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.354)
  %reduce.355 = s32[2,1]{1,0} reduce(%reduce_sum.4081, %constant.2985), dimensions={3,2}, to_apply=%region_227.13310
  %reshape.8558 = s32[2]{0} reshape(%reduce.355)
  %lt.790 = pred[2]{0} compare(%reshape.8558, %broadcast.5111), direction=LT
  %select_n.1981 = s32[2]{0} select(%lt.790, %broadcast.5111, %reshape.8558)
  %reduce_window_sum.273 = s32[2]{0} reduce-window(%select_n.1981, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.8.clone
  %concatenate.246 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.273), dimensions={0}
  %te_fused_attn_backward_ffi.35 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.672, %sharding_constraint.673, %sharding_constraint.674, %constant.2973, %get-tuple-element.327, /*index=5*/%get-tuple-element.328, %sharding_constraint.675, %sharding_constraint.677, %concatenate.245, %concatenate.246, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.332 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.35), index=2
  %sharding_constraint.678 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.332)
  %get-tuple-element.333 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.60), index=19
  %convert_element_type.2266 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.333)
  %all-gather.286 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2266), channel_id=289, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.385 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.678, %all-gather.286), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.334 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.35), index=1
  %sharding_constraint.679 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.334)
  %convert_element_type.2267 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.679)
  %mul.3760 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2267, %mul.3750)
  %convert_element_type.2269 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3760)
  %mul.3762 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2267, %mul.3756)
  %mul.3767 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3762, %mul.3753)
  %convert_element_type.2270 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3767)
  %select_n.1988 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2270, %broadcast.5147)
  %slice.444 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1988), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.66 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.444, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.216 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2269, %pad.66)
  %slice.445 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1988), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.67 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.445, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.217 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.216, %pad.67)
  %select_n.1990 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2270, %broadcast.5147)
  %slice.446 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.1990), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.68 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.446, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.218 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.217, %pad.68)
  %slice.447 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.1990), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.69 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.447, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.219 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.218, %pad.69)
  %get-tuple-element.335 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.60), index=16
  %convert_element_type.2271 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.335)
  %all-gather.287 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2271), channel_id=290, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.386 = bf16[2,8192,4096]{2,1,0} dot(%add_any.219, %all-gather.287), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.220 = bf16[2,8192,4096]{2,1,0} add(%dot.385, %dot.386)
  %sharding_constraint.680 = bf16[2,8192,4096]{2,1,0} copy(%add_any.220)
  %get-tuple-element.336 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.35), index=0
  %sharding_constraint.681 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.336)
  %convert_element_type.2272 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.681)
  %mul.3770 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2272, %mul.3733)
  %convert_element_type.2273 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3770)
  %mul.3772 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2272, %mul.3743)
  %mul.3777 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3772, %mul.3739)
  %convert_element_type.2274 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3777)
  %select_n.1992 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2274, %broadcast.5148)
  %slice.448 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1992), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.70 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.448, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.221 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2273, %pad.70)
  %slice.449 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1992), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.71 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.449, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.222 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.221, %pad.71)
  %select_n.1994 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2274, %broadcast.5148)
  %slice.450 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.1994), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.72 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.450, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.223 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.222, %pad.72)
  %slice.451 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.1994), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.73 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.451, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.224 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.223, %pad.73)
  %get-tuple-element.337 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.60), index=18
  %convert_element_type.2275 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.337)
  %all-gather.288 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2275), channel_id=291, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.387 = bf16[2,8192,4096]{2,1,0} dot(%add_any.224, %all-gather.288), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.682 = bf16[2,8192,4096]{2,1,0} copy(%dot.387)
  %add_any.225 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.680, %sharding_constraint.682)
  %sharding_constraint.683 = bf16[2,8192,4096]{2,1,0} copy(%add_any.225)
  %get-tuple-element.338 = f32[4096]{0} get-tuple-element(%remat2.60), index=15
  %convert_element_type.2277 = bf16[4096]{0} convert(%get-tuple-element.338)
  %mul.3778 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2277), dimensions={2}
  %mul.3779 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.683, %mul.3778)
  %convert_element_type.2279 = f32[2,8192,4096]{2,1,0} convert(%mul.3779)
  %convert_element_type.2280 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.670)
  %square.84 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2280, %convert_element_type.2280)
  %reduce.356 = f32[2,8192]{1,0} reduce(%square.84, %constant.2882), dimensions={2}, to_apply=%region_228.13398
  %div.1359 = f32[2,8192]{1,0} multiply(%reduce.356, %broadcast.5097)
  %add.2559 = f32[2,8192]{1,0} add(%div.1359, %broadcast.5098)
  %add.2560 = f32[2,8192,1]{2,1,0} reshape(%add.2559)
  %rsqrt.146 = f32[2,8192,1]{2,1,0} rsqrt(%add.2560)
  %mul.3780 = f32[2,8192]{1,0} reshape(%rsqrt.146)
  %mul.3781 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3780), dimensions={0,1}
  %mul.3782 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2279, %mul.3781)
  %mul.3783 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2280, %convert_element_type.2279)
  %reduce.357 = f32[2,8192]{1,0} reduce(%mul.3783, %constant.2882), dimensions={2}, to_apply=%region_229.13411
  %reshape.8581 = f32[2,8192,1]{2,1,0} reshape(%reduce.357)
  %div.1360 = f32[2,8192,1]{2,1,0} divide(%rsqrt.146, %add.2560)
  %mul.3784 = f32[2,8192,1]{2,1,0} multiply(%div.1360, %broadcast.5145)
  %mul.3788 = f32[2,8192,1]{2,1,0} multiply(%reshape.8581, %mul.3784)
  %mul.3789 = f32[2,8192,1]{2,1,0} multiply(%mul.3788, %mul.2917)
  %mul.3794 = f32[2,8192]{1,0} reshape(%mul.3789)
  %mul.3807 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3794), dimensions={0,1}
  %mul.3808 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2280, %mul.3807)
  %add_any.226 = f32[2,8192,4096]{2,1,0} add(%mul.3782, %mul.3808)
  %convert_element_type.2281 = bf16[2,8192,4096]{2,1,0} convert(%add_any.226)
  %add_any.227 = bf16[2,8192,4096]{2,1,0} add(%add_any.215, %convert_element_type.2281)
  %sharding_constraint.684 = bf16[2,8192,4096]{2,1,0} copy(%add_any.227)
  %tuple.113 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.161, %reduce_precision.162, %reduce_precision.163, %get-tuple-element.76, %sharding_constraint.504, /*index=5*/%reduce_precision.164, %reduce_precision.165, %reduce_precision.166, %reduce_precision.167, %constant.2935, /*index=10*/%constant.2935, %param.211, %param.212, %param.213, %param.210, /*index=15*/%param.205, %param.207, %param.209, %param.206, %param.208, /*index=20*/%sharding_constraint.348, %param.10, %param.7, %sharding_constraint.684)
  %remat2.61 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.113)
  %get-tuple-element.339 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.61), index=23
  %sharding_constraint.685 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.339)
  %get-tuple-element.340 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.61), index=7
  %neg.167 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.340)
  %exp.168 = bf16[2,8192,14336]{2,1,0} exponential(%neg.167)
  %add.2561 = bf16[2,8192,14336]{2,1,0} add(%exp.168, %jit_silu_.0)
  %div.1361 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2561)
  %mul.3809 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.340, %div.1361)
  %sharding_constraint.686 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.685)
  %get-tuple-element.341 = f32[14336,512]{1,0} get-tuple-element(%remat2.61), index=13
  %convert_element_type.2282 = bf16[14336,512]{1,0} convert(%get-tuple-element.341)
  %all-gather.289 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2282), channel_id=292, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.388 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.686, %all-gather.289), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.687 = bf16[2,8192,14336]{2,1,0} copy(%dot.388)
  %mul.3810 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3809, %sharding_constraint.687)
  %get-tuple-element.342 = f32[512,14336]{1,0} get-tuple-element(%remat2.61), index=12
  %convert_element_type.2283 = bf16[512,14336]{1,0} convert(%get-tuple-element.342)
  %all-gather.290 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2283), channel_id=293, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.389 = bf16[2,8192,4096]{2,1,0} dot(%mul.3810, %all-gather.290), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.343 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.61), index=8
  %mul.3811 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.687, %get-tuple-element.343)
  %mul.3812 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3811, %div.1361)
  %mul.3813 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.340, %mul.3811)
  %sub.242 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1361)
  %mul.3814 = bf16[2,8192,14336]{2,1,0} multiply(%div.1361, %sub.242)
  %mul.3815 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3813, %mul.3814)
  %add_any.228 = bf16[2,8192,14336]{2,1,0} add(%mul.3812, %mul.3815)
  %get-tuple-element.344 = f32[512,14336]{1,0} get-tuple-element(%remat2.61), index=11
  %convert_element_type.2284 = bf16[512,14336]{1,0} convert(%get-tuple-element.344)
  %all-gather.291 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2284), channel_id=294, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.390 = bf16[2,8192,4096]{2,1,0} dot(%add_any.228, %all-gather.291), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.229 = bf16[2,8192,4096]{2,1,0} add(%dot.389, %dot.390)
  %sharding_constraint.688 = bf16[2,8192,4096]{2,1,0} copy(%add_any.229)
  %get-tuple-element.345 = f32[4096]{0} get-tuple-element(%remat2.61), index=14
  %convert_element_type.2285 = bf16[4096]{0} convert(%get-tuple-element.345)
  %mul.3816 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2285), dimensions={2}
  %mul.3817 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.688, %mul.3816)
  %convert_element_type.2286 = f32[2,8192,4096]{2,1,0} convert(%mul.3817)
  %get-tuple-element.346 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.61), index=20
  %sharding_constraint.689 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.346)
  %get-tuple-element.347 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.61), index=6
  %sharding_constraint.690 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.347)
  %add.2562 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.689, %sharding_constraint.690)
  %convert_element_type.2287 = f32[2,8192,4096]{2,1,0} convert(%add.2562)
  %square.85 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2287, %convert_element_type.2287)
  %reduce.358 = f32[2,8192]{1,0} reduce(%square.85, %constant.2882), dimensions={2}, to_apply=%region_230.13489
  %div.1362 = f32[2,8192]{1,0} multiply(%reduce.358, %broadcast.5097)
  %add.2563 = f32[2,8192]{1,0} add(%div.1362, %broadcast.5098)
  %add.2564 = f32[2,8192,1]{2,1,0} reshape(%add.2563)
  %rsqrt.147 = f32[2,8192,1]{2,1,0} rsqrt(%add.2564)
  %mul.3818 = f32[2,8192]{1,0} reshape(%rsqrt.147)
  %mul.3819 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3818), dimensions={0,1}
  %mul.3820 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2286, %mul.3819)
  %mul.3821 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2287, %convert_element_type.2286)
  %reduce.359 = f32[2,8192]{1,0} reduce(%mul.3821, %constant.2882), dimensions={2}, to_apply=%region_231.13502
  %reshape.8582 = f32[2,8192,1]{2,1,0} reshape(%reduce.359)
  %div.1363 = f32[2,8192,1]{2,1,0} divide(%rsqrt.147, %add.2564)
  %mul.3822 = f32[2,8192,1]{2,1,0} multiply(%div.1363, %broadcast.5145)
  %mul.3823 = f32[2,8192,1]{2,1,0} multiply(%reshape.8582, %mul.3822)
  %mul.3824 = f32[2,8192,1]{2,1,0} multiply(%mul.3823, %mul.2917)
  %mul.3825 = f32[2,8192]{1,0} reshape(%mul.3824)
  %mul.3826 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3825), dimensions={0,1}
  %mul.3827 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2287, %mul.3826)
  %add_any.230 = f32[2,8192,4096]{2,1,0} add(%mul.3820, %mul.3827)
  %convert_element_type.2288 = bf16[2,8192,4096]{2,1,0} convert(%add_any.230)
  %add_any.231 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.685, %convert_element_type.2288)
  %get-tuple-element.348 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.61), index=0
  %convert_element_type.2289 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.348)
  %get-tuple-element.349 = s32[2,8192]{1,0} get-tuple-element(%remat2.61), index=22
  %convert_element_type.2290 = f32[2,8192]{1,0} convert(%get-tuple-element.349)
  %div.1364 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2290), dimensions={0,1}
  %div.1373 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1364, %div.371)
  %cos.86 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1373)
  %mul.3831 = f32[2,8192,128]{2,1,0} reshape(%cos.86)
  %mul.3832 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3831), dimensions={0,1,3}
  %mul.3833 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2289, %mul.3832)
  %slice.452 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.348), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.453 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.348), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.247 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.452, %slice.453), dimensions={3}
  %slice.454 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.348), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.455 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.348), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.248 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.454, %slice.455), dimensions={3}
  %select_n.2001 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.247, %concatenate.248)
  %convert_element_type.2295 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2001)
  %sin.82 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1373)
  %mul.3834 = f32[2,8192,128]{2,1,0} reshape(%sin.82)
  %mul.3835 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3834), dimensions={0,1,3}
  %mul.3836 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2295, %mul.3835)
  %get-tuple-element.350 = s32[2]{0} get-tuple-element(%remat2.61), index=9
  %broadcast_in_dim.523 = s32[64,2]{1,0} broadcast(%get-tuple-element.350), dimensions={1}
  %reshape.8589 = s32[128]{0} reshape(%broadcast_in_dim.523)
  %convert_element_type.2296 = f32[128]{0} convert(%reshape.8589)
  %mul.3837 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2296), dimensions={3}
  %mul.3838 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3836, %mul.3837)
  %add.2568 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3833, %mul.3838)
  %convert_element_type.2297 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2568)
  %sharding_constraint.691 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2297)
  %get-tuple-element.351 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.61), index=1
  %convert_element_type.2298 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.351)
  %mul.3843 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3831), dimensions={0,1,3}
  %mul.3844 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2298, %mul.3843)
  %slice.456 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.351), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.457 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.351), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.249 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.456, %slice.457), dimensions={3}
  %slice.458 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.351), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.459 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.351), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.250 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.458, %slice.459), dimensions={3}
  %select_n.2014 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.249, %concatenate.250)
  %convert_element_type.2303 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2014)
  %mul.3846 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3834), dimensions={0,1,3}
  %mul.3847 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2303, %mul.3846)
  %get-tuple-element.352 = s32[2]{0} get-tuple-element(%remat2.61), index=10
  %broadcast_in_dim.525 = s32[64,2]{1,0} broadcast(%get-tuple-element.352), dimensions={1}
  %reshape.8597 = s32[128]{0} reshape(%broadcast_in_dim.525)
  %convert_element_type.2304 = f32[128]{0} convert(%reshape.8597)
  %mul.3848 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2304), dimensions={3}
  %mul.3849 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3847, %mul.3848)
  %add.2574 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3844, %mul.3849)
  %convert_element_type.2305 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2574)
  %sharding_constraint.692 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2305)
  %get-tuple-element.353 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.61), index=2
  %sharding_constraint.693 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.353)
  %get-tuple-element.354 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.61), index=3
  %get-tuple-element.355 = u32[2,4]{1,0} get-tuple-element(%remat2.61), index=4
  %get-tuple-element.356 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.61), index=5
  %sharding_constraint.694 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.356)
  %sharding_constraint.695 = bf16[2,8192,4096]{2,1,0} copy(%add_any.231)
  %get-tuple-element.357 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.61), index=17
  %convert_element_type.2306 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.357)
  %all-gather.292 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2306), channel_id=295, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.391 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.695, %all-gather.292), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.696 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.391)
  %get-tuple-element.358 = s32[2,8192]{1,0} get-tuple-element(%remat2.61), index=21
  %eq.558 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.358), dimensions={0,1}
  %eq.559 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.358), dimensions={0,2}
  %eq.560 = pred[2,8192,8192]{2,1,0} compare(%eq.558, %eq.559), direction=EQ
  %and.656 = pred[2,8192,8192]{2,1,0} and(%eq.560, %and.455)
  %select_n.2015 = f32[2,8192,8192]{2,1,0} select(%and.656, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1008 = pred[2,8192,8192]{2,1,0} compare(%select_n.2015, %broadcast_in_dim.277), direction=NE
  %not.106 = pred[2,8192,8192]{2,1,0} not(%ne.1008)
  %convert_element_type.2307 = s32[2,8192,8192]{2,1,0} convert(%not.106)
  %reduce.360 = s32[2,8192]{1,0} reduce(%convert_element_type.2307, %constant.2873), dimensions={1}, to_apply=%region_232.13654
  %reduce_sum.4082 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.360)
  %slice.460 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4082), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.41 = s32[2,1]{1,0} reshape(%slice.460)
  %reshape.8599 = s32[2]{0} reshape(%squeeze.41)
  %lt.799 = pred[2]{0} compare(%reshape.8599, %broadcast.5111), direction=LT
  %select_n.2016 = s32[2]{0} select(%lt.799, %broadcast.5111, %reshape.8599)
  %reduce_window_sum.274 = s32[2]{0} reduce-window(%select_n.2016, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.9
  %concatenate.251 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.274), dimensions={0}
  %reduce.361 = s32[2,8192]{1,0} reduce(%convert_element_type.2307, %constant.2873), dimensions={2}, to_apply=%region_233.13663
  %reduce_sum.4083 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.361)
  %reduce.362 = s32[2,1]{1,0} reduce(%reduce_sum.4083, %constant.2985), dimensions={3,2}, to_apply=%region_234.13669
  %reshape.8600 = s32[2]{0} reshape(%reduce.362)
  %lt.800 = pred[2]{0} compare(%reshape.8600, %broadcast.5111), direction=LT
  %select_n.2017 = s32[2]{0} select(%lt.800, %broadcast.5111, %reshape.8600)
  %reduce_window_sum.275 = s32[2]{0} reduce-window(%select_n.2017, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.9.clone
  %concatenate.252 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.275), dimensions={0}
  %te_fused_attn_backward_ffi.40 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.691, %sharding_constraint.692, %sharding_constraint.693, %constant.2973, %get-tuple-element.354, /*index=5*/%get-tuple-element.355, %sharding_constraint.694, %sharding_constraint.696, %concatenate.251, %concatenate.252, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.359 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.40), index=2
  %sharding_constraint.697 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.359)
  %get-tuple-element.360 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.61), index=19
  %convert_element_type.2310 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.360)
  %all-gather.293 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2310), channel_id=296, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.392 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.697, %all-gather.293), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.361 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.40), index=1
  %sharding_constraint.698 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.361)
  %convert_element_type.2311 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.698)
  %mul.3852 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2311, %mul.3843)
  %convert_element_type.2312 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3852)
  %mul.3854 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2311, %mul.3848)
  %mul.3857 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3854, %mul.3846)
  %convert_element_type.2314 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3857)
  %select_n.2019 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2314, %broadcast.5147)
  %slice.461 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2019), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.74 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.461, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.232 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2312, %pad.74)
  %slice.462 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2019), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.75 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.462, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.233 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.232, %pad.75)
  %select_n.2021 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2314, %broadcast.5147)
  %slice.463 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2021), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.76 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.463, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.234 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.233, %pad.76)
  %slice.464 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2021), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.77 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.464, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.235 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.234, %pad.77)
  %get-tuple-element.362 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.61), index=16
  %convert_element_type.2315 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.362)
  %all-gather.294 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2315), channel_id=297, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.393 = bf16[2,8192,4096]{2,1,0} dot(%add_any.235, %all-gather.294), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.236 = bf16[2,8192,4096]{2,1,0} add(%dot.392, %dot.393)
  %sharding_constraint.699 = bf16[2,8192,4096]{2,1,0} copy(%add_any.236)
  %get-tuple-element.363 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.40), index=0
  %sharding_constraint.700 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.363)
  %convert_element_type.2316 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.700)
  %mul.3860 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2316, %mul.3832)
  %convert_element_type.2317 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3860)
  %mul.3862 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2316, %mul.3837)
  %mul.3865 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3862, %mul.3835)
  %convert_element_type.2319 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3865)
  %select_n.2023 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2319, %broadcast.5148)
  %slice.465 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2023), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.78 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.465, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.237 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2317, %pad.78)
  %slice.466 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2023), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.79 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.466, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.238 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.237, %pad.79)
  %select_n.2025 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2319, %broadcast.5148)
  %slice.467 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2025), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.80 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.467, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.239 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.238, %pad.80)
  %slice.468 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2025), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.81 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.468, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.240 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.239, %pad.81)
  %get-tuple-element.364 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.61), index=18
  %convert_element_type.2320 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.364)
  %all-gather.295 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2320), channel_id=298, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.394 = bf16[2,8192,4096]{2,1,0} dot(%add_any.240, %all-gather.295), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.701 = bf16[2,8192,4096]{2,1,0} copy(%dot.394)
  %add_any.241 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.699, %sharding_constraint.701)
  %sharding_constraint.702 = bf16[2,8192,4096]{2,1,0} copy(%add_any.241)
  %get-tuple-element.365 = f32[4096]{0} get-tuple-element(%remat2.61), index=15
  %convert_element_type.2321 = bf16[4096]{0} convert(%get-tuple-element.365)
  %mul.3866 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2321), dimensions={2}
  %mul.3869 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.702, %mul.3866)
  %convert_element_type.2322 = f32[2,8192,4096]{2,1,0} convert(%mul.3869)
  %convert_element_type.2323 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.689)
  %square.86 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2323, %convert_element_type.2323)
  %reduce.363 = f32[2,8192]{1,0} reduce(%square.86, %constant.2882), dimensions={2}, to_apply=%region_235.13757
  %div.1385 = f32[2,8192]{1,0} multiply(%reduce.363, %broadcast.5097)
  %add.2579 = f32[2,8192]{1,0} add(%div.1385, %broadcast.5098)
  %add.2580 = f32[2,8192,1]{2,1,0} reshape(%add.2579)
  %rsqrt.148 = f32[2,8192,1]{2,1,0} rsqrt(%add.2580)
  %mul.3870 = f32[2,8192]{1,0} reshape(%rsqrt.148)
  %mul.3873 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3870), dimensions={0,1}
  %mul.3874 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2322, %mul.3873)
  %mul.3879 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2323, %convert_element_type.2322)
  %reduce.364 = f32[2,8192]{1,0} reduce(%mul.3879, %constant.2882), dimensions={2}, to_apply=%region_236.13770
  %reshape.8621 = f32[2,8192,1]{2,1,0} reshape(%reduce.364)
  %div.1386 = f32[2,8192,1]{2,1,0} divide(%rsqrt.148, %add.2580)
  %mul.3880 = f32[2,8192,1]{2,1,0} multiply(%div.1386, %broadcast.5145)
  %mul.3886 = f32[2,8192,1]{2,1,0} multiply(%reshape.8621, %mul.3880)
  %mul.3887 = f32[2,8192,1]{2,1,0} multiply(%mul.3886, %mul.2917)
  %mul.3888 = f32[2,8192]{1,0} reshape(%mul.3887)
  %mul.3889 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3888), dimensions={0,1}
  %mul.3890 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2323, %mul.3889)
  %add_any.242 = f32[2,8192,4096]{2,1,0} add(%mul.3874, %mul.3890)
  %convert_element_type.2324 = bf16[2,8192,4096]{2,1,0} convert(%add_any.242)
  %add_any.243 = bf16[2,8192,4096]{2,1,0} add(%add_any.231, %convert_element_type.2324)
  %sharding_constraint.703 = bf16[2,8192,4096]{2,1,0} copy(%add_any.243)
  %tuple.115 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.154, %reduce_precision.155, %reduce_precision.156, %get-tuple-element.74, %sharding_constraint.503, /*index=5*/%reduce_precision.157, %reduce_precision.158, %reduce_precision.159, %reduce_precision.160, %constant.2935, /*index=10*/%constant.2935, %param.202, %param.203, %param.204, %param.201, /*index=15*/%param.196, %param.198, %param.200, %param.197, %param.199, /*index=20*/%sharding_constraint.335, %param.10, %param.7, %sharding_constraint.703)
  %remat2.62 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.115)
  %get-tuple-element.366 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.62), index=23
  %sharding_constraint.704 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.366)
  %get-tuple-element.367 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.62), index=7
  %neg.168 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.367)
  %exp.169 = bf16[2,8192,14336]{2,1,0} exponential(%neg.168)
  %add.2581 = bf16[2,8192,14336]{2,1,0} add(%exp.169, %jit_silu_.0)
  %div.1387 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2581)
  %mul.3891 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.367, %div.1387)
  %sharding_constraint.705 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.704)
  %get-tuple-element.368 = f32[14336,512]{1,0} get-tuple-element(%remat2.62), index=13
  %convert_element_type.2326 = bf16[14336,512]{1,0} convert(%get-tuple-element.368)
  %all-gather.296 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2326), channel_id=299, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.395 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.705, %all-gather.296), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.706 = bf16[2,8192,14336]{2,1,0} copy(%dot.395)
  %mul.3892 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3891, %sharding_constraint.706)
  %get-tuple-element.369 = f32[512,14336]{1,0} get-tuple-element(%remat2.62), index=12
  %convert_element_type.2327 = bf16[512,14336]{1,0} convert(%get-tuple-element.369)
  %all-gather.297 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2327), channel_id=300, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.396 = bf16[2,8192,4096]{2,1,0} dot(%mul.3892, %all-gather.297), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.370 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.62), index=8
  %mul.3893 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.706, %get-tuple-element.370)
  %mul.3895 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3893, %div.1387)
  %mul.3896 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.367, %mul.3893)
  %sub.247 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1387)
  %mul.3897 = bf16[2,8192,14336]{2,1,0} multiply(%div.1387, %sub.247)
  %mul.3898 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3896, %mul.3897)
  %add_any.244 = bf16[2,8192,14336]{2,1,0} add(%mul.3895, %mul.3898)
  %get-tuple-element.371 = f32[512,14336]{1,0} get-tuple-element(%remat2.62), index=11
  %convert_element_type.2328 = bf16[512,14336]{1,0} convert(%get-tuple-element.371)
  %all-gather.298 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2328), channel_id=301, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.397 = bf16[2,8192,4096]{2,1,0} dot(%add_any.244, %all-gather.298), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.245 = bf16[2,8192,4096]{2,1,0} add(%dot.396, %dot.397)
  %sharding_constraint.707 = bf16[2,8192,4096]{2,1,0} copy(%add_any.245)
  %get-tuple-element.372 = f32[4096]{0} get-tuple-element(%remat2.62), index=14
  %convert_element_type.2329 = bf16[4096]{0} convert(%get-tuple-element.372)
  %mul.3899 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2329), dimensions={2}
  %mul.3900 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.707, %mul.3899)
  %convert_element_type.2330 = f32[2,8192,4096]{2,1,0} convert(%mul.3900)
  %get-tuple-element.373 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.62), index=20
  %sharding_constraint.708 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.373)
  %get-tuple-element.374 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.62), index=6
  %sharding_constraint.709 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.374)
  %add.2582 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.708, %sharding_constraint.709)
  %convert_element_type.2331 = f32[2,8192,4096]{2,1,0} convert(%add.2582)
  %square.87 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2331, %convert_element_type.2331)
  %reduce.365 = f32[2,8192]{1,0} reduce(%square.87, %constant.2882), dimensions={2}, to_apply=%region_237.13848
  %div.1388 = f32[2,8192]{1,0} multiply(%reduce.365, %broadcast.5097)
  %add.2583 = f32[2,8192]{1,0} add(%div.1388, %broadcast.5098)
  %add.2584 = f32[2,8192,1]{2,1,0} reshape(%add.2583)
  %rsqrt.149 = f32[2,8192,1]{2,1,0} rsqrt(%add.2584)
  %mul.3901 = f32[2,8192]{1,0} reshape(%rsqrt.149)
  %mul.3902 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3901), dimensions={0,1}
  %mul.3905 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2330, %mul.3902)
  %mul.3906 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2331, %convert_element_type.2330)
  %reduce.366 = f32[2,8192]{1,0} reduce(%mul.3906, %constant.2882), dimensions={2}, to_apply=%region_238.13861
  %reshape.8622 = f32[2,8192,1]{2,1,0} reshape(%reduce.366)
  %div.1389 = f32[2,8192,1]{2,1,0} divide(%rsqrt.149, %add.2584)
  %mul.3909 = f32[2,8192,1]{2,1,0} multiply(%div.1389, %broadcast.5145)
  %mul.3910 = f32[2,8192,1]{2,1,0} multiply(%reshape.8622, %mul.3909)
  %mul.3911 = f32[2,8192,1]{2,1,0} multiply(%mul.3910, %mul.2917)
  %mul.3912 = f32[2,8192]{1,0} reshape(%mul.3911)
  %mul.3917 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3912), dimensions={0,1}
  %mul.3919 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2331, %mul.3917)
  %add_any.246 = f32[2,8192,4096]{2,1,0} add(%mul.3905, %mul.3919)
  %convert_element_type.2332 = bf16[2,8192,4096]{2,1,0} convert(%add_any.246)
  %add_any.247 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.704, %convert_element_type.2332)
  %get-tuple-element.375 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.62), index=0
  %convert_element_type.2333 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.375)
  %get-tuple-element.376 = s32[2,8192]{1,0} get-tuple-element(%remat2.62), index=22
  %convert_element_type.2334 = f32[2,8192]{1,0} convert(%get-tuple-element.376)
  %div.1390 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2334), dimensions={0,1}
  %div.1399 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1390, %div.371)
  %cos.88 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1399)
  %mul.3927 = f32[2,8192,128]{2,1,0} reshape(%cos.88)
  %mul.3928 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3927), dimensions={0,1,3}
  %mul.3929 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2333, %mul.3928)
  %slice.469 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.375), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.470 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.375), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.253 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.469, %slice.470), dimensions={3}
  %slice.471 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.375), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.472 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.375), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.254 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.471, %slice.472), dimensions={3}
  %select_n.2035 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.253, %concatenate.254)
  %convert_element_type.2338 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2035)
  %sin.84 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1399)
  %mul.3930 = f32[2,8192,128]{2,1,0} reshape(%sin.84)
  %mul.3931 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.3930), dimensions={0,1,3}
  %mul.3932 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2338, %mul.3931)
  %get-tuple-element.377 = s32[2]{0} get-tuple-element(%remat2.62), index=9
  %broadcast_in_dim.529 = s32[64,2]{1,0} broadcast(%get-tuple-element.377), dimensions={1}
  %reshape.8629 = s32[128]{0} reshape(%broadcast_in_dim.529)
  %convert_element_type.2339 = f32[128]{0} convert(%reshape.8629)
  %mul.3933 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2339), dimensions={3}
  %mul.3934 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3932, %mul.3933)
  %add.2587 = f32[2,8192,32,128]{3,2,1,0} add(%mul.3929, %mul.3934)
  %convert_element_type.2340 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2587)
  %sharding_constraint.710 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2340)
  %get-tuple-element.378 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.62), index=1
  %convert_element_type.2341 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.378)
  %mul.3941 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3927), dimensions={0,1,3}
  %mul.3942 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2341, %mul.3941)
  %slice.473 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.378), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.474 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.378), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.255 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.473, %slice.474), dimensions={3}
  %slice.475 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.378), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.476 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.378), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.256 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.475, %slice.476), dimensions={3}
  %select_n.2042 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.255, %concatenate.256)
  %convert_element_type.2347 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2042)
  %mul.3944 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.3930), dimensions={0,1,3}
  %mul.3945 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2347, %mul.3944)
  %get-tuple-element.379 = s32[2]{0} get-tuple-element(%remat2.62), index=10
  %broadcast_in_dim.531 = s32[64,2]{1,0} broadcast(%get-tuple-element.379), dimensions={1}
  %reshape.8636 = s32[128]{0} reshape(%broadcast_in_dim.531)
  %convert_element_type.2348 = f32[128]{0} convert(%reshape.8636)
  %mul.3946 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2348), dimensions={3}
  %mul.3947 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3945, %mul.3946)
  %add.2593 = f32[2,8192,8,128]{3,2,1,0} add(%mul.3942, %mul.3947)
  %convert_element_type.2349 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2593)
  %sharding_constraint.711 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2349)
  %get-tuple-element.380 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.62), index=2
  %sharding_constraint.712 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.380)
  %get-tuple-element.381 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.62), index=3
  %get-tuple-element.382 = u32[2,4]{1,0} get-tuple-element(%remat2.62), index=4
  %get-tuple-element.383 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.62), index=5
  %sharding_constraint.713 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.383)
  %sharding_constraint.714 = bf16[2,8192,4096]{2,1,0} copy(%add_any.247)
  %get-tuple-element.384 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.62), index=17
  %convert_element_type.2350 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.384)
  %all-gather.299 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2350), channel_id=302, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.398 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.714, %all-gather.299), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.715 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.398)
  %get-tuple-element.385 = s32[2,8192]{1,0} get-tuple-element(%remat2.62), index=21
  %eq.565 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.385), dimensions={0,1}
  %eq.566 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.385), dimensions={0,2}
  %eq.567 = pred[2,8192,8192]{2,1,0} compare(%eq.565, %eq.566), direction=EQ
  %and.664 = pred[2,8192,8192]{2,1,0} and(%eq.567, %and.455)
  %select_n.2043 = f32[2,8192,8192]{2,1,0} select(%and.664, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1016 = pred[2,8192,8192]{2,1,0} compare(%select_n.2043, %broadcast_in_dim.277), direction=NE
  %not.107 = pred[2,8192,8192]{2,1,0} not(%ne.1016)
  %convert_element_type.2351 = s32[2,8192,8192]{2,1,0} convert(%not.107)
  %reduce.367 = s32[2,8192]{1,0} reduce(%convert_element_type.2351, %constant.2873), dimensions={1}, to_apply=%region_239.14013
  %reduce_sum.4084 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.367)
  %slice.477 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4084), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.42 = s32[2,1]{1,0} reshape(%slice.477)
  %reshape.8638 = s32[2]{0} reshape(%squeeze.42)
  %lt.809 = pred[2]{0} compare(%reshape.8638, %broadcast.5111), direction=LT
  %select_n.2044 = s32[2]{0} select(%lt.809, %broadcast.5111, %reshape.8638)
  %reduce_window_sum.276 = s32[2]{0} reduce-window(%select_n.2044, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.10
  %concatenate.257 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.276), dimensions={0}
  %reduce.368 = s32[2,8192]{1,0} reduce(%convert_element_type.2351, %constant.2873), dimensions={2}, to_apply=%region_240.14022
  %reduce_sum.4085 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.368)
  %reduce.369 = s32[2,1]{1,0} reduce(%reduce_sum.4085, %constant.2985), dimensions={3,2}, to_apply=%region_241.14028
  %reshape.8639 = s32[2]{0} reshape(%reduce.369)
  %lt.810 = pred[2]{0} compare(%reshape.8639, %broadcast.5111), direction=LT
  %select_n.2045 = s32[2]{0} select(%lt.810, %broadcast.5111, %reshape.8639)
  %reduce_window_sum.277 = s32[2]{0} reduce-window(%select_n.2045, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.10.clone
  %concatenate.258 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.277), dimensions={0}
  %te_fused_attn_backward_ffi.45 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.710, %sharding_constraint.711, %sharding_constraint.712, %constant.2973, %get-tuple-element.381, /*index=5*/%get-tuple-element.382, %sharding_constraint.713, %sharding_constraint.715, %concatenate.257, %concatenate.258, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.386 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.45), index=2
  %sharding_constraint.716 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.386)
  %get-tuple-element.387 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.62), index=19
  %convert_element_type.2355 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.387)
  %all-gather.300 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2355), channel_id=303, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.399 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.716, %all-gather.300), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.388 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.45), index=1
  %sharding_constraint.717 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.388)
  %convert_element_type.2356 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.717)
  %mul.3954 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2356, %mul.3941)
  %convert_element_type.2357 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3954)
  %mul.3956 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2356, %mul.3946)
  %mul.3959 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.3956, %mul.3944)
  %convert_element_type.2358 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.3959)
  %select_n.2050 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2358, %broadcast.5147)
  %slice.478 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2050), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.82 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.478, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.248 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2357, %pad.82)
  %slice.479 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2050), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.83 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.479, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.249 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.248, %pad.83)
  %select_n.2052 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2358, %broadcast.5147)
  %slice.480 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2052), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.84 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.480, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.250 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.249, %pad.84)
  %slice.481 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2052), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.85 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.481, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.251 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.250, %pad.85)
  %get-tuple-element.389 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.62), index=16
  %convert_element_type.2359 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.389)
  %all-gather.301 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2359), channel_id=304, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.400 = bf16[2,8192,4096]{2,1,0} dot(%add_any.251, %all-gather.301), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.252 = bf16[2,8192,4096]{2,1,0} add(%dot.399, %dot.400)
  %sharding_constraint.718 = bf16[2,8192,4096]{2,1,0} copy(%add_any.252)
  %get-tuple-element.390 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.45), index=0
  %sharding_constraint.719 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.390)
  %convert_element_type.2360 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.719)
  %mul.3962 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2360, %mul.3928)
  %convert_element_type.2361 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3962)
  %mul.3967 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2360, %mul.3933)
  %mul.3973 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.3967, %mul.3931)
  %convert_element_type.2362 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.3973)
  %select_n.2054 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2362, %broadcast.5148)
  %slice.482 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2054), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.86 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.482, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.253 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2361, %pad.86)
  %slice.483 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2054), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.87 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.483, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.254 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.253, %pad.87)
  %select_n.2056 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2362, %broadcast.5148)
  %slice.484 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2056), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.88 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.484, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.255 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.254, %pad.88)
  %slice.485 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2056), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.89 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.485, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.256 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.255, %pad.89)
  %get-tuple-element.391 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.62), index=18
  %convert_element_type.2363 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.391)
  %all-gather.302 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2363), channel_id=305, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.401 = bf16[2,8192,4096]{2,1,0} dot(%add_any.256, %all-gather.302), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.720 = bf16[2,8192,4096]{2,1,0} copy(%dot.401)
  %add_any.257 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.718, %sharding_constraint.720)
  %sharding_constraint.721 = bf16[2,8192,4096]{2,1,0} copy(%add_any.257)
  %get-tuple-element.392 = f32[4096]{0} get-tuple-element(%remat2.62), index=15
  %convert_element_type.2364 = bf16[4096]{0} convert(%get-tuple-element.392)
  %mul.3974 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2364), dimensions={2}
  %mul.3975 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.721, %mul.3974)
  %convert_element_type.2365 = f32[2,8192,4096]{2,1,0} convert(%mul.3975)
  %convert_element_type.2366 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.708)
  %square.88 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2366, %convert_element_type.2366)
  %reduce.370 = f32[2,8192]{1,0} reduce(%square.88, %constant.2882), dimensions={2}, to_apply=%region_242.14116
  %div.1410 = f32[2,8192]{1,0} multiply(%reduce.370, %broadcast.5097)
  %add.2598 = f32[2,8192]{1,0} add(%div.1410, %broadcast.5098)
  %add.2599 = f32[2,8192,1]{2,1,0} reshape(%add.2598)
  %rsqrt.150 = f32[2,8192,1]{2,1,0} rsqrt(%add.2599)
  %mul.3976 = f32[2,8192]{1,0} reshape(%rsqrt.150)
  %mul.3977 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3976), dimensions={0,1}
  %mul.3978 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2365, %mul.3977)
  %mul.3979 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2366, %convert_element_type.2365)
  %reduce.371 = f32[2,8192]{1,0} reduce(%mul.3979, %constant.2882), dimensions={2}, to_apply=%region_243.14129
  %reshape.8660 = f32[2,8192,1]{2,1,0} reshape(%reduce.371)
  %div.1411 = f32[2,8192,1]{2,1,0} divide(%rsqrt.150, %add.2599)
  %mul.3980 = f32[2,8192,1]{2,1,0} multiply(%div.1411, %broadcast.5145)
  %mul.3981 = f32[2,8192,1]{2,1,0} multiply(%reshape.8660, %mul.3980)
  %mul.3983 = f32[2,8192,1]{2,1,0} multiply(%mul.3981, %mul.2917)
  %mul.3984 = f32[2,8192]{1,0} reshape(%mul.3983)
  %mul.3985 = f32[2,8192,4096]{2,1,0} broadcast(%mul.3984), dimensions={0,1}
  %mul.3986 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2366, %mul.3985)
  %add_any.258 = f32[2,8192,4096]{2,1,0} add(%mul.3978, %mul.3986)
  %convert_element_type.2367 = bf16[2,8192,4096]{2,1,0} convert(%add_any.258)
  %add_any.259 = bf16[2,8192,4096]{2,1,0} add(%add_any.247, %convert_element_type.2367)
  %sharding_constraint.722 = bf16[2,8192,4096]{2,1,0} copy(%add_any.259)
  %tuple.117 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.147, %reduce_precision.148, %reduce_precision.149, %get-tuple-element.72, %sharding_constraint.502, /*index=5*/%reduce_precision.150, %reduce_precision.151, %reduce_precision.152, %reduce_precision.153, %constant.2935, /*index=10*/%constant.2935, %param.193, %param.194, %param.195, %param.192, /*index=15*/%param.187, %param.189, %param.191, %param.188, %param.190, /*index=20*/%sharding_constraint.322, %param.10, %param.7, %sharding_constraint.722)
  %remat2.63 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.117)
  %get-tuple-element.393 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.63), index=23
  %sharding_constraint.723 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.393)
  %get-tuple-element.394 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.63), index=7
  %neg.169 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.394)
  %exp.170 = bf16[2,8192,14336]{2,1,0} exponential(%neg.169)
  %add.2600 = bf16[2,8192,14336]{2,1,0} add(%exp.170, %jit_silu_.0)
  %div.1412 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2600)
  %mul.3987 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.394, %div.1412)
  %sharding_constraint.724 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.723)
  %get-tuple-element.395 = f32[14336,512]{1,0} get-tuple-element(%remat2.63), index=13
  %convert_element_type.2368 = bf16[14336,512]{1,0} convert(%get-tuple-element.395)
  %all-gather.303 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2368), channel_id=306, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.402 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.724, %all-gather.303), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.725 = bf16[2,8192,14336]{2,1,0} copy(%dot.402)
  %mul.3988 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3987, %sharding_constraint.725)
  %get-tuple-element.396 = f32[512,14336]{1,0} get-tuple-element(%remat2.63), index=12
  %convert_element_type.2369 = bf16[512,14336]{1,0} convert(%get-tuple-element.396)
  %all-gather.304 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2369), channel_id=307, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.403 = bf16[2,8192,4096]{2,1,0} dot(%mul.3988, %all-gather.304), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.397 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.63), index=8
  %mul.3989 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.725, %get-tuple-element.397)
  %mul.3990 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3989, %div.1412)
  %mul.3991 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.394, %mul.3989)
  %sub.252 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1412)
  %mul.3992 = bf16[2,8192,14336]{2,1,0} multiply(%div.1412, %sub.252)
  %mul.3993 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3991, %mul.3992)
  %add_any.260 = bf16[2,8192,14336]{2,1,0} add(%mul.3990, %mul.3993)
  %get-tuple-element.398 = f32[512,14336]{1,0} get-tuple-element(%remat2.63), index=11
  %convert_element_type.2371 = bf16[512,14336]{1,0} convert(%get-tuple-element.398)
  %all-gather.305 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2371), channel_id=308, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.404 = bf16[2,8192,4096]{2,1,0} dot(%add_any.260, %all-gather.305), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.261 = bf16[2,8192,4096]{2,1,0} add(%dot.403, %dot.404)
  %sharding_constraint.726 = bf16[2,8192,4096]{2,1,0} copy(%add_any.261)
  %get-tuple-element.399 = f32[4096]{0} get-tuple-element(%remat2.63), index=14
  %convert_element_type.2372 = bf16[4096]{0} convert(%get-tuple-element.399)
  %mul.3994 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2372), dimensions={2}
  %mul.3999 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.726, %mul.3994)
  %convert_element_type.2373 = f32[2,8192,4096]{2,1,0} convert(%mul.3999)
  %get-tuple-element.400 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.63), index=20
  %sharding_constraint.727 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.400)
  %get-tuple-element.401 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.63), index=6
  %sharding_constraint.728 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.401)
  %add.2601 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.727, %sharding_constraint.728)
  %convert_element_type.2374 = f32[2,8192,4096]{2,1,0} convert(%add.2601)
  %square.89 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2374, %convert_element_type.2374)
  %reduce.372 = f32[2,8192]{1,0} reduce(%square.89, %constant.2882), dimensions={2}, to_apply=%region_244.14207
  %div.1413 = f32[2,8192]{1,0} multiply(%reduce.372, %broadcast.5097)
  %add.2602 = f32[2,8192]{1,0} add(%div.1413, %broadcast.5098)
  %add.2603 = f32[2,8192,1]{2,1,0} reshape(%add.2602)
  %rsqrt.151 = f32[2,8192,1]{2,1,0} rsqrt(%add.2603)
  %mul.4005 = f32[2,8192]{1,0} reshape(%rsqrt.151)
  %mul.4010 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4005), dimensions={0,1}
  %mul.4011 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2373, %mul.4010)
  %mul.4012 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2374, %convert_element_type.2373)
  %reduce.373 = f32[2,8192]{1,0} reduce(%mul.4012, %constant.2882), dimensions={2}, to_apply=%region_245.14220
  %reshape.8661 = f32[2,8192,1]{2,1,0} reshape(%reduce.373)
  %div.1414 = f32[2,8192,1]{2,1,0} divide(%rsqrt.151, %add.2603)
  %mul.4016 = f32[2,8192,1]{2,1,0} multiply(%div.1414, %broadcast.5145)
  %mul.4017 = f32[2,8192,1]{2,1,0} multiply(%reshape.8661, %mul.4016)
  %mul.4018 = f32[2,8192,1]{2,1,0} multiply(%mul.4017, %mul.2917)
  %mul.4019 = f32[2,8192]{1,0} reshape(%mul.4018)
  %mul.4020 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4019), dimensions={0,1}
  %mul.4021 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2374, %mul.4020)
  %add_any.262 = f32[2,8192,4096]{2,1,0} add(%mul.4011, %mul.4021)
  %convert_element_type.2375 = bf16[2,8192,4096]{2,1,0} convert(%add_any.262)
  %add_any.263 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.723, %convert_element_type.2375)
  %get-tuple-element.402 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.63), index=0
  %convert_element_type.2376 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.402)
  %get-tuple-element.403 = s32[2,8192]{1,0} get-tuple-element(%remat2.63), index=22
  %convert_element_type.2377 = f32[2,8192]{1,0} convert(%get-tuple-element.403)
  %div.1415 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2377), dimensions={0,1}
  %div.1424 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1415, %div.371)
  %cos.90 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1424)
  %mul.4025 = f32[2,8192,128]{2,1,0} reshape(%cos.90)
  %mul.4026 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4025), dimensions={0,1,3}
  %mul.4030 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2376, %mul.4026)
  %slice.486 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.402), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.487 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.402), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.259 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.486, %slice.487), dimensions={3}
  %slice.488 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.402), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.489 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.402), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.260 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.488, %slice.489), dimensions={3}
  %select_n.2065 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.259, %concatenate.260)
  %convert_element_type.2381 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2065)
  %sin.86 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1424)
  %mul.4031 = f32[2,8192,128]{2,1,0} reshape(%sin.86)
  %mul.4032 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4031), dimensions={0,1,3}
  %mul.4035 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2381, %mul.4032)
  %get-tuple-element.404 = s32[2]{0} get-tuple-element(%remat2.63), index=9
  %broadcast_in_dim.535 = s32[64,2]{1,0} broadcast(%get-tuple-element.404), dimensions={1}
  %reshape.8668 = s32[128]{0} reshape(%broadcast_in_dim.535)
  %convert_element_type.2382 = f32[128]{0} convert(%reshape.8668)
  %mul.4036 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2382), dimensions={3}
  %mul.4037 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4035, %mul.4036)
  %add.2607 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4030, %mul.4037)
  %convert_element_type.2383 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2607)
  %sharding_constraint.729 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2383)
  %get-tuple-element.405 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.63), index=1
  %convert_element_type.2385 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.405)
  %mul.4042 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4025), dimensions={0,1,3}
  %mul.4043 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2385, %mul.4042)
  %slice.490 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.405), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.491 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.405), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.261 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.490, %slice.491), dimensions={3}
  %slice.492 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.405), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.493 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.405), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.262 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.492, %slice.493), dimensions={3}
  %select_n.2075 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.261, %concatenate.262)
  %convert_element_type.2391 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2075)
  %mul.4046 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4031), dimensions={0,1,3}
  %mul.4048 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2391, %mul.4046)
  %get-tuple-element.406 = s32[2]{0} get-tuple-element(%remat2.63), index=10
  %broadcast_in_dim.537 = s32[64,2]{1,0} broadcast(%get-tuple-element.406), dimensions={1}
  %reshape.8675 = s32[128]{0} reshape(%broadcast_in_dim.537)
  %convert_element_type.2392 = f32[128]{0} convert(%reshape.8675)
  %mul.4049 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2392), dimensions={3}
  %mul.4050 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4048, %mul.4049)
  %add.2610 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4043, %mul.4050)
  %convert_element_type.2393 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2610)
  %sharding_constraint.730 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2393)
  %get-tuple-element.407 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.63), index=2
  %sharding_constraint.731 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.407)
  %get-tuple-element.408 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.63), index=3
  %get-tuple-element.409 = u32[2,4]{1,0} get-tuple-element(%remat2.63), index=4
  %get-tuple-element.410 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.63), index=5
  %sharding_constraint.732 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.410)
  %sharding_constraint.733 = bf16[2,8192,4096]{2,1,0} copy(%add_any.263)
  %get-tuple-element.411 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.63), index=17
  %convert_element_type.2395 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.411)
  %all-gather.306 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2395), channel_id=309, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.405 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.733, %all-gather.306), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.734 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.405)
  %get-tuple-element.412 = s32[2,8192]{1,0} get-tuple-element(%remat2.63), index=21
  %eq.572 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.412), dimensions={0,1}
  %eq.573 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.412), dimensions={0,2}
  %eq.574 = pred[2,8192,8192]{2,1,0} compare(%eq.572, %eq.573), direction=EQ
  %and.672 = pred[2,8192,8192]{2,1,0} and(%eq.574, %and.455)
  %select_n.2076 = f32[2,8192,8192]{2,1,0} select(%and.672, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1025 = pred[2,8192,8192]{2,1,0} compare(%select_n.2076, %broadcast_in_dim.277), direction=NE
  %not.108 = pred[2,8192,8192]{2,1,0} not(%ne.1025)
  %convert_element_type.2396 = s32[2,8192,8192]{2,1,0} convert(%not.108)
  %reduce.374 = s32[2,8192]{1,0} reduce(%convert_element_type.2396, %constant.2873), dimensions={1}, to_apply=%region_246.14372
  %reduce_sum.4086 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.374)
  %slice.494 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4086), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.43 = s32[2,1]{1,0} reshape(%slice.494)
  %reshape.8677 = s32[2]{0} reshape(%squeeze.43)
  %lt.819 = pred[2]{0} compare(%reshape.8677, %broadcast.5111), direction=LT
  %select_n.2077 = s32[2]{0} select(%lt.819, %broadcast.5111, %reshape.8677)
  %reduce_window_sum.278 = s32[2]{0} reduce-window(%select_n.2077, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.11
  %concatenate.263 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.278), dimensions={0}
  %reduce.375 = s32[2,8192]{1,0} reduce(%convert_element_type.2396, %constant.2873), dimensions={2}, to_apply=%region_247.14381
  %reduce_sum.4090 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.375)
  %reduce.376 = s32[2,1]{1,0} reduce(%reduce_sum.4090, %constant.2985), dimensions={3,2}, to_apply=%region_248.14387
  %reshape.8678 = s32[2]{0} reshape(%reduce.376)
  %lt.820 = pred[2]{0} compare(%reshape.8678, %broadcast.5111), direction=LT
  %select_n.2078 = s32[2]{0} select(%lt.820, %broadcast.5111, %reshape.8678)
  %reduce_window_sum.279 = s32[2]{0} reduce-window(%select_n.2078, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.11.clone
  %concatenate.264 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.279), dimensions={0}
  %te_fused_attn_backward_ffi.55 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.729, %sharding_constraint.730, %sharding_constraint.731, %constant.2973, %get-tuple-element.408, /*index=5*/%get-tuple-element.409, %sharding_constraint.732, %sharding_constraint.734, %concatenate.263, %concatenate.264, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.413 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.55), index=2
  %sharding_constraint.735 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.413)
  %get-tuple-element.414 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.63), index=19
  %convert_element_type.2398 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.414)
  %all-gather.307 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2398), channel_id=310, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.406 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.735, %all-gather.307), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.415 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.55), index=1
  %sharding_constraint.736 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.415)
  %convert_element_type.2399 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.736)
  %mul.4053 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2399, %mul.4042)
  %convert_element_type.2400 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4053)
  %mul.4055 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2399, %mul.4049)
  %mul.4058 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4055, %mul.4046)
  %convert_element_type.2402 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4058)
  %select_n.2080 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2402, %broadcast.5147)
  %slice.495 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2080), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.90 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.495, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.264 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2400, %pad.90)
  %slice.496 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2080), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.91 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.496, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.265 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.264, %pad.91)
  %select_n.2082 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2402, %broadcast.5147)
  %slice.497 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2082), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.92 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.497, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.266 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.265, %pad.92)
  %slice.498 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2082), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.93 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.498, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.267 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.266, %pad.93)
  %get-tuple-element.416 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.63), index=16
  %convert_element_type.2403 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.416)
  %all-gather.308 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2403), channel_id=311, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.407 = bf16[2,8192,4096]{2,1,0} dot(%add_any.267, %all-gather.308), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.268 = bf16[2,8192,4096]{2,1,0} add(%dot.406, %dot.407)
  %sharding_constraint.737 = bf16[2,8192,4096]{2,1,0} copy(%add_any.268)
  %get-tuple-element.417 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.55), index=0
  %sharding_constraint.738 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.417)
  %convert_element_type.2404 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.738)
  %mul.4061 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2404, %mul.4026)
  %convert_element_type.2405 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4061)
  %mul.4063 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2404, %mul.4036)
  %mul.4066 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4063, %mul.4032)
  %convert_element_type.2406 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4066)
  %select_n.2088 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2406, %broadcast.5148)
  %slice.499 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2088), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.94 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.499, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.269 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2405, %pad.94)
  %slice.500 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2088), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.95 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.500, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.270 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.269, %pad.95)
  %select_n.2093 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2406, %broadcast.5148)
  %slice.501 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2093), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.96 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.501, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.271 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.270, %pad.96)
  %slice.502 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2093), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.97 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.502, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.272 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.271, %pad.97)
  %get-tuple-element.418 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.63), index=18
  %convert_element_type.2407 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.418)
  %all-gather.309 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2407), channel_id=312, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.408 = bf16[2,8192,4096]{2,1,0} dot(%add_any.272, %all-gather.309), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.739 = bf16[2,8192,4096]{2,1,0} copy(%dot.408)
  %add_any.273 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.737, %sharding_constraint.739)
  %sharding_constraint.740 = bf16[2,8192,4096]{2,1,0} copy(%add_any.273)
  %get-tuple-element.419 = f32[4096]{0} get-tuple-element(%remat2.63), index=15
  %convert_element_type.2408 = bf16[4096]{0} convert(%get-tuple-element.419)
  %mul.4067 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2408), dimensions={2}
  %mul.4068 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.740, %mul.4067)
  %convert_element_type.2409 = f32[2,8192,4096]{2,1,0} convert(%mul.4068)
  %convert_element_type.2410 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.727)
  %square.90 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2410, %convert_element_type.2410)
  %reduce.377 = f32[2,8192]{1,0} reduce(%square.90, %constant.2882), dimensions={2}, to_apply=%region_249.14475
  %div.1440 = f32[2,8192]{1,0} multiply(%reduce.377, %broadcast.5097)
  %add.2618 = f32[2,8192]{1,0} add(%div.1440, %broadcast.5098)
  %add.2619 = f32[2,8192,1]{2,1,0} reshape(%add.2618)
  %rsqrt.152 = f32[2,8192,1]{2,1,0} rsqrt(%add.2619)
  %mul.4069 = f32[2,8192]{1,0} reshape(%rsqrt.152)
  %mul.4070 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4069), dimensions={0,1}
  %mul.4075 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2409, %mul.4070)
  %mul.4080 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2410, %convert_element_type.2409)
  %reduce.378 = f32[2,8192]{1,0} reduce(%mul.4080, %constant.2882), dimensions={2}, to_apply=%region_250.14488
  %reshape.8699 = f32[2,8192,1]{2,1,0} reshape(%reduce.378)
  %div.1442 = f32[2,8192,1]{2,1,0} divide(%rsqrt.152, %add.2619)
  %mul.4081 = f32[2,8192,1]{2,1,0} multiply(%div.1442, %broadcast.5145)
  %mul.4086 = f32[2,8192,1]{2,1,0} multiply(%reshape.8699, %mul.4081)
  %mul.4087 = f32[2,8192,1]{2,1,0} multiply(%mul.4086, %mul.2917)
  %mul.4088 = f32[2,8192]{1,0} reshape(%mul.4087)
  %mul.4089 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4088), dimensions={0,1}
  %mul.4090 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2410, %mul.4089)
  %add_any.274 = f32[2,8192,4096]{2,1,0} add(%mul.4075, %mul.4090)
  %convert_element_type.2411 = bf16[2,8192,4096]{2,1,0} convert(%add_any.274)
  %add_any.275 = bf16[2,8192,4096]{2,1,0} add(%add_any.263, %convert_element_type.2411)
  %sharding_constraint.741 = bf16[2,8192,4096]{2,1,0} copy(%add_any.275)
  %tuple.119 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.140, %reduce_precision.141, %reduce_precision.142, %get-tuple-element.70, %sharding_constraint.501, /*index=5*/%reduce_precision.143, %reduce_precision.144, %reduce_precision.145, %reduce_precision.146, %constant.2935, /*index=10*/%constant.2935, %param.184, %param.185, %param.186, %param.183, /*index=15*/%param.178, %param.180, %param.182, %param.179, %param.181, /*index=20*/%sharding_constraint.309, %param.10, %param.7, %sharding_constraint.741)
  %remat2.64 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.119)
  %get-tuple-element.420 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.64), index=23
  %sharding_constraint.742 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.420)
  %get-tuple-element.421 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.64), index=7
  %neg.170 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.421)
  %exp.171 = bf16[2,8192,14336]{2,1,0} exponential(%neg.170)
  %add.2620 = bf16[2,8192,14336]{2,1,0} add(%exp.171, %jit_silu_.0)
  %div.1443 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2620)
  %mul.4091 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.421, %div.1443)
  %sharding_constraint.743 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.742)
  %get-tuple-element.422 = f32[14336,512]{1,0} get-tuple-element(%remat2.64), index=13
  %convert_element_type.2412 = bf16[14336,512]{1,0} convert(%get-tuple-element.422)
  %all-gather.310 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2412), channel_id=313, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.409 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.743, %all-gather.310), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.744 = bf16[2,8192,14336]{2,1,0} copy(%dot.409)
  %mul.4092 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4091, %sharding_constraint.744)
  %get-tuple-element.423 = f32[512,14336]{1,0} get-tuple-element(%remat2.64), index=12
  %convert_element_type.2413 = bf16[512,14336]{1,0} convert(%get-tuple-element.423)
  %all-gather.311 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2413), channel_id=314, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.410 = bf16[2,8192,4096]{2,1,0} dot(%mul.4092, %all-gather.311), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.424 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.64), index=8
  %mul.4093 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.744, %get-tuple-element.424)
  %mul.4094 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4093, %div.1443)
  %mul.4097 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.421, %mul.4093)
  %sub.257 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1443)
  %mul.4098 = bf16[2,8192,14336]{2,1,0} multiply(%div.1443, %sub.257)
  %mul.4101 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4097, %mul.4098)
  %add_any.276 = bf16[2,8192,14336]{2,1,0} add(%mul.4094, %mul.4101)
  %get-tuple-element.425 = f32[512,14336]{1,0} get-tuple-element(%remat2.64), index=11
  %convert_element_type.2414 = bf16[512,14336]{1,0} convert(%get-tuple-element.425)
  %all-gather.312 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2414), channel_id=315, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.411 = bf16[2,8192,4096]{2,1,0} dot(%add_any.276, %all-gather.312), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.277 = bf16[2,8192,4096]{2,1,0} add(%dot.410, %dot.411)
  %sharding_constraint.745 = bf16[2,8192,4096]{2,1,0} copy(%add_any.277)
  %get-tuple-element.426 = f32[4096]{0} get-tuple-element(%remat2.64), index=14
  %convert_element_type.2415 = bf16[4096]{0} convert(%get-tuple-element.426)
  %mul.4102 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2415), dimensions={2}
  %mul.4103 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.745, %mul.4102)
  %convert_element_type.2416 = f32[2,8192,4096]{2,1,0} convert(%mul.4103)
  %get-tuple-element.427 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.64), index=20
  %sharding_constraint.746 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.427)
  %get-tuple-element.428 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.64), index=6
  %sharding_constraint.747 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.428)
  %add.2621 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.746, %sharding_constraint.747)
  %convert_element_type.2417 = f32[2,8192,4096]{2,1,0} convert(%add.2621)
  %square.91 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2417, %convert_element_type.2417)
  %reduce.379 = f32[2,8192]{1,0} reduce(%square.91, %constant.2882), dimensions={2}, to_apply=%region_251.14566
  %div.1445 = f32[2,8192]{1,0} multiply(%reduce.379, %broadcast.5097)
  %add.2622 = f32[2,8192]{1,0} add(%div.1445, %broadcast.5098)
  %add.2623 = f32[2,8192,1]{2,1,0} reshape(%add.2622)
  %rsqrt.153 = f32[2,8192,1]{2,1,0} rsqrt(%add.2623)
  %mul.4104 = f32[2,8192]{1,0} reshape(%rsqrt.153)
  %mul.4105 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4104), dimensions={0,1}
  %mul.4106 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2416, %mul.4105)
  %mul.4107 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2417, %convert_element_type.2416)
  %reduce.380 = f32[2,8192]{1,0} reduce(%mul.4107, %constant.2882), dimensions={2}, to_apply=%region_252.14579
  %reshape.8700 = f32[2,8192,1]{2,1,0} reshape(%reduce.380)
  %div.1446 = f32[2,8192,1]{2,1,0} divide(%rsqrt.153, %add.2623)
  %mul.4108 = f32[2,8192,1]{2,1,0} multiply(%div.1446, %broadcast.5145)
  %mul.4110 = f32[2,8192,1]{2,1,0} multiply(%reshape.8700, %mul.4108)
  %mul.4111 = f32[2,8192,1]{2,1,0} multiply(%mul.4110, %mul.2917)
  %mul.4112 = f32[2,8192]{1,0} reshape(%mul.4111)
  %mul.4114 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4112), dimensions={0,1}
  %mul.4115 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2417, %mul.4114)
  %add_any.278 = f32[2,8192,4096]{2,1,0} add(%mul.4106, %mul.4115)
  %convert_element_type.2418 = bf16[2,8192,4096]{2,1,0} convert(%add_any.278)
  %add_any.279 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.742, %convert_element_type.2418)
  %get-tuple-element.429 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.64), index=0
  %convert_element_type.2419 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.429)
  %get-tuple-element.430 = s32[2,8192]{1,0} get-tuple-element(%remat2.64), index=22
  %convert_element_type.2420 = f32[2,8192]{1,0} convert(%get-tuple-element.430)
  %div.1447 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2420), dimensions={0,1}
  %div.1464 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1447, %div.371)
  %cos.92 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1464)
  %mul.4119 = f32[2,8192,128]{2,1,0} reshape(%cos.92)
  %mul.4120 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4119), dimensions={0,1,3}
  %mul.4121 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2419, %mul.4120)
  %slice.503 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.429), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.504 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.429), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.265 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.503, %slice.504), dimensions={3}
  %slice.505 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.429), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.506 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.429), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.266 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.505, %slice.506), dimensions={3}
  %select_n.2100 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.265, %concatenate.266)
  %convert_element_type.2424 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2100)
  %sin.88 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1464)
  %mul.4122 = f32[2,8192,128]{2,1,0} reshape(%sin.88)
  %mul.4123 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4122), dimensions={0,1,3}
  %mul.4124 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2424, %mul.4123)
  %get-tuple-element.431 = s32[2]{0} get-tuple-element(%remat2.64), index=9
  %broadcast_in_dim.541 = s32[64,2]{1,0} broadcast(%get-tuple-element.431), dimensions={1}
  %reshape.8707 = s32[128]{0} reshape(%broadcast_in_dim.541)
  %convert_element_type.2425 = f32[128]{0} convert(%reshape.8707)
  %mul.4125 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2425), dimensions={3}
  %mul.4126 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4124, %mul.4125)
  %add.2626 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4121, %mul.4126)
  %convert_element_type.2426 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2626)
  %sharding_constraint.748 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2426)
  %get-tuple-element.432 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.64), index=1
  %convert_element_type.2427 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.432)
  %mul.4133 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4119), dimensions={0,1,3}
  %mul.4134 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2427, %mul.4133)
  %slice.507 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.432), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.508 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.432), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.267 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.507, %slice.508), dimensions={3}
  %slice.509 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.432), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.510 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.432), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.268 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.509, %slice.510), dimensions={3}
  %select_n.2107 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.267, %concatenate.268)
  %convert_element_type.2433 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2107)
  %mul.4138 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4122), dimensions={0,1,3}
  %mul.4139 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2433, %mul.4138)
  %get-tuple-element.433 = s32[2]{0} get-tuple-element(%remat2.64), index=10
  %broadcast_in_dim.543 = s32[64,2]{1,0} broadcast(%get-tuple-element.433), dimensions={1}
  %reshape.8715 = s32[128]{0} reshape(%broadcast_in_dim.543)
  %convert_element_type.2434 = f32[128]{0} convert(%reshape.8715)
  %mul.4140 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2434), dimensions={3}
  %mul.4141 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4139, %mul.4140)
  %add.2629 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4134, %mul.4141)
  %convert_element_type.2435 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2629)
  %sharding_constraint.749 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2435)
  %get-tuple-element.434 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.64), index=2
  %sharding_constraint.750 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.434)
  %get-tuple-element.435 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.64), index=3
  %get-tuple-element.436 = u32[2,4]{1,0} get-tuple-element(%remat2.64), index=4
  %get-tuple-element.437 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.64), index=5
  %sharding_constraint.751 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.437)
  %sharding_constraint.752 = bf16[2,8192,4096]{2,1,0} copy(%add_any.279)
  %get-tuple-element.438 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.64), index=17
  %convert_element_type.2437 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.438)
  %all-gather.313 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2437), channel_id=316, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.412 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.752, %all-gather.313), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.753 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.412)
  %get-tuple-element.439 = s32[2,8192]{1,0} get-tuple-element(%remat2.64), index=21
  %eq.579 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.439), dimensions={0,1}
  %eq.580 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.439), dimensions={0,2}
  %eq.581 = pred[2,8192,8192]{2,1,0} compare(%eq.579, %eq.580), direction=EQ
  %and.680 = pred[2,8192,8192]{2,1,0} and(%eq.581, %and.455)
  %select_n.2108 = f32[2,8192,8192]{2,1,0} select(%and.680, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1033 = pred[2,8192,8192]{2,1,0} compare(%select_n.2108, %broadcast_in_dim.277), direction=NE
  %not.109 = pred[2,8192,8192]{2,1,0} not(%ne.1033)
  %convert_element_type.2438 = s32[2,8192,8192]{2,1,0} convert(%not.109)
  %reduce.381 = s32[2,8192]{1,0} reduce(%convert_element_type.2438, %constant.2873), dimensions={1}, to_apply=%region_253.14731
  %reduce_sum.4092 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.381)
  %slice.511 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4092), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.44 = s32[2,1]{1,0} reshape(%slice.511)
  %reshape.8717 = s32[2]{0} reshape(%squeeze.44)
  %lt.829 = pred[2]{0} compare(%reshape.8717, %broadcast.5111), direction=LT
  %select_n.2109 = s32[2]{0} select(%lt.829, %broadcast.5111, %reshape.8717)
  %reduce_window_sum.280 = s32[2]{0} reduce-window(%select_n.2109, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.12
  %concatenate.269 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.280), dimensions={0}
  %reduce.382 = s32[2,8192]{1,0} reduce(%convert_element_type.2438, %constant.2873), dimensions={2}, to_apply=%region_254.14740
  %reduce_sum.4093 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.382)
  %reduce.383 = s32[2,1]{1,0} reduce(%reduce_sum.4093, %constant.2985), dimensions={3,2}, to_apply=%region_255.14746
  %reshape.8718 = s32[2]{0} reshape(%reduce.383)
  %lt.830 = pred[2]{0} compare(%reshape.8718, %broadcast.5111), direction=LT
  %select_n.2113 = s32[2]{0} select(%lt.830, %broadcast.5111, %reshape.8718)
  %reduce_window_sum.281 = s32[2]{0} reduce-window(%select_n.2113, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.12.clone
  %concatenate.270 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.281), dimensions={0}
  %te_fused_attn_backward_ffi.60 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.748, %sharding_constraint.749, %sharding_constraint.750, %constant.2973, %get-tuple-element.435, /*index=5*/%get-tuple-element.436, %sharding_constraint.751, %sharding_constraint.753, %concatenate.269, %concatenate.270, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.440 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.60), index=2
  %sharding_constraint.754 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.440)
  %get-tuple-element.441 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.64), index=19
  %convert_element_type.2440 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.441)
  %all-gather.314 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2440), channel_id=317, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.413 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.754, %all-gather.314), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.442 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.60), index=1
  %sharding_constraint.755 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.442)
  %convert_element_type.2441 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.755)
  %mul.4144 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2441, %mul.4133)
  %convert_element_type.2442 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4144)
  %mul.4147 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2441, %mul.4140)
  %mul.4150 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4147, %mul.4138)
  %convert_element_type.2443 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4150)
  %select_n.2115 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2443, %broadcast.5147)
  %slice.512 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2115), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.98 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.512, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.280 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2442, %pad.98)
  %slice.513 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2115), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.99 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.513, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.281 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.280, %pad.99)
  %select_n.2117 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2443, %broadcast.5147)
  %slice.514 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2117), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.100 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.514, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.282 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.281, %pad.100)
  %slice.515 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2117), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.101 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.515, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.283 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.282, %pad.101)
  %get-tuple-element.443 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.64), index=16
  %convert_element_type.2444 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.443)
  %all-gather.315 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2444), channel_id=318, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.414 = bf16[2,8192,4096]{2,1,0} dot(%add_any.283, %all-gather.315), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.284 = bf16[2,8192,4096]{2,1,0} add(%dot.413, %dot.414)
  %sharding_constraint.756 = bf16[2,8192,4096]{2,1,0} copy(%add_any.284)
  %get-tuple-element.444 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.60), index=0
  %sharding_constraint.757 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.444)
  %convert_element_type.2445 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.757)
  %mul.4153 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2445, %mul.4120)
  %convert_element_type.2446 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4153)
  %mul.4155 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2445, %mul.4125)
  %mul.4162 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4155, %mul.4123)
  %convert_element_type.2447 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4162)
  %select_n.2119 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2447, %broadcast.5148)
  %slice.516 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2119), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.102 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.516, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.285 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2446, %pad.102)
  %slice.517 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2119), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.103 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.517, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.286 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.285, %pad.103)
  %select_n.2121 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2447, %broadcast.5148)
  %slice.518 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2121), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.104 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.518, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.287 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.286, %pad.104)
  %slice.519 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2121), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.105 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.519, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.288 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.287, %pad.105)
  %get-tuple-element.445 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.64), index=18
  %convert_element_type.2448 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.445)
  %all-gather.316 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2448), channel_id=319, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.415 = bf16[2,8192,4096]{2,1,0} dot(%add_any.288, %all-gather.316), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.758 = bf16[2,8192,4096]{2,1,0} copy(%dot.415)
  %add_any.289 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.756, %sharding_constraint.758)
  %sharding_constraint.759 = bf16[2,8192,4096]{2,1,0} copy(%add_any.289)
  %get-tuple-element.446 = f32[4096]{0} get-tuple-element(%remat2.64), index=15
  %convert_element_type.2449 = bf16[4096]{0} convert(%get-tuple-element.446)
  %mul.4167 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2449), dimensions={2}
  %mul.4169 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.759, %mul.4167)
  %convert_element_type.2450 = f32[2,8192,4096]{2,1,0} convert(%mul.4169)
  %convert_element_type.2451 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.746)
  %square.92 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2451, %convert_element_type.2451)
  %reduce.384 = f32[2,8192]{1,0} reduce(%square.92, %constant.2882), dimensions={2}, to_apply=%region_256.14834
  %div.1475 = f32[2,8192]{1,0} multiply(%reduce.384, %broadcast.5097)
  %add.2637 = f32[2,8192]{1,0} add(%div.1475, %broadcast.5098)
  %add.2638 = f32[2,8192,1]{2,1,0} reshape(%add.2637)
  %rsqrt.154 = f32[2,8192,1]{2,1,0} rsqrt(%add.2638)
  %mul.4170 = f32[2,8192]{1,0} reshape(%rsqrt.154)
  %mul.4171 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4170), dimensions={0,1}
  %mul.4172 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2450, %mul.4171)
  %mul.4173 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2451, %convert_element_type.2450)
  %reduce.385 = f32[2,8192]{1,0} reduce(%mul.4173, %constant.2882), dimensions={2}, to_apply=%region_257.14847
  %reshape.8743 = f32[2,8192,1]{2,1,0} reshape(%reduce.385)
  %div.1476 = f32[2,8192,1]{2,1,0} divide(%rsqrt.154, %add.2638)
  %mul.4174 = f32[2,8192,1]{2,1,0} multiply(%div.1476, %broadcast.5145)
  %mul.4176 = f32[2,8192,1]{2,1,0} multiply(%reshape.8743, %mul.4174)
  %mul.4180 = f32[2,8192,1]{2,1,0} multiply(%mul.4176, %mul.2917)
  %mul.4181 = f32[2,8192]{1,0} reshape(%mul.4180)
  %mul.4182 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4181), dimensions={0,1}
  %mul.4183 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2451, %mul.4182)
  %add_any.290 = f32[2,8192,4096]{2,1,0} add(%mul.4172, %mul.4183)
  %convert_element_type.2452 = bf16[2,8192,4096]{2,1,0} convert(%add_any.290)
  %add_any.291 = bf16[2,8192,4096]{2,1,0} add(%add_any.279, %convert_element_type.2452)
  %sharding_constraint.760 = bf16[2,8192,4096]{2,1,0} copy(%add_any.291)
  %tuple.121 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.133, %reduce_precision.134, %reduce_precision.135, %get-tuple-element.68, %sharding_constraint.500, /*index=5*/%reduce_precision.136, %reduce_precision.137, %reduce_precision.138, %reduce_precision.139, %constant.2935, /*index=10*/%constant.2935, %param.175, %param.176, %param.177, %param.174, /*index=15*/%param.169, %param.171, %param.173, %param.170, %param.172, /*index=20*/%sharding_constraint.296, %param.10, %param.7, %sharding_constraint.760)
  %remat2.65 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.121)
  %get-tuple-element.447 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.65), index=23
  %sharding_constraint.761 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.447)
  %get-tuple-element.448 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.65), index=7
  %neg.171 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.448)
  %exp.172 = bf16[2,8192,14336]{2,1,0} exponential(%neg.171)
  %add.2639 = bf16[2,8192,14336]{2,1,0} add(%exp.172, %jit_silu_.0)
  %div.1477 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2639)
  %mul.4184 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.448, %div.1477)
  %sharding_constraint.762 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.761)
  %get-tuple-element.449 = f32[14336,512]{1,0} get-tuple-element(%remat2.65), index=13
  %convert_element_type.2453 = bf16[14336,512]{1,0} convert(%get-tuple-element.449)
  %all-gather.317 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2453), channel_id=320, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.416 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.762, %all-gather.317), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.763 = bf16[2,8192,14336]{2,1,0} copy(%dot.416)
  %mul.4185 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4184, %sharding_constraint.763)
  %get-tuple-element.450 = f32[512,14336]{1,0} get-tuple-element(%remat2.65), index=12
  %convert_element_type.2455 = bf16[512,14336]{1,0} convert(%get-tuple-element.450)
  %all-gather.318 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2455), channel_id=321, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.417 = bf16[2,8192,4096]{2,1,0} dot(%mul.4185, %all-gather.318), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.451 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.65), index=8
  %mul.4186 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.763, %get-tuple-element.451)
  %mul.4187 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4186, %div.1477)
  %mul.4188 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.448, %mul.4186)
  %sub.262 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1477)
  %mul.4189 = bf16[2,8192,14336]{2,1,0} multiply(%div.1477, %sub.262)
  %mul.4190 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4188, %mul.4189)
  %add_any.292 = bf16[2,8192,14336]{2,1,0} add(%mul.4187, %mul.4190)
  %get-tuple-element.452 = f32[512,14336]{1,0} get-tuple-element(%remat2.65), index=11
  %convert_element_type.2456 = bf16[512,14336]{1,0} convert(%get-tuple-element.452)
  %all-gather.319 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2456), channel_id=322, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.418 = bf16[2,8192,4096]{2,1,0} dot(%add_any.292, %all-gather.319), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.293 = bf16[2,8192,4096]{2,1,0} add(%dot.417, %dot.418)
  %sharding_constraint.764 = bf16[2,8192,4096]{2,1,0} copy(%add_any.293)
  %get-tuple-element.453 = f32[4096]{0} get-tuple-element(%remat2.65), index=14
  %convert_element_type.2457 = bf16[4096]{0} convert(%get-tuple-element.453)
  %mul.4199 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2457), dimensions={2}
  %mul.4200 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.764, %mul.4199)
  %convert_element_type.2458 = f32[2,8192,4096]{2,1,0} convert(%mul.4200)
  %get-tuple-element.454 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.65), index=20
  %sharding_constraint.765 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.454)
  %get-tuple-element.455 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.65), index=6
  %sharding_constraint.766 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.455)
  %add.2640 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.765, %sharding_constraint.766)
  %convert_element_type.2460 = f32[2,8192,4096]{2,1,0} convert(%add.2640)
  %square.93 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2460, %convert_element_type.2460)
  %reduce.386 = f32[2,8192]{1,0} reduce(%square.93, %constant.2882), dimensions={2}, to_apply=%region_258.14925
  %div.1478 = f32[2,8192]{1,0} multiply(%reduce.386, %broadcast.5097)
  %add.2641 = f32[2,8192]{1,0} add(%div.1478, %broadcast.5098)
  %add.2642 = f32[2,8192,1]{2,1,0} reshape(%add.2641)
  %rsqrt.155 = f32[2,8192,1]{2,1,0} rsqrt(%add.2642)
  %mul.4205 = f32[2,8192]{1,0} reshape(%rsqrt.155)
  %mul.4206 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4205), dimensions={0,1}
  %mul.4207 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2458, %mul.4206)
  %mul.4208 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2460, %convert_element_type.2458)
  %reduce.387 = f32[2,8192]{1,0} reduce(%mul.4208, %constant.2882), dimensions={2}, to_apply=%region_259.14938
  %reshape.8744 = f32[2,8192,1]{2,1,0} reshape(%reduce.387)
  %div.1479 = f32[2,8192,1]{2,1,0} divide(%rsqrt.155, %add.2642)
  %mul.4209 = f32[2,8192,1]{2,1,0} multiply(%div.1479, %broadcast.5145)
  %mul.4211 = f32[2,8192,1]{2,1,0} multiply(%reshape.8744, %mul.4209)
  %mul.4212 = f32[2,8192,1]{2,1,0} multiply(%mul.4211, %mul.2917)
  %mul.4213 = f32[2,8192]{1,0} reshape(%mul.4212)
  %mul.4214 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4213), dimensions={0,1}
  %mul.4215 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2460, %mul.4214)
  %add_any.294 = f32[2,8192,4096]{2,1,0} add(%mul.4207, %mul.4215)
  %convert_element_type.2461 = bf16[2,8192,4096]{2,1,0} convert(%add_any.294)
  %add_any.295 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.761, %convert_element_type.2461)
  %get-tuple-element.456 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.65), index=0
  %convert_element_type.2462 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.456)
  %get-tuple-element.457 = s32[2,8192]{1,0} get-tuple-element(%remat2.65), index=22
  %convert_element_type.2463 = f32[2,8192]{1,0} convert(%get-tuple-element.457)
  %div.1480 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2463), dimensions={0,1}
  %div.1489 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1480, %div.371)
  %cos.94 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1489)
  %mul.4219 = f32[2,8192,128]{2,1,0} reshape(%cos.94)
  %mul.4220 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4219), dimensions={0,1,3}
  %mul.4221 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2462, %mul.4220)
  %slice.520 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.456), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.521 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.456), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.271 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.520, %slice.521), dimensions={3}
  %slice.522 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.456), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.523 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.456), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.272 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.522, %slice.523), dimensions={3}
  %select_n.2128 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.271, %concatenate.272)
  %convert_element_type.2467 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2128)
  %sin.90 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1489)
  %mul.4222 = f32[2,8192,128]{2,1,0} reshape(%sin.90)
  %mul.4223 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4222), dimensions={0,1,3}
  %mul.4224 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2467, %mul.4223)
  %get-tuple-element.458 = s32[2]{0} get-tuple-element(%remat2.65), index=9
  %broadcast_in_dim.547 = s32[64,2]{1,0} broadcast(%get-tuple-element.458), dimensions={1}
  %reshape.8751 = s32[128]{0} reshape(%broadcast_in_dim.547)
  %convert_element_type.2468 = f32[128]{0} convert(%reshape.8751)
  %mul.4225 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2468), dimensions={3}
  %mul.4226 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4224, %mul.4225)
  %add.2646 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4221, %mul.4226)
  %convert_element_type.2469 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2646)
  %sharding_constraint.767 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2469)
  %get-tuple-element.459 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.65), index=1
  %convert_element_type.2470 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.459)
  %mul.4233 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4219), dimensions={0,1,3}
  %mul.4235 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2470, %mul.4233)
  %slice.524 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.459), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.525 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.459), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.273 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.524, %slice.525), dimensions={3}
  %slice.526 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.459), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.527 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.459), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.274 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.526, %slice.527), dimensions={3}
  %select_n.2138 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.273, %concatenate.274)
  %convert_element_type.2477 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2138)
  %mul.4237 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4222), dimensions={0,1,3}
  %mul.4238 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2477, %mul.4237)
  %get-tuple-element.460 = s32[2]{0} get-tuple-element(%remat2.65), index=10
  %broadcast_in_dim.549 = s32[64,2]{1,0} broadcast(%get-tuple-element.460), dimensions={1}
  %reshape.8759 = s32[128]{0} reshape(%broadcast_in_dim.549)
  %convert_element_type.2478 = f32[128]{0} convert(%reshape.8759)
  %mul.4239 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2478), dimensions={3}
  %mul.4240 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4238, %mul.4239)
  %add.2649 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4235, %mul.4240)
  %convert_element_type.2479 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2649)
  %sharding_constraint.768 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2479)
  %get-tuple-element.461 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.65), index=2
  %sharding_constraint.769 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.461)
  %get-tuple-element.462 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.65), index=3
  %get-tuple-element.463 = u32[2,4]{1,0} get-tuple-element(%remat2.65), index=4
  %get-tuple-element.464 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.65), index=5
  %sharding_constraint.770 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.464)
  %sharding_constraint.771 = bf16[2,8192,4096]{2,1,0} copy(%add_any.295)
  %get-tuple-element.465 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.65), index=17
  %convert_element_type.2480 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.465)
  %all-gather.320 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2480), channel_id=323, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.419 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.771, %all-gather.320), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.772 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.419)
  %get-tuple-element.466 = s32[2,8192]{1,0} get-tuple-element(%remat2.65), index=21
  %eq.586 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.466), dimensions={0,1}
  %eq.587 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.466), dimensions={0,2}
  %eq.588 = pred[2,8192,8192]{2,1,0} compare(%eq.586, %eq.587), direction=EQ
  %and.688 = pred[2,8192,8192]{2,1,0} and(%eq.588, %and.455)
  %select_n.2139 = f32[2,8192,8192]{2,1,0} select(%and.688, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1041 = pred[2,8192,8192]{2,1,0} compare(%select_n.2139, %broadcast_in_dim.277), direction=NE
  %not.110 = pred[2,8192,8192]{2,1,0} not(%ne.1041)
  %convert_element_type.2481 = s32[2,8192,8192]{2,1,0} convert(%not.110)
  %reduce.388 = s32[2,8192]{1,0} reduce(%convert_element_type.2481, %constant.2873), dimensions={1}, to_apply=%region_260.15090
  %reduce_sum.4094 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.388)
  %slice.528 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4094), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.45 = s32[2,1]{1,0} reshape(%slice.528)
  %reshape.8761 = s32[2]{0} reshape(%squeeze.45)
  %lt.839 = pred[2]{0} compare(%reshape.8761, %broadcast.5111), direction=LT
  %select_n.2140 = s32[2]{0} select(%lt.839, %broadcast.5111, %reshape.8761)
  %reduce_window_sum.282 = s32[2]{0} reduce-window(%select_n.2140, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.13
  %concatenate.275 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.282), dimensions={0}
  %reduce.389 = s32[2,8192]{1,0} reduce(%convert_element_type.2481, %constant.2873), dimensions={2}, to_apply=%region_261.15099
  %reduce_sum.4095 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.389)
  %reduce.390 = s32[2,1]{1,0} reduce(%reduce_sum.4095, %constant.2985), dimensions={3,2}, to_apply=%region_262.15105
  %reshape.8762 = s32[2]{0} reshape(%reduce.390)
  %lt.840 = pred[2]{0} compare(%reshape.8762, %broadcast.5111), direction=LT
  %select_n.2141 = s32[2]{0} select(%lt.840, %broadcast.5111, %reshape.8762)
  %reduce_window_sum.283 = s32[2]{0} reduce-window(%select_n.2141, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.13.clone
  %concatenate.276 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.283), dimensions={0}
  %te_fused_attn_backward_ffi.65 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.767, %sharding_constraint.768, %sharding_constraint.769, %constant.2973, %get-tuple-element.462, /*index=5*/%get-tuple-element.463, %sharding_constraint.770, %sharding_constraint.772, %concatenate.275, %concatenate.276, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.467 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.65), index=2
  %sharding_constraint.773 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.467)
  %get-tuple-element.468 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.65), index=19
  %convert_element_type.2484 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.468)
  %all-gather.321 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2484), channel_id=324, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.420 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.773, %all-gather.321), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.469 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.65), index=1
  %sharding_constraint.774 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.469)
  %convert_element_type.2485 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.774)
  %mul.4246 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2485, %mul.4233)
  %convert_element_type.2487 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4246)
  %mul.4248 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2485, %mul.4239)
  %mul.4253 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4248, %mul.4237)
  %convert_element_type.2488 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4253)
  %select_n.2143 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2488, %broadcast.5147)
  %slice.529 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2143), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.106 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.529, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.296 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2487, %pad.106)
  %slice.530 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2143), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.107 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.530, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.297 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.296, %pad.107)
  %select_n.2145 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2488, %broadcast.5147)
  %slice.531 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2145), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.108 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.531, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.298 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.297, %pad.108)
  %slice.532 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2145), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.109 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.532, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.299 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.298, %pad.109)
  %get-tuple-element.470 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.65), index=16
  %convert_element_type.2489 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.470)
  %all-gather.322 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2489), channel_id=325, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.421 = bf16[2,8192,4096]{2,1,0} dot(%add_any.299, %all-gather.322), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.300 = bf16[2,8192,4096]{2,1,0} add(%dot.420, %dot.421)
  %sharding_constraint.775 = bf16[2,8192,4096]{2,1,0} copy(%add_any.300)
  %get-tuple-element.471 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.65), index=0
  %sharding_constraint.776 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.471)
  %convert_element_type.2490 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.776)
  %mul.4259 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2490, %mul.4220)
  %convert_element_type.2492 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4259)
  %mul.4263 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2490, %mul.4225)
  %mul.4266 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4263, %mul.4223)
  %convert_element_type.2493 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4266)
  %select_n.2147 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2493, %broadcast.5148)
  %slice.533 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2147), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.110 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.533, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.301 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2492, %pad.110)
  %slice.534 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2147), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.111 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.534, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.302 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.301, %pad.111)
  %select_n.2149 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2493, %broadcast.5148)
  %slice.535 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2149), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.112 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.535, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.303 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.302, %pad.112)
  %slice.536 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2149), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.113 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.536, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.304 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.303, %pad.113)
  %get-tuple-element.472 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.65), index=18
  %convert_element_type.2494 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.472)
  %all-gather.323 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2494), channel_id=326, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.422 = bf16[2,8192,4096]{2,1,0} dot(%add_any.304, %all-gather.323), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.777 = bf16[2,8192,4096]{2,1,0} copy(%dot.422)
  %add_any.305 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.775, %sharding_constraint.777)
  %sharding_constraint.778 = bf16[2,8192,4096]{2,1,0} copy(%add_any.305)
  %get-tuple-element.473 = f32[4096]{0} get-tuple-element(%remat2.65), index=15
  %convert_element_type.2495 = bf16[4096]{0} convert(%get-tuple-element.473)
  %mul.4267 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2495), dimensions={2}
  %mul.4268 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.778, %mul.4267)
  %convert_element_type.2496 = f32[2,8192,4096]{2,1,0} convert(%mul.4268)
  %convert_element_type.2498 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.765)
  %square.94 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2498, %convert_element_type.2498)
  %reduce.391 = f32[2,8192]{1,0} reduce(%square.94, %constant.2882), dimensions={2}, to_apply=%region_263.15193
  %div.1500 = f32[2,8192]{1,0} multiply(%reduce.391, %broadcast.5097)
  %add.2657 = f32[2,8192]{1,0} add(%div.1500, %broadcast.5098)
  %add.2658 = f32[2,8192,1]{2,1,0} reshape(%add.2657)
  %rsqrt.156 = f32[2,8192,1]{2,1,0} rsqrt(%add.2658)
  %mul.4269 = f32[2,8192]{1,0} reshape(%rsqrt.156)
  %mul.4270 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4269), dimensions={0,1}
  %mul.4271 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2496, %mul.4270)
  %mul.4272 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2498, %convert_element_type.2496)
  %reduce.392 = f32[2,8192]{1,0} reduce(%mul.4272, %constant.2882), dimensions={2}, to_apply=%region_264.15206
  %reshape.8785 = f32[2,8192,1]{2,1,0} reshape(%reduce.392)
  %div.1501 = f32[2,8192,1]{2,1,0} divide(%rsqrt.156, %add.2658)
  %mul.4273 = f32[2,8192,1]{2,1,0} multiply(%div.1501, %broadcast.5145)
  %mul.4274 = f32[2,8192,1]{2,1,0} multiply(%reshape.8785, %mul.4273)
  %mul.4275 = f32[2,8192,1]{2,1,0} multiply(%mul.4274, %mul.2917)
  %mul.4280 = f32[2,8192]{1,0} reshape(%mul.4275)
  %mul.4285 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4280), dimensions={0,1}
  %mul.4286 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2498, %mul.4285)
  %add_any.306 = f32[2,8192,4096]{2,1,0} add(%mul.4271, %mul.4286)
  %convert_element_type.2499 = bf16[2,8192,4096]{2,1,0} convert(%add_any.306)
  %add_any.307 = bf16[2,8192,4096]{2,1,0} add(%add_any.295, %convert_element_type.2499)
  %sharding_constraint.779 = bf16[2,8192,4096]{2,1,0} copy(%add_any.307)
  %tuple.123 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.126, %reduce_precision.127, %reduce_precision.128, %get-tuple-element.66, %sharding_constraint.499, /*index=5*/%reduce_precision.129, %reduce_precision.130, %reduce_precision.131, %reduce_precision.132, %constant.2935, /*index=10*/%constant.2935, %param.166, %param.167, %param.168, %param.165, /*index=15*/%param.160, %param.162, %param.164, %param.161, %param.163, /*index=20*/%sharding_constraint.283, %param.10, %param.7, %sharding_constraint.779)
  %remat2.66 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.123)
  %get-tuple-element.474 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.66), index=23
  %sharding_constraint.780 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.474)
  %get-tuple-element.475 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.66), index=7
  %neg.172 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.475)
  %exp.173 = bf16[2,8192,14336]{2,1,0} exponential(%neg.172)
  %add.2659 = bf16[2,8192,14336]{2,1,0} add(%exp.173, %jit_silu_.0)
  %div.1503 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2659)
  %mul.4291 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.475, %div.1503)
  %sharding_constraint.781 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.780)
  %get-tuple-element.476 = f32[14336,512]{1,0} get-tuple-element(%remat2.66), index=13
  %convert_element_type.2500 = bf16[14336,512]{1,0} convert(%get-tuple-element.476)
  %all-gather.324 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2500), channel_id=327, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.423 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.781, %all-gather.324), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.782 = bf16[2,8192,14336]{2,1,0} copy(%dot.423)
  %mul.4292 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4291, %sharding_constraint.782)
  %get-tuple-element.477 = f32[512,14336]{1,0} get-tuple-element(%remat2.66), index=12
  %convert_element_type.2501 = bf16[512,14336]{1,0} convert(%get-tuple-element.477)
  %all-gather.325 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2501), channel_id=328, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.424 = bf16[2,8192,4096]{2,1,0} dot(%mul.4292, %all-gather.325), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.478 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.66), index=8
  %mul.4293 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.782, %get-tuple-element.478)
  %mul.4294 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4293, %div.1503)
  %mul.4295 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.475, %mul.4293)
  %sub.267 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1503)
  %mul.4296 = bf16[2,8192,14336]{2,1,0} multiply(%div.1503, %sub.267)
  %mul.4297 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4295, %mul.4296)
  %add_any.308 = bf16[2,8192,14336]{2,1,0} add(%mul.4294, %mul.4297)
  %get-tuple-element.479 = f32[512,14336]{1,0} get-tuple-element(%remat2.66), index=11
  %convert_element_type.2502 = bf16[512,14336]{1,0} convert(%get-tuple-element.479)
  %all-gather.326 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2502), channel_id=329, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.425 = bf16[2,8192,4096]{2,1,0} dot(%add_any.308, %all-gather.326), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.309 = bf16[2,8192,4096]{2,1,0} add(%dot.424, %dot.425)
  %sharding_constraint.783 = bf16[2,8192,4096]{2,1,0} copy(%add_any.309)
  %get-tuple-element.480 = f32[4096]{0} get-tuple-element(%remat2.66), index=14
  %convert_element_type.2503 = bf16[4096]{0} convert(%get-tuple-element.480)
  %mul.4298 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2503), dimensions={2}
  %mul.4299 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.783, %mul.4298)
  %convert_element_type.2504 = f32[2,8192,4096]{2,1,0} convert(%mul.4299)
  %get-tuple-element.481 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.66), index=20
  %sharding_constraint.784 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.481)
  %get-tuple-element.482 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.66), index=6
  %sharding_constraint.785 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.482)
  %add.2660 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.784, %sharding_constraint.785)
  %convert_element_type.2505 = f32[2,8192,4096]{2,1,0} convert(%add.2660)
  %square.95 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2505, %convert_element_type.2505)
  %reduce.393 = f32[2,8192]{1,0} reduce(%square.95, %constant.2882), dimensions={2}, to_apply=%region_265.15284
  %div.1504 = f32[2,8192]{1,0} multiply(%reduce.393, %broadcast.5097)
  %add.2661 = f32[2,8192]{1,0} add(%div.1504, %broadcast.5098)
  %add.2662 = f32[2,8192,1]{2,1,0} reshape(%add.2661)
  %rsqrt.157 = f32[2,8192,1]{2,1,0} rsqrt(%add.2662)
  %mul.4300 = f32[2,8192]{1,0} reshape(%rsqrt.157)
  %mul.4301 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4300), dimensions={0,1}
  %mul.4302 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2504, %mul.4301)
  %mul.4303 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2505, %convert_element_type.2504)
  %reduce.394 = f32[2,8192]{1,0} reduce(%mul.4303, %constant.2882), dimensions={2}, to_apply=%region_266.15297
  %reshape.8786 = f32[2,8192,1]{2,1,0} reshape(%reduce.394)
  %div.1505 = f32[2,8192,1]{2,1,0} divide(%rsqrt.157, %add.2662)
  %mul.4304 = f32[2,8192,1]{2,1,0} multiply(%div.1505, %broadcast.5145)
  %mul.4305 = f32[2,8192,1]{2,1,0} multiply(%reshape.8786, %mul.4304)
  %mul.4306 = f32[2,8192,1]{2,1,0} multiply(%mul.4305, %mul.2917)
  %mul.4307 = f32[2,8192]{1,0} reshape(%mul.4306)
  %mul.4308 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4307), dimensions={0,1}
  %mul.4309 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2505, %mul.4308)
  %add_any.310 = f32[2,8192,4096]{2,1,0} add(%mul.4302, %mul.4309)
  %convert_element_type.2506 = bf16[2,8192,4096]{2,1,0} convert(%add_any.310)
  %add_any.311 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.780, %convert_element_type.2506)
  %get-tuple-element.483 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.66), index=0
  %convert_element_type.2507 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.483)
  %get-tuple-element.484 = s32[2,8192]{1,0} get-tuple-element(%remat2.66), index=22
  %convert_element_type.2508 = f32[2,8192]{1,0} convert(%get-tuple-element.484)
  %div.1508 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2508), dimensions={0,1}
  %div.1521 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1508, %div.371)
  %cos.96 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1521)
  %mul.4314 = f32[2,8192,128]{2,1,0} reshape(%cos.96)
  %mul.4315 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4314), dimensions={0,1,3}
  %mul.4316 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2507, %mul.4315)
  %slice.537 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.483), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.538 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.483), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.277 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.537, %slice.538), dimensions={3}
  %slice.539 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.483), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.540 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.483), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.278 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.539, %slice.540), dimensions={3}
  %select_n.2159 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.277, %concatenate.278)
  %convert_element_type.2514 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2159)
  %sin.92 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1521)
  %mul.4317 = f32[2,8192,128]{2,1,0} reshape(%sin.92)
  %mul.4318 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4317), dimensions={0,1,3}
  %mul.4319 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2514, %mul.4318)
  %get-tuple-element.485 = s32[2]{0} get-tuple-element(%remat2.66), index=9
  %broadcast_in_dim.553 = s32[64,2]{1,0} broadcast(%get-tuple-element.485), dimensions={1}
  %reshape.8793 = s32[128]{0} reshape(%broadcast_in_dim.553)
  %convert_element_type.2515 = f32[128]{0} convert(%reshape.8793)
  %mul.4320 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2515), dimensions={3}
  %mul.4321 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4319, %mul.4320)
  %add.2665 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4316, %mul.4321)
  %convert_element_type.2516 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2665)
  %sharding_constraint.786 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2516)
  %get-tuple-element.486 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.66), index=1
  %convert_element_type.2517 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.486)
  %mul.4331 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4314), dimensions={0,1,3}
  %mul.4332 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2517, %mul.4331)
  %slice.541 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.486), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.542 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.486), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.279 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.541, %slice.542), dimensions={3}
  %slice.543 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.486), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.544 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.486), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.280 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.543, %slice.544), dimensions={3}
  %select_n.2166 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.279, %concatenate.280)
  %convert_element_type.2523 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2166)
  %mul.4334 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4317), dimensions={0,1,3}
  %mul.4335 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2523, %mul.4334)
  %get-tuple-element.487 = s32[2]{0} get-tuple-element(%remat2.66), index=10
  %broadcast_in_dim.555 = s32[64,2]{1,0} broadcast(%get-tuple-element.487), dimensions={1}
  %reshape.8802 = s32[128]{0} reshape(%broadcast_in_dim.555)
  %convert_element_type.2524 = f32[128]{0} convert(%reshape.8802)
  %mul.4336 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2524), dimensions={3}
  %mul.4338 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4335, %mul.4336)
  %add.2668 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4332, %mul.4338)
  %convert_element_type.2526 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2668)
  %sharding_constraint.787 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2526)
  %get-tuple-element.488 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.66), index=2
  %sharding_constraint.788 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.488)
  %get-tuple-element.489 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.66), index=3
  %get-tuple-element.490 = u32[2,4]{1,0} get-tuple-element(%remat2.66), index=4
  %get-tuple-element.491 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.66), index=5
  %sharding_constraint.789 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.491)
  %sharding_constraint.790 = bf16[2,8192,4096]{2,1,0} copy(%add_any.311)
  %get-tuple-element.492 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.66), index=17
  %convert_element_type.2527 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.492)
  %all-gather.327 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2527), channel_id=330, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.426 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.790, %all-gather.327), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.791 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.426)
  %get-tuple-element.493 = s32[2,8192]{1,0} get-tuple-element(%remat2.66), index=21
  %eq.593 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.493), dimensions={0,1}
  %eq.594 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.493), dimensions={0,2}
  %eq.595 = pred[2,8192,8192]{2,1,0} compare(%eq.593, %eq.594), direction=EQ
  %and.696 = pred[2,8192,8192]{2,1,0} and(%eq.595, %and.455)
  %select_n.2167 = f32[2,8192,8192]{2,1,0} select(%and.696, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1049 = pred[2,8192,8192]{2,1,0} compare(%select_n.2167, %broadcast_in_dim.277), direction=NE
  %not.111 = pred[2,8192,8192]{2,1,0} not(%ne.1049)
  %convert_element_type.2529 = s32[2,8192,8192]{2,1,0} convert(%not.111)
  %reduce.395 = s32[2,8192]{1,0} reduce(%convert_element_type.2529, %constant.2873), dimensions={1}, to_apply=%region_267.15449
  %reduce_sum.4096 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.395)
  %slice.545 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4096), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.46 = s32[2,1]{1,0} reshape(%slice.545)
  %reshape.8804 = s32[2]{0} reshape(%squeeze.46)
  %lt.849 = pred[2]{0} compare(%reshape.8804, %broadcast.5111), direction=LT
  %select_n.2168 = s32[2]{0} select(%lt.849, %broadcast.5111, %reshape.8804)
  %reduce_window_sum.284 = s32[2]{0} reduce-window(%select_n.2168, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.14
  %concatenate.281 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.284), dimensions={0}
  %reduce.396 = s32[2,8192]{1,0} reduce(%convert_element_type.2529, %constant.2873), dimensions={2}, to_apply=%region_268.15458
  %reduce_sum.4097 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.396)
  %reduce.397 = s32[2,1]{1,0} reduce(%reduce_sum.4097, %constant.2985), dimensions={3,2}, to_apply=%region_269.15464
  %reshape.8806 = s32[2]{0} reshape(%reduce.397)
  %lt.850 = pred[2]{0} compare(%reshape.8806, %broadcast.5111), direction=LT
  %select_n.2169 = s32[2]{0} select(%lt.850, %broadcast.5111, %reshape.8806)
  %reduce_window_sum.285 = s32[2]{0} reduce-window(%select_n.2169, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.14.clone
  %concatenate.282 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.285), dimensions={0}
  %te_fused_attn_backward_ffi.70 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.786, %sharding_constraint.787, %sharding_constraint.788, %constant.2973, %get-tuple-element.489, /*index=5*/%get-tuple-element.490, %sharding_constraint.789, %sharding_constraint.791, %concatenate.281, %concatenate.282, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.494 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.70), index=2
  %sharding_constraint.792 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.494)
  %get-tuple-element.495 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.66), index=19
  %convert_element_type.2531 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.495)
  %all-gather.328 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2531), channel_id=331, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.427 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.792, %all-gather.328), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.496 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.70), index=1
  %sharding_constraint.793 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.496)
  %convert_element_type.2532 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.793)
  %mul.4342 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2532, %mul.4331)
  %convert_element_type.2533 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4342)
  %mul.4344 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2532, %mul.4336)
  %mul.4347 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4344, %mul.4334)
  %convert_element_type.2534 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4347)
  %select_n.2171 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2534, %broadcast.5147)
  %slice.546 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2171), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.114 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.546, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.312 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2533, %pad.114)
  %slice.547 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2171), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.115 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.547, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.313 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.312, %pad.115)
  %select_n.2176 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2534, %broadcast.5147)
  %slice.548 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2176), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.116 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.548, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.314 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.313, %pad.116)
  %slice.549 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2176), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.117 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.549, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.315 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.314, %pad.117)
  %get-tuple-element.497 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.66), index=16
  %convert_element_type.2535 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.497)
  %all-gather.329 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2535), channel_id=332, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.428 = bf16[2,8192,4096]{2,1,0} dot(%add_any.315, %all-gather.329), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.316 = bf16[2,8192,4096]{2,1,0} add(%dot.427, %dot.428)
  %sharding_constraint.794 = bf16[2,8192,4096]{2,1,0} copy(%add_any.316)
  %get-tuple-element.498 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.70), index=0
  %sharding_constraint.795 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.498)
  %convert_element_type.2536 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.795)
  %mul.4350 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2536, %mul.4315)
  %convert_element_type.2537 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4350)
  %mul.4356 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2536, %mul.4320)
  %mul.4367 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4356, %mul.4318)
  %convert_element_type.2538 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4367)
  %select_n.2178 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2538, %broadcast.5148)
  %slice.550 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2178), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.118 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.550, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.317 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2537, %pad.118)
  %slice.551 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2178), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.119 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.551, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.318 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.317, %pad.119)
  %select_n.2180 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2538, %broadcast.5148)
  %slice.552 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2180), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.120 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.552, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.319 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.318, %pad.120)
  %slice.553 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2180), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.121 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.553, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.320 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.319, %pad.121)
  %get-tuple-element.499 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.66), index=18
  %convert_element_type.2539 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.499)
  %all-gather.330 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2539), channel_id=333, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.429 = bf16[2,8192,4096]{2,1,0} dot(%add_any.320, %all-gather.330), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.796 = bf16[2,8192,4096]{2,1,0} copy(%dot.429)
  %add_any.321 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.794, %sharding_constraint.796)
  %sharding_constraint.797 = bf16[2,8192,4096]{2,1,0} copy(%add_any.321)
  %get-tuple-element.500 = f32[4096]{0} get-tuple-element(%remat2.66), index=15
  %convert_element_type.2540 = bf16[4096]{0} convert(%get-tuple-element.500)
  %mul.4368 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2540), dimensions={2}
  %mul.4369 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.797, %mul.4368)
  %convert_element_type.2541 = f32[2,8192,4096]{2,1,0} convert(%mul.4369)
  %convert_element_type.2542 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.784)
  %square.96 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2542, %convert_element_type.2542)
  %reduce.398 = f32[2,8192]{1,0} reduce(%square.96, %constant.2882), dimensions={2}, to_apply=%region_270.15552
  %div.1540 = f32[2,8192]{1,0} multiply(%reduce.398, %broadcast.5097)
  %add.2673 = f32[2,8192]{1,0} add(%div.1540, %broadcast.5098)
  %add.2677 = f32[2,8192,1]{2,1,0} reshape(%add.2673)
  %rsqrt.158 = f32[2,8192,1]{2,1,0} rsqrt(%add.2677)
  %mul.4370 = f32[2,8192]{1,0} reshape(%rsqrt.158)
  %mul.4371 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4370), dimensions={0,1}
  %mul.4372 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2541, %mul.4371)
  %mul.4373 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2542, %convert_element_type.2541)
  %reduce.399 = f32[2,8192]{1,0} reduce(%mul.4373, %constant.2882), dimensions={2}, to_apply=%region_271.15565
  %reshape.8829 = f32[2,8192,1]{2,1,0} reshape(%reduce.399)
  %div.1541 = f32[2,8192,1]{2,1,0} divide(%rsqrt.158, %add.2677)
  %mul.4375 = f32[2,8192,1]{2,1,0} multiply(%div.1541, %broadcast.5145)
  %mul.4376 = f32[2,8192,1]{2,1,0} multiply(%reshape.8829, %mul.4375)
  %mul.4377 = f32[2,8192,1]{2,1,0} multiply(%mul.4376, %mul.2917)
  %mul.4378 = f32[2,8192]{1,0} reshape(%mul.4377)
  %mul.4379 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4378), dimensions={0,1}
  %mul.4380 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2542, %mul.4379)
  %add_any.322 = f32[2,8192,4096]{2,1,0} add(%mul.4372, %mul.4380)
  %convert_element_type.2543 = bf16[2,8192,4096]{2,1,0} convert(%add_any.322)
  %add_any.323 = bf16[2,8192,4096]{2,1,0} add(%add_any.311, %convert_element_type.2543)
  %sharding_constraint.798 = bf16[2,8192,4096]{2,1,0} copy(%add_any.323)
  %tuple.125 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.119, %reduce_precision.120, %reduce_precision.121, %get-tuple-element.64, %sharding_constraint.498, /*index=5*/%reduce_precision.122, %reduce_precision.123, %reduce_precision.124, %reduce_precision.125, %constant.2935, /*index=10*/%constant.2935, %param.157, %param.158, %param.159, %param.156, /*index=15*/%param.151, %param.153, %param.155, %param.152, %param.154, /*index=20*/%sharding_constraint.270, %param.10, %param.7, %sharding_constraint.798)
  %remat2.67 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.125)
  %get-tuple-element.501 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.67), index=23
  %sharding_constraint.799 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.501)
  %get-tuple-element.502 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.67), index=7
  %neg.173 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.502)
  %exp.174 = bf16[2,8192,14336]{2,1,0} exponential(%neg.173)
  %add.2678 = bf16[2,8192,14336]{2,1,0} add(%exp.174, %jit_silu_.0)
  %div.1542 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2678)
  %mul.4381 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.502, %div.1542)
  %sharding_constraint.800 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.799)
  %get-tuple-element.503 = f32[14336,512]{1,0} get-tuple-element(%remat2.67), index=13
  %convert_element_type.2544 = bf16[14336,512]{1,0} convert(%get-tuple-element.503)
  %all-gather.331 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2544), channel_id=334, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.430 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.800, %all-gather.331), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.801 = bf16[2,8192,14336]{2,1,0} copy(%dot.430)
  %mul.4382 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4381, %sharding_constraint.801)
  %get-tuple-element.504 = f32[512,14336]{1,0} get-tuple-element(%remat2.67), index=12
  %convert_element_type.2545 = bf16[512,14336]{1,0} convert(%get-tuple-element.504)
  %all-gather.332 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2545), channel_id=335, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.431 = bf16[2,8192,4096]{2,1,0} dot(%mul.4382, %all-gather.332), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.505 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.67), index=8
  %mul.4383 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.801, %get-tuple-element.505)
  %mul.4384 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4383, %div.1542)
  %mul.4385 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.502, %mul.4383)
  %sub.272 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1542)
  %mul.4386 = bf16[2,8192,14336]{2,1,0} multiply(%div.1542, %sub.272)
  %mul.4387 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4385, %mul.4386)
  %add_any.324 = bf16[2,8192,14336]{2,1,0} add(%mul.4384, %mul.4387)
  %get-tuple-element.506 = f32[512,14336]{1,0} get-tuple-element(%remat2.67), index=11
  %convert_element_type.2546 = bf16[512,14336]{1,0} convert(%get-tuple-element.506)
  %all-gather.333 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2546), channel_id=336, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.432 = bf16[2,8192,4096]{2,1,0} dot(%add_any.324, %all-gather.333), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.325 = bf16[2,8192,4096]{2,1,0} add(%dot.431, %dot.432)
  %sharding_constraint.802 = bf16[2,8192,4096]{2,1,0} copy(%add_any.325)
  %get-tuple-element.507 = f32[4096]{0} get-tuple-element(%remat2.67), index=14
  %convert_element_type.2547 = bf16[4096]{0} convert(%get-tuple-element.507)
  %mul.4388 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2547), dimensions={2}
  %mul.4389 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.802, %mul.4388)
  %convert_element_type.2548 = f32[2,8192,4096]{2,1,0} convert(%mul.4389)
  %get-tuple-element.508 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.67), index=20
  %sharding_constraint.803 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.508)
  %get-tuple-element.509 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.67), index=6
  %sharding_constraint.804 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.509)
  %add.2679 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.803, %sharding_constraint.804)
  %convert_element_type.2550 = f32[2,8192,4096]{2,1,0} convert(%add.2679)
  %square.97 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2550, %convert_element_type.2550)
  %reduce.400 = f32[2,8192]{1,0} reduce(%square.97, %constant.2882), dimensions={2}, to_apply=%region_272.15643
  %div.1543 = f32[2,8192]{1,0} multiply(%reduce.400, %broadcast.5097)
  %add.2682 = f32[2,8192]{1,0} add(%div.1543, %broadcast.5098)
  %add.2683 = f32[2,8192,1]{2,1,0} reshape(%add.2682)
  %rsqrt.159 = f32[2,8192,1]{2,1,0} rsqrt(%add.2683)
  %mul.4390 = f32[2,8192]{1,0} reshape(%rsqrt.159)
  %mul.4391 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4390), dimensions={0,1}
  %mul.4392 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2548, %mul.4391)
  %mul.4393 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2550, %convert_element_type.2548)
  %reduce.401 = f32[2,8192]{1,0} reduce(%mul.4393, %constant.2882), dimensions={2}, to_apply=%region_273.15656
  %reshape.8830 = f32[2,8192,1]{2,1,0} reshape(%reduce.401)
  %div.1544 = f32[2,8192,1]{2,1,0} divide(%rsqrt.159, %add.2683)
  %mul.4395 = f32[2,8192,1]{2,1,0} multiply(%div.1544, %broadcast.5145)
  %mul.4397 = f32[2,8192,1]{2,1,0} multiply(%reshape.8830, %mul.4395)
  %mul.4398 = f32[2,8192,1]{2,1,0} multiply(%mul.4397, %mul.2917)
  %mul.4399 = f32[2,8192]{1,0} reshape(%mul.4398)
  %mul.4400 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4399), dimensions={0,1}
  %mul.4401 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2550, %mul.4400)
  %add_any.326 = f32[2,8192,4096]{2,1,0} add(%mul.4392, %mul.4401)
  %convert_element_type.2551 = bf16[2,8192,4096]{2,1,0} convert(%add_any.326)
  %add_any.327 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.799, %convert_element_type.2551)
  %get-tuple-element.510 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.67), index=0
  %convert_element_type.2552 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.510)
  %get-tuple-element.511 = s32[2,8192]{1,0} get-tuple-element(%remat2.67), index=22
  %convert_element_type.2553 = f32[2,8192]{1,0} convert(%get-tuple-element.511)
  %div.1545 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2553), dimensions={0,1}
  %div.1554 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1545, %div.371)
  %cos.98 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1554)
  %mul.4408 = f32[2,8192,128]{2,1,0} reshape(%cos.98)
  %mul.4409 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4408), dimensions={0,1,3}
  %mul.4410 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2552, %mul.4409)
  %slice.554 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.510), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.555 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.510), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.283 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.554, %slice.555), dimensions={3}
  %slice.556 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.510), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.557 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.510), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.284 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.556, %slice.557), dimensions={3}
  %select_n.2187 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.283, %concatenate.284)
  %convert_element_type.2558 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2187)
  %sin.94 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1554)
  %mul.4411 = f32[2,8192,128]{2,1,0} reshape(%sin.94)
  %mul.4412 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4411), dimensions={0,1,3}
  %mul.4413 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2558, %mul.4412)
  %get-tuple-element.512 = s32[2]{0} get-tuple-element(%remat2.67), index=9
  %broadcast_in_dim.559 = s32[64,2]{1,0} broadcast(%get-tuple-element.512), dimensions={1}
  %reshape.8837 = s32[128]{0} reshape(%broadcast_in_dim.559)
  %convert_element_type.2560 = f32[128]{0} convert(%reshape.8837)
  %mul.4414 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2560), dimensions={3}
  %mul.4415 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4413, %mul.4414)
  %add.2686 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4410, %mul.4415)
  %convert_element_type.2561 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2686)
  %sharding_constraint.805 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2561)
  %get-tuple-element.513 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.67), index=1
  %convert_element_type.2562 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.513)
  %mul.4423 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4408), dimensions={0,1,3}
  %mul.4424 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2562, %mul.4423)
  %slice.558 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.513), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.559 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.513), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.285 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.558, %slice.559), dimensions={3}
  %slice.560 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.513), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.561 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.513), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.286 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.560, %slice.561), dimensions={3}
  %select_n.2197 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.285, %concatenate.286)
  %convert_element_type.2567 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2197)
  %mul.4428 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4411), dimensions={0,1,3}
  %mul.4429 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2567, %mul.4428)
  %get-tuple-element.514 = s32[2]{0} get-tuple-element(%remat2.67), index=10
  %broadcast_in_dim.561 = s32[64,2]{1,0} broadcast(%get-tuple-element.514), dimensions={1}
  %reshape.8844 = s32[128]{0} reshape(%broadcast_in_dim.561)
  %convert_element_type.2568 = f32[128]{0} convert(%reshape.8844)
  %mul.4430 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2568), dimensions={3}
  %mul.4431 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4429, %mul.4430)
  %add.2689 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4424, %mul.4431)
  %convert_element_type.2569 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2689)
  %sharding_constraint.806 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2569)
  %get-tuple-element.515 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.67), index=2
  %sharding_constraint.807 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.515)
  %get-tuple-element.516 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.67), index=3
  %get-tuple-element.517 = u32[2,4]{1,0} get-tuple-element(%remat2.67), index=4
  %get-tuple-element.518 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.67), index=5
  %sharding_constraint.808 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.518)
  %sharding_constraint.809 = bf16[2,8192,4096]{2,1,0} copy(%add_any.327)
  %get-tuple-element.519 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.67), index=17
  %convert_element_type.2570 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.519)
  %all-gather.334 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2570), channel_id=337, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.433 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.809, %all-gather.334), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.810 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.433)
  %get-tuple-element.520 = s32[2,8192]{1,0} get-tuple-element(%remat2.67), index=21
  %eq.600 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.520), dimensions={0,1}
  %eq.601 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.520), dimensions={0,2}
  %eq.602 = pred[2,8192,8192]{2,1,0} compare(%eq.600, %eq.601), direction=EQ
  %and.704 = pred[2,8192,8192]{2,1,0} and(%eq.602, %and.455)
  %select_n.2198 = f32[2,8192,8192]{2,1,0} select(%and.704, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1057 = pred[2,8192,8192]{2,1,0} compare(%select_n.2198, %broadcast_in_dim.277), direction=NE
  %not.112 = pred[2,8192,8192]{2,1,0} not(%ne.1057)
  %convert_element_type.2571 = s32[2,8192,8192]{2,1,0} convert(%not.112)
  %reduce.402 = s32[2,8192]{1,0} reduce(%convert_element_type.2571, %constant.2873), dimensions={1}, to_apply=%region_274.15808
  %reduce_sum.4098 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.402)
  %slice.562 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4098), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.47 = s32[2,1]{1,0} reshape(%slice.562)
  %reshape.8847 = s32[2]{0} reshape(%squeeze.47)
  %lt.859 = pred[2]{0} compare(%reshape.8847, %broadcast.5111), direction=LT
  %select_n.2199 = s32[2]{0} select(%lt.859, %broadcast.5111, %reshape.8847)
  %reduce_window_sum.286 = s32[2]{0} reduce-window(%select_n.2199, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.15
  %concatenate.287 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.286), dimensions={0}
  %reduce.403 = s32[2,8192]{1,0} reduce(%convert_element_type.2571, %constant.2873), dimensions={2}, to_apply=%region_275.15817
  %reduce_sum.4099 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.403)
  %reduce.404 = s32[2,1]{1,0} reduce(%reduce_sum.4099, %constant.2985), dimensions={3,2}, to_apply=%region_276.15823
  %reshape.8848 = s32[2]{0} reshape(%reduce.404)
  %lt.860 = pred[2]{0} compare(%reshape.8848, %broadcast.5111), direction=LT
  %select_n.2200 = s32[2]{0} select(%lt.860, %broadcast.5111, %reshape.8848)
  %reduce_window_sum.287 = s32[2]{0} reduce-window(%select_n.2200, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.15.clone
  %concatenate.288 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.287), dimensions={0}
  %te_fused_attn_backward_ffi.75 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.805, %sharding_constraint.806, %sharding_constraint.807, %constant.2973, %get-tuple-element.516, /*index=5*/%get-tuple-element.517, %sharding_constraint.808, %sharding_constraint.810, %concatenate.287, %concatenate.288, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.521 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.75), index=2
  %sharding_constraint.811 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.521)
  %get-tuple-element.522 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.67), index=19
  %convert_element_type.2573 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.522)
  %all-gather.335 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2573), channel_id=338, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.434 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.811, %all-gather.335), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.523 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.75), index=1
  %sharding_constraint.812 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.523)
  %convert_element_type.2574 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.812)
  %mul.4434 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2574, %mul.4423)
  %convert_element_type.2576 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4434)
  %mul.4436 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2574, %mul.4430)
  %mul.4443 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4436, %mul.4428)
  %convert_element_type.2577 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4443)
  %select_n.2202 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2577, %broadcast.5147)
  %slice.563 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2202), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.122 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.563, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.328 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2576, %pad.122)
  %slice.564 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2202), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.123 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.564, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.329 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.328, %pad.123)
  %select_n.2204 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2577, %broadcast.5147)
  %slice.565 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2204), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.124 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.565, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.330 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.329, %pad.124)
  %slice.566 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2204), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.125 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.566, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.331 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.330, %pad.125)
  %get-tuple-element.524 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.67), index=16
  %convert_element_type.2578 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.524)
  %all-gather.336 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2578), channel_id=339, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.435 = bf16[2,8192,4096]{2,1,0} dot(%add_any.331, %all-gather.336), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.332 = bf16[2,8192,4096]{2,1,0} add(%dot.434, %dot.435)
  %sharding_constraint.813 = bf16[2,8192,4096]{2,1,0} copy(%add_any.332)
  %get-tuple-element.525 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.75), index=0
  %sharding_constraint.814 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.525)
  %convert_element_type.2579 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.814)
  %mul.4450 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2579, %mul.4409)
  %convert_element_type.2580 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4450)
  %mul.4452 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2579, %mul.4414)
  %mul.4455 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4452, %mul.4412)
  %convert_element_type.2581 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4455)
  %select_n.2206 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2581, %broadcast.5148)
  %slice.567 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2206), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.126 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.567, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.333 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2580, %pad.126)
  %slice.568 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2206), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.127 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.568, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.334 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.333, %pad.127)
  %select_n.2208 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2581, %broadcast.5148)
  %slice.569 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2208), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.128 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.569, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.335 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.334, %pad.128)
  %slice.570 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2208), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.129 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.570, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.336 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.335, %pad.129)
  %get-tuple-element.526 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.67), index=18
  %convert_element_type.2582 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.526)
  %all-gather.337 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2582), channel_id=340, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.436 = bf16[2,8192,4096]{2,1,0} dot(%add_any.336, %all-gather.337), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.815 = bf16[2,8192,4096]{2,1,0} copy(%dot.436)
  %add_any.337 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.813, %sharding_constraint.815)
  %sharding_constraint.816 = bf16[2,8192,4096]{2,1,0} copy(%add_any.337)
  %get-tuple-element.527 = f32[4096]{0} get-tuple-element(%remat2.67), index=15
  %convert_element_type.2583 = bf16[4096]{0} convert(%get-tuple-element.527)
  %mul.4457 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2583), dimensions={2}
  %mul.4459 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.816, %mul.4457)
  %convert_element_type.2584 = f32[2,8192,4096]{2,1,0} convert(%mul.4459)
  %convert_element_type.2585 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.803)
  %square.98 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2585, %convert_element_type.2585)
  %reduce.405 = f32[2,8192]{1,0} reduce(%square.98, %constant.2882), dimensions={2}, to_apply=%region_277.15911
  %div.1565 = f32[2,8192]{1,0} multiply(%reduce.405, %broadcast.5097)
  %add.2695 = f32[2,8192]{1,0} add(%div.1565, %broadcast.5098)
  %add.2696 = f32[2,8192,1]{2,1,0} reshape(%add.2695)
  %rsqrt.160 = f32[2,8192,1]{2,1,0} rsqrt(%add.2696)
  %mul.4461 = f32[2,8192]{1,0} reshape(%rsqrt.160)
  %mul.4462 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4461), dimensions={0,1}
  %mul.4463 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2584, %mul.4462)
  %mul.4464 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2585, %convert_element_type.2584)
  %reduce.406 = f32[2,8192]{1,0} reduce(%mul.4464, %constant.2882), dimensions={2}, to_apply=%region_278.15924
  %reshape.8869 = f32[2,8192,1]{2,1,0} reshape(%reduce.406)
  %div.1566 = f32[2,8192,1]{2,1,0} divide(%rsqrt.160, %add.2696)
  %mul.4465 = f32[2,8192,1]{2,1,0} multiply(%div.1566, %broadcast.5145)
  %mul.4466 = f32[2,8192,1]{2,1,0} multiply(%reshape.8869, %mul.4465)
  %mul.4467 = f32[2,8192,1]{2,1,0} multiply(%mul.4466, %mul.2917)
  %mul.4468 = f32[2,8192]{1,0} reshape(%mul.4467)
  %mul.4472 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4468), dimensions={0,1}
  %mul.4473 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2585, %mul.4472)
  %add_any.338 = f32[2,8192,4096]{2,1,0} add(%mul.4463, %mul.4473)
  %convert_element_type.2586 = bf16[2,8192,4096]{2,1,0} convert(%add_any.338)
  %add_any.339 = bf16[2,8192,4096]{2,1,0} add(%add_any.327, %convert_element_type.2586)
  %sharding_constraint.817 = bf16[2,8192,4096]{2,1,0} copy(%add_any.339)
  %tuple.127 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.112, %reduce_precision.113, %reduce_precision.114, %get-tuple-element.62, %sharding_constraint.497, /*index=5*/%reduce_precision.115, %reduce_precision.116, %reduce_precision.117, %reduce_precision.118, %constant.2935, /*index=10*/%constant.2935, %param.148, %param.149, %param.150, %param.147, /*index=15*/%param.142, %param.144, %param.146, %param.143, %param.145, /*index=20*/%sharding_constraint.257, %param.10, %param.7, %sharding_constraint.817)
  %remat2.68 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.127)
  %get-tuple-element.528 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.68), index=23
  %sharding_constraint.818 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.528)
  %get-tuple-element.529 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.68), index=7
  %neg.174 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.529)
  %exp.175 = bf16[2,8192,14336]{2,1,0} exponential(%neg.174)
  %add.2698 = bf16[2,8192,14336]{2,1,0} add(%exp.175, %jit_silu_.0)
  %div.1567 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2698)
  %mul.4474 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.529, %div.1567)
  %sharding_constraint.819 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.818)
  %get-tuple-element.530 = f32[14336,512]{1,0} get-tuple-element(%remat2.68), index=13
  %convert_element_type.2587 = bf16[14336,512]{1,0} convert(%get-tuple-element.530)
  %all-gather.338 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2587), channel_id=341, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.437 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.819, %all-gather.338), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.820 = bf16[2,8192,14336]{2,1,0} copy(%dot.437)
  %mul.4479 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4474, %sharding_constraint.820)
  %get-tuple-element.531 = f32[512,14336]{1,0} get-tuple-element(%remat2.68), index=12
  %convert_element_type.2588 = bf16[512,14336]{1,0} convert(%get-tuple-element.531)
  %all-gather.339 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2588), channel_id=342, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.438 = bf16[2,8192,4096]{2,1,0} dot(%mul.4479, %all-gather.339), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.532 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.68), index=8
  %mul.4480 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.820, %get-tuple-element.532)
  %mul.4481 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4480, %div.1567)
  %mul.4486 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.529, %mul.4480)
  %sub.277 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1567)
  %mul.4487 = bf16[2,8192,14336]{2,1,0} multiply(%div.1567, %sub.277)
  %mul.4488 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4486, %mul.4487)
  %add_any.340 = bf16[2,8192,14336]{2,1,0} add(%mul.4481, %mul.4488)
  %get-tuple-element.533 = f32[512,14336]{1,0} get-tuple-element(%remat2.68), index=11
  %convert_element_type.2590 = bf16[512,14336]{1,0} convert(%get-tuple-element.533)
  %all-gather.340 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2590), channel_id=343, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.439 = bf16[2,8192,4096]{2,1,0} dot(%add_any.340, %all-gather.340), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.341 = bf16[2,8192,4096]{2,1,0} add(%dot.438, %dot.439)
  %sharding_constraint.821 = bf16[2,8192,4096]{2,1,0} copy(%add_any.341)
  %get-tuple-element.534 = f32[4096]{0} get-tuple-element(%remat2.68), index=14
  %convert_element_type.2591 = bf16[4096]{0} convert(%get-tuple-element.534)
  %mul.4491 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2591), dimensions={2}
  %mul.4492 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.821, %mul.4491)
  %convert_element_type.2592 = f32[2,8192,4096]{2,1,0} convert(%mul.4492)
  %get-tuple-element.535 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.68), index=20
  %sharding_constraint.822 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.535)
  %get-tuple-element.536 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.68), index=6
  %sharding_constraint.823 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.536)
  %add.2699 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.822, %sharding_constraint.823)
  %convert_element_type.2593 = f32[2,8192,4096]{2,1,0} convert(%add.2699)
  %square.99 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2593, %convert_element_type.2593)
  %reduce.407 = f32[2,8192]{1,0} reduce(%square.99, %constant.2882), dimensions={2}, to_apply=%region_279.16002
  %div.1568 = f32[2,8192]{1,0} multiply(%reduce.407, %broadcast.5097)
  %add.2700 = f32[2,8192]{1,0} add(%div.1568, %broadcast.5098)
  %add.2701 = f32[2,8192,1]{2,1,0} reshape(%add.2700)
  %rsqrt.161 = f32[2,8192,1]{2,1,0} rsqrt(%add.2701)
  %mul.4493 = f32[2,8192]{1,0} reshape(%rsqrt.161)
  %mul.4494 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4493), dimensions={0,1}
  %mul.4495 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2592, %mul.4494)
  %mul.4496 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2593, %convert_element_type.2592)
  %reduce.408 = f32[2,8192]{1,0} reduce(%mul.4496, %constant.2882), dimensions={2}, to_apply=%region_280.16015
  %reshape.8870 = f32[2,8192,1]{2,1,0} reshape(%reduce.408)
  %div.1569 = f32[2,8192,1]{2,1,0} divide(%rsqrt.161, %add.2701)
  %mul.4497 = f32[2,8192,1]{2,1,0} multiply(%div.1569, %broadcast.5145)
  %mul.4498 = f32[2,8192,1]{2,1,0} multiply(%reshape.8870, %mul.4497)
  %mul.4499 = f32[2,8192,1]{2,1,0} multiply(%mul.4498, %mul.2917)
  %mul.4500 = f32[2,8192]{1,0} reshape(%mul.4499)
  %mul.4501 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4500), dimensions={0,1}
  %mul.4502 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2593, %mul.4501)
  %add_any.342 = f32[2,8192,4096]{2,1,0} add(%mul.4495, %mul.4502)
  %convert_element_type.2595 = bf16[2,8192,4096]{2,1,0} convert(%add_any.342)
  %add_any.343 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.818, %convert_element_type.2595)
  %get-tuple-element.537 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.68), index=0
  %convert_element_type.2596 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.537)
  %get-tuple-element.538 = s32[2,8192]{1,0} get-tuple-element(%remat2.68), index=22
  %convert_element_type.2597 = f32[2,8192]{1,0} convert(%get-tuple-element.538)
  %div.1570 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2597), dimensions={0,1}
  %div.1579 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1570, %div.371)
  %cos.100 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1579)
  %mul.4506 = f32[2,8192,128]{2,1,0} reshape(%cos.100)
  %mul.4507 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4506), dimensions={0,1,3}
  %mul.4508 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2596, %mul.4507)
  %slice.571 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.537), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.572 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.537), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.289 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.571, %slice.572), dimensions={3}
  %slice.573 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.537), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.574 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.537), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.290 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.573, %slice.574), dimensions={3}
  %select_n.2218 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.289, %concatenate.290)
  %convert_element_type.2602 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2218)
  %sin.96 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1579)
  %mul.4509 = f32[2,8192,128]{2,1,0} reshape(%sin.96)
  %mul.4510 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4509), dimensions={0,1,3}
  %mul.4511 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2602, %mul.4510)
  %get-tuple-element.539 = s32[2]{0} get-tuple-element(%remat2.68), index=9
  %broadcast_in_dim.565 = s32[64,2]{1,0} broadcast(%get-tuple-element.539), dimensions={1}
  %reshape.8877 = s32[128]{0} reshape(%broadcast_in_dim.565)
  %convert_element_type.2603 = f32[128]{0} convert(%reshape.8877)
  %mul.4512 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2603), dimensions={3}
  %mul.4513 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4511, %mul.4512)
  %add.2704 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4508, %mul.4513)
  %convert_element_type.2604 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2704)
  %sharding_constraint.824 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2604)
  %get-tuple-element.540 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.68), index=1
  %convert_element_type.2605 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.540)
  %mul.4519 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4506), dimensions={0,1,3}
  %mul.4520 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2605, %mul.4519)
  %slice.575 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.540), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.576 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.540), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.291 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.575, %slice.576), dimensions={3}
  %slice.577 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.540), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.578 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.540), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.292 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.577, %slice.578), dimensions={3}
  %select_n.2225 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.291, %concatenate.292)
  %convert_element_type.2611 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2225)
  %mul.4522 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4509), dimensions={0,1,3}
  %mul.4523 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2611, %mul.4522)
  %get-tuple-element.541 = s32[2]{0} get-tuple-element(%remat2.68), index=10
  %broadcast_in_dim.567 = s32[64,2]{1,0} broadcast(%get-tuple-element.541), dimensions={1}
  %reshape.8884 = s32[128]{0} reshape(%broadcast_in_dim.567)
  %convert_element_type.2612 = f32[128]{0} convert(%reshape.8884)
  %mul.4524 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2612), dimensions={3}
  %mul.4525 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4523, %mul.4524)
  %add.2708 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4520, %mul.4525)
  %convert_element_type.2613 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2708)
  %sharding_constraint.825 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2613)
  %get-tuple-element.542 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.68), index=2
  %sharding_constraint.826 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.542)
  %get-tuple-element.543 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.68), index=3
  %get-tuple-element.544 = u32[2,4]{1,0} get-tuple-element(%remat2.68), index=4
  %get-tuple-element.545 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.68), index=5
  %sharding_constraint.827 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.545)
  %sharding_constraint.828 = bf16[2,8192,4096]{2,1,0} copy(%add_any.343)
  %get-tuple-element.546 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.68), index=17
  %convert_element_type.2614 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.546)
  %all-gather.341 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2614), channel_id=344, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.440 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.828, %all-gather.341), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.829 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.440)
  %get-tuple-element.547 = s32[2,8192]{1,0} get-tuple-element(%remat2.68), index=21
  %eq.607 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.547), dimensions={0,1}
  %eq.608 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.547), dimensions={0,2}
  %eq.609 = pred[2,8192,8192]{2,1,0} compare(%eq.607, %eq.608), direction=EQ
  %and.712 = pred[2,8192,8192]{2,1,0} and(%eq.609, %and.455)
  %select_n.2226 = f32[2,8192,8192]{2,1,0} select(%and.712, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1065 = pred[2,8192,8192]{2,1,0} compare(%select_n.2226, %broadcast_in_dim.277), direction=NE
  %not.113 = pred[2,8192,8192]{2,1,0} not(%ne.1065)
  %convert_element_type.2615 = s32[2,8192,8192]{2,1,0} convert(%not.113)
  %reduce.409 = s32[2,8192]{1,0} reduce(%convert_element_type.2615, %constant.2873), dimensions={1}, to_apply=%region_281.16167
  %reduce_sum.4100 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.409)
  %slice.579 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4100), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.48 = s32[2,1]{1,0} reshape(%slice.579)
  %reshape.8886 = s32[2]{0} reshape(%squeeze.48)
  %lt.869 = pred[2]{0} compare(%reshape.8886, %broadcast.5111), direction=LT
  %select_n.2227 = s32[2]{0} select(%lt.869, %broadcast.5111, %reshape.8886)
  %reduce_window_sum.288 = s32[2]{0} reduce-window(%select_n.2227, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.16
  %concatenate.293 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.288), dimensions={0}
  %reduce.410 = s32[2,8192]{1,0} reduce(%convert_element_type.2615, %constant.2873), dimensions={2}, to_apply=%region_282.16176
  %reduce_sum.4101 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.410)
  %reduce.411 = s32[2,1]{1,0} reduce(%reduce_sum.4101, %constant.2985), dimensions={3,2}, to_apply=%region_283.16182
  %reshape.8887 = s32[2]{0} reshape(%reduce.411)
  %lt.870 = pred[2]{0} compare(%reshape.8887, %broadcast.5111), direction=LT
  %select_n.2228 = s32[2]{0} select(%lt.870, %broadcast.5111, %reshape.8887)
  %reduce_window_sum.289 = s32[2]{0} reduce-window(%select_n.2228, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.16.clone
  %concatenate.294 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.289), dimensions={0}
  %te_fused_attn_backward_ffi.80 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.824, %sharding_constraint.825, %sharding_constraint.826, %constant.2973, %get-tuple-element.543, /*index=5*/%get-tuple-element.544, %sharding_constraint.827, %sharding_constraint.829, %concatenate.293, %concatenate.294, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.548 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.80), index=2
  %sharding_constraint.830 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.548)
  %get-tuple-element.549 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.68), index=19
  %convert_element_type.2617 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.549)
  %all-gather.342 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2617), channel_id=345, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.441 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.830, %all-gather.342), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.550 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.80), index=1
  %sharding_constraint.831 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.550)
  %convert_element_type.2618 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.831)
  %mul.4528 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2618, %mul.4519)
  %convert_element_type.2619 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4528)
  %mul.4530 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2618, %mul.4524)
  %mul.4535 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4530, %mul.4522)
  %convert_element_type.2620 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4535)
  %select_n.2230 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2620, %broadcast.5147)
  %slice.580 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2230), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.130 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.580, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.344 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2619, %pad.130)
  %slice.581 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2230), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.131 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.581, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.345 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.344, %pad.131)
  %select_n.2232 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2620, %broadcast.5147)
  %slice.582 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2232), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.132 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.582, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.346 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.345, %pad.132)
  %slice.583 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2232), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.133 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.583, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.347 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.346, %pad.133)
  %get-tuple-element.551 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.68), index=16
  %convert_element_type.2621 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.551)
  %all-gather.343 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2621), channel_id=346, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.442 = bf16[2,8192,4096]{2,1,0} dot(%add_any.347, %all-gather.343), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.348 = bf16[2,8192,4096]{2,1,0} add(%dot.441, %dot.442)
  %sharding_constraint.832 = bf16[2,8192,4096]{2,1,0} copy(%add_any.348)
  %get-tuple-element.552 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.80), index=0
  %sharding_constraint.833 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.552)
  %convert_element_type.2622 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.833)
  %mul.4538 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2622, %mul.4507)
  %convert_element_type.2623 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4538)
  %mul.4540 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2622, %mul.4512)
  %mul.4543 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4540, %mul.4510)
  %convert_element_type.2624 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4543)
  %select_n.2234 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2624, %broadcast.5148)
  %slice.584 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2234), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.134 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.584, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.349 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2623, %pad.134)
  %slice.585 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2234), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.135 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.585, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.350 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.349, %pad.135)
  %select_n.2239 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2624, %broadcast.5148)
  %slice.586 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2239), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.136 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.586, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.351 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.350, %pad.136)
  %slice.587 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2239), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.137 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.587, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.352 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.351, %pad.137)
  %get-tuple-element.553 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.68), index=18
  %convert_element_type.2626 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.553)
  %all-gather.344 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2626), channel_id=347, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.443 = bf16[2,8192,4096]{2,1,0} dot(%add_any.352, %all-gather.344), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.834 = bf16[2,8192,4096]{2,1,0} copy(%dot.443)
  %add_any.353 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.832, %sharding_constraint.834)
  %sharding_constraint.835 = bf16[2,8192,4096]{2,1,0} copy(%add_any.353)
  %get-tuple-element.554 = f32[4096]{0} get-tuple-element(%remat2.68), index=15
  %convert_element_type.2627 = bf16[4096]{0} convert(%get-tuple-element.554)
  %mul.4544 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2627), dimensions={2}
  %mul.4545 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.835, %mul.4544)
  %convert_element_type.2628 = f32[2,8192,4096]{2,1,0} convert(%mul.4545)
  %convert_element_type.2629 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.822)
  %square.100 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2629, %convert_element_type.2629)
  %reduce.412 = f32[2,8192]{1,0} reduce(%square.100, %constant.2882), dimensions={2}, to_apply=%region_284.16270
  %div.1590 = f32[2,8192]{1,0} multiply(%reduce.412, %broadcast.5097)
  %add.2713 = f32[2,8192]{1,0} add(%div.1590, %broadcast.5098)
  %add.2714 = f32[2,8192,1]{2,1,0} reshape(%add.2713)
  %rsqrt.162 = f32[2,8192,1]{2,1,0} rsqrt(%add.2714)
  %mul.4546 = f32[2,8192]{1,0} reshape(%rsqrt.162)
  %mul.4547 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4546), dimensions={0,1}
  %mul.4548 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2628, %mul.4547)
  %mul.4549 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2629, %convert_element_type.2628)
  %reduce.413 = f32[2,8192]{1,0} reduce(%mul.4549, %constant.2882), dimensions={2}, to_apply=%region_285.16283
  %reshape.8908 = f32[2,8192,1]{2,1,0} reshape(%reduce.413)
  %div.1591 = f32[2,8192,1]{2,1,0} divide(%rsqrt.162, %add.2714)
  %mul.4550 = f32[2,8192,1]{2,1,0} multiply(%div.1591, %broadcast.5145)
  %mul.4553 = f32[2,8192,1]{2,1,0} multiply(%reshape.8908, %mul.4550)
  %mul.4554 = f32[2,8192,1]{2,1,0} multiply(%mul.4553, %mul.2917)
  %mul.4561 = f32[2,8192]{1,0} reshape(%mul.4554)
  %mul.4566 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4561), dimensions={0,1}
  %mul.4567 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2629, %mul.4566)
  %add_any.354 = f32[2,8192,4096]{2,1,0} add(%mul.4548, %mul.4567)
  %convert_element_type.2630 = bf16[2,8192,4096]{2,1,0} convert(%add_any.354)
  %add_any.355 = bf16[2,8192,4096]{2,1,0} add(%add_any.343, %convert_element_type.2630)
  %sharding_constraint.836 = bf16[2,8192,4096]{2,1,0} copy(%add_any.355)
  %tuple.129 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.105, %reduce_precision.106, %reduce_precision.107, %get-tuple-element.60, %sharding_constraint.496, /*index=5*/%reduce_precision.108, %reduce_precision.109, %reduce_precision.110, %reduce_precision.111, %constant.2935, /*index=10*/%constant.2935, %param.139, %param.140, %param.141, %param.138, /*index=15*/%param.133, %param.135, %param.137, %param.134, %param.136, /*index=20*/%sharding_constraint.244, %param.10, %param.7, %sharding_constraint.836)
  %remat2.69 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.129)
  %get-tuple-element.555 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.69), index=23
  %sharding_constraint.837 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.555)
  %get-tuple-element.556 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.69), index=7
  %neg.175 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.556)
  %exp.176 = bf16[2,8192,14336]{2,1,0} exponential(%neg.175)
  %add.2715 = bf16[2,8192,14336]{2,1,0} add(%exp.176, %jit_silu_.0)
  %div.1592 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2715)
  %mul.4572 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.556, %div.1592)
  %sharding_constraint.838 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.837)
  %get-tuple-element.557 = f32[14336,512]{1,0} get-tuple-element(%remat2.69), index=13
  %convert_element_type.2631 = bf16[14336,512]{1,0} convert(%get-tuple-element.557)
  %all-gather.345 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2631), channel_id=348, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.444 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.838, %all-gather.345), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.839 = bf16[2,8192,14336]{2,1,0} copy(%dot.444)
  %mul.4573 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4572, %sharding_constraint.839)
  %get-tuple-element.558 = f32[512,14336]{1,0} get-tuple-element(%remat2.69), index=12
  %convert_element_type.2632 = bf16[512,14336]{1,0} convert(%get-tuple-element.558)
  %all-gather.346 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2632), channel_id=349, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.445 = bf16[2,8192,4096]{2,1,0} dot(%mul.4573, %all-gather.346), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.559 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.69), index=8
  %mul.4574 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.839, %get-tuple-element.559)
  %mul.4575 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4574, %div.1592)
  %mul.4576 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.556, %mul.4574)
  %sub.282 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1592)
  %mul.4577 = bf16[2,8192,14336]{2,1,0} multiply(%div.1592, %sub.282)
  %mul.4578 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4576, %mul.4577)
  %add_any.356 = bf16[2,8192,14336]{2,1,0} add(%mul.4575, %mul.4578)
  %get-tuple-element.560 = f32[512,14336]{1,0} get-tuple-element(%remat2.69), index=11
  %convert_element_type.2634 = bf16[512,14336]{1,0} convert(%get-tuple-element.560)
  %all-gather.347 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2634), channel_id=350, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.446 = bf16[2,8192,4096]{2,1,0} dot(%add_any.356, %all-gather.347), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.357 = bf16[2,8192,4096]{2,1,0} add(%dot.445, %dot.446)
  %sharding_constraint.840 = bf16[2,8192,4096]{2,1,0} copy(%add_any.357)
  %get-tuple-element.561 = f32[4096]{0} get-tuple-element(%remat2.69), index=14
  %convert_element_type.2636 = bf16[4096]{0} convert(%get-tuple-element.561)
  %mul.4579 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2636), dimensions={2}
  %mul.4580 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.840, %mul.4579)
  %convert_element_type.2637 = f32[2,8192,4096]{2,1,0} convert(%mul.4580)
  %get-tuple-element.562 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.69), index=20
  %sharding_constraint.841 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.562)
  %get-tuple-element.563 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.69), index=6
  %sharding_constraint.842 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.563)
  %add.2716 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.841, %sharding_constraint.842)
  %convert_element_type.2638 = f32[2,8192,4096]{2,1,0} convert(%add.2716)
  %square.101 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2638, %convert_element_type.2638)
  %reduce.414 = f32[2,8192]{1,0} reduce(%square.101, %constant.2882), dimensions={2}, to_apply=%region_286.16361
  %div.1593 = f32[2,8192]{1,0} multiply(%reduce.414, %broadcast.5097)
  %add.2717 = f32[2,8192]{1,0} add(%div.1593, %broadcast.5098)
  %add.2718 = f32[2,8192,1]{2,1,0} reshape(%add.2717)
  %rsqrt.163 = f32[2,8192,1]{2,1,0} rsqrt(%add.2718)
  %mul.4581 = f32[2,8192]{1,0} reshape(%rsqrt.163)
  %mul.4582 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4581), dimensions={0,1}
  %mul.4583 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2637, %mul.4582)
  %mul.4584 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2638, %convert_element_type.2637)
  %reduce.415 = f32[2,8192]{1,0} reduce(%mul.4584, %constant.2882), dimensions={2}, to_apply=%region_287.16374
  %reshape.8909 = f32[2,8192,1]{2,1,0} reshape(%reduce.415)
  %div.1594 = f32[2,8192,1]{2,1,0} divide(%rsqrt.163, %add.2718)
  %mul.4585 = f32[2,8192,1]{2,1,0} multiply(%div.1594, %broadcast.5145)
  %mul.4586 = f32[2,8192,1]{2,1,0} multiply(%reshape.8909, %mul.4585)
  %mul.4589 = f32[2,8192,1]{2,1,0} multiply(%mul.4586, %mul.2917)
  %mul.4590 = f32[2,8192]{1,0} reshape(%mul.4589)
  %mul.4593 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4590), dimensions={0,1}
  %mul.4594 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2638, %mul.4593)
  %add_any.358 = f32[2,8192,4096]{2,1,0} add(%mul.4583, %mul.4594)
  %convert_element_type.2639 = bf16[2,8192,4096]{2,1,0} convert(%add_any.358)
  %add_any.359 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.837, %convert_element_type.2639)
  %get-tuple-element.564 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.69), index=0
  %convert_element_type.2640 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.564)
  %get-tuple-element.565 = s32[2,8192]{1,0} get-tuple-element(%remat2.69), index=22
  %convert_element_type.2641 = f32[2,8192]{1,0} convert(%get-tuple-element.565)
  %div.1595 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2641), dimensions={0,1}
  %div.1604 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1595, %div.371)
  %cos.102 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1604)
  %mul.4598 = f32[2,8192,128]{2,1,0} reshape(%cos.102)
  %mul.4599 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4598), dimensions={0,1,3}
  %mul.4600 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2640, %mul.4599)
  %slice.588 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.564), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.589 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.564), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.295 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.588, %slice.589), dimensions={3}
  %slice.590 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.564), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.591 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.564), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.296 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.590, %slice.591), dimensions={3}
  %select_n.2246 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.295, %concatenate.296)
  %convert_element_type.2645 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2246)
  %sin.98 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1604)
  %mul.4601 = f32[2,8192,128]{2,1,0} reshape(%sin.98)
  %mul.4603 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4601), dimensions={0,1,3}
  %mul.4604 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2645, %mul.4603)
  %get-tuple-element.566 = s32[2]{0} get-tuple-element(%remat2.69), index=9
  %broadcast_in_dim.571 = s32[64,2]{1,0} broadcast(%get-tuple-element.566), dimensions={1}
  %reshape.8916 = s32[128]{0} reshape(%broadcast_in_dim.571)
  %convert_element_type.2646 = f32[128]{0} convert(%reshape.8916)
  %mul.4605 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2646), dimensions={3}
  %mul.4606 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4604, %mul.4605)
  %add.2721 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4600, %mul.4606)
  %convert_element_type.2647 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2721)
  %sharding_constraint.843 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2647)
  %get-tuple-element.567 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.69), index=1
  %convert_element_type.2648 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.567)
  %mul.4613 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4598), dimensions={0,1,3}
  %mul.4614 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2648, %mul.4613)
  %slice.592 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.567), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.593 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.567), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.297 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.592, %slice.593), dimensions={3}
  %slice.594 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.567), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.595 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.567), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.298 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.594, %slice.595), dimensions={3}
  %select_n.2253 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.297, %concatenate.298)
  %convert_element_type.2654 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2253)
  %mul.4616 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4601), dimensions={0,1,3}
  %mul.4617 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2654, %mul.4616)
  %get-tuple-element.568 = s32[2]{0} get-tuple-element(%remat2.69), index=10
  %broadcast_in_dim.573 = s32[64,2]{1,0} broadcast(%get-tuple-element.568), dimensions={1}
  %reshape.8923 = s32[128]{0} reshape(%broadcast_in_dim.573)
  %convert_element_type.2655 = f32[128]{0} convert(%reshape.8923)
  %mul.4618 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2655), dimensions={3}
  %mul.4619 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4617, %mul.4618)
  %add.2724 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4614, %mul.4619)
  %convert_element_type.2656 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2724)
  %sharding_constraint.844 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2656)
  %get-tuple-element.569 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.69), index=2
  %sharding_constraint.845 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.569)
  %get-tuple-element.570 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.69), index=3
  %get-tuple-element.571 = u32[2,4]{1,0} get-tuple-element(%remat2.69), index=4
  %get-tuple-element.572 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.69), index=5
  %sharding_constraint.846 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.572)
  %sharding_constraint.847 = bf16[2,8192,4096]{2,1,0} copy(%add_any.359)
  %get-tuple-element.573 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.69), index=17
  %convert_element_type.2657 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.573)
  %all-gather.348 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2657), channel_id=351, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.447 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.847, %all-gather.348), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.848 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.447)
  %get-tuple-element.574 = s32[2,8192]{1,0} get-tuple-element(%remat2.69), index=21
  %eq.614 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.574), dimensions={0,1}
  %eq.615 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.574), dimensions={0,2}
  %eq.616 = pred[2,8192,8192]{2,1,0} compare(%eq.614, %eq.615), direction=EQ
  %and.720 = pred[2,8192,8192]{2,1,0} and(%eq.616, %and.455)
  %select_n.2254 = f32[2,8192,8192]{2,1,0} select(%and.720, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1074 = pred[2,8192,8192]{2,1,0} compare(%select_n.2254, %broadcast_in_dim.277), direction=NE
  %not.114 = pred[2,8192,8192]{2,1,0} not(%ne.1074)
  %convert_element_type.2658 = s32[2,8192,8192]{2,1,0} convert(%not.114)
  %reduce.416 = s32[2,8192]{1,0} reduce(%convert_element_type.2658, %constant.2873), dimensions={1}, to_apply=%region_288.16526
  %reduce_sum.4102 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.416)
  %slice.596 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4102), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.49 = s32[2,1]{1,0} reshape(%slice.596)
  %reshape.8925 = s32[2]{0} reshape(%squeeze.49)
  %lt.879 = pred[2]{0} compare(%reshape.8925, %broadcast.5111), direction=LT
  %select_n.2255 = s32[2]{0} select(%lt.879, %broadcast.5111, %reshape.8925)
  %reduce_window_sum.290 = s32[2]{0} reduce-window(%select_n.2255, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.17
  %concatenate.299 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.290), dimensions={0}
  %reduce.417 = s32[2,8192]{1,0} reduce(%convert_element_type.2658, %constant.2873), dimensions={2}, to_apply=%region_289.16535
  %reduce_sum.4103 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.417)
  %reduce.418 = s32[2,1]{1,0} reduce(%reduce_sum.4103, %constant.2985), dimensions={3,2}, to_apply=%region_290.16541
  %reshape.8926 = s32[2]{0} reshape(%reduce.418)
  %lt.880 = pred[2]{0} compare(%reshape.8926, %broadcast.5111), direction=LT
  %select_n.2256 = s32[2]{0} select(%lt.880, %broadcast.5111, %reshape.8926)
  %reduce_window_sum.291 = s32[2]{0} reduce-window(%select_n.2256, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.17.clone
  %concatenate.300 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.291), dimensions={0}
  %te_fused_attn_backward_ffi.85 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.843, %sharding_constraint.844, %sharding_constraint.845, %constant.2973, %get-tuple-element.570, /*index=5*/%get-tuple-element.571, %sharding_constraint.846, %sharding_constraint.848, %concatenate.299, %concatenate.300, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.575 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.85), index=2
  %sharding_constraint.849 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.575)
  %get-tuple-element.576 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.69), index=19
  %convert_element_type.2660 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.576)
  %all-gather.349 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2660), channel_id=352, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.448 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.849, %all-gather.349), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.577 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.85), index=1
  %sharding_constraint.850 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.577)
  %convert_element_type.2661 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.850)
  %mul.4623 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2661, %mul.4613)
  %convert_element_type.2662 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4623)
  %mul.4626 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2661, %mul.4618)
  %mul.4629 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4626, %mul.4616)
  %convert_element_type.2663 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4629)
  %select_n.2261 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2663, %broadcast.5147)
  %slice.597 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2261), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.138 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.597, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.360 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2662, %pad.138)
  %slice.598 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2261), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.139 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.598, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.361 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.360, %pad.139)
  %select_n.2265 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2663, %broadcast.5147)
  %slice.599 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2265), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.140 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.599, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.362 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.361, %pad.140)
  %slice.600 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2265), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.141 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.600, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.363 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.362, %pad.141)
  %get-tuple-element.578 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.69), index=16
  %convert_element_type.2664 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.578)
  %all-gather.350 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2664), channel_id=353, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.449 = bf16[2,8192,4096]{2,1,0} dot(%add_any.363, %all-gather.350), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.364 = bf16[2,8192,4096]{2,1,0} add(%dot.448, %dot.449)
  %sharding_constraint.851 = bf16[2,8192,4096]{2,1,0} copy(%add_any.364)
  %get-tuple-element.579 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.85), index=0
  %sharding_constraint.852 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.579)
  %convert_element_type.2666 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.852)
  %mul.4632 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2666, %mul.4599)
  %convert_element_type.2667 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4632)
  %mul.4642 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2666, %mul.4605)
  %mul.4651 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4642, %mul.4603)
  %convert_element_type.2668 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4651)
  %select_n.2267 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2668, %broadcast.5148)
  %slice.601 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2267), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.142 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.601, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.365 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2667, %pad.142)
  %slice.602 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2267), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.143 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.602, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.366 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.365, %pad.143)
  %select_n.2269 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2668, %broadcast.5148)
  %slice.603 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2269), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.144 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.603, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.367 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.366, %pad.144)
  %slice.604 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2269), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.145 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.604, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.368 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.367, %pad.145)
  %get-tuple-element.580 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.69), index=18
  %convert_element_type.2669 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.580)
  %all-gather.351 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2669), channel_id=354, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.450 = bf16[2,8192,4096]{2,1,0} dot(%add_any.368, %all-gather.351), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.853 = bf16[2,8192,4096]{2,1,0} copy(%dot.450)
  %add_any.369 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.851, %sharding_constraint.853)
  %sharding_constraint.854 = bf16[2,8192,4096]{2,1,0} copy(%add_any.369)
  %get-tuple-element.581 = f32[4096]{0} get-tuple-element(%remat2.69), index=15
  %convert_element_type.2671 = bf16[4096]{0} convert(%get-tuple-element.581)
  %mul.4652 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2671), dimensions={2}
  %mul.4655 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.854, %mul.4652)
  %convert_element_type.2672 = f32[2,8192,4096]{2,1,0} convert(%mul.4655)
  %convert_element_type.2673 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.841)
  %square.102 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2673, %convert_element_type.2673)
  %reduce.419 = f32[2,8192]{1,0} reduce(%square.102, %constant.2882), dimensions={2}, to_apply=%region_291.16629
  %div.1615 = f32[2,8192]{1,0} multiply(%reduce.419, %broadcast.5097)
  %add.2729 = f32[2,8192]{1,0} add(%div.1615, %broadcast.5098)
  %add.2730 = f32[2,8192,1]{2,1,0} reshape(%add.2729)
  %rsqrt.164 = f32[2,8192,1]{2,1,0} rsqrt(%add.2730)
  %mul.4656 = f32[2,8192]{1,0} reshape(%rsqrt.164)
  %mul.4657 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4656), dimensions={0,1}
  %mul.4658 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2672, %mul.4657)
  %mul.4659 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2673, %convert_element_type.2672)
  %reduce.420 = f32[2,8192]{1,0} reduce(%mul.4659, %constant.2882), dimensions={2}, to_apply=%region_292.16642
  %reshape.8948 = f32[2,8192,1]{2,1,0} reshape(%reduce.420)
  %div.1616 = f32[2,8192,1]{2,1,0} divide(%rsqrt.164, %add.2730)
  %mul.4660 = f32[2,8192,1]{2,1,0} multiply(%div.1616, %broadcast.5145)
  %mul.4661 = f32[2,8192,1]{2,1,0} multiply(%reshape.8948, %mul.4660)
  %mul.4662 = f32[2,8192,1]{2,1,0} multiply(%mul.4661, %mul.2917)
  %mul.4663 = f32[2,8192]{1,0} reshape(%mul.4662)
  %mul.4664 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4663), dimensions={0,1}
  %mul.4665 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2673, %mul.4664)
  %add_any.370 = f32[2,8192,4096]{2,1,0} add(%mul.4658, %mul.4665)
  %convert_element_type.2674 = bf16[2,8192,4096]{2,1,0} convert(%add_any.370)
  %add_any.371 = bf16[2,8192,4096]{2,1,0} add(%add_any.359, %convert_element_type.2674)
  %sharding_constraint.855 = bf16[2,8192,4096]{2,1,0} copy(%add_any.371)
  %tuple.131 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.98, %reduce_precision.99, %reduce_precision.100, %get-tuple-element.58, %sharding_constraint.495, /*index=5*/%reduce_precision.101, %reduce_precision.102, %reduce_precision.103, %reduce_precision.104, %constant.2935, /*index=10*/%constant.2935, %param.130, %param.131, %param.132, %param.129, /*index=15*/%param.124, %param.126, %param.128, %param.125, %param.127, /*index=20*/%sharding_constraint.231, %param.10, %param.7, %sharding_constraint.855)
  %remat2.70 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.131)
  %get-tuple-element.582 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.70), index=23
  %sharding_constraint.856 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.582)
  %get-tuple-element.583 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.70), index=7
  %neg.176 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.583)
  %exp.177 = bf16[2,8192,14336]{2,1,0} exponential(%neg.176)
  %add.2732 = bf16[2,8192,14336]{2,1,0} add(%exp.177, %jit_silu_.0)
  %div.1617 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2732)
  %mul.4667 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.583, %div.1617)
  %sharding_constraint.857 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.856)
  %get-tuple-element.584 = f32[14336,512]{1,0} get-tuple-element(%remat2.70), index=13
  %convert_element_type.2676 = bf16[14336,512]{1,0} convert(%get-tuple-element.584)
  %all-gather.352 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2676), channel_id=355, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.451 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.857, %all-gather.352), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.858 = bf16[2,8192,14336]{2,1,0} copy(%dot.451)
  %mul.4668 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4667, %sharding_constraint.858)
  %get-tuple-element.585 = f32[512,14336]{1,0} get-tuple-element(%remat2.70), index=12
  %convert_element_type.2677 = bf16[512,14336]{1,0} convert(%get-tuple-element.585)
  %all-gather.353 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2677), channel_id=356, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.452 = bf16[2,8192,4096]{2,1,0} dot(%mul.4668, %all-gather.353), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.586 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.70), index=8
  %mul.4669 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.858, %get-tuple-element.586)
  %mul.4670 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4669, %div.1617)
  %mul.4671 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.583, %mul.4669)
  %sub.287 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1617)
  %mul.4672 = bf16[2,8192,14336]{2,1,0} multiply(%div.1617, %sub.287)
  %mul.4673 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4671, %mul.4672)
  %add_any.372 = bf16[2,8192,14336]{2,1,0} add(%mul.4670, %mul.4673)
  %get-tuple-element.587 = f32[512,14336]{1,0} get-tuple-element(%remat2.70), index=11
  %convert_element_type.2678 = bf16[512,14336]{1,0} convert(%get-tuple-element.587)
  %all-gather.354 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2678), channel_id=357, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.453 = bf16[2,8192,4096]{2,1,0} dot(%add_any.372, %all-gather.354), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.373 = bf16[2,8192,4096]{2,1,0} add(%dot.452, %dot.453)
  %sharding_constraint.859 = bf16[2,8192,4096]{2,1,0} copy(%add_any.373)
  %get-tuple-element.588 = f32[4096]{0} get-tuple-element(%remat2.70), index=14
  %convert_element_type.2679 = bf16[4096]{0} convert(%get-tuple-element.588)
  %mul.4674 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2679), dimensions={2}
  %mul.4675 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.859, %mul.4674)
  %convert_element_type.2680 = f32[2,8192,4096]{2,1,0} convert(%mul.4675)
  %get-tuple-element.589 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.70), index=20
  %sharding_constraint.860 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.589)
  %get-tuple-element.590 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.70), index=6
  %sharding_constraint.861 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.590)
  %add.2733 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.860, %sharding_constraint.861)
  %convert_element_type.2681 = f32[2,8192,4096]{2,1,0} convert(%add.2733)
  %square.103 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2681, %convert_element_type.2681)
  %reduce.421 = f32[2,8192]{1,0} reduce(%square.103, %constant.2882), dimensions={2}, to_apply=%region_293.16720
  %div.1618 = f32[2,8192]{1,0} multiply(%reduce.421, %broadcast.5097)
  %add.2734 = f32[2,8192]{1,0} add(%div.1618, %broadcast.5098)
  %add.2735 = f32[2,8192,1]{2,1,0} reshape(%add.2734)
  %rsqrt.165 = f32[2,8192,1]{2,1,0} rsqrt(%add.2735)
  %mul.4676 = f32[2,8192]{1,0} reshape(%rsqrt.165)
  %mul.4677 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4676), dimensions={0,1}
  %mul.4678 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2680, %mul.4677)
  %mul.4679 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2681, %convert_element_type.2680)
  %reduce.422 = f32[2,8192]{1,0} reduce(%mul.4679, %constant.2882), dimensions={2}, to_apply=%region_294.16733
  %reshape.8949 = f32[2,8192,1]{2,1,0} reshape(%reduce.422)
  %div.1619 = f32[2,8192,1]{2,1,0} divide(%rsqrt.165, %add.2735)
  %mul.4680 = f32[2,8192,1]{2,1,0} multiply(%div.1619, %broadcast.5145)
  %mul.4681 = f32[2,8192,1]{2,1,0} multiply(%reshape.8949, %mul.4680)
  %mul.4682 = f32[2,8192,1]{2,1,0} multiply(%mul.4681, %mul.2917)
  %mul.4683 = f32[2,8192]{1,0} reshape(%mul.4682)
  %mul.4684 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4683), dimensions={0,1}
  %mul.4685 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2681, %mul.4684)
  %add_any.374 = f32[2,8192,4096]{2,1,0} add(%mul.4678, %mul.4685)
  %convert_element_type.2683 = bf16[2,8192,4096]{2,1,0} convert(%add_any.374)
  %add_any.375 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.856, %convert_element_type.2683)
  %get-tuple-element.591 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.70), index=0
  %convert_element_type.2684 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.591)
  %get-tuple-element.592 = s32[2,8192]{1,0} get-tuple-element(%remat2.70), index=22
  %convert_element_type.2686 = f32[2,8192]{1,0} convert(%get-tuple-element.592)
  %div.1620 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2686), dimensions={0,1}
  %div.1630 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1620, %div.371)
  %cos.104 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1630)
  %mul.4691 = f32[2,8192,128]{2,1,0} reshape(%cos.104)
  %mul.4692 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4691), dimensions={0,1,3}
  %mul.4693 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2684, %mul.4692)
  %slice.605 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.591), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.606 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.591), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.301 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.605, %slice.606), dimensions={3}
  %slice.607 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.591), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.608 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.591), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.302 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.607, %slice.608), dimensions={3}
  %select_n.2276 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.301, %concatenate.302)
  %convert_element_type.2690 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2276)
  %sin.100 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1630)
  %mul.4694 = f32[2,8192,128]{2,1,0} reshape(%sin.100)
  %mul.4695 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4694), dimensions={0,1,3}
  %mul.4696 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2690, %mul.4695)
  %get-tuple-element.593 = s32[2]{0} get-tuple-element(%remat2.70), index=9
  %broadcast_in_dim.577 = s32[64,2]{1,0} broadcast(%get-tuple-element.593), dimensions={1}
  %reshape.8956 = s32[128]{0} reshape(%broadcast_in_dim.577)
  %convert_element_type.2691 = f32[128]{0} convert(%reshape.8956)
  %mul.4700 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2691), dimensions={3}
  %mul.4701 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4696, %mul.4700)
  %add.2738 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4693, %mul.4701)
  %convert_element_type.2692 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2738)
  %sharding_constraint.862 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2692)
  %get-tuple-element.594 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.70), index=1
  %convert_element_type.2694 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.594)
  %mul.4706 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4691), dimensions={0,1,3}
  %mul.4707 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2694, %mul.4706)
  %slice.609 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.594), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.610 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.594), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.303 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.609, %slice.610), dimensions={3}
  %slice.611 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.594), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.612 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.594), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.304 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.611, %slice.612), dimensions={3}
  %select_n.2286 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.303, %concatenate.304)
  %convert_element_type.2699 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2286)
  %mul.4709 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4694), dimensions={0,1,3}
  %mul.4710 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2699, %mul.4709)
  %get-tuple-element.595 = s32[2]{0} get-tuple-element(%remat2.70), index=10
  %broadcast_in_dim.579 = s32[64,2]{1,0} broadcast(%get-tuple-element.595), dimensions={1}
  %reshape.8963 = s32[128]{0} reshape(%broadcast_in_dim.579)
  %convert_element_type.2700 = f32[128]{0} convert(%reshape.8963)
  %mul.4714 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2700), dimensions={3}
  %mul.4715 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4710, %mul.4714)
  %add.2742 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4707, %mul.4715)
  %convert_element_type.2701 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2742)
  %sharding_constraint.863 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2701)
  %get-tuple-element.596 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.70), index=2
  %sharding_constraint.864 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.596)
  %get-tuple-element.597 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.70), index=3
  %get-tuple-element.598 = u32[2,4]{1,0} get-tuple-element(%remat2.70), index=4
  %get-tuple-element.599 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.70), index=5
  %sharding_constraint.865 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.599)
  %sharding_constraint.866 = bf16[2,8192,4096]{2,1,0} copy(%add_any.375)
  %get-tuple-element.600 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.70), index=17
  %convert_element_type.2702 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.600)
  %all-gather.355 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2702), channel_id=358, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.454 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.866, %all-gather.355), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.867 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.454)
  %get-tuple-element.601 = s32[2,8192]{1,0} get-tuple-element(%remat2.70), index=21
  %eq.621 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.601), dimensions={0,1}
  %eq.622 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.601), dimensions={0,2}
  %eq.623 = pred[2,8192,8192]{2,1,0} compare(%eq.621, %eq.622), direction=EQ
  %and.728 = pred[2,8192,8192]{2,1,0} and(%eq.623, %and.455)
  %select_n.2287 = f32[2,8192,8192]{2,1,0} select(%and.728, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1082 = pred[2,8192,8192]{2,1,0} compare(%select_n.2287, %broadcast_in_dim.277), direction=NE
  %not.115 = pred[2,8192,8192]{2,1,0} not(%ne.1082)
  %convert_element_type.2703 = s32[2,8192,8192]{2,1,0} convert(%not.115)
  %reduce.423 = s32[2,8192]{1,0} reduce(%convert_element_type.2703, %constant.2873), dimensions={1}, to_apply=%region_295.16885
  %reduce_sum.4104 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.423)
  %slice.613 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4104), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.50 = s32[2,1]{1,0} reshape(%slice.613)
  %reshape.8965 = s32[2]{0} reshape(%squeeze.50)
  %lt.890 = pred[2]{0} compare(%reshape.8965, %broadcast.5111), direction=LT
  %select_n.2292 = s32[2]{0} select(%lt.890, %broadcast.5111, %reshape.8965)
  %reduce_window_sum.292 = s32[2]{0} reduce-window(%select_n.2292, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.18
  %concatenate.305 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.292), dimensions={0}
  %reduce.424 = s32[2,8192]{1,0} reduce(%convert_element_type.2703, %constant.2873), dimensions={2}, to_apply=%region_296.16894
  %reduce_sum.4105 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.424)
  %reduce.425 = s32[2,1]{1,0} reduce(%reduce_sum.4105, %constant.2985), dimensions={3,2}, to_apply=%region_297.16900
  %reshape.8966 = s32[2]{0} reshape(%reduce.425)
  %lt.891 = pred[2]{0} compare(%reshape.8966, %broadcast.5111), direction=LT
  %select_n.2293 = s32[2]{0} select(%lt.891, %broadcast.5111, %reshape.8966)
  %reduce_window_sum.293 = s32[2]{0} reduce-window(%select_n.2293, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.18.clone
  %concatenate.306 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.293), dimensions={0}
  %te_fused_attn_backward_ffi.90 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.862, %sharding_constraint.863, %sharding_constraint.864, %constant.2973, %get-tuple-element.597, /*index=5*/%get-tuple-element.598, %sharding_constraint.865, %sharding_constraint.867, %concatenate.305, %concatenate.306, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.602 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.90), index=2
  %sharding_constraint.868 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.602)
  %get-tuple-element.603 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.70), index=19
  %convert_element_type.2705 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.603)
  %all-gather.356 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2705), channel_id=359, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.455 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.868, %all-gather.356), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.604 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.90), index=1
  %sharding_constraint.869 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.604)
  %convert_element_type.2706 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.869)
  %mul.4723 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2706, %mul.4706)
  %convert_element_type.2707 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4723)
  %mul.4729 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2706, %mul.4714)
  %mul.4732 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4729, %mul.4709)
  %convert_element_type.2708 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4732)
  %select_n.2295 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2708, %broadcast.5147)
  %slice.614 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2295), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.146 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.614, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.376 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2707, %pad.146)
  %slice.615 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2295), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.147 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.615, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.377 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.376, %pad.147)
  %select_n.2297 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2708, %broadcast.5147)
  %slice.616 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2297), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.148 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.616, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.378 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.377, %pad.148)
  %slice.617 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2297), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.149 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.617, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.379 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.378, %pad.149)
  %get-tuple-element.605 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.70), index=16
  %convert_element_type.2710 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.605)
  %all-gather.357 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2710), channel_id=360, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.456 = bf16[2,8192,4096]{2,1,0} dot(%add_any.379, %all-gather.357), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.380 = bf16[2,8192,4096]{2,1,0} add(%dot.455, %dot.456)
  %sharding_constraint.870 = bf16[2,8192,4096]{2,1,0} copy(%add_any.380)
  %get-tuple-element.606 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.90), index=0
  %sharding_constraint.871 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.606)
  %convert_element_type.2711 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.871)
  %mul.4735 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2711, %mul.4692)
  %convert_element_type.2712 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4735)
  %mul.4738 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2711, %mul.4700)
  %mul.4741 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4738, %mul.4695)
  %convert_element_type.2715 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4741)
  %select_n.2302 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2715, %broadcast.5148)
  %slice.618 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2302), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.150 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.618, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.381 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2712, %pad.150)
  %slice.619 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2302), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.151 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.619, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.382 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.381, %pad.151)
  %select_n.2304 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2715, %broadcast.5148)
  %slice.620 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2304), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.152 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.620, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.383 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.382, %pad.152)
  %slice.621 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2304), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.153 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.621, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.384 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.383, %pad.153)
  %get-tuple-element.607 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.70), index=18
  %convert_element_type.2716 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.607)
  %all-gather.358 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2716), channel_id=361, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.457 = bf16[2,8192,4096]{2,1,0} dot(%add_any.384, %all-gather.358), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.872 = bf16[2,8192,4096]{2,1,0} copy(%dot.457)
  %add_any.385 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.870, %sharding_constraint.872)
  %sharding_constraint.873 = bf16[2,8192,4096]{2,1,0} copy(%add_any.385)
  %get-tuple-element.608 = f32[4096]{0} get-tuple-element(%remat2.70), index=15
  %convert_element_type.2719 = bf16[4096]{0} convert(%get-tuple-element.608)
  %mul.4742 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2719), dimensions={2}
  %mul.4743 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.873, %mul.4742)
  %convert_element_type.2720 = f32[2,8192,4096]{2,1,0} convert(%mul.4743)
  %convert_element_type.2721 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.860)
  %square.104 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2721, %convert_element_type.2721)
  %reduce.426 = f32[2,8192]{1,0} reduce(%square.104, %constant.2882), dimensions={2}, to_apply=%region_298.16988
  %div.1641 = f32[2,8192]{1,0} multiply(%reduce.426, %broadcast.5097)
  %add.2747 = f32[2,8192]{1,0} add(%div.1641, %broadcast.5098)
  %add.2748 = f32[2,8192,1]{2,1,0} reshape(%add.2747)
  %rsqrt.166 = f32[2,8192,1]{2,1,0} rsqrt(%add.2748)
  %mul.4744 = f32[2,8192]{1,0} reshape(%rsqrt.166)
  %mul.4745 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4744), dimensions={0,1}
  %mul.4746 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2720, %mul.4745)
  %mul.4747 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2721, %convert_element_type.2720)
  %reduce.427 = f32[2,8192]{1,0} reduce(%mul.4747, %constant.2882), dimensions={2}, to_apply=%region_299.17001
  %reshape.8989 = f32[2,8192,1]{2,1,0} reshape(%reduce.427)
  %div.1642 = f32[2,8192,1]{2,1,0} divide(%rsqrt.166, %add.2748)
  %mul.4748 = f32[2,8192,1]{2,1,0} multiply(%div.1642, %broadcast.5145)
  %mul.4749 = f32[2,8192,1]{2,1,0} multiply(%reshape.8989, %mul.4748)
  %mul.4750 = f32[2,8192,1]{2,1,0} multiply(%mul.4749, %mul.2917)
  %mul.4751 = f32[2,8192]{1,0} reshape(%mul.4750)
  %mul.4752 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4751), dimensions={0,1}
  %mul.4753 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2721, %mul.4752)
  %add_any.386 = f32[2,8192,4096]{2,1,0} add(%mul.4746, %mul.4753)
  %convert_element_type.2722 = bf16[2,8192,4096]{2,1,0} convert(%add_any.386)
  %add_any.387 = bf16[2,8192,4096]{2,1,0} add(%add_any.375, %convert_element_type.2722)
  %sharding_constraint.874 = bf16[2,8192,4096]{2,1,0} copy(%add_any.387)
  %tuple.133 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.91, %reduce_precision.92, %reduce_precision.93, %get-tuple-element.56, %sharding_constraint.494, /*index=5*/%reduce_precision.94, %reduce_precision.95, %reduce_precision.96, %reduce_precision.97, %constant.2935, /*index=10*/%constant.2935, %param.121, %param.122, %param.123, %param.120, /*index=15*/%param.115, %param.117, %param.119, %param.116, %param.118, /*index=20*/%sharding_constraint.218, %param.10, %param.7, %sharding_constraint.874)
  %remat2.71 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.133)
  %get-tuple-element.609 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.71), index=23
  %sharding_constraint.875 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.609)
  %get-tuple-element.610 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.71), index=7
  %neg.177 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.610)
  %exp.178 = bf16[2,8192,14336]{2,1,0} exponential(%neg.177)
  %add.2750 = bf16[2,8192,14336]{2,1,0} add(%exp.178, %jit_silu_.0)
  %div.1643 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2750)
  %mul.4754 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.610, %div.1643)
  %sharding_constraint.876 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.875)
  %get-tuple-element.611 = f32[14336,512]{1,0} get-tuple-element(%remat2.71), index=13
  %convert_element_type.2723 = bf16[14336,512]{1,0} convert(%get-tuple-element.611)
  %all-gather.359 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2723), channel_id=362, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.458 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.876, %all-gather.359), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.877 = bf16[2,8192,14336]{2,1,0} copy(%dot.458)
  %mul.4755 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4754, %sharding_constraint.877)
  %get-tuple-element.612 = f32[512,14336]{1,0} get-tuple-element(%remat2.71), index=12
  %convert_element_type.2724 = bf16[512,14336]{1,0} convert(%get-tuple-element.612)
  %all-gather.360 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2724), channel_id=363, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.459 = bf16[2,8192,4096]{2,1,0} dot(%mul.4755, %all-gather.360), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.613 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.71), index=8
  %mul.4760 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.877, %get-tuple-element.613)
  %mul.4761 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4760, %div.1643)
  %mul.4762 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.610, %mul.4760)
  %sub.292 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1643)
  %mul.4767 = bf16[2,8192,14336]{2,1,0} multiply(%div.1643, %sub.292)
  %mul.4768 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4762, %mul.4767)
  %add_any.388 = bf16[2,8192,14336]{2,1,0} add(%mul.4761, %mul.4768)
  %get-tuple-element.614 = f32[512,14336]{1,0} get-tuple-element(%remat2.71), index=11
  %convert_element_type.2725 = bf16[512,14336]{1,0} convert(%get-tuple-element.614)
  %all-gather.361 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2725), channel_id=364, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.460 = bf16[2,8192,4096]{2,1,0} dot(%add_any.388, %all-gather.361), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.389 = bf16[2,8192,4096]{2,1,0} add(%dot.459, %dot.460)
  %sharding_constraint.878 = bf16[2,8192,4096]{2,1,0} copy(%add_any.389)
  %get-tuple-element.615 = f32[4096]{0} get-tuple-element(%remat2.71), index=14
  %convert_element_type.2726 = bf16[4096]{0} convert(%get-tuple-element.615)
  %mul.4769 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2726), dimensions={2}
  %mul.4770 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.878, %mul.4769)
  %convert_element_type.2727 = f32[2,8192,4096]{2,1,0} convert(%mul.4770)
  %get-tuple-element.616 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.71), index=20
  %sharding_constraint.879 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.616)
  %get-tuple-element.617 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.71), index=6
  %sharding_constraint.880 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.617)
  %add.2751 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.879, %sharding_constraint.880)
  %convert_element_type.2728 = f32[2,8192,4096]{2,1,0} convert(%add.2751)
  %square.105 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2728, %convert_element_type.2728)
  %reduce.428 = f32[2,8192]{1,0} reduce(%square.105, %constant.2882), dimensions={2}, to_apply=%region_300.17079
  %div.1644 = f32[2,8192]{1,0} multiply(%reduce.428, %broadcast.5097)
  %add.2752 = f32[2,8192]{1,0} add(%div.1644, %broadcast.5098)
  %add.2753 = f32[2,8192,1]{2,1,0} reshape(%add.2752)
  %rsqrt.167 = f32[2,8192,1]{2,1,0} rsqrt(%add.2753)
  %mul.4771 = f32[2,8192]{1,0} reshape(%rsqrt.167)
  %mul.4772 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4771), dimensions={0,1}
  %mul.4773 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2727, %mul.4772)
  %mul.4774 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2728, %convert_element_type.2727)
  %reduce.429 = f32[2,8192]{1,0} reduce(%mul.4774, %constant.2882), dimensions={2}, to_apply=%region_301.17092
  %reshape.8990 = f32[2,8192,1]{2,1,0} reshape(%reduce.429)
  %div.1645 = f32[2,8192,1]{2,1,0} divide(%rsqrt.167, %add.2753)
  %mul.4775 = f32[2,8192,1]{2,1,0} multiply(%div.1645, %broadcast.5145)
  %mul.4776 = f32[2,8192,1]{2,1,0} multiply(%reshape.8990, %mul.4775)
  %mul.4777 = f32[2,8192,1]{2,1,0} multiply(%mul.4776, %mul.2917)
  %mul.4778 = f32[2,8192]{1,0} reshape(%mul.4777)
  %mul.4781 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4778), dimensions={0,1}
  %mul.4782 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2728, %mul.4781)
  %add_any.390 = f32[2,8192,4096]{2,1,0} add(%mul.4773, %mul.4782)
  %convert_element_type.2729 = bf16[2,8192,4096]{2,1,0} convert(%add_any.390)
  %add_any.391 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.875, %convert_element_type.2729)
  %get-tuple-element.618 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.71), index=0
  %convert_element_type.2730 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.618)
  %get-tuple-element.619 = s32[2,8192]{1,0} get-tuple-element(%remat2.71), index=22
  %convert_element_type.2731 = f32[2,8192]{1,0} convert(%get-tuple-element.619)
  %div.1646 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2731), dimensions={0,1}
  %div.1655 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1646, %div.371)
  %cos.106 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1655)
  %mul.4788 = f32[2,8192,128]{2,1,0} reshape(%cos.106)
  %mul.4789 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4788), dimensions={0,1,3}
  %mul.4790 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2730, %mul.4789)
  %slice.622 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.618), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.623 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.618), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.307 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.622, %slice.623), dimensions={3}
  %slice.624 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.618), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.625 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.618), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.308 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.624, %slice.625), dimensions={3}
  %select_n.2311 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.307, %concatenate.308)
  %convert_element_type.2737 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2311)
  %sin.102 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1655)
  %mul.4791 = f32[2,8192,128]{2,1,0} reshape(%sin.102)
  %mul.4792 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4791), dimensions={0,1,3}
  %mul.4794 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2737, %mul.4792)
  %get-tuple-element.620 = s32[2]{0} get-tuple-element(%remat2.71), index=9
  %broadcast_in_dim.583 = s32[64,2]{1,0} broadcast(%get-tuple-element.620), dimensions={1}
  %reshape.8997 = s32[128]{0} reshape(%broadcast_in_dim.583)
  %convert_element_type.2738 = f32[128]{0} convert(%reshape.8997)
  %mul.4795 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2738), dimensions={3}
  %mul.4798 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4794, %mul.4795)
  %add.2756 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4790, %mul.4798)
  %convert_element_type.2739 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2756)
  %sharding_constraint.881 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2739)
  %get-tuple-element.621 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.71), index=1
  %convert_element_type.2742 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.621)
  %mul.4803 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4788), dimensions={0,1,3}
  %mul.4804 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2742, %mul.4803)
  %slice.626 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.621), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.627 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.621), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.309 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.626, %slice.627), dimensions={3}
  %slice.628 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.621), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.629 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.621), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.310 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.628, %slice.629), dimensions={3}
  %select_n.2318 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.309, %concatenate.310)
  %convert_element_type.2749 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2318)
  %mul.4806 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4791), dimensions={0,1,3}
  %mul.4807 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2749, %mul.4806)
  %get-tuple-element.622 = s32[2]{0} get-tuple-element(%remat2.71), index=10
  %broadcast_in_dim.585 = s32[64,2]{1,0} broadcast(%get-tuple-element.622), dimensions={1}
  %reshape.9005 = s32[128]{0} reshape(%broadcast_in_dim.585)
  %convert_element_type.2750 = f32[128]{0} convert(%reshape.9005)
  %mul.4808 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2750), dimensions={3}
  %mul.4809 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4807, %mul.4808)
  %add.2759 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4804, %mul.4809)
  %convert_element_type.2751 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2759)
  %sharding_constraint.882 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2751)
  %get-tuple-element.623 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.71), index=2
  %sharding_constraint.883 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.623)
  %get-tuple-element.624 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.71), index=3
  %get-tuple-element.625 = u32[2,4]{1,0} get-tuple-element(%remat2.71), index=4
  %get-tuple-element.626 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.71), index=5
  %sharding_constraint.884 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.626)
  %sharding_constraint.885 = bf16[2,8192,4096]{2,1,0} copy(%add_any.391)
  %get-tuple-element.627 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.71), index=17
  %convert_element_type.2752 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.627)
  %all-gather.362 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2752), channel_id=365, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.461 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.885, %all-gather.362), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.886 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.461)
  %get-tuple-element.628 = s32[2,8192]{1,0} get-tuple-element(%remat2.71), index=21
  %eq.628 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.628), dimensions={0,1}
  %eq.629 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.628), dimensions={0,2}
  %eq.630 = pred[2,8192,8192]{2,1,0} compare(%eq.628, %eq.629), direction=EQ
  %and.736 = pred[2,8192,8192]{2,1,0} and(%eq.630, %and.455)
  %select_n.2319 = f32[2,8192,8192]{2,1,0} select(%and.736, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1090 = pred[2,8192,8192]{2,1,0} compare(%select_n.2319, %broadcast_in_dim.277), direction=NE
  %not.116 = pred[2,8192,8192]{2,1,0} not(%ne.1090)
  %convert_element_type.2753 = s32[2,8192,8192]{2,1,0} convert(%not.116)
  %reduce.430 = s32[2,8192]{1,0} reduce(%convert_element_type.2753, %constant.2873), dimensions={1}, to_apply=%region_302.17244
  %reduce_sum.4106 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.430)
  %slice.630 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4106), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.51 = s32[2,1]{1,0} reshape(%slice.630)
  %reshape.9008 = s32[2]{0} reshape(%squeeze.51)
  %lt.901 = pred[2]{0} compare(%reshape.9008, %broadcast.5111), direction=LT
  %select_n.2323 = s32[2]{0} select(%lt.901, %broadcast.5111, %reshape.9008)
  %reduce_window_sum.294 = s32[2]{0} reduce-window(%select_n.2323, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.19
  %concatenate.311 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.294), dimensions={0}
  %reduce.431 = s32[2,8192]{1,0} reduce(%convert_element_type.2753, %constant.2873), dimensions={2}, to_apply=%region_303.17253
  %reduce_sum.4107 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.431)
  %reduce.432 = s32[2,1]{1,0} reduce(%reduce_sum.4107, %constant.2985), dimensions={3,2}, to_apply=%region_304.17259
  %reshape.9009 = s32[2]{0} reshape(%reduce.432)
  %lt.902 = pred[2]{0} compare(%reshape.9009, %broadcast.5111), direction=LT
  %select_n.2324 = s32[2]{0} select(%lt.902, %broadcast.5111, %reshape.9009)
  %reduce_window_sum.295 = s32[2]{0} reduce-window(%select_n.2324, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.19.clone
  %concatenate.312 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.295), dimensions={0}
  %te_fused_attn_backward_ffi.95 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.881, %sharding_constraint.882, %sharding_constraint.883, %constant.2973, %get-tuple-element.624, /*index=5*/%get-tuple-element.625, %sharding_constraint.884, %sharding_constraint.886, %concatenate.311, %concatenate.312, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.629 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.95), index=2
  %sharding_constraint.887 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.629)
  %get-tuple-element.630 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.71), index=19
  %convert_element_type.2757 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.630)
  %all-gather.363 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2757), channel_id=366, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.462 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.887, %all-gather.363), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.631 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.95), index=1
  %sharding_constraint.888 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.631)
  %convert_element_type.2758 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.888)
  %mul.4813 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2758, %mul.4803)
  %convert_element_type.2759 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4813)
  %mul.4818 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2758, %mul.4808)
  %mul.4823 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4818, %mul.4806)
  %convert_element_type.2760 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4823)
  %select_n.2326 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2760, %broadcast.5147)
  %slice.631 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2326), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.154 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.631, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.392 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2759, %pad.154)
  %slice.632 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2326), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.155 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.632, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.393 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.392, %pad.155)
  %select_n.2328 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2760, %broadcast.5147)
  %slice.633 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2328), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.156 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.633, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.394 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.393, %pad.156)
  %slice.634 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2328), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.157 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.634, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.395 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.394, %pad.157)
  %get-tuple-element.632 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.71), index=16
  %convert_element_type.2761 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.632)
  %all-gather.364 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2761), channel_id=367, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.463 = bf16[2,8192,4096]{2,1,0} dot(%add_any.395, %all-gather.364), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.396 = bf16[2,8192,4096]{2,1,0} add(%dot.462, %dot.463)
  %sharding_constraint.889 = bf16[2,8192,4096]{2,1,0} copy(%add_any.396)
  %get-tuple-element.633 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.95), index=0
  %sharding_constraint.890 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.633)
  %convert_element_type.2762 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.890)
  %mul.4826 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2762, %mul.4789)
  %convert_element_type.2764 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4826)
  %mul.4828 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2762, %mul.4795)
  %mul.4832 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4828, %mul.4792)
  %convert_element_type.2765 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4832)
  %select_n.2330 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2765, %broadcast.5148)
  %slice.635 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2330), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.158 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.635, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.397 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2764, %pad.158)
  %slice.636 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2330), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.159 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.636, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.398 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.397, %pad.159)
  %select_n.2332 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2765, %broadcast.5148)
  %slice.637 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2332), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.160 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.637, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.399 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.398, %pad.160)
  %slice.638 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2332), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.161 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.638, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.400 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.399, %pad.161)
  %get-tuple-element.634 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.71), index=18
  %convert_element_type.2768 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.634)
  %all-gather.365 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2768), channel_id=368, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.464 = bf16[2,8192,4096]{2,1,0} dot(%add_any.400, %all-gather.365), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.891 = bf16[2,8192,4096]{2,1,0} copy(%dot.464)
  %add_any.401 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.889, %sharding_constraint.891)
  %sharding_constraint.892 = bf16[2,8192,4096]{2,1,0} copy(%add_any.401)
  %get-tuple-element.635 = f32[4096]{0} get-tuple-element(%remat2.71), index=15
  %convert_element_type.2769 = bf16[4096]{0} convert(%get-tuple-element.635)
  %mul.4833 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2769), dimensions={2}
  %mul.4834 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.892, %mul.4833)
  %convert_element_type.2770 = f32[2,8192,4096]{2,1,0} convert(%mul.4834)
  %convert_element_type.2773 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.879)
  %square.106 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2773, %convert_element_type.2773)
  %reduce.433 = f32[2,8192]{1,0} reduce(%square.106, %constant.2882), dimensions={2}, to_apply=%region_305.17347
  %div.1667 = f32[2,8192]{1,0} multiply(%reduce.433, %broadcast.5097)
  %add.2764 = f32[2,8192]{1,0} add(%div.1667, %broadcast.5098)
  %add.2765 = f32[2,8192,1]{2,1,0} reshape(%add.2764)
  %rsqrt.168 = f32[2,8192,1]{2,1,0} rsqrt(%add.2765)
  %mul.4835 = f32[2,8192]{1,0} reshape(%rsqrt.168)
  %mul.4836 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4835), dimensions={0,1}
  %mul.4837 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2770, %mul.4836)
  %mul.4842 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2773, %convert_element_type.2770)
  %reduce.434 = f32[2,8192]{1,0} reduce(%mul.4842, %constant.2882), dimensions={2}, to_apply=%region_306.17360
  %reshape.9031 = f32[2,8192,1]{2,1,0} reshape(%reduce.434)
  %div.1668 = f32[2,8192,1]{2,1,0} divide(%rsqrt.168, %add.2765)
  %mul.4847 = f32[2,8192,1]{2,1,0} multiply(%div.1668, %broadcast.5145)
  %mul.4848 = f32[2,8192,1]{2,1,0} multiply(%reshape.9031, %mul.4847)
  %mul.4853 = f32[2,8192,1]{2,1,0} multiply(%mul.4848, %mul.2917)
  %mul.4854 = f32[2,8192]{1,0} reshape(%mul.4853)
  %mul.4855 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4854), dimensions={0,1}
  %mul.4856 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2773, %mul.4855)
  %add_any.402 = f32[2,8192,4096]{2,1,0} add(%mul.4837, %mul.4856)
  %convert_element_type.2774 = bf16[2,8192,4096]{2,1,0} convert(%add_any.402)
  %add_any.403 = bf16[2,8192,4096]{2,1,0} add(%add_any.391, %convert_element_type.2774)
  %sharding_constraint.893 = bf16[2,8192,4096]{2,1,0} copy(%add_any.403)
  %tuple.135 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.84, %reduce_precision.85, %reduce_precision.86, %get-tuple-element.54, %sharding_constraint.493, /*index=5*/%reduce_precision.87, %reduce_precision.88, %reduce_precision.89, %reduce_precision.90, %constant.2935, /*index=10*/%constant.2935, %param.112, %param.113, %param.114, %param.111, /*index=15*/%param.106, %param.108, %param.110, %param.107, %param.109, /*index=20*/%sharding_constraint.205, %param.10, %param.7, %sharding_constraint.893)
  %remat2.72 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.135)
  %get-tuple-element.636 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.72), index=23
  %sharding_constraint.894 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.636)
  %get-tuple-element.637 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.72), index=7
  %neg.178 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.637)
  %exp.179 = bf16[2,8192,14336]{2,1,0} exponential(%neg.178)
  %add.2766 = bf16[2,8192,14336]{2,1,0} add(%exp.179, %jit_silu_.0)
  %div.1669 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2766)
  %mul.4857 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.637, %div.1669)
  %sharding_constraint.895 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.894)
  %get-tuple-element.638 = f32[14336,512]{1,0} get-tuple-element(%remat2.72), index=13
  %convert_element_type.2775 = bf16[14336,512]{1,0} convert(%get-tuple-element.638)
  %all-gather.366 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2775), channel_id=369, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.465 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.895, %all-gather.366), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.896 = bf16[2,8192,14336]{2,1,0} copy(%dot.465)
  %mul.4858 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4857, %sharding_constraint.896)
  %get-tuple-element.639 = f32[512,14336]{1,0} get-tuple-element(%remat2.72), index=12
  %convert_element_type.2776 = bf16[512,14336]{1,0} convert(%get-tuple-element.639)
  %all-gather.367 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2776), channel_id=370, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.466 = bf16[2,8192,4096]{2,1,0} dot(%mul.4858, %all-gather.367), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.640 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.72), index=8
  %mul.4859 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.896, %get-tuple-element.640)
  %mul.4860 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4859, %div.1669)
  %mul.4864 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.637, %mul.4859)
  %sub.297 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1669)
  %mul.4865 = bf16[2,8192,14336]{2,1,0} multiply(%div.1669, %sub.297)
  %mul.4866 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4864, %mul.4865)
  %add_any.404 = bf16[2,8192,14336]{2,1,0} add(%mul.4860, %mul.4866)
  %get-tuple-element.641 = f32[512,14336]{1,0} get-tuple-element(%remat2.72), index=11
  %convert_element_type.2777 = bf16[512,14336]{1,0} convert(%get-tuple-element.641)
  %all-gather.368 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2777), channel_id=371, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.467 = bf16[2,8192,4096]{2,1,0} dot(%add_any.404, %all-gather.368), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.405 = bf16[2,8192,4096]{2,1,0} add(%dot.466, %dot.467)
  %sharding_constraint.897 = bf16[2,8192,4096]{2,1,0} copy(%add_any.405)
  %get-tuple-element.642 = f32[4096]{0} get-tuple-element(%remat2.72), index=14
  %convert_element_type.2779 = bf16[4096]{0} convert(%get-tuple-element.642)
  %mul.4867 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2779), dimensions={2}
  %mul.4868 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.897, %mul.4867)
  %convert_element_type.2780 = f32[2,8192,4096]{2,1,0} convert(%mul.4868)
  %get-tuple-element.643 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.72), index=20
  %sharding_constraint.898 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.643)
  %get-tuple-element.644 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.72), index=6
  %sharding_constraint.899 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.644)
  %add.2767 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.898, %sharding_constraint.899)
  %convert_element_type.2781 = f32[2,8192,4096]{2,1,0} convert(%add.2767)
  %square.107 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2781, %convert_element_type.2781)
  %reduce.435 = f32[2,8192]{1,0} reduce(%square.107, %constant.2882), dimensions={2}, to_apply=%region_307.17438
  %div.1670 = f32[2,8192]{1,0} multiply(%reduce.435, %broadcast.5097)
  %add.2768 = f32[2,8192]{1,0} add(%div.1670, %broadcast.5098)
  %add.2769 = f32[2,8192,1]{2,1,0} reshape(%add.2768)
  %rsqrt.169 = f32[2,8192,1]{2,1,0} rsqrt(%add.2769)
  %mul.4869 = f32[2,8192]{1,0} reshape(%rsqrt.169)
  %mul.4870 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4869), dimensions={0,1}
  %mul.4871 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2780, %mul.4870)
  %mul.4873 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2781, %convert_element_type.2780)
  %reduce.436 = f32[2,8192]{1,0} reduce(%mul.4873, %constant.2882), dimensions={2}, to_apply=%region_308.17451
  %reshape.9032 = f32[2,8192,1]{2,1,0} reshape(%reduce.436)
  %div.1671 = f32[2,8192,1]{2,1,0} divide(%rsqrt.169, %add.2769)
  %mul.4874 = f32[2,8192,1]{2,1,0} multiply(%div.1671, %broadcast.5145)
  %mul.4878 = f32[2,8192,1]{2,1,0} multiply(%reshape.9032, %mul.4874)
  %mul.4879 = f32[2,8192,1]{2,1,0} multiply(%mul.4878, %mul.2917)
  %mul.4880 = f32[2,8192]{1,0} reshape(%mul.4879)
  %mul.4883 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4880), dimensions={0,1}
  %mul.4884 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2781, %mul.4883)
  %add_any.406 = f32[2,8192,4096]{2,1,0} add(%mul.4871, %mul.4884)
  %convert_element_type.2782 = bf16[2,8192,4096]{2,1,0} convert(%add_any.406)
  %add_any.407 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.894, %convert_element_type.2782)
  %get-tuple-element.645 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.72), index=0
  %convert_element_type.2783 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.645)
  %get-tuple-element.646 = s32[2,8192]{1,0} get-tuple-element(%remat2.72), index=22
  %convert_element_type.2784 = f32[2,8192]{1,0} convert(%get-tuple-element.646)
  %div.1672 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2784), dimensions={0,1}
  %div.1681 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1672, %div.371)
  %cos.108 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1681)
  %mul.4889 = f32[2,8192,128]{2,1,0} reshape(%cos.108)
  %mul.4891 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4889), dimensions={0,1,3}
  %mul.4892 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2783, %mul.4891)
  %slice.639 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.645), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.640 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.645), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.313 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.639, %slice.640), dimensions={3}
  %slice.641 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.645), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.642 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.645), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.314 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.641, %slice.642), dimensions={3}
  %select_n.2344 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.313, %concatenate.314)
  %convert_element_type.2788 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2344)
  %sin.104 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1681)
  %mul.4893 = f32[2,8192,128]{2,1,0} reshape(%sin.104)
  %mul.4895 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4893), dimensions={0,1,3}
  %mul.4896 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2788, %mul.4895)
  %get-tuple-element.647 = s32[2]{0} get-tuple-element(%remat2.72), index=9
  %broadcast_in_dim.589 = s32[64,2]{1,0} broadcast(%get-tuple-element.647), dimensions={1}
  %reshape.9040 = s32[128]{0} reshape(%broadcast_in_dim.589)
  %convert_element_type.2789 = f32[128]{0} convert(%reshape.9040)
  %mul.4897 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2789), dimensions={3}
  %mul.4898 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4896, %mul.4897)
  %add.2772 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4892, %mul.4898)
  %convert_element_type.2790 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2772)
  %sharding_constraint.900 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2790)
  %get-tuple-element.648 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.72), index=1
  %convert_element_type.2791 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.648)
  %mul.4903 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4889), dimensions={0,1,3}
  %mul.4904 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2791, %mul.4903)
  %slice.643 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.648), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.644 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.648), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.315 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.643, %slice.644), dimensions={3}
  %slice.645 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.648), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.646 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.648), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.316 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.645, %slice.646), dimensions={3}
  %select_n.2351 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.315, %concatenate.316)
  %convert_element_type.2798 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2351)
  %mul.4906 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4893), dimensions={0,1,3}
  %mul.4907 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2798, %mul.4906)
  %get-tuple-element.649 = s32[2]{0} get-tuple-element(%remat2.72), index=10
  %broadcast_in_dim.591 = s32[64,2]{1,0} broadcast(%get-tuple-element.649), dimensions={1}
  %reshape.9048 = s32[128]{0} reshape(%broadcast_in_dim.591)
  %convert_element_type.2799 = f32[128]{0} convert(%reshape.9048)
  %mul.4908 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2799), dimensions={3}
  %mul.4909 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4907, %mul.4908)
  %add.2776 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4904, %mul.4909)
  %convert_element_type.2800 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2776)
  %sharding_constraint.901 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2800)
  %get-tuple-element.650 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.72), index=2
  %sharding_constraint.902 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.650)
  %get-tuple-element.651 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.72), index=3
  %get-tuple-element.652 = u32[2,4]{1,0} get-tuple-element(%remat2.72), index=4
  %get-tuple-element.653 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.72), index=5
  %sharding_constraint.903 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.653)
  %sharding_constraint.904 = bf16[2,8192,4096]{2,1,0} copy(%add_any.407)
  %get-tuple-element.654 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.72), index=17
  %convert_element_type.2801 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.654)
  %all-gather.369 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2801), channel_id=372, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.468 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.904, %all-gather.369), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.905 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.468)
  %get-tuple-element.655 = s32[2,8192]{1,0} get-tuple-element(%remat2.72), index=21
  %eq.635 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.655), dimensions={0,1}
  %eq.636 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.655), dimensions={0,2}
  %eq.637 = pred[2,8192,8192]{2,1,0} compare(%eq.635, %eq.636), direction=EQ
  %and.744 = pred[2,8192,8192]{2,1,0} and(%eq.637, %and.455)
  %select_n.2352 = f32[2,8192,8192]{2,1,0} select(%and.744, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1098 = pred[2,8192,8192]{2,1,0} compare(%select_n.2352, %broadcast_in_dim.277), direction=NE
  %not.117 = pred[2,8192,8192]{2,1,0} not(%ne.1098)
  %convert_element_type.2802 = s32[2,8192,8192]{2,1,0} convert(%not.117)
  %reduce.437 = s32[2,8192]{1,0} reduce(%convert_element_type.2802, %constant.2873), dimensions={1}, to_apply=%region_309.17603
  %reduce_sum.4108 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.437)
  %slice.647 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4108), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.52 = s32[2,1]{1,0} reshape(%slice.647)
  %reshape.9050 = s32[2]{0} reshape(%squeeze.52)
  %lt.913 = pred[2]{0} compare(%reshape.9050, %broadcast.5111), direction=LT
  %select_n.2353 = s32[2]{0} select(%lt.913, %broadcast.5111, %reshape.9050)
  %reduce_window_sum.296 = s32[2]{0} reduce-window(%select_n.2353, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.20
  %concatenate.317 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.296), dimensions={0}
  %reduce.438 = s32[2,8192]{1,0} reduce(%convert_element_type.2802, %constant.2873), dimensions={2}, to_apply=%region_310.17612
  %reduce_sum.4109 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.438)
  %reduce.439 = s32[2,1]{1,0} reduce(%reduce_sum.4109, %constant.2985), dimensions={3,2}, to_apply=%region_311.17618
  %reshape.9052 = s32[2]{0} reshape(%reduce.439)
  %lt.914 = pred[2]{0} compare(%reshape.9052, %broadcast.5111), direction=LT
  %select_n.2354 = s32[2]{0} select(%lt.914, %broadcast.5111, %reshape.9052)
  %reduce_window_sum.297 = s32[2]{0} reduce-window(%select_n.2354, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.20.clone
  %concatenate.318 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.297), dimensions={0}
  %te_fused_attn_backward_ffi.100 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.900, %sharding_constraint.901, %sharding_constraint.902, %constant.2973, %get-tuple-element.651, /*index=5*/%get-tuple-element.652, %sharding_constraint.903, %sharding_constraint.905, %concatenate.317, %concatenate.318, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.656 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.100), index=2
  %sharding_constraint.906 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.656)
  %get-tuple-element.657 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.72), index=19
  %convert_element_type.2805 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.657)
  %all-gather.370 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2805), channel_id=373, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.469 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.906, %all-gather.370), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.658 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.100), index=1
  %sharding_constraint.907 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.658)
  %convert_element_type.2807 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.907)
  %mul.4912 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2807, %mul.4903)
  %convert_element_type.2808 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4912)
  %mul.4918 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2807, %mul.4908)
  %mul.4929 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4918, %mul.4906)
  %convert_element_type.2811 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4929)
  %select_n.2356 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2811, %broadcast.5147)
  %slice.648 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2356), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.162 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.648, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.408 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2808, %pad.162)
  %slice.649 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2356), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.163 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.649, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.409 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.408, %pad.163)
  %select_n.2358 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2811, %broadcast.5147)
  %slice.650 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2358), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.164 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.650, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.410 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.409, %pad.164)
  %slice.651 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2358), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.165 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.651, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.411 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.410, %pad.165)
  %get-tuple-element.659 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.72), index=16
  %convert_element_type.2812 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.659)
  %all-gather.371 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2812), channel_id=374, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.470 = bf16[2,8192,4096]{2,1,0} dot(%add_any.411, %all-gather.371), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.412 = bf16[2,8192,4096]{2,1,0} add(%dot.469, %dot.470)
  %sharding_constraint.908 = bf16[2,8192,4096]{2,1,0} copy(%add_any.412)
  %get-tuple-element.660 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.100), index=0
  %sharding_constraint.909 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.660)
  %convert_element_type.2813 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.909)
  %mul.4932 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2813, %mul.4891)
  %convert_element_type.2814 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4932)
  %mul.4934 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2813, %mul.4897)
  %mul.4937 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4934, %mul.4895)
  %convert_element_type.2815 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.4937)
  %select_n.2360 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2815, %broadcast.5148)
  %slice.652 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2360), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.166 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.652, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.413 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2814, %pad.166)
  %slice.653 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2360), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.167 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.653, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.414 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.413, %pad.167)
  %select_n.2368 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2815, %broadcast.5148)
  %slice.654 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2368), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.168 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.654, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.415 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.414, %pad.168)
  %slice.655 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2368), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.169 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.655, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.416 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.415, %pad.169)
  %get-tuple-element.661 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.72), index=18
  %convert_element_type.2816 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.661)
  %all-gather.372 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2816), channel_id=375, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.471 = bf16[2,8192,4096]{2,1,0} dot(%add_any.416, %all-gather.372), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.910 = bf16[2,8192,4096]{2,1,0} copy(%dot.471)
  %add_any.417 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.908, %sharding_constraint.910)
  %sharding_constraint.911 = bf16[2,8192,4096]{2,1,0} copy(%add_any.417)
  %get-tuple-element.662 = f32[4096]{0} get-tuple-element(%remat2.72), index=15
  %convert_element_type.2817 = bf16[4096]{0} convert(%get-tuple-element.662)
  %mul.4938 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2817), dimensions={2}
  %mul.4942 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.911, %mul.4938)
  %convert_element_type.2819 = f32[2,8192,4096]{2,1,0} convert(%mul.4942)
  %convert_element_type.2820 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.898)
  %square.108 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2820, %convert_element_type.2820)
  %reduce.440 = f32[2,8192]{1,0} reduce(%square.108, %constant.2882), dimensions={2}, to_apply=%region_312.17706
  %div.1692 = f32[2,8192]{1,0} multiply(%reduce.440, %broadcast.5097)
  %add.2781 = f32[2,8192]{1,0} add(%div.1692, %broadcast.5098)
  %add.2782 = f32[2,8192,1]{2,1,0} reshape(%add.2781)
  %rsqrt.170 = f32[2,8192,1]{2,1,0} rsqrt(%add.2782)
  %mul.4943 = f32[2,8192]{1,0} reshape(%rsqrt.170)
  %mul.4944 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4943), dimensions={0,1}
  %mul.4947 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2819, %mul.4944)
  %mul.4948 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2820, %convert_element_type.2819)
  %reduce.441 = f32[2,8192]{1,0} reduce(%mul.4948, %constant.2882), dimensions={2}, to_apply=%region_313.17719
  %reshape.9073 = f32[2,8192,1]{2,1,0} reshape(%reduce.441)
  %div.1693 = f32[2,8192,1]{2,1,0} divide(%rsqrt.170, %add.2782)
  %mul.4949 = f32[2,8192,1]{2,1,0} multiply(%div.1693, %broadcast.5145)
  %mul.4950 = f32[2,8192,1]{2,1,0} multiply(%reshape.9073, %mul.4949)
  %mul.4951 = f32[2,8192,1]{2,1,0} multiply(%mul.4950, %mul.2917)
  %mul.4952 = f32[2,8192]{1,0} reshape(%mul.4951)
  %mul.4953 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4952), dimensions={0,1}
  %mul.4954 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2820, %mul.4953)
  %add_any.418 = f32[2,8192,4096]{2,1,0} add(%mul.4947, %mul.4954)
  %convert_element_type.2821 = bf16[2,8192,4096]{2,1,0} convert(%add_any.418)
  %add_any.419 = bf16[2,8192,4096]{2,1,0} add(%add_any.407, %convert_element_type.2821)
  %sharding_constraint.912 = bf16[2,8192,4096]{2,1,0} copy(%add_any.419)
  %tuple.137 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.77, %reduce_precision.78, %reduce_precision.79, %get-tuple-element.52, %sharding_constraint.492, /*index=5*/%reduce_precision.80, %reduce_precision.81, %reduce_precision.82, %reduce_precision.83, %constant.2935, /*index=10*/%constant.2935, %param.103, %param.104, %param.105, %param.102, /*index=15*/%param.97, %param.99, %param.101, %param.98, %param.100, /*index=20*/%sharding_constraint.192, %param.10, %param.7, %sharding_constraint.912)
  %remat2.73 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.137)
  %get-tuple-element.663 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.73), index=23
  %sharding_constraint.913 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.663)
  %get-tuple-element.664 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.73), index=7
  %neg.179 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.664)
  %exp.180 = bf16[2,8192,14336]{2,1,0} exponential(%neg.179)
  %add.2783 = bf16[2,8192,14336]{2,1,0} add(%exp.180, %jit_silu_.0)
  %div.1694 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2783)
  %mul.4955 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.664, %div.1694)
  %sharding_constraint.914 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.913)
  %get-tuple-element.665 = f32[14336,512]{1,0} get-tuple-element(%remat2.73), index=13
  %convert_element_type.2823 = bf16[14336,512]{1,0} convert(%get-tuple-element.665)
  %all-gather.373 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2823), channel_id=376, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.472 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.914, %all-gather.373), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.915 = bf16[2,8192,14336]{2,1,0} copy(%dot.472)
  %mul.4956 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4955, %sharding_constraint.915)
  %get-tuple-element.666 = f32[512,14336]{1,0} get-tuple-element(%remat2.73), index=12
  %convert_element_type.2824 = bf16[512,14336]{1,0} convert(%get-tuple-element.666)
  %all-gather.374 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2824), channel_id=377, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.473 = bf16[2,8192,4096]{2,1,0} dot(%mul.4956, %all-gather.374), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.667 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.73), index=8
  %mul.4957 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.915, %get-tuple-element.667)
  %mul.4958 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4957, %div.1694)
  %mul.4959 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.664, %mul.4957)
  %sub.302 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1694)
  %mul.4960 = bf16[2,8192,14336]{2,1,0} multiply(%div.1694, %sub.302)
  %mul.4961 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4959, %mul.4960)
  %add_any.420 = bf16[2,8192,14336]{2,1,0} add(%mul.4958, %mul.4961)
  %get-tuple-element.668 = f32[512,14336]{1,0} get-tuple-element(%remat2.73), index=11
  %convert_element_type.2826 = bf16[512,14336]{1,0} convert(%get-tuple-element.668)
  %all-gather.375 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2826), channel_id=378, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.474 = bf16[2,8192,4096]{2,1,0} dot(%add_any.420, %all-gather.375), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.421 = bf16[2,8192,4096]{2,1,0} add(%dot.473, %dot.474)
  %sharding_constraint.916 = bf16[2,8192,4096]{2,1,0} copy(%add_any.421)
  %get-tuple-element.669 = f32[4096]{0} get-tuple-element(%remat2.73), index=14
  %convert_element_type.2827 = bf16[4096]{0} convert(%get-tuple-element.669)
  %mul.4962 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2827), dimensions={2}
  %mul.4963 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.916, %mul.4962)
  %convert_element_type.2831 = f32[2,8192,4096]{2,1,0} convert(%mul.4963)
  %get-tuple-element.670 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.73), index=20
  %sharding_constraint.917 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.670)
  %get-tuple-element.671 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.73), index=6
  %sharding_constraint.918 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.671)
  %add.2784 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.917, %sharding_constraint.918)
  %convert_element_type.2832 = f32[2,8192,4096]{2,1,0} convert(%add.2784)
  %square.109 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2832, %convert_element_type.2832)
  %reduce.442 = f32[2,8192]{1,0} reduce(%square.109, %constant.2882), dimensions={2}, to_apply=%region_314.17797
  %div.1695 = f32[2,8192]{1,0} multiply(%reduce.442, %broadcast.5097)
  %add.2785 = f32[2,8192]{1,0} add(%div.1695, %broadcast.5098)
  %add.2786 = f32[2,8192,1]{2,1,0} reshape(%add.2785)
  %rsqrt.171 = f32[2,8192,1]{2,1,0} rsqrt(%add.2786)
  %mul.4964 = f32[2,8192]{1,0} reshape(%rsqrt.171)
  %mul.4965 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4964), dimensions={0,1}
  %mul.4966 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2831, %mul.4965)
  %mul.4967 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2832, %convert_element_type.2831)
  %reduce.443 = f32[2,8192]{1,0} reduce(%mul.4967, %constant.2882), dimensions={2}, to_apply=%region_315.17810
  %reshape.9074 = f32[2,8192,1]{2,1,0} reshape(%reduce.443)
  %div.1696 = f32[2,8192,1]{2,1,0} divide(%rsqrt.171, %add.2786)
  %mul.4968 = f32[2,8192,1]{2,1,0} multiply(%div.1696, %broadcast.5145)
  %mul.4969 = f32[2,8192,1]{2,1,0} multiply(%reshape.9074, %mul.4968)
  %mul.4970 = f32[2,8192,1]{2,1,0} multiply(%mul.4969, %mul.2917)
  %mul.4971 = f32[2,8192]{1,0} reshape(%mul.4970)
  %mul.4972 = f32[2,8192,4096]{2,1,0} broadcast(%mul.4971), dimensions={0,1}
  %mul.4973 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2832, %mul.4972)
  %add_any.422 = f32[2,8192,4096]{2,1,0} add(%mul.4966, %mul.4973)
  %convert_element_type.2834 = bf16[2,8192,4096]{2,1,0} convert(%add_any.422)
  %add_any.423 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.913, %convert_element_type.2834)
  %get-tuple-element.672 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.73), index=0
  %convert_element_type.2835 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.672)
  %get-tuple-element.673 = s32[2,8192]{1,0} get-tuple-element(%remat2.73), index=22
  %convert_element_type.2836 = f32[2,8192]{1,0} convert(%get-tuple-element.673)
  %div.1697 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2836), dimensions={0,1}
  %div.1706 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1697, %div.371)
  %cos.110 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1706)
  %mul.4977 = f32[2,8192,128]{2,1,0} reshape(%cos.110)
  %mul.4978 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4977), dimensions={0,1,3}
  %mul.4979 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2835, %mul.4978)
  %slice.656 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.672), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.657 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.672), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.319 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.656, %slice.657), dimensions={3}
  %slice.658 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.672), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.659 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.672), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.320 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.658, %slice.659), dimensions={3}
  %select_n.2375 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.319, %concatenate.320)
  %convert_element_type.2842 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2375)
  %sin.106 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1706)
  %mul.4980 = f32[2,8192,128]{2,1,0} reshape(%sin.106)
  %mul.4981 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.4980), dimensions={0,1,3}
  %mul.4982 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2842, %mul.4981)
  %get-tuple-element.674 = s32[2]{0} get-tuple-element(%remat2.73), index=9
  %broadcast_in_dim.595 = s32[64,2]{1,0} broadcast(%get-tuple-element.674), dimensions={1}
  %reshape.9083 = s32[128]{0} reshape(%broadcast_in_dim.595)
  %convert_element_type.2844 = f32[128]{0} convert(%reshape.9083)
  %mul.4983 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2844), dimensions={3}
  %mul.4984 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.4982, %mul.4983)
  %add.2791 = f32[2,8192,32,128]{3,2,1,0} add(%mul.4979, %mul.4984)
  %convert_element_type.2845 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2791)
  %sharding_constraint.919 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2845)
  %get-tuple-element.675 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.73), index=1
  %convert_element_type.2846 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.675)
  %mul.4989 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4977), dimensions={0,1,3}
  %mul.4990 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2846, %mul.4989)
  %slice.660 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.675), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.661 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.675), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.321 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.660, %slice.661), dimensions={3}
  %slice.662 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.675), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.663 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.675), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.322 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.662, %slice.663), dimensions={3}
  %select_n.2382 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.321, %concatenate.322)
  %convert_element_type.2851 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2382)
  %mul.4992 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.4980), dimensions={0,1,3}
  %mul.4993 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2851, %mul.4992)
  %get-tuple-element.676 = s32[2]{0} get-tuple-element(%remat2.73), index=10
  %broadcast_in_dim.597 = s32[64,2]{1,0} broadcast(%get-tuple-element.676), dimensions={1}
  %reshape.9090 = s32[128]{0} reshape(%broadcast_in_dim.597)
  %convert_element_type.2852 = f32[128]{0} convert(%reshape.9090)
  %mul.4994 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2852), dimensions={3}
  %mul.4995 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.4993, %mul.4994)
  %add.2794 = f32[2,8192,8,128]{3,2,1,0} add(%mul.4990, %mul.4995)
  %convert_element_type.2853 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2794)
  %sharding_constraint.920 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2853)
  %get-tuple-element.677 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.73), index=2
  %sharding_constraint.921 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.677)
  %get-tuple-element.678 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.73), index=3
  %get-tuple-element.679 = u32[2,4]{1,0} get-tuple-element(%remat2.73), index=4
  %get-tuple-element.680 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.73), index=5
  %sharding_constraint.922 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.680)
  %sharding_constraint.923 = bf16[2,8192,4096]{2,1,0} copy(%add_any.423)
  %get-tuple-element.681 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.73), index=17
  %convert_element_type.2854 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.681)
  %all-gather.376 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2854), channel_id=379, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.475 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.923, %all-gather.376), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.924 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.475)
  %get-tuple-element.682 = s32[2,8192]{1,0} get-tuple-element(%remat2.73), index=21
  %eq.642 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.682), dimensions={0,1}
  %eq.643 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.682), dimensions={0,2}
  %eq.644 = pred[2,8192,8192]{2,1,0} compare(%eq.642, %eq.643), direction=EQ
  %and.752 = pred[2,8192,8192]{2,1,0} and(%eq.644, %and.455)
  %select_n.2386 = f32[2,8192,8192]{2,1,0} select(%and.752, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1106 = pred[2,8192,8192]{2,1,0} compare(%select_n.2386, %broadcast_in_dim.277), direction=NE
  %not.118 = pred[2,8192,8192]{2,1,0} not(%ne.1106)
  %convert_element_type.2855 = s32[2,8192,8192]{2,1,0} convert(%not.118)
  %reduce.444 = s32[2,8192]{1,0} reduce(%convert_element_type.2855, %constant.2873), dimensions={1}, to_apply=%region_316.17962
  %reduce_sum.4110 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.444)
  %slice.664 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4110), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.53 = s32[2,1]{1,0} reshape(%slice.664)
  %reshape.9093 = s32[2]{0} reshape(%squeeze.53)
  %lt.924 = pred[2]{0} compare(%reshape.9093, %broadcast.5111), direction=LT
  %select_n.2387 = s32[2]{0} select(%lt.924, %broadcast.5111, %reshape.9093)
  %reduce_window_sum.298 = s32[2]{0} reduce-window(%select_n.2387, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.21
  %concatenate.323 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.298), dimensions={0}
  %reduce.445 = s32[2,8192]{1,0} reduce(%convert_element_type.2855, %constant.2873), dimensions={2}, to_apply=%region_317.17971
  %reduce_sum.4111 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.445)
  %reduce.446 = s32[2,1]{1,0} reduce(%reduce_sum.4111, %constant.2985), dimensions={3,2}, to_apply=%region_318.17977
  %reshape.9094 = s32[2]{0} reshape(%reduce.446)
  %lt.926 = pred[2]{0} compare(%reshape.9094, %broadcast.5111), direction=LT
  %select_n.2388 = s32[2]{0} select(%lt.926, %broadcast.5111, %reshape.9094)
  %reduce_window_sum.299 = s32[2]{0} reduce-window(%select_n.2388, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.21.clone
  %concatenate.324 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.299), dimensions={0}
  %te_fused_attn_backward_ffi.105 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.919, %sharding_constraint.920, %sharding_constraint.921, %constant.2973, %get-tuple-element.678, /*index=5*/%get-tuple-element.679, %sharding_constraint.922, %sharding_constraint.924, %concatenate.323, %concatenate.324, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.683 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.105), index=2
  %sharding_constraint.925 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.683)
  %get-tuple-element.684 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.73), index=19
  %convert_element_type.2858 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.684)
  %all-gather.377 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2858), channel_id=380, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.476 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.925, %all-gather.377), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.685 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.105), index=1
  %sharding_constraint.926 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.685)
  %convert_element_type.2859 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.926)
  %mul.4998 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2859, %mul.4989)
  %convert_element_type.2860 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.4998)
  %mul.5004 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2859, %mul.4994)
  %mul.5013 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5004, %mul.4992)
  %convert_element_type.2861 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5013)
  %select_n.2390 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2861, %broadcast.5147)
  %slice.665 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2390), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.170 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.665, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.424 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2860, %pad.170)
  %slice.666 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2390), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.171 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.666, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.425 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.424, %pad.171)
  %select_n.2392 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2861, %broadcast.5147)
  %slice.667 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2392), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.172 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.667, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.426 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.425, %pad.172)
  %slice.668 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2392), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.173 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.668, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.427 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.426, %pad.173)
  %get-tuple-element.686 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.73), index=16
  %convert_element_type.2862 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.686)
  %all-gather.378 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2862), channel_id=381, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.477 = bf16[2,8192,4096]{2,1,0} dot(%add_any.427, %all-gather.378), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.428 = bf16[2,8192,4096]{2,1,0} add(%dot.476, %dot.477)
  %sharding_constraint.927 = bf16[2,8192,4096]{2,1,0} copy(%add_any.428)
  %get-tuple-element.687 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.105), index=0
  %sharding_constraint.928 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.687)
  %convert_element_type.2863 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.928)
  %mul.5016 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2863, %mul.4978)
  %convert_element_type.2864 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5016)
  %mul.5019 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2863, %mul.4983)
  %mul.5023 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5019, %mul.4981)
  %convert_element_type.2865 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5023)
  %select_n.2394 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2865, %broadcast.5148)
  %slice.669 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2394), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.174 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.669, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.429 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2864, %pad.174)
  %slice.670 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2394), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.175 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.670, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.430 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.429, %pad.175)
  %select_n.2396 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2865, %broadcast.5148)
  %slice.671 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2396), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.176 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.671, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.431 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.430, %pad.176)
  %slice.672 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2396), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.177 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.672, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.432 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.431, %pad.177)
  %get-tuple-element.688 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.73), index=18
  %convert_element_type.2866 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.688)
  %all-gather.379 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2866), channel_id=382, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.478 = bf16[2,8192,4096]{2,1,0} dot(%add_any.432, %all-gather.379), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.929 = bf16[2,8192,4096]{2,1,0} copy(%dot.478)
  %add_any.433 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.927, %sharding_constraint.929)
  %sharding_constraint.930 = bf16[2,8192,4096]{2,1,0} copy(%add_any.433)
  %get-tuple-element.689 = f32[4096]{0} get-tuple-element(%remat2.73), index=15
  %convert_element_type.2867 = bf16[4096]{0} convert(%get-tuple-element.689)
  %mul.5024 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2867), dimensions={2}
  %mul.5026 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.930, %mul.5024)
  %convert_element_type.2868 = f32[2,8192,4096]{2,1,0} convert(%mul.5026)
  %convert_element_type.2869 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.917)
  %square.110 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2869, %convert_element_type.2869)
  %reduce.447 = f32[2,8192]{1,0} reduce(%square.110, %constant.2882), dimensions={2}, to_apply=%region_319.18065
  %div.1723 = f32[2,8192]{1,0} multiply(%reduce.447, %broadcast.5097)
  %add.2799 = f32[2,8192]{1,0} add(%div.1723, %broadcast.5098)
  %add.2800 = f32[2,8192,1]{2,1,0} reshape(%add.2799)
  %rsqrt.172 = f32[2,8192,1]{2,1,0} rsqrt(%add.2800)
  %mul.5027 = f32[2,8192]{1,0} reshape(%rsqrt.172)
  %mul.5028 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5027), dimensions={0,1}
  %mul.5029 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2868, %mul.5028)
  %mul.5030 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2869, %convert_element_type.2868)
  %reduce.448 = f32[2,8192]{1,0} reduce(%mul.5030, %constant.2882), dimensions={2}, to_apply=%region_320.18078
  %reshape.9115 = f32[2,8192,1]{2,1,0} reshape(%reduce.448)
  %div.1724 = f32[2,8192,1]{2,1,0} divide(%rsqrt.172, %add.2800)
  %mul.5031 = f32[2,8192,1]{2,1,0} multiply(%div.1724, %broadcast.5145)
  %mul.5032 = f32[2,8192,1]{2,1,0} multiply(%reshape.9115, %mul.5031)
  %mul.5033 = f32[2,8192,1]{2,1,0} multiply(%mul.5032, %mul.2917)
  %mul.5034 = f32[2,8192]{1,0} reshape(%mul.5033)
  %mul.5035 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5034), dimensions={0,1}
  %mul.5036 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2869, %mul.5035)
  %add_any.434 = f32[2,8192,4096]{2,1,0} add(%mul.5029, %mul.5036)
  %convert_element_type.2871 = bf16[2,8192,4096]{2,1,0} convert(%add_any.434)
  %add_any.435 = bf16[2,8192,4096]{2,1,0} add(%add_any.423, %convert_element_type.2871)
  %sharding_constraint.931 = bf16[2,8192,4096]{2,1,0} copy(%add_any.435)
  %tuple.139 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.70, %reduce_precision.71, %reduce_precision.72, %get-tuple-element.50, %sharding_constraint.491, /*index=5*/%reduce_precision.73, %reduce_precision.74, %reduce_precision.75, %reduce_precision.76, %constant.2935, /*index=10*/%constant.2935, %param.94, %param.95, %param.96, %param.93, /*index=15*/%param.88, %param.90, %param.92, %param.89, %param.91, /*index=20*/%sharding_constraint.179, %param.10, %param.7, %sharding_constraint.931)
  %remat2.74 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.139)
  %get-tuple-element.690 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.74), index=23
  %sharding_constraint.932 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.690)
  %get-tuple-element.691 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.74), index=7
  %neg.180 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.691)
  %exp.181 = bf16[2,8192,14336]{2,1,0} exponential(%neg.180)
  %add.2801 = bf16[2,8192,14336]{2,1,0} add(%exp.181, %jit_silu_.0)
  %div.1726 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2801)
  %mul.5041 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.691, %div.1726)
  %sharding_constraint.933 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.932)
  %get-tuple-element.692 = f32[14336,512]{1,0} get-tuple-element(%remat2.74), index=13
  %convert_element_type.2872 = bf16[14336,512]{1,0} convert(%get-tuple-element.692)
  %all-gather.380 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2872), channel_id=383, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.479 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.933, %all-gather.380), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.934 = bf16[2,8192,14336]{2,1,0} copy(%dot.479)
  %mul.5042 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5041, %sharding_constraint.934)
  %get-tuple-element.693 = f32[512,14336]{1,0} get-tuple-element(%remat2.74), index=12
  %convert_element_type.2873 = bf16[512,14336]{1,0} convert(%get-tuple-element.693)
  %all-gather.381 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2873), channel_id=384, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.480 = bf16[2,8192,4096]{2,1,0} dot(%mul.5042, %all-gather.381), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.694 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.74), index=8
  %mul.5049 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.934, %get-tuple-element.694)
  %mul.5050 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5049, %div.1726)
  %mul.5051 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.691, %mul.5049)
  %sub.307 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1726)
  %mul.5052 = bf16[2,8192,14336]{2,1,0} multiply(%div.1726, %sub.307)
  %mul.5053 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5051, %mul.5052)
  %add_any.436 = bf16[2,8192,14336]{2,1,0} add(%mul.5050, %mul.5053)
  %get-tuple-element.695 = f32[512,14336]{1,0} get-tuple-element(%remat2.74), index=11
  %convert_element_type.2874 = bf16[512,14336]{1,0} convert(%get-tuple-element.695)
  %all-gather.382 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2874), channel_id=385, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.481 = bf16[2,8192,4096]{2,1,0} dot(%add_any.436, %all-gather.382), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.437 = bf16[2,8192,4096]{2,1,0} add(%dot.480, %dot.481)
  %sharding_constraint.935 = bf16[2,8192,4096]{2,1,0} copy(%add_any.437)
  %get-tuple-element.696 = f32[4096]{0} get-tuple-element(%remat2.74), index=14
  %convert_element_type.2876 = bf16[4096]{0} convert(%get-tuple-element.696)
  %mul.5054 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2876), dimensions={2}
  %mul.5055 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.935, %mul.5054)
  %convert_element_type.2877 = f32[2,8192,4096]{2,1,0} convert(%mul.5055)
  %get-tuple-element.697 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.74), index=20
  %sharding_constraint.936 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.697)
  %get-tuple-element.698 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.74), index=6
  %sharding_constraint.937 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.698)
  %add.2802 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.936, %sharding_constraint.937)
  %convert_element_type.2878 = f32[2,8192,4096]{2,1,0} convert(%add.2802)
  %square.111 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2878, %convert_element_type.2878)
  %reduce.449 = f32[2,8192]{1,0} reduce(%square.111, %constant.2882), dimensions={2}, to_apply=%region_321.18156
  %div.1727 = f32[2,8192]{1,0} multiply(%reduce.449, %broadcast.5097)
  %add.2803 = f32[2,8192]{1,0} add(%div.1727, %broadcast.5098)
  %add.2804 = f32[2,8192,1]{2,1,0} reshape(%add.2803)
  %rsqrt.173 = f32[2,8192,1]{2,1,0} rsqrt(%add.2804)
  %mul.5056 = f32[2,8192]{1,0} reshape(%rsqrt.173)
  %mul.5057 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5056), dimensions={0,1}
  %mul.5059 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2877, %mul.5057)
  %mul.5060 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2878, %convert_element_type.2877)
  %reduce.450 = f32[2,8192]{1,0} reduce(%mul.5060, %constant.2882), dimensions={2}, to_apply=%region_322.18169
  %reshape.9116 = f32[2,8192,1]{2,1,0} reshape(%reduce.450)
  %div.1728 = f32[2,8192,1]{2,1,0} divide(%rsqrt.173, %add.2804)
  %mul.5061 = f32[2,8192,1]{2,1,0} multiply(%div.1728, %broadcast.5145)
  %mul.5062 = f32[2,8192,1]{2,1,0} multiply(%reshape.9116, %mul.5061)
  %mul.5063 = f32[2,8192,1]{2,1,0} multiply(%mul.5062, %mul.2917)
  %mul.5064 = f32[2,8192]{1,0} reshape(%mul.5063)
  %mul.5065 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5064), dimensions={0,1}
  %mul.5066 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2878, %mul.5065)
  %add_any.438 = f32[2,8192,4096]{2,1,0} add(%mul.5059, %mul.5066)
  %convert_element_type.2879 = bf16[2,8192,4096]{2,1,0} convert(%add_any.438)
  %add_any.439 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.932, %convert_element_type.2879)
  %get-tuple-element.699 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.74), index=0
  %convert_element_type.2881 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.699)
  %get-tuple-element.700 = s32[2,8192]{1,0} get-tuple-element(%remat2.74), index=22
  %convert_element_type.2883 = f32[2,8192]{1,0} convert(%get-tuple-element.700)
  %div.1729 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2883), dimensions={0,1}
  %div.1746 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1729, %div.371)
  %cos.112 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1746)
  %mul.5070 = f32[2,8192,128]{2,1,0} reshape(%cos.112)
  %mul.5071 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5070), dimensions={0,1,3}
  %mul.5072 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2881, %mul.5071)
  %slice.673 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.699), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.674 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.699), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.325 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.673, %slice.674), dimensions={3}
  %slice.675 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.699), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.676 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.699), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.326 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.675, %slice.676), dimensions={3}
  %select_n.2403 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.325, %concatenate.326)
  %convert_element_type.2890 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2403)
  %sin.108 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1746)
  %mul.5073 = f32[2,8192,128]{2,1,0} reshape(%sin.108)
  %mul.5074 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5073), dimensions={0,1,3}
  %mul.5075 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2890, %mul.5074)
  %get-tuple-element.701 = s32[2]{0} get-tuple-element(%remat2.74), index=9
  %broadcast_in_dim.601 = s32[64,2]{1,0} broadcast(%get-tuple-element.701), dimensions={1}
  %reshape.9123 = s32[128]{0} reshape(%broadcast_in_dim.601)
  %convert_element_type.2891 = f32[128]{0} convert(%reshape.9123)
  %mul.5076 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2891), dimensions={3}
  %mul.5079 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5075, %mul.5076)
  %add.2807 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5072, %mul.5079)
  %convert_element_type.2892 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2807)
  %sharding_constraint.938 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2892)
  %get-tuple-element.702 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.74), index=1
  %convert_element_type.2893 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.702)
  %mul.5085 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5070), dimensions={0,1,3}
  %mul.5086 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2893, %mul.5085)
  %slice.677 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.702), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.678 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.702), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.327 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.677, %slice.678), dimensions={3}
  %slice.679 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.702), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.680 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.702), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.328 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.679, %slice.680), dimensions={3}
  %select_n.2413 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.327, %concatenate.328)
  %convert_element_type.2898 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2413)
  %mul.5088 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5073), dimensions={0,1,3}
  %mul.5092 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2898, %mul.5088)
  %get-tuple-element.703 = s32[2]{0} get-tuple-element(%remat2.74), index=10
  %broadcast_in_dim.603 = s32[64,2]{1,0} broadcast(%get-tuple-element.703), dimensions={1}
  %reshape.9131 = s32[128]{0} reshape(%broadcast_in_dim.603)
  %convert_element_type.2899 = f32[128]{0} convert(%reshape.9131)
  %mul.5094 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2899), dimensions={3}
  %mul.5096 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5092, %mul.5094)
  %add.2810 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5086, %mul.5096)
  %convert_element_type.2900 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2810)
  %sharding_constraint.939 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2900)
  %get-tuple-element.704 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.74), index=2
  %sharding_constraint.940 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.704)
  %get-tuple-element.705 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.74), index=3
  %get-tuple-element.706 = u32[2,4]{1,0} get-tuple-element(%remat2.74), index=4
  %get-tuple-element.707 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.74), index=5
  %sharding_constraint.941 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.707)
  %sharding_constraint.942 = bf16[2,8192,4096]{2,1,0} copy(%add_any.439)
  %get-tuple-element.708 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.74), index=17
  %convert_element_type.2901 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.708)
  %all-gather.383 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2901), channel_id=386, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.482 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.942, %all-gather.383), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.943 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.482)
  %get-tuple-element.709 = s32[2,8192]{1,0} get-tuple-element(%remat2.74), index=21
  %eq.649 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.709), dimensions={0,1}
  %eq.650 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.709), dimensions={0,2}
  %eq.651 = pred[2,8192,8192]{2,1,0} compare(%eq.649, %eq.650), direction=EQ
  %and.760 = pred[2,8192,8192]{2,1,0} and(%eq.651, %and.455)
  %select_n.2414 = f32[2,8192,8192]{2,1,0} select(%and.760, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1118 = pred[2,8192,8192]{2,1,0} compare(%select_n.2414, %broadcast_in_dim.277), direction=NE
  %not.119 = pred[2,8192,8192]{2,1,0} not(%ne.1118)
  %convert_element_type.2902 = s32[2,8192,8192]{2,1,0} convert(%not.119)
  %reduce.451 = s32[2,8192]{1,0} reduce(%convert_element_type.2902, %constant.2873), dimensions={1}, to_apply=%region_323.18321
  %reduce_sum.4112 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.451)
  %slice.681 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4112), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.54 = s32[2,1]{1,0} reshape(%slice.681)
  %reshape.9133 = s32[2]{0} reshape(%squeeze.54)
  %lt.936 = pred[2]{0} compare(%reshape.9133, %broadcast.5111), direction=LT
  %select_n.2415 = s32[2]{0} select(%lt.936, %broadcast.5111, %reshape.9133)
  %reduce_window_sum.300 = s32[2]{0} reduce-window(%select_n.2415, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.22
  %concatenate.329 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.300), dimensions={0}
  %reduce.452 = s32[2,8192]{1,0} reduce(%convert_element_type.2902, %constant.2873), dimensions={2}, to_apply=%region_324.18330
  %reduce_sum.4113 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.452)
  %reduce.453 = s32[2,1]{1,0} reduce(%reduce_sum.4113, %constant.2985), dimensions={3,2}, to_apply=%region_325.18336
  %reshape.9134 = s32[2]{0} reshape(%reduce.453)
  %lt.937 = pred[2]{0} compare(%reshape.9134, %broadcast.5111), direction=LT
  %select_n.2416 = s32[2]{0} select(%lt.937, %broadcast.5111, %reshape.9134)
  %reduce_window_sum.301 = s32[2]{0} reduce-window(%select_n.2416, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.22.clone
  %concatenate.330 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.301), dimensions={0}
  %te_fused_attn_backward_ffi.110 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.938, %sharding_constraint.939, %sharding_constraint.940, %constant.2973, %get-tuple-element.705, /*index=5*/%get-tuple-element.706, %sharding_constraint.941, %sharding_constraint.943, %concatenate.329, %concatenate.330, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.710 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.110), index=2
  %sharding_constraint.944 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.710)
  %get-tuple-element.711 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.74), index=19
  %convert_element_type.2904 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.711)
  %all-gather.384 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2904), channel_id=387, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.483 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.944, %all-gather.384), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.712 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.110), index=1
  %sharding_constraint.945 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.712)
  %convert_element_type.2905 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.945)
  %mul.5099 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2905, %mul.5085)
  %convert_element_type.2907 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5099)
  %mul.5101 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2905, %mul.5094)
  %mul.5107 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5101, %mul.5088)
  %convert_element_type.2908 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5107)
  %select_n.2418 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2908, %broadcast.5147)
  %slice.682 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2418), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.178 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.682, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.440 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2907, %pad.178)
  %slice.683 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2418), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.179 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.683, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.441 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.440, %pad.179)
  %select_n.2420 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2908, %broadcast.5147)
  %slice.684 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2420), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.180 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.684, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.442 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.441, %pad.180)
  %slice.685 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2420), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.181 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.685, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.443 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.442, %pad.181)
  %get-tuple-element.713 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.74), index=16
  %convert_element_type.2910 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.713)
  %all-gather.385 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2910), channel_id=388, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.484 = bf16[2,8192,4096]{2,1,0} dot(%add_any.443, %all-gather.385), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.444 = bf16[2,8192,4096]{2,1,0} add(%dot.483, %dot.484)
  %sharding_constraint.946 = bf16[2,8192,4096]{2,1,0} copy(%add_any.444)
  %get-tuple-element.714 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.110), index=0
  %sharding_constraint.947 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.714)
  %convert_element_type.2911 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.947)
  %mul.5112 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2911, %mul.5071)
  %convert_element_type.2912 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5112)
  %mul.5114 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2911, %mul.5076)
  %mul.5117 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5114, %mul.5074)
  %convert_element_type.2913 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5117)
  %select_n.2422 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2913, %broadcast.5148)
  %slice.686 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2422), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.182 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.686, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.445 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2912, %pad.182)
  %slice.687 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2422), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.183 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.687, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.446 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.445, %pad.183)
  %select_n.2424 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2913, %broadcast.5148)
  %slice.688 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2424), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.184 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.688, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.447 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.446, %pad.184)
  %slice.689 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2424), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.185 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.689, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.448 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.447, %pad.185)
  %get-tuple-element.715 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.74), index=18
  %convert_element_type.2915 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.715)
  %all-gather.386 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2915), channel_id=389, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.485 = bf16[2,8192,4096]{2,1,0} dot(%add_any.448, %all-gather.386), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.948 = bf16[2,8192,4096]{2,1,0} copy(%dot.485)
  %add_any.449 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.946, %sharding_constraint.948)
  %sharding_constraint.949 = bf16[2,8192,4096]{2,1,0} copy(%add_any.449)
  %get-tuple-element.716 = f32[4096]{0} get-tuple-element(%remat2.74), index=15
  %convert_element_type.2917 = bf16[4096]{0} convert(%get-tuple-element.716)
  %mul.5118 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2917), dimensions={2}
  %mul.5123 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.949, %mul.5118)
  %convert_element_type.2919 = f32[2,8192,4096]{2,1,0} convert(%mul.5123)
  %convert_element_type.2920 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.936)
  %square.112 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2920, %convert_element_type.2920)
  %reduce.454 = f32[2,8192]{1,0} reduce(%square.112, %constant.2882), dimensions={2}, to_apply=%region_326.18424
  %div.1757 = f32[2,8192]{1,0} multiply(%reduce.454, %broadcast.5097)
  %add.2815 = f32[2,8192]{1,0} add(%div.1757, %broadcast.5098)
  %add.2816 = f32[2,8192,1]{2,1,0} reshape(%add.2815)
  %rsqrt.174 = f32[2,8192,1]{2,1,0} rsqrt(%add.2816)
  %mul.5128 = f32[2,8192]{1,0} reshape(%rsqrt.174)
  %mul.5129 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5128), dimensions={0,1}
  %mul.5134 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2919, %mul.5129)
  %mul.5135 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2920, %convert_element_type.2919)
  %reduce.455 = f32[2,8192]{1,0} reduce(%mul.5135, %constant.2882), dimensions={2}, to_apply=%region_327.18437
  %reshape.9155 = f32[2,8192,1]{2,1,0} reshape(%reduce.455)
  %div.1758 = f32[2,8192,1]{2,1,0} divide(%rsqrt.174, %add.2816)
  %mul.5136 = f32[2,8192,1]{2,1,0} multiply(%div.1758, %broadcast.5145)
  %mul.5137 = f32[2,8192,1]{2,1,0} multiply(%reshape.9155, %mul.5136)
  %mul.5138 = f32[2,8192,1]{2,1,0} multiply(%mul.5137, %mul.2917)
  %mul.5139 = f32[2,8192]{1,0} reshape(%mul.5138)
  %mul.5140 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5139), dimensions={0,1}
  %mul.5141 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2920, %mul.5140)
  %add_any.450 = f32[2,8192,4096]{2,1,0} add(%mul.5134, %mul.5141)
  %convert_element_type.2921 = bf16[2,8192,4096]{2,1,0} convert(%add_any.450)
  %add_any.451 = bf16[2,8192,4096]{2,1,0} add(%add_any.439, %convert_element_type.2921)
  %sharding_constraint.950 = bf16[2,8192,4096]{2,1,0} copy(%add_any.451)
  %tuple.141 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.63, %reduce_precision.64, %reduce_precision.65, %get-tuple-element.48, %sharding_constraint.490, /*index=5*/%reduce_precision.66, %reduce_precision.67, %reduce_precision.68, %reduce_precision.69, %constant.2935, /*index=10*/%constant.2935, %param.85, %param.86, %param.87, %param.84, /*index=15*/%param.79, %param.81, %param.83, %param.80, %param.82, /*index=20*/%sharding_constraint.166, %param.10, %param.7, %sharding_constraint.950)
  %remat2.75 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.141)
  %get-tuple-element.717 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.75), index=23
  %sharding_constraint.951 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.717)
  %get-tuple-element.718 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.75), index=7
  %neg.181 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.718)
  %exp.182 = bf16[2,8192,14336]{2,1,0} exponential(%neg.181)
  %add.2817 = bf16[2,8192,14336]{2,1,0} add(%exp.182, %jit_silu_.0)
  %div.1759 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2817)
  %mul.5143 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.718, %div.1759)
  %sharding_constraint.952 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.951)
  %get-tuple-element.719 = f32[14336,512]{1,0} get-tuple-element(%remat2.75), index=13
  %convert_element_type.2922 = bf16[14336,512]{1,0} convert(%get-tuple-element.719)
  %all-gather.387 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2922), channel_id=390, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.486 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.952, %all-gather.387), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.953 = bf16[2,8192,14336]{2,1,0} copy(%dot.486)
  %mul.5145 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5143, %sharding_constraint.953)
  %get-tuple-element.720 = f32[512,14336]{1,0} get-tuple-element(%remat2.75), index=12
  %convert_element_type.2923 = bf16[512,14336]{1,0} convert(%get-tuple-element.720)
  %all-gather.388 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2923), channel_id=391, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.487 = bf16[2,8192,4096]{2,1,0} dot(%mul.5145, %all-gather.388), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.721 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.75), index=8
  %mul.5146 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.953, %get-tuple-element.721)
  %mul.5147 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5146, %div.1759)
  %mul.5148 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.718, %mul.5146)
  %sub.312 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1759)
  %mul.5149 = bf16[2,8192,14336]{2,1,0} multiply(%div.1759, %sub.312)
  %mul.5150 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5148, %mul.5149)
  %add_any.452 = bf16[2,8192,14336]{2,1,0} add(%mul.5147, %mul.5150)
  %get-tuple-element.722 = f32[512,14336]{1,0} get-tuple-element(%remat2.75), index=11
  %convert_element_type.2924 = bf16[512,14336]{1,0} convert(%get-tuple-element.722)
  %all-gather.389 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2924), channel_id=392, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.488 = bf16[2,8192,4096]{2,1,0} dot(%add_any.452, %all-gather.389), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.453 = bf16[2,8192,4096]{2,1,0} add(%dot.487, %dot.488)
  %sharding_constraint.954 = bf16[2,8192,4096]{2,1,0} copy(%add_any.453)
  %get-tuple-element.723 = f32[4096]{0} get-tuple-element(%remat2.75), index=14
  %convert_element_type.2925 = bf16[4096]{0} convert(%get-tuple-element.723)
  %mul.5151 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2925), dimensions={2}
  %mul.5152 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.954, %mul.5151)
  %convert_element_type.2926 = f32[2,8192,4096]{2,1,0} convert(%mul.5152)
  %get-tuple-element.724 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.75), index=20
  %sharding_constraint.955 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.724)
  %get-tuple-element.725 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.75), index=6
  %sharding_constraint.956 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.725)
  %add.2818 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.955, %sharding_constraint.956)
  %convert_element_type.2927 = f32[2,8192,4096]{2,1,0} convert(%add.2818)
  %square.113 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2927, %convert_element_type.2927)
  %reduce.456 = f32[2,8192]{1,0} reduce(%square.113, %constant.2882), dimensions={2}, to_apply=%region_328.18515
  %div.1760 = f32[2,8192]{1,0} multiply(%reduce.456, %broadcast.5097)
  %add.2819 = f32[2,8192]{1,0} add(%div.1760, %broadcast.5098)
  %add.2820 = f32[2,8192,1]{2,1,0} reshape(%add.2819)
  %rsqrt.175 = f32[2,8192,1]{2,1,0} rsqrt(%add.2820)
  %mul.5156 = f32[2,8192]{1,0} reshape(%rsqrt.175)
  %mul.5157 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5156), dimensions={0,1}
  %mul.5158 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2926, %mul.5157)
  %mul.5159 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2927, %convert_element_type.2926)
  %reduce.457 = f32[2,8192]{1,0} reduce(%mul.5159, %constant.2882), dimensions={2}, to_apply=%region_329.18528
  %reshape.9156 = f32[2,8192,1]{2,1,0} reshape(%reduce.457)
  %div.1761 = f32[2,8192,1]{2,1,0} divide(%rsqrt.175, %add.2820)
  %mul.5160 = f32[2,8192,1]{2,1,0} multiply(%div.1761, %broadcast.5145)
  %mul.5161 = f32[2,8192,1]{2,1,0} multiply(%reshape.9156, %mul.5160)
  %mul.5162 = f32[2,8192,1]{2,1,0} multiply(%mul.5161, %mul.2917)
  %mul.5163 = f32[2,8192]{1,0} reshape(%mul.5162)
  %mul.5164 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5163), dimensions={0,1}
  %mul.5165 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2927, %mul.5164)
  %add_any.454 = f32[2,8192,4096]{2,1,0} add(%mul.5158, %mul.5165)
  %convert_element_type.2928 = bf16[2,8192,4096]{2,1,0} convert(%add_any.454)
  %add_any.455 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.951, %convert_element_type.2928)
  %get-tuple-element.726 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.75), index=0
  %convert_element_type.2929 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.726)
  %get-tuple-element.727 = s32[2,8192]{1,0} get-tuple-element(%remat2.75), index=22
  %convert_element_type.2930 = f32[2,8192]{1,0} convert(%get-tuple-element.727)
  %div.1762 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2930), dimensions={0,1}
  %div.1771 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1762, %div.371)
  %cos.114 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1771)
  %mul.5175 = f32[2,8192,128]{2,1,0} reshape(%cos.114)
  %mul.5176 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5175), dimensions={0,1,3}
  %mul.5177 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2929, %mul.5176)
  %slice.690 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.726), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.691 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.726), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.331 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.690, %slice.691), dimensions={3}
  %slice.692 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.726), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.693 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.726), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.332 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.692, %slice.693), dimensions={3}
  %select_n.2434 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.331, %concatenate.332)
  %convert_element_type.2935 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2434)
  %sin.110 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1771)
  %mul.5178 = f32[2,8192,128]{2,1,0} reshape(%sin.110)
  %mul.5179 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5178), dimensions={0,1,3}
  %mul.5180 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2935, %mul.5179)
  %get-tuple-element.728 = s32[2]{0} get-tuple-element(%remat2.75), index=9
  %broadcast_in_dim.607 = s32[64,2]{1,0} broadcast(%get-tuple-element.728), dimensions={1}
  %reshape.9163 = s32[128]{0} reshape(%broadcast_in_dim.607)
  %convert_element_type.2936 = f32[128]{0} convert(%reshape.9163)
  %mul.5181 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2936), dimensions={3}
  %mul.5182 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5180, %mul.5181)
  %add.2824 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5177, %mul.5182)
  %convert_element_type.2937 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2824)
  %sharding_constraint.957 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2937)
  %get-tuple-element.729 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.75), index=1
  %convert_element_type.2939 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.729)
  %mul.5187 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5175), dimensions={0,1,3}
  %mul.5188 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2939, %mul.5187)
  %slice.694 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.729), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.695 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.729), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.333 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.694, %slice.695), dimensions={3}
  %slice.696 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.729), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.697 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.729), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.334 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.696, %slice.697), dimensions={3}
  %select_n.2441 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.333, %concatenate.334)
  %convert_element_type.2945 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2441)
  %mul.5190 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5178), dimensions={0,1,3}
  %mul.5191 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2945, %mul.5190)
  %get-tuple-element.730 = s32[2]{0} get-tuple-element(%remat2.75), index=10
  %broadcast_in_dim.609 = s32[64,2]{1,0} broadcast(%get-tuple-element.730), dimensions={1}
  %reshape.9171 = s32[128]{0} reshape(%broadcast_in_dim.609)
  %convert_element_type.2947 = f32[128]{0} convert(%reshape.9171)
  %mul.5192 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2947), dimensions={3}
  %mul.5193 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5191, %mul.5192)
  %add.2827 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5188, %mul.5193)
  %convert_element_type.2948 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2827)
  %sharding_constraint.958 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.2948)
  %get-tuple-element.731 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.75), index=2
  %sharding_constraint.959 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.731)
  %get-tuple-element.732 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.75), index=3
  %get-tuple-element.733 = u32[2,4]{1,0} get-tuple-element(%remat2.75), index=4
  %get-tuple-element.734 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.75), index=5
  %sharding_constraint.960 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.734)
  %sharding_constraint.961 = bf16[2,8192,4096]{2,1,0} copy(%add_any.455)
  %get-tuple-element.735 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.75), index=17
  %convert_element_type.2949 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.735)
  %all-gather.390 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.2949), channel_id=393, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.489 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.961, %all-gather.390), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.962 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.489)
  %get-tuple-element.736 = s32[2,8192]{1,0} get-tuple-element(%remat2.75), index=21
  %eq.656 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.736), dimensions={0,1}
  %eq.657 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.736), dimensions={0,2}
  %eq.658 = pred[2,8192,8192]{2,1,0} compare(%eq.656, %eq.657), direction=EQ
  %and.768 = pred[2,8192,8192]{2,1,0} and(%eq.658, %and.455)
  %select_n.2442 = f32[2,8192,8192]{2,1,0} select(%and.768, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1126 = pred[2,8192,8192]{2,1,0} compare(%select_n.2442, %broadcast_in_dim.277), direction=NE
  %not.120 = pred[2,8192,8192]{2,1,0} not(%ne.1126)
  %convert_element_type.2950 = s32[2,8192,8192]{2,1,0} convert(%not.120)
  %reduce.458 = s32[2,8192]{1,0} reduce(%convert_element_type.2950, %constant.2873), dimensions={1}, to_apply=%region_330.18680
  %reduce_sum.4114 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.458)
  %slice.698 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4114), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.55 = s32[2,1]{1,0} reshape(%slice.698)
  %reshape.9173 = s32[2]{0} reshape(%squeeze.55)
  %lt.948 = pred[2]{0} compare(%reshape.9173, %broadcast.5111), direction=LT
  %select_n.2443 = s32[2]{0} select(%lt.948, %broadcast.5111, %reshape.9173)
  %reduce_window_sum.302 = s32[2]{0} reduce-window(%select_n.2443, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.23
  %concatenate.335 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.302), dimensions={0}
  %reduce.459 = s32[2,8192]{1,0} reduce(%convert_element_type.2950, %constant.2873), dimensions={2}, to_apply=%region_331.18689
  %reduce_sum.4118 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.459)
  %reduce.460 = s32[2,1]{1,0} reduce(%reduce_sum.4118, %constant.2985), dimensions={3,2}, to_apply=%region_332.18695
  %reshape.9174 = s32[2]{0} reshape(%reduce.460)
  %lt.949 = pred[2]{0} compare(%reshape.9174, %broadcast.5111), direction=LT
  %select_n.2444 = s32[2]{0} select(%lt.949, %broadcast.5111, %reshape.9174)
  %reduce_window_sum.303 = s32[2]{0} reduce-window(%select_n.2444, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.23.clone
  %concatenate.336 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.303), dimensions={0}
  %te_fused_attn_backward_ffi.115 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.957, %sharding_constraint.958, %sharding_constraint.959, %constant.2973, %get-tuple-element.732, /*index=5*/%get-tuple-element.733, %sharding_constraint.960, %sharding_constraint.962, %concatenate.335, %concatenate.336, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.737 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.115), index=2
  %sharding_constraint.963 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.737)
  %get-tuple-element.738 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.75), index=19
  %convert_element_type.2953 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.738)
  %all-gather.391 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2953), channel_id=394, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.490 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.963, %all-gather.391), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.739 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.115), index=1
  %sharding_constraint.964 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.739)
  %convert_element_type.2954 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.964)
  %mul.5204 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2954, %mul.5187)
  %convert_element_type.2957 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5204)
  %mul.5210 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2954, %mul.5192)
  %mul.5213 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5210, %mul.5190)
  %convert_element_type.2958 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5213)
  %select_n.2449 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.2958, %broadcast.5147)
  %slice.699 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2449), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.186 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.699, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.456 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.2957, %pad.186)
  %slice.700 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2449), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.187 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.700, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.457 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.456, %pad.187)
  %select_n.2451 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.2958, %broadcast.5147)
  %slice.701 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2451), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.188 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.701, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.458 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.457, %pad.188)
  %slice.702 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2451), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.189 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.702, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.459 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.458, %pad.189)
  %get-tuple-element.740 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.75), index=16
  %convert_element_type.2959 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.740)
  %all-gather.392 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.2959), channel_id=395, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.491 = bf16[2,8192,4096]{2,1,0} dot(%add_any.459, %all-gather.392), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.460 = bf16[2,8192,4096]{2,1,0} add(%dot.490, %dot.491)
  %sharding_constraint.965 = bf16[2,8192,4096]{2,1,0} copy(%add_any.460)
  %get-tuple-element.741 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.115), index=0
  %sharding_constraint.966 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.741)
  %convert_element_type.2961 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.966)
  %mul.5216 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2961, %mul.5176)
  %convert_element_type.2962 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5216)
  %mul.5218 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2961, %mul.5181)
  %mul.5221 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5218, %mul.5179)
  %convert_element_type.2964 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5221)
  %select_n.2453 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.2964, %broadcast.5148)
  %slice.703 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2453), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.190 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.703, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.461 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.2962, %pad.190)
  %slice.704 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2453), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.191 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.704, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.462 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.461, %pad.191)
  %select_n.2455 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.2964, %broadcast.5148)
  %slice.705 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2455), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.192 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.705, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.463 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.462, %pad.192)
  %slice.706 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2455), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.193 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.706, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.464 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.463, %pad.193)
  %get-tuple-element.742 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.75), index=18
  %convert_element_type.2965 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.742)
  %all-gather.393 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.2965), channel_id=396, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.492 = bf16[2,8192,4096]{2,1,0} dot(%add_any.464, %all-gather.393), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.967 = bf16[2,8192,4096]{2,1,0} copy(%dot.492)
  %add_any.465 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.965, %sharding_constraint.967)
  %sharding_constraint.968 = bf16[2,8192,4096]{2,1,0} copy(%add_any.465)
  %get-tuple-element.743 = f32[4096]{0} get-tuple-element(%remat2.75), index=15
  %convert_element_type.2966 = bf16[4096]{0} convert(%get-tuple-element.743)
  %mul.5222 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2966), dimensions={2}
  %mul.5223 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.968, %mul.5222)
  %convert_element_type.2967 = f32[2,8192,4096]{2,1,0} convert(%mul.5223)
  %convert_element_type.2968 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.955)
  %square.114 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2968, %convert_element_type.2968)
  %reduce.461 = f32[2,8192]{1,0} reduce(%square.114, %constant.2882), dimensions={2}, to_apply=%region_333.18783
  %div.1782 = f32[2,8192]{1,0} multiply(%reduce.461, %broadcast.5097)
  %add.2832 = f32[2,8192]{1,0} add(%div.1782, %broadcast.5098)
  %add.2833 = f32[2,8192,1]{2,1,0} reshape(%add.2832)
  %rsqrt.176 = f32[2,8192,1]{2,1,0} rsqrt(%add.2833)
  %mul.5224 = f32[2,8192]{1,0} reshape(%rsqrt.176)
  %mul.5225 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5224), dimensions={0,1}
  %mul.5226 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2967, %mul.5225)
  %mul.5227 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2968, %convert_element_type.2967)
  %reduce.462 = f32[2,8192]{1,0} reduce(%mul.5227, %constant.2882), dimensions={2}, to_apply=%region_334.18796
  %reshape.9195 = f32[2,8192,1]{2,1,0} reshape(%reduce.462)
  %div.1784 = f32[2,8192,1]{2,1,0} divide(%rsqrt.176, %add.2833)
  %mul.5228 = f32[2,8192,1]{2,1,0} multiply(%div.1784, %broadcast.5145)
  %mul.5229 = f32[2,8192,1]{2,1,0} multiply(%reshape.9195, %mul.5228)
  %mul.5230 = f32[2,8192,1]{2,1,0} multiply(%mul.5229, %mul.2917)
  %mul.5231 = f32[2,8192]{1,0} reshape(%mul.5230)
  %mul.5232 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5231), dimensions={0,1}
  %mul.5233 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2968, %mul.5232)
  %add_any.466 = f32[2,8192,4096]{2,1,0} add(%mul.5226, %mul.5233)
  %convert_element_type.2969 = bf16[2,8192,4096]{2,1,0} convert(%add_any.466)
  %add_any.467 = bf16[2,8192,4096]{2,1,0} add(%add_any.455, %convert_element_type.2969)
  %sharding_constraint.969 = bf16[2,8192,4096]{2,1,0} copy(%add_any.467)
  %tuple.143 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.56, %reduce_precision.57, %reduce_precision.58, %get-tuple-element.46, %sharding_constraint.489, /*index=5*/%reduce_precision.59, %reduce_precision.60, %reduce_precision.61, %reduce_precision.62, %constant.2935, /*index=10*/%constant.2935, %param.76, %param.77, %param.78, %param.75, /*index=15*/%param.70, %param.72, %param.74, %param.71, %param.73, /*index=20*/%sharding_constraint.153, %param.10, %param.7, %sharding_constraint.969)
  %remat2.76 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.143)
  %get-tuple-element.744 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.76), index=23
  %sharding_constraint.970 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.744)
  %get-tuple-element.745 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.76), index=7
  %neg.182 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.745)
  %exp.183 = bf16[2,8192,14336]{2,1,0} exponential(%neg.182)
  %add.2834 = bf16[2,8192,14336]{2,1,0} add(%exp.183, %jit_silu_.0)
  %div.1785 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2834)
  %mul.5234 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.745, %div.1785)
  %sharding_constraint.971 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.970)
  %get-tuple-element.746 = f32[14336,512]{1,0} get-tuple-element(%remat2.76), index=13
  %convert_element_type.2971 = bf16[14336,512]{1,0} convert(%get-tuple-element.746)
  %all-gather.394 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.2971), channel_id=397, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.493 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.971, %all-gather.394), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.972 = bf16[2,8192,14336]{2,1,0} copy(%dot.493)
  %mul.5237 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5234, %sharding_constraint.972)
  %get-tuple-element.747 = f32[512,14336]{1,0} get-tuple-element(%remat2.76), index=12
  %convert_element_type.2972 = bf16[512,14336]{1,0} convert(%get-tuple-element.747)
  %all-gather.395 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2972), channel_id=398, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.494 = bf16[2,8192,4096]{2,1,0} dot(%mul.5237, %all-gather.395), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.748 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.76), index=8
  %mul.5238 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.972, %get-tuple-element.748)
  %mul.5241 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5238, %div.1785)
  %mul.5242 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.745, %mul.5238)
  %sub.317 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1785)
  %mul.5243 = bf16[2,8192,14336]{2,1,0} multiply(%div.1785, %sub.317)
  %mul.5244 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5242, %mul.5243)
  %add_any.468 = bf16[2,8192,14336]{2,1,0} add(%mul.5241, %mul.5244)
  %get-tuple-element.749 = f32[512,14336]{1,0} get-tuple-element(%remat2.76), index=11
  %convert_element_type.2973 = bf16[512,14336]{1,0} convert(%get-tuple-element.749)
  %all-gather.396 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.2973), channel_id=399, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.495 = bf16[2,8192,4096]{2,1,0} dot(%add_any.468, %all-gather.396), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.469 = bf16[2,8192,4096]{2,1,0} add(%dot.494, %dot.495)
  %sharding_constraint.973 = bf16[2,8192,4096]{2,1,0} copy(%add_any.469)
  %get-tuple-element.750 = f32[4096]{0} get-tuple-element(%remat2.76), index=14
  %convert_element_type.2974 = bf16[4096]{0} convert(%get-tuple-element.750)
  %mul.5245 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.2974), dimensions={2}
  %mul.5246 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.973, %mul.5245)
  %convert_element_type.2976 = f32[2,8192,4096]{2,1,0} convert(%mul.5246)
  %get-tuple-element.751 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.76), index=20
  %sharding_constraint.974 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.751)
  %get-tuple-element.752 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.76), index=6
  %sharding_constraint.975 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.752)
  %add.2835 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.974, %sharding_constraint.975)
  %convert_element_type.2977 = f32[2,8192,4096]{2,1,0} convert(%add.2835)
  %square.115 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2977, %convert_element_type.2977)
  %reduce.463 = f32[2,8192]{1,0} reduce(%square.115, %constant.2882), dimensions={2}, to_apply=%region_335.18874
  %div.1786 = f32[2,8192]{1,0} multiply(%reduce.463, %broadcast.5097)
  %add.2836 = f32[2,8192]{1,0} add(%div.1786, %broadcast.5098)
  %add.2837 = f32[2,8192,1]{2,1,0} reshape(%add.2836)
  %rsqrt.177 = f32[2,8192,1]{2,1,0} rsqrt(%add.2837)
  %mul.5247 = f32[2,8192]{1,0} reshape(%rsqrt.177)
  %mul.5248 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5247), dimensions={0,1}
  %mul.5250 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2976, %mul.5248)
  %mul.5251 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2977, %convert_element_type.2976)
  %reduce.464 = f32[2,8192]{1,0} reduce(%mul.5251, %constant.2882), dimensions={2}, to_apply=%region_336.18887
  %reshape.9196 = f32[2,8192,1]{2,1,0} reshape(%reduce.464)
  %div.1789 = f32[2,8192,1]{2,1,0} divide(%rsqrt.177, %add.2837)
  %mul.5252 = f32[2,8192,1]{2,1,0} multiply(%div.1789, %broadcast.5145)
  %mul.5254 = f32[2,8192,1]{2,1,0} multiply(%reshape.9196, %mul.5252)
  %mul.5255 = f32[2,8192,1]{2,1,0} multiply(%mul.5254, %mul.2917)
  %mul.5256 = f32[2,8192]{1,0} reshape(%mul.5255)
  %mul.5257 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5256), dimensions={0,1}
  %mul.5258 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2977, %mul.5257)
  %add_any.470 = f32[2,8192,4096]{2,1,0} add(%mul.5250, %mul.5258)
  %convert_element_type.2978 = bf16[2,8192,4096]{2,1,0} convert(%add_any.470)
  %add_any.471 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.970, %convert_element_type.2978)
  %get-tuple-element.753 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.76), index=0
  %convert_element_type.2979 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.753)
  %get-tuple-element.754 = s32[2,8192]{1,0} get-tuple-element(%remat2.76), index=22
  %convert_element_type.2980 = f32[2,8192]{1,0} convert(%get-tuple-element.754)
  %div.1790 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.2980), dimensions={0,1}
  %div.1803 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1790, %div.371)
  %cos.116 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1803)
  %mul.5262 = f32[2,8192,128]{2,1,0} reshape(%cos.116)
  %mul.5263 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5262), dimensions={0,1,3}
  %mul.5264 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2979, %mul.5263)
  %slice.707 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.753), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.708 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.753), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.337 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.707, %slice.708), dimensions={3}
  %slice.709 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.753), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.710 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.753), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.338 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.709, %slice.710), dimensions={3}
  %select_n.2462 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.337, %concatenate.338)
  %convert_element_type.2985 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2462)
  %sin.112 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1803)
  %mul.5265 = f32[2,8192,128]{2,1,0} reshape(%sin.112)
  %mul.5266 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5265), dimensions={0,1,3}
  %mul.5267 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.2985, %mul.5266)
  %get-tuple-element.755 = s32[2]{0} get-tuple-element(%remat2.76), index=9
  %broadcast_in_dim.613 = s32[64,2]{1,0} broadcast(%get-tuple-element.755), dimensions={1}
  %reshape.9204 = s32[128]{0} reshape(%broadcast_in_dim.613)
  %convert_element_type.2986 = f32[128]{0} convert(%reshape.9204)
  %mul.5268 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.2986), dimensions={3}
  %mul.5269 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5267, %mul.5268)
  %add.2840 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5264, %mul.5269)
  %convert_element_type.2987 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2840)
  %sharding_constraint.976 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.2987)
  %get-tuple-element.756 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.76), index=1
  %convert_element_type.2988 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.756)
  %mul.5278 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5262), dimensions={0,1,3}
  %mul.5279 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2988, %mul.5278)
  %slice.711 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.756), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.712 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.756), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.339 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.711, %slice.712), dimensions={3}
  %slice.713 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.756), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.714 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.756), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.340 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.713, %slice.714), dimensions={3}
  %select_n.2472 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.339, %concatenate.340)
  %convert_element_type.2996 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2472)
  %mul.5285 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5265), dimensions={0,1,3}
  %mul.5291 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.2996, %mul.5285)
  %get-tuple-element.757 = s32[2]{0} get-tuple-element(%remat2.76), index=10
  %broadcast_in_dim.615 = s32[64,2]{1,0} broadcast(%get-tuple-element.757), dimensions={1}
  %reshape.9212 = s32[128]{0} reshape(%broadcast_in_dim.615)
  %convert_element_type.2997 = f32[128]{0} convert(%reshape.9212)
  %mul.5292 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.2997), dimensions={3}
  %mul.5293 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5291, %mul.5292)
  %add.2843 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5279, %mul.5293)
  %convert_element_type.3000 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2843)
  %sharding_constraint.977 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3000)
  %get-tuple-element.758 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.76), index=2
  %sharding_constraint.978 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.758)
  %get-tuple-element.759 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.76), index=3
  %get-tuple-element.760 = u32[2,4]{1,0} get-tuple-element(%remat2.76), index=4
  %get-tuple-element.761 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.76), index=5
  %sharding_constraint.979 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.761)
  %sharding_constraint.980 = bf16[2,8192,4096]{2,1,0} copy(%add_any.471)
  %get-tuple-element.762 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.76), index=17
  %convert_element_type.3001 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.762)
  %all-gather.397 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3001), channel_id=400, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.496 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.980, %all-gather.397), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.981 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.496)
  %get-tuple-element.763 = s32[2,8192]{1,0} get-tuple-element(%remat2.76), index=21
  %eq.663 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.763), dimensions={0,1}
  %eq.664 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.763), dimensions={0,2}
  %eq.665 = pred[2,8192,8192]{2,1,0} compare(%eq.663, %eq.664), direction=EQ
  %and.776 = pred[2,8192,8192]{2,1,0} and(%eq.665, %and.455)
  %select_n.2473 = f32[2,8192,8192]{2,1,0} select(%and.776, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1134 = pred[2,8192,8192]{2,1,0} compare(%select_n.2473, %broadcast_in_dim.277), direction=NE
  %not.121 = pred[2,8192,8192]{2,1,0} not(%ne.1134)
  %convert_element_type.3004 = s32[2,8192,8192]{2,1,0} convert(%not.121)
  %reduce.465 = s32[2,8192]{1,0} reduce(%convert_element_type.3004, %constant.2873), dimensions={1}, to_apply=%region_337.19039
  %reduce_sum.4120 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.465)
  %slice.715 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4120), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.56 = s32[2,1]{1,0} reshape(%slice.715)
  %reshape.9214 = s32[2]{0} reshape(%squeeze.56)
  %lt.959 = pred[2]{0} compare(%reshape.9214, %broadcast.5111), direction=LT
  %select_n.2474 = s32[2]{0} select(%lt.959, %broadcast.5111, %reshape.9214)
  %reduce_window_sum.304 = s32[2]{0} reduce-window(%select_n.2474, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.24
  %concatenate.341 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.304), dimensions={0}
  %reduce.466 = s32[2,8192]{1,0} reduce(%convert_element_type.3004, %constant.2873), dimensions={2}, to_apply=%region_338.19048
  %reduce_sum.4121 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.466)
  %reduce.467 = s32[2,1]{1,0} reduce(%reduce_sum.4121, %constant.2985), dimensions={3,2}, to_apply=%region_339.19054
  %reshape.9215 = s32[2]{0} reshape(%reduce.467)
  %lt.961 = pred[2]{0} compare(%reshape.9215, %broadcast.5111), direction=LT
  %select_n.2475 = s32[2]{0} select(%lt.961, %broadcast.5111, %reshape.9215)
  %reduce_window_sum.305 = s32[2]{0} reduce-window(%select_n.2475, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.24.clone
  %concatenate.342 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.305), dimensions={0}
  %te_fused_attn_backward_ffi.120 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.976, %sharding_constraint.977, %sharding_constraint.978, %constant.2973, %get-tuple-element.759, /*index=5*/%get-tuple-element.760, %sharding_constraint.979, %sharding_constraint.981, %concatenate.341, %concatenate.342, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.764 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.120), index=2
  %sharding_constraint.982 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.764)
  %get-tuple-element.765 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.76), index=19
  %convert_element_type.3006 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.765)
  %all-gather.398 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3006), channel_id=401, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.497 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.982, %all-gather.398), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.766 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.120), index=1
  %sharding_constraint.983 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.766)
  %convert_element_type.3008 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.983)
  %mul.5296 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3008, %mul.5278)
  %convert_element_type.3009 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5296)
  %mul.5298 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3008, %mul.5292)
  %mul.5302 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5298, %mul.5285)
  %convert_element_type.3010 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5302)
  %select_n.2477 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3010, %broadcast.5147)
  %slice.716 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2477), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.194 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.716, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.472 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3009, %pad.194)
  %slice.717 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2477), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.195 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.717, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.473 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.472, %pad.195)
  %select_n.2479 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3010, %broadcast.5147)
  %slice.718 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2479), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.196 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.718, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.474 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.473, %pad.196)
  %slice.719 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2479), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.197 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.719, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.475 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.474, %pad.197)
  %get-tuple-element.767 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.76), index=16
  %convert_element_type.3011 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.767)
  %all-gather.399 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3011), channel_id=402, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.498 = bf16[2,8192,4096]{2,1,0} dot(%add_any.475, %all-gather.399), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.476 = bf16[2,8192,4096]{2,1,0} add(%dot.497, %dot.498)
  %sharding_constraint.984 = bf16[2,8192,4096]{2,1,0} copy(%add_any.476)
  %get-tuple-element.768 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.120), index=0
  %sharding_constraint.985 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.768)
  %convert_element_type.3012 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.985)
  %mul.5305 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3012, %mul.5263)
  %convert_element_type.3013 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5305)
  %mul.5309 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3012, %mul.5268)
  %mul.5312 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5309, %mul.5266)
  %convert_element_type.3015 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5312)
  %select_n.2481 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3015, %broadcast.5148)
  %slice.720 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2481), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.198 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.720, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.477 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3013, %pad.198)
  %slice.721 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2481), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.199 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.721, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.478 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.477, %pad.199)
  %select_n.2483 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3015, %broadcast.5148)
  %slice.722 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2483), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.200 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.722, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.479 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.478, %pad.200)
  %slice.723 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2483), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.201 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.723, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.480 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.479, %pad.201)
  %get-tuple-element.769 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.76), index=18
  %convert_element_type.3018 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.769)
  %all-gather.400 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3018), channel_id=403, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.499 = bf16[2,8192,4096]{2,1,0} dot(%add_any.480, %all-gather.400), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.986 = bf16[2,8192,4096]{2,1,0} copy(%dot.499)
  %add_any.481 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.984, %sharding_constraint.986)
  %sharding_constraint.987 = bf16[2,8192,4096]{2,1,0} copy(%add_any.481)
  %get-tuple-element.770 = f32[4096]{0} get-tuple-element(%remat2.76), index=15
  %convert_element_type.3019 = bf16[4096]{0} convert(%get-tuple-element.770)
  %mul.5313 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3019), dimensions={2}
  %mul.5314 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.987, %mul.5313)
  %convert_element_type.3020 = f32[2,8192,4096]{2,1,0} convert(%mul.5314)
  %convert_element_type.3022 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.974)
  %square.116 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3022, %convert_element_type.3022)
  %reduce.468 = f32[2,8192]{1,0} reduce(%square.116, %constant.2882), dimensions={2}, to_apply=%region_340.19142
  %div.1822 = f32[2,8192]{1,0} multiply(%reduce.468, %broadcast.5097)
  %add.2849 = f32[2,8192]{1,0} add(%div.1822, %broadcast.5098)
  %add.2850 = f32[2,8192,1]{2,1,0} reshape(%add.2849)
  %rsqrt.178 = f32[2,8192,1]{2,1,0} rsqrt(%add.2850)
  %mul.5315 = f32[2,8192]{1,0} reshape(%rsqrt.178)
  %mul.5316 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5315), dimensions={0,1}
  %mul.5322 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3020, %mul.5316)
  %mul.5323 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3022, %convert_element_type.3020)
  %reduce.469 = f32[2,8192]{1,0} reduce(%mul.5323, %constant.2882), dimensions={2}, to_apply=%region_341.19155
  %reshape.9237 = f32[2,8192,1]{2,1,0} reshape(%reduce.469)
  %div.1823 = f32[2,8192,1]{2,1,0} divide(%rsqrt.178, %add.2850)
  %mul.5324 = f32[2,8192,1]{2,1,0} multiply(%div.1823, %broadcast.5145)
  %mul.5329 = f32[2,8192,1]{2,1,0} multiply(%reshape.9237, %mul.5324)
  %mul.5330 = f32[2,8192,1]{2,1,0} multiply(%mul.5329, %mul.2917)
  %mul.5334 = f32[2,8192]{1,0} reshape(%mul.5330)
  %mul.5335 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5334), dimensions={0,1}
  %mul.5336 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3022, %mul.5335)
  %add_any.482 = f32[2,8192,4096]{2,1,0} add(%mul.5322, %mul.5336)
  %convert_element_type.3023 = bf16[2,8192,4096]{2,1,0} convert(%add_any.482)
  %add_any.483 = bf16[2,8192,4096]{2,1,0} add(%add_any.471, %convert_element_type.3023)
  %sharding_constraint.988 = bf16[2,8192,4096]{2,1,0} copy(%add_any.483)
  %tuple.145 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.49, %reduce_precision.50, %reduce_precision.51, %get-tuple-element.44, %sharding_constraint.488, /*index=5*/%reduce_precision.52, %reduce_precision.53, %reduce_precision.54, %reduce_precision.55, %constant.2935, /*index=10*/%constant.2935, %param.67, %param.68, %param.69, %param.66, /*index=15*/%param.61, %param.63, %param.65, %param.62, %param.64, /*index=20*/%sharding_constraint.140, %param.10, %param.7, %sharding_constraint.988)
  %remat2.77 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.145)
  %get-tuple-element.771 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.77), index=23
  %sharding_constraint.989 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.771)
  %get-tuple-element.772 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.77), index=7
  %neg.183 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.772)
  %exp.184 = bf16[2,8192,14336]{2,1,0} exponential(%neg.183)
  %add.2851 = bf16[2,8192,14336]{2,1,0} add(%exp.184, %jit_silu_.0)
  %div.1824 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2851)
  %mul.5339 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.772, %div.1824)
  %sharding_constraint.990 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.989)
  %get-tuple-element.773 = f32[14336,512]{1,0} get-tuple-element(%remat2.77), index=13
  %convert_element_type.3024 = bf16[14336,512]{1,0} convert(%get-tuple-element.773)
  %all-gather.401 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.3024), channel_id=404, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.500 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.990, %all-gather.401), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.991 = bf16[2,8192,14336]{2,1,0} copy(%dot.500)
  %mul.5340 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5339, %sharding_constraint.991)
  %get-tuple-element.774 = f32[512,14336]{1,0} get-tuple-element(%remat2.77), index=12
  %convert_element_type.3025 = bf16[512,14336]{1,0} convert(%get-tuple-element.774)
  %all-gather.402 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3025), channel_id=405, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.501 = bf16[2,8192,4096]{2,1,0} dot(%mul.5340, %all-gather.402), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.775 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.77), index=8
  %mul.5341 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.991, %get-tuple-element.775)
  %mul.5342 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5341, %div.1824)
  %mul.5343 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.772, %mul.5341)
  %sub.322 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1824)
  %mul.5344 = bf16[2,8192,14336]{2,1,0} multiply(%div.1824, %sub.322)
  %mul.5345 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5343, %mul.5344)
  %add_any.484 = bf16[2,8192,14336]{2,1,0} add(%mul.5342, %mul.5345)
  %get-tuple-element.776 = f32[512,14336]{1,0} get-tuple-element(%remat2.77), index=11
  %convert_element_type.3026 = bf16[512,14336]{1,0} convert(%get-tuple-element.776)
  %all-gather.403 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3026), channel_id=406, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.502 = bf16[2,8192,4096]{2,1,0} dot(%add_any.484, %all-gather.403), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.485 = bf16[2,8192,4096]{2,1,0} add(%dot.501, %dot.502)
  %sharding_constraint.992 = bf16[2,8192,4096]{2,1,0} copy(%add_any.485)
  %get-tuple-element.777 = f32[4096]{0} get-tuple-element(%remat2.77), index=14
  %convert_element_type.3027 = bf16[4096]{0} convert(%get-tuple-element.777)
  %mul.5346 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3027), dimensions={2}
  %mul.5347 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.992, %mul.5346)
  %convert_element_type.3028 = f32[2,8192,4096]{2,1,0} convert(%mul.5347)
  %get-tuple-element.778 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.77), index=20
  %sharding_constraint.993 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.778)
  %get-tuple-element.779 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.77), index=6
  %sharding_constraint.994 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.779)
  %add.2852 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.993, %sharding_constraint.994)
  %convert_element_type.3029 = f32[2,8192,4096]{2,1,0} convert(%add.2852)
  %square.117 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3029, %convert_element_type.3029)
  %reduce.470 = f32[2,8192]{1,0} reduce(%square.117, %constant.2882), dimensions={2}, to_apply=%region_342.19233
  %div.1825 = f32[2,8192]{1,0} multiply(%reduce.470, %broadcast.5097)
  %add.2853 = f32[2,8192]{1,0} add(%div.1825, %broadcast.5098)
  %add.2854 = f32[2,8192,1]{2,1,0} reshape(%add.2853)
  %rsqrt.179 = f32[2,8192,1]{2,1,0} rsqrt(%add.2854)
  %mul.5348 = f32[2,8192]{1,0} reshape(%rsqrt.179)
  %mul.5349 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5348), dimensions={0,1}
  %mul.5351 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3028, %mul.5349)
  %mul.5352 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3029, %convert_element_type.3028)
  %reduce.471 = f32[2,8192]{1,0} reduce(%mul.5352, %constant.2882), dimensions={2}, to_apply=%region_343.19246
  %reshape.9238 = f32[2,8192,1]{2,1,0} reshape(%reduce.471)
  %div.1826 = f32[2,8192,1]{2,1,0} divide(%rsqrt.179, %add.2854)
  %mul.5353 = f32[2,8192,1]{2,1,0} multiply(%div.1826, %broadcast.5145)
  %mul.5354 = f32[2,8192,1]{2,1,0} multiply(%reshape.9238, %mul.5353)
  %mul.5355 = f32[2,8192,1]{2,1,0} multiply(%mul.5354, %mul.2917)
  %mul.5356 = f32[2,8192]{1,0} reshape(%mul.5355)
  %mul.5357 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5356), dimensions={0,1}
  %mul.5359 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3029, %mul.5357)
  %add_any.486 = f32[2,8192,4096]{2,1,0} add(%mul.5351, %mul.5359)
  %convert_element_type.3030 = bf16[2,8192,4096]{2,1,0} convert(%add_any.486)
  %add_any.487 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.989, %convert_element_type.3030)
  %get-tuple-element.780 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.77), index=0
  %convert_element_type.3031 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.780)
  %get-tuple-element.781 = s32[2,8192]{1,0} get-tuple-element(%remat2.77), index=22
  %convert_element_type.3032 = f32[2,8192]{1,0} convert(%get-tuple-element.781)
  %div.1827 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.3032), dimensions={0,1}
  %div.1836 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1827, %div.371)
  %cos.118 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1836)
  %mul.5363 = f32[2,8192,128]{2,1,0} reshape(%cos.118)
  %mul.5364 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5363), dimensions={0,1,3}
  %mul.5365 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3031, %mul.5364)
  %slice.724 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.780), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.725 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.780), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.343 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.724, %slice.725), dimensions={3}
  %slice.726 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.780), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.727 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.780), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.344 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.726, %slice.727), dimensions={3}
  %select_n.2493 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.343, %concatenate.344)
  %convert_element_type.3038 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2493)
  %sin.114 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1836)
  %mul.5366 = f32[2,8192,128]{2,1,0} reshape(%sin.114)
  %mul.5367 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5366), dimensions={0,1,3}
  %mul.5368 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3038, %mul.5367)
  %get-tuple-element.782 = s32[2]{0} get-tuple-element(%remat2.77), index=9
  %broadcast_in_dim.619 = s32[64,2]{1,0} broadcast(%get-tuple-element.782), dimensions={1}
  %reshape.9245 = s32[128]{0} reshape(%broadcast_in_dim.619)
  %convert_element_type.3039 = f32[128]{0} convert(%reshape.9245)
  %mul.5369 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.3039), dimensions={3}
  %mul.5371 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5368, %mul.5369)
  %add.2858 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5365, %mul.5371)
  %convert_element_type.3040 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2858)
  %sharding_constraint.995 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.3040)
  %get-tuple-element.783 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.77), index=1
  %convert_element_type.3041 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.783)
  %mul.5379 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5363), dimensions={0,1,3}
  %mul.5380 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3041, %mul.5379)
  %slice.728 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.783), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.729 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.783), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.345 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.728, %slice.729), dimensions={3}
  %slice.730 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.783), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.731 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.783), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.346 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.730, %slice.731), dimensions={3}
  %select_n.2500 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.345, %concatenate.346)
  %convert_element_type.3047 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2500)
  %mul.5385 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5366), dimensions={0,1,3}
  %mul.5386 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3047, %mul.5385)
  %get-tuple-element.784 = s32[2]{0} get-tuple-element(%remat2.77), index=10
  %broadcast_in_dim.621 = s32[64,2]{1,0} broadcast(%get-tuple-element.784), dimensions={1}
  %reshape.9252 = s32[128]{0} reshape(%broadcast_in_dim.621)
  %convert_element_type.3050 = f32[128]{0} convert(%reshape.9252)
  %mul.5387 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.3050), dimensions={3}
  %mul.5388 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5386, %mul.5387)
  %add.2861 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5380, %mul.5388)
  %convert_element_type.3051 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2861)
  %sharding_constraint.996 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3051)
  %get-tuple-element.785 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.77), index=2
  %sharding_constraint.997 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.785)
  %get-tuple-element.786 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.77), index=3
  %get-tuple-element.787 = u32[2,4]{1,0} get-tuple-element(%remat2.77), index=4
  %get-tuple-element.788 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.77), index=5
  %sharding_constraint.998 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.788)
  %sharding_constraint.999 = bf16[2,8192,4096]{2,1,0} copy(%add_any.487)
  %get-tuple-element.789 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.77), index=17
  %convert_element_type.3052 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.789)
  %all-gather.404 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3052), channel_id=407, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.503 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.999, %all-gather.404), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.1000 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.503)
  %get-tuple-element.790 = s32[2,8192]{1,0} get-tuple-element(%remat2.77), index=21
  %eq.670 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.790), dimensions={0,1}
  %eq.671 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.790), dimensions={0,2}
  %eq.672 = pred[2,8192,8192]{2,1,0} compare(%eq.670, %eq.671), direction=EQ
  %and.784 = pred[2,8192,8192]{2,1,0} and(%eq.672, %and.455)
  %select_n.2501 = f32[2,8192,8192]{2,1,0} select(%and.784, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1142 = pred[2,8192,8192]{2,1,0} compare(%select_n.2501, %broadcast_in_dim.277), direction=NE
  %not.122 = pred[2,8192,8192]{2,1,0} not(%ne.1142)
  %convert_element_type.3054 = s32[2,8192,8192]{2,1,0} convert(%not.122)
  %reduce.472 = s32[2,8192]{1,0} reduce(%convert_element_type.3054, %constant.2873), dimensions={1}, to_apply=%region_344.19398
  %reduce_sum.4122 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.472)
  %slice.732 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4122), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.57 = s32[2,1]{1,0} reshape(%slice.732)
  %reshape.9254 = s32[2]{0} reshape(%squeeze.57)
  %lt.971 = pred[2]{0} compare(%reshape.9254, %broadcast.5111), direction=LT
  %select_n.2502 = s32[2]{0} select(%lt.971, %broadcast.5111, %reshape.9254)
  %reduce_window_sum.306 = s32[2]{0} reduce-window(%select_n.2502, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.25
  %concatenate.347 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.306), dimensions={0}
  %reduce.473 = s32[2,8192]{1,0} reduce(%convert_element_type.3054, %constant.2873), dimensions={2}, to_apply=%region_345.19407
  %reduce_sum.4126 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.473)
  %reduce.474 = s32[2,1]{1,0} reduce(%reduce_sum.4126, %constant.2985), dimensions={3,2}, to_apply=%region_346.19413
  %reshape.9255 = s32[2]{0} reshape(%reduce.474)
  %lt.972 = pred[2]{0} compare(%reshape.9255, %broadcast.5111), direction=LT
  %select_n.2503 = s32[2]{0} select(%lt.972, %broadcast.5111, %reshape.9255)
  %reduce_window_sum.307 = s32[2]{0} reduce-window(%select_n.2503, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.25.clone
  %concatenate.348 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.307), dimensions={0}
  %te_fused_attn_backward_ffi.125 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.995, %sharding_constraint.996, %sharding_constraint.997, %constant.2973, %get-tuple-element.786, /*index=5*/%get-tuple-element.787, %sharding_constraint.998, %sharding_constraint.1000, %concatenate.347, %concatenate.348, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.791 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.125), index=2
  %sharding_constraint.1001 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.791)
  %get-tuple-element.792 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.77), index=19
  %convert_element_type.3057 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.792)
  %all-gather.405 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3057), channel_id=408, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.504 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.1001, %all-gather.405), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.793 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.125), index=1
  %sharding_constraint.1002 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.793)
  %convert_element_type.3058 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.1002)
  %mul.5391 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3058, %mul.5379)
  %convert_element_type.3061 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5391)
  %mul.5393 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3058, %mul.5387)
  %mul.5399 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5393, %mul.5385)
  %convert_element_type.3062 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5399)
  %select_n.2505 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3062, %broadcast.5147)
  %slice.733 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2505), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.202 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.733, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.488 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3061, %pad.202)
  %slice.734 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2505), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.203 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.734, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.489 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.488, %pad.203)
  %select_n.2507 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3062, %broadcast.5147)
  %slice.735 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2507), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.204 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.735, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.490 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.489, %pad.204)
  %slice.736 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2507), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.205 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.736, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.491 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.490, %pad.205)
  %get-tuple-element.794 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.77), index=16
  %convert_element_type.3064 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.794)
  %all-gather.406 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3064), channel_id=409, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.505 = bf16[2,8192,4096]{2,1,0} dot(%add_any.491, %all-gather.406), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.492 = bf16[2,8192,4096]{2,1,0} add(%dot.504, %dot.505)
  %sharding_constraint.1003 = bf16[2,8192,4096]{2,1,0} copy(%add_any.492)
  %get-tuple-element.795 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.125), index=0
  %sharding_constraint.1004 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.795)
  %convert_element_type.3065 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.1004)
  %mul.5410 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3065, %mul.5364)
  %convert_element_type.3068 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5410)
  %mul.5416 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3065, %mul.5369)
  %mul.5419 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5416, %mul.5367)
  %convert_element_type.3069 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5419)
  %select_n.2512 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3069, %broadcast.5148)
  %slice.737 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2512), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.206 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.737, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.493 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3068, %pad.206)
  %slice.738 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2512), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.207 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.738, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.494 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.493, %pad.207)
  %select_n.2514 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3069, %broadcast.5148)
  %slice.739 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2514), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.208 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.739, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.495 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.494, %pad.208)
  %slice.740 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2514), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.209 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.740, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.496 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.495, %pad.209)
  %get-tuple-element.796 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.77), index=18
  %convert_element_type.3070 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.796)
  %all-gather.407 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3070), channel_id=410, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.506 = bf16[2,8192,4096]{2,1,0} dot(%add_any.496, %all-gather.407), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.1005 = bf16[2,8192,4096]{2,1,0} copy(%dot.506)
  %add_any.497 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1003, %sharding_constraint.1005)
  %sharding_constraint.1006 = bf16[2,8192,4096]{2,1,0} copy(%add_any.497)
  %get-tuple-element.797 = f32[4096]{0} get-tuple-element(%remat2.77), index=15
  %convert_element_type.3072 = bf16[4096]{0} convert(%get-tuple-element.797)
  %mul.5420 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3072), dimensions={2}
  %mul.5421 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1006, %mul.5420)
  %convert_element_type.3073 = f32[2,8192,4096]{2,1,0} convert(%mul.5421)
  %convert_element_type.3076 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.993)
  %square.118 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3076, %convert_element_type.3076)
  %reduce.475 = f32[2,8192]{1,0} reduce(%square.118, %constant.2882), dimensions={2}, to_apply=%region_347.19501
  %div.1847 = f32[2,8192]{1,0} multiply(%reduce.475, %broadcast.5097)
  %add.2866 = f32[2,8192]{1,0} add(%div.1847, %broadcast.5098)
  %add.2867 = f32[2,8192,1]{2,1,0} reshape(%add.2866)
  %rsqrt.180 = f32[2,8192,1]{2,1,0} rsqrt(%add.2867)
  %mul.5422 = f32[2,8192]{1,0} reshape(%rsqrt.180)
  %mul.5423 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5422), dimensions={0,1}
  %mul.5424 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3073, %mul.5423)
  %mul.5425 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3076, %convert_element_type.3073)
  %reduce.476 = f32[2,8192]{1,0} reduce(%mul.5425, %constant.2882), dimensions={2}, to_apply=%region_348.19514
  %reshape.9278 = f32[2,8192,1]{2,1,0} reshape(%reduce.476)
  %div.1848 = f32[2,8192,1]{2,1,0} divide(%rsqrt.180, %add.2867)
  %mul.5426 = f32[2,8192,1]{2,1,0} multiply(%div.1848, %broadcast.5145)
  %mul.5427 = f32[2,8192,1]{2,1,0} multiply(%reshape.9278, %mul.5426)
  %mul.5428 = f32[2,8192,1]{2,1,0} multiply(%mul.5427, %mul.2917)
  %mul.5429 = f32[2,8192]{1,0} reshape(%mul.5428)
  %mul.5430 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5429), dimensions={0,1}
  %mul.5431 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3076, %mul.5430)
  %add_any.498 = f32[2,8192,4096]{2,1,0} add(%mul.5424, %mul.5431)
  %convert_element_type.3077 = bf16[2,8192,4096]{2,1,0} convert(%add_any.498)
  %add_any.499 = bf16[2,8192,4096]{2,1,0} add(%add_any.487, %convert_element_type.3077)
  %sharding_constraint.1007 = bf16[2,8192,4096]{2,1,0} copy(%add_any.499)
  %tuple.147 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.42, %reduce_precision.43, %reduce_precision.44, %get-tuple-element.42, %sharding_constraint.487, /*index=5*/%reduce_precision.45, %reduce_precision.46, %reduce_precision.47, %reduce_precision.48, %constant.2935, /*index=10*/%constant.2935, %param.58, %param.59, %param.60, %param.57, /*index=15*/%param.52, %param.54, %param.56, %param.53, %param.55, /*index=20*/%sharding_constraint.127, %param.10, %param.7, %sharding_constraint.1007)
  %remat2.78 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.147)
  %get-tuple-element.798 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.78), index=23
  %sharding_constraint.1008 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.798)
  %get-tuple-element.799 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.78), index=7
  %neg.184 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.799)
  %exp.185 = bf16[2,8192,14336]{2,1,0} exponential(%neg.184)
  %add.2868 = bf16[2,8192,14336]{2,1,0} add(%exp.185, %jit_silu_.0)
  %div.1849 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2868)
  %mul.5432 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.799, %div.1849)
  %sharding_constraint.1009 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1008)
  %get-tuple-element.800 = f32[14336,512]{1,0} get-tuple-element(%remat2.78), index=13
  %convert_element_type.3079 = bf16[14336,512]{1,0} convert(%get-tuple-element.800)
  %all-gather.408 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.3079), channel_id=411, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.507 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.1009, %all-gather.408), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.1010 = bf16[2,8192,14336]{2,1,0} copy(%dot.507)
  %mul.5433 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5432, %sharding_constraint.1010)
  %get-tuple-element.801 = f32[512,14336]{1,0} get-tuple-element(%remat2.78), index=12
  %convert_element_type.3080 = bf16[512,14336]{1,0} convert(%get-tuple-element.801)
  %all-gather.409 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3080), channel_id=412, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.508 = bf16[2,8192,4096]{2,1,0} dot(%mul.5433, %all-gather.409), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.802 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.78), index=8
  %mul.5435 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.1010, %get-tuple-element.802)
  %mul.5436 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5435, %div.1849)
  %mul.5437 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.799, %mul.5435)
  %sub.327 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1849)
  %mul.5438 = bf16[2,8192,14336]{2,1,0} multiply(%div.1849, %sub.327)
  %mul.5439 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5437, %mul.5438)
  %add_any.500 = bf16[2,8192,14336]{2,1,0} add(%mul.5436, %mul.5439)
  %get-tuple-element.803 = f32[512,14336]{1,0} get-tuple-element(%remat2.78), index=11
  %convert_element_type.3082 = bf16[512,14336]{1,0} convert(%get-tuple-element.803)
  %all-gather.410 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3082), channel_id=413, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.509 = bf16[2,8192,4096]{2,1,0} dot(%add_any.500, %all-gather.410), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.501 = bf16[2,8192,4096]{2,1,0} add(%dot.508, %dot.509)
  %sharding_constraint.1011 = bf16[2,8192,4096]{2,1,0} copy(%add_any.501)
  %get-tuple-element.804 = f32[4096]{0} get-tuple-element(%remat2.78), index=14
  %convert_element_type.3083 = bf16[4096]{0} convert(%get-tuple-element.804)
  %mul.5440 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3083), dimensions={2}
  %mul.5441 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1011, %mul.5440)
  %convert_element_type.3085 = f32[2,8192,4096]{2,1,0} convert(%mul.5441)
  %get-tuple-element.805 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.78), index=20
  %sharding_constraint.1012 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.805)
  %get-tuple-element.806 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.78), index=6
  %sharding_constraint.1013 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.806)
  %add.2869 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1012, %sharding_constraint.1013)
  %convert_element_type.3086 = f32[2,8192,4096]{2,1,0} convert(%add.2869)
  %square.119 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3086, %convert_element_type.3086)
  %reduce.477 = f32[2,8192]{1,0} reduce(%square.119, %constant.2882), dimensions={2}, to_apply=%region_349.19592
  %div.1850 = f32[2,8192]{1,0} multiply(%reduce.477, %broadcast.5097)
  %add.2870 = f32[2,8192]{1,0} add(%div.1850, %broadcast.5098)
  %add.2871 = f32[2,8192,1]{2,1,0} reshape(%add.2870)
  %rsqrt.181 = f32[2,8192,1]{2,1,0} rsqrt(%add.2871)
  %mul.5442 = f32[2,8192]{1,0} reshape(%rsqrt.181)
  %mul.5443 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5442), dimensions={0,1}
  %mul.5444 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3085, %mul.5443)
  %mul.5445 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3086, %convert_element_type.3085)
  %reduce.478 = f32[2,8192]{1,0} reduce(%mul.5445, %constant.2882), dimensions={2}, to_apply=%region_350.19605
  %reshape.9279 = f32[2,8192,1]{2,1,0} reshape(%reduce.478)
  %div.1851 = f32[2,8192,1]{2,1,0} divide(%rsqrt.181, %add.2871)
  %mul.5446 = f32[2,8192,1]{2,1,0} multiply(%div.1851, %broadcast.5145)
  %mul.5447 = f32[2,8192,1]{2,1,0} multiply(%reshape.9279, %mul.5446)
  %mul.5448 = f32[2,8192,1]{2,1,0} multiply(%mul.5447, %mul.2917)
  %mul.5449 = f32[2,8192]{1,0} reshape(%mul.5448)
  %mul.5451 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5449), dimensions={0,1}
  %mul.5453 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3086, %mul.5451)
  %add_any.502 = f32[2,8192,4096]{2,1,0} add(%mul.5444, %mul.5453)
  %convert_element_type.3088 = bf16[2,8192,4096]{2,1,0} convert(%add_any.502)
  %add_any.503 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1008, %convert_element_type.3088)
  %get-tuple-element.807 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.78), index=0
  %convert_element_type.3089 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.807)
  %get-tuple-element.808 = s32[2,8192]{1,0} get-tuple-element(%remat2.78), index=22
  %convert_element_type.3091 = f32[2,8192]{1,0} convert(%get-tuple-element.808)
  %div.1852 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.3091), dimensions={0,1}
  %div.1861 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1852, %div.371)
  %cos.120 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1861)
  %mul.5457 = f32[2,8192,128]{2,1,0} reshape(%cos.120)
  %mul.5458 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5457), dimensions={0,1,3}
  %mul.5459 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3089, %mul.5458)
  %slice.741 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.807), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.742 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.807), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.349 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.741, %slice.742), dimensions={3}
  %slice.743 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.807), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.744 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.807), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.350 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.743, %slice.744), dimensions={3}
  %select_n.2521 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.349, %concatenate.350)
  %convert_element_type.3095 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2521)
  %sin.116 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1861)
  %mul.5460 = f32[2,8192,128]{2,1,0} reshape(%sin.116)
  %mul.5461 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5460), dimensions={0,1,3}
  %mul.5462 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3095, %mul.5461)
  %get-tuple-element.809 = s32[2]{0} get-tuple-element(%remat2.78), index=9
  %broadcast_in_dim.625 = s32[64,2]{1,0} broadcast(%get-tuple-element.809), dimensions={1}
  %reshape.9288 = s32[128]{0} reshape(%broadcast_in_dim.625)
  %convert_element_type.3096 = f32[128]{0} convert(%reshape.9288)
  %mul.5465 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.3096), dimensions={3}
  %mul.5466 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5462, %mul.5465)
  %add.2874 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5459, %mul.5466)
  %convert_element_type.3097 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2874)
  %sharding_constraint.1014 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.3097)
  %get-tuple-element.810 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.78), index=1
  %convert_element_type.3098 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.810)
  %mul.5473 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5457), dimensions={0,1,3}
  %mul.5474 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3098, %mul.5473)
  %slice.745 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.810), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.746 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.810), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.351 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.745, %slice.746), dimensions={3}
  %slice.747 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.810), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.748 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.810), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.352 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.747, %slice.748), dimensions={3}
  %select_n.2528 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.351, %concatenate.352)
  %convert_element_type.3103 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2528)
  %mul.5480 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5460), dimensions={0,1,3}
  %mul.5485 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3103, %mul.5480)
  %get-tuple-element.811 = s32[2]{0} get-tuple-element(%remat2.78), index=10
  %broadcast_in_dim.627 = s32[64,2]{1,0} broadcast(%get-tuple-element.811), dimensions={1}
  %reshape.9295 = s32[128]{0} reshape(%broadcast_in_dim.627)
  %convert_element_type.3104 = f32[128]{0} convert(%reshape.9295)
  %mul.5486 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.3104), dimensions={3}
  %mul.5491 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5485, %mul.5486)
  %add.2877 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5474, %mul.5491)
  %convert_element_type.3105 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2877)
  %sharding_constraint.1015 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3105)
  %get-tuple-element.812 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.78), index=2
  %sharding_constraint.1016 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.812)
  %get-tuple-element.813 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.78), index=3
  %get-tuple-element.814 = u32[2,4]{1,0} get-tuple-element(%remat2.78), index=4
  %get-tuple-element.815 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.78), index=5
  %sharding_constraint.1017 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.815)
  %sharding_constraint.1018 = bf16[2,8192,4096]{2,1,0} copy(%add_any.503)
  %get-tuple-element.816 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.78), index=17
  %convert_element_type.3106 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.816)
  %all-gather.411 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3106), channel_id=414, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.510 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.1018, %all-gather.411), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.1019 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.510)
  %get-tuple-element.817 = s32[2,8192]{1,0} get-tuple-element(%remat2.78), index=21
  %eq.677 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.817), dimensions={0,1}
  %eq.678 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.817), dimensions={0,2}
  %eq.679 = pred[2,8192,8192]{2,1,0} compare(%eq.677, %eq.678), direction=EQ
  %and.792 = pred[2,8192,8192]{2,1,0} and(%eq.679, %and.455)
  %select_n.2529 = f32[2,8192,8192]{2,1,0} select(%and.792, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1151 = pred[2,8192,8192]{2,1,0} compare(%select_n.2529, %broadcast_in_dim.277), direction=NE
  %not.123 = pred[2,8192,8192]{2,1,0} not(%ne.1151)
  %convert_element_type.3107 = s32[2,8192,8192]{2,1,0} convert(%not.123)
  %reduce.479 = s32[2,8192]{1,0} reduce(%convert_element_type.3107, %constant.2873), dimensions={1}, to_apply=%region_351.19757
  %reduce_sum.4128 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.479)
  %slice.749 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4128), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.58 = s32[2,1]{1,0} reshape(%slice.749)
  %reshape.9298 = s32[2]{0} reshape(%squeeze.58)
  %lt.983 = pred[2]{0} compare(%reshape.9298, %broadcast.5111), direction=LT
  %select_n.2533 = s32[2]{0} select(%lt.983, %broadcast.5111, %reshape.9298)
  %reduce_window_sum.308 = s32[2]{0} reduce-window(%select_n.2533, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.26
  %concatenate.353 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.308), dimensions={0}
  %reduce.480 = s32[2,8192]{1,0} reduce(%convert_element_type.3107, %constant.2873), dimensions={2}, to_apply=%region_352.19766
  %reduce_sum.4129 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.480)
  %reduce.481 = s32[2,1]{1,0} reduce(%reduce_sum.4129, %constant.2985), dimensions={3,2}, to_apply=%region_353.19772
  %reshape.9299 = s32[2]{0} reshape(%reduce.481)
  %lt.984 = pred[2]{0} compare(%reshape.9299, %broadcast.5111), direction=LT
  %select_n.2534 = s32[2]{0} select(%lt.984, %broadcast.5111, %reshape.9299)
  %reduce_window_sum.309 = s32[2]{0} reduce-window(%select_n.2534, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.26.clone
  %concatenate.354 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.309), dimensions={0}
  %te_fused_attn_backward_ffi.130 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.1014, %sharding_constraint.1015, %sharding_constraint.1016, %constant.2973, %get-tuple-element.813, /*index=5*/%get-tuple-element.814, %sharding_constraint.1017, %sharding_constraint.1019, %concatenate.353, %concatenate.354, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.818 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.130), index=2
  %sharding_constraint.1020 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.818)
  %get-tuple-element.819 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.78), index=19
  %convert_element_type.3109 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.819)
  %all-gather.412 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3109), channel_id=415, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.511 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.1020, %all-gather.412), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.820 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.130), index=1
  %sharding_constraint.1021 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.820)
  %convert_element_type.3110 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.1021)
  %mul.5494 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3110, %mul.5473)
  %convert_element_type.3112 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5494)
  %mul.5496 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3110, %mul.5486)
  %mul.5501 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5496, %mul.5480)
  %convert_element_type.3114 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5501)
  %select_n.2536 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3114, %broadcast.5147)
  %slice.750 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2536), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.210 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.750, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.504 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3112, %pad.210)
  %slice.751 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2536), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.211 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.751, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.505 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.504, %pad.211)
  %select_n.2538 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3114, %broadcast.5147)
  %slice.752 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2538), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.212 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.752, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.506 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.505, %pad.212)
  %slice.753 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2538), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.213 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.753, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.507 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.506, %pad.213)
  %get-tuple-element.821 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.78), index=16
  %convert_element_type.3115 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.821)
  %all-gather.413 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3115), channel_id=416, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.512 = bf16[2,8192,4096]{2,1,0} dot(%add_any.507, %all-gather.413), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.508 = bf16[2,8192,4096]{2,1,0} add(%dot.511, %dot.512)
  %sharding_constraint.1022 = bf16[2,8192,4096]{2,1,0} copy(%add_any.508)
  %get-tuple-element.822 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.130), index=0
  %sharding_constraint.1023 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.822)
  %convert_element_type.3116 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.1023)
  %mul.5506 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3116, %mul.5458)
  %convert_element_type.3117 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5506)
  %mul.5508 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3116, %mul.5465)
  %mul.5511 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5508, %mul.5461)
  %convert_element_type.3118 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5511)
  %select_n.2540 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3118, %broadcast.5148)
  %slice.754 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2540), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.214 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.754, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.509 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3117, %pad.214)
  %slice.755 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2540), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.215 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.755, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.510 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.509, %pad.215)
  %select_n.2542 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3118, %broadcast.5148)
  %slice.756 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2542), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.216 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.756, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.511 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.510, %pad.216)
  %slice.757 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2542), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.217 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.757, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.512 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.511, %pad.217)
  %get-tuple-element.823 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.78), index=18
  %convert_element_type.3122 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.823)
  %all-gather.414 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3122), channel_id=417, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.513 = bf16[2,8192,4096]{2,1,0} dot(%add_any.512, %all-gather.414), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.1024 = bf16[2,8192,4096]{2,1,0} copy(%dot.513)
  %add_any.513 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1022, %sharding_constraint.1024)
  %sharding_constraint.1025 = bf16[2,8192,4096]{2,1,0} copy(%add_any.513)
  %get-tuple-element.824 = f32[4096]{0} get-tuple-element(%remat2.78), index=15
  %convert_element_type.3123 = bf16[4096]{0} convert(%get-tuple-element.824)
  %mul.5512 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3123), dimensions={2}
  %mul.5513 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1025, %mul.5512)
  %convert_element_type.3125 = f32[2,8192,4096]{2,1,0} convert(%mul.5513)
  %convert_element_type.3127 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.1012)
  %square.120 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3127, %convert_element_type.3127)
  %reduce.482 = f32[2,8192]{1,0} reduce(%square.120, %constant.2882), dimensions={2}, to_apply=%region_354.19860
  %div.1872 = f32[2,8192]{1,0} multiply(%reduce.482, %broadcast.5097)
  %add.2882 = f32[2,8192]{1,0} add(%div.1872, %broadcast.5098)
  %add.2883 = f32[2,8192,1]{2,1,0} reshape(%add.2882)
  %rsqrt.182 = f32[2,8192,1]{2,1,0} rsqrt(%add.2883)
  %mul.5515 = f32[2,8192]{1,0} reshape(%rsqrt.182)
  %mul.5516 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5515), dimensions={0,1}
  %mul.5517 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3125, %mul.5516)
  %mul.5518 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3127, %convert_element_type.3125)
  %reduce.483 = f32[2,8192]{1,0} reduce(%mul.5518, %constant.2882), dimensions={2}, to_apply=%region_355.19873
  %reshape.9320 = f32[2,8192,1]{2,1,0} reshape(%reduce.483)
  %div.1873 = f32[2,8192,1]{2,1,0} divide(%rsqrt.182, %add.2883)
  %mul.5519 = f32[2,8192,1]{2,1,0} multiply(%div.1873, %broadcast.5145)
  %mul.5520 = f32[2,8192,1]{2,1,0} multiply(%reshape.9320, %mul.5519)
  %mul.5521 = f32[2,8192,1]{2,1,0} multiply(%mul.5520, %mul.2917)
  %mul.5522 = f32[2,8192]{1,0} reshape(%mul.5521)
  %mul.5523 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5522), dimensions={0,1}
  %mul.5524 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3127, %mul.5523)
  %add_any.514 = f32[2,8192,4096]{2,1,0} add(%mul.5517, %mul.5524)
  %convert_element_type.3128 = bf16[2,8192,4096]{2,1,0} convert(%add_any.514)
  %add_any.515 = bf16[2,8192,4096]{2,1,0} add(%add_any.503, %convert_element_type.3128)
  %sharding_constraint.1026 = bf16[2,8192,4096]{2,1,0} copy(%add_any.515)
  %tuple.149 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.35, %reduce_precision.36, %reduce_precision.37, %get-tuple-element.40, %sharding_constraint.486, /*index=5*/%reduce_precision.38, %reduce_precision.39, %reduce_precision.40, %reduce_precision.41, %constant.2935, /*index=10*/%constant.2935, %param.49, %param.50, %param.51, %param.48, /*index=15*/%param.43, %param.45, %param.47, %param.44, %param.46, /*index=20*/%sharding_constraint.114, %param.10, %param.7, %sharding_constraint.1026)
  %remat2.79 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.149)
  %get-tuple-element.825 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.79), index=23
  %sharding_constraint.1027 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.825)
  %get-tuple-element.826 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.79), index=7
  %neg.185 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.826)
  %exp.186 = bf16[2,8192,14336]{2,1,0} exponential(%neg.185)
  %add.2884 = bf16[2,8192,14336]{2,1,0} add(%exp.186, %jit_silu_.0)
  %div.1874 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2884)
  %mul.5525 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.826, %div.1874)
  %sharding_constraint.1028 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1027)
  %get-tuple-element.827 = f32[14336,512]{1,0} get-tuple-element(%remat2.79), index=13
  %convert_element_type.3129 = bf16[14336,512]{1,0} convert(%get-tuple-element.827)
  %all-gather.415 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.3129), channel_id=418, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.514 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.1028, %all-gather.415), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.1029 = bf16[2,8192,14336]{2,1,0} copy(%dot.514)
  %mul.5526 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5525, %sharding_constraint.1029)
  %get-tuple-element.828 = f32[512,14336]{1,0} get-tuple-element(%remat2.79), index=12
  %convert_element_type.3130 = bf16[512,14336]{1,0} convert(%get-tuple-element.828)
  %all-gather.416 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3130), channel_id=419, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.515 = bf16[2,8192,4096]{2,1,0} dot(%mul.5526, %all-gather.416), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.829 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.79), index=8
  %mul.5527 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.1029, %get-tuple-element.829)
  %mul.5528 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5527, %div.1874)
  %mul.5529 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.826, %mul.5527)
  %sub.332 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1874)
  %mul.5530 = bf16[2,8192,14336]{2,1,0} multiply(%div.1874, %sub.332)
  %mul.5531 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5529, %mul.5530)
  %add_any.516 = bf16[2,8192,14336]{2,1,0} add(%mul.5528, %mul.5531)
  %get-tuple-element.830 = f32[512,14336]{1,0} get-tuple-element(%remat2.79), index=11
  %convert_element_type.3131 = bf16[512,14336]{1,0} convert(%get-tuple-element.830)
  %all-gather.417 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3131), channel_id=420, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.516 = bf16[2,8192,4096]{2,1,0} dot(%add_any.516, %all-gather.417), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.517 = bf16[2,8192,4096]{2,1,0} add(%dot.515, %dot.516)
  %sharding_constraint.1030 = bf16[2,8192,4096]{2,1,0} copy(%add_any.517)
  %get-tuple-element.831 = f32[4096]{0} get-tuple-element(%remat2.79), index=14
  %convert_element_type.3132 = bf16[4096]{0} convert(%get-tuple-element.831)
  %mul.5532 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3132), dimensions={2}
  %mul.5533 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1030, %mul.5532)
  %convert_element_type.3133 = f32[2,8192,4096]{2,1,0} convert(%mul.5533)
  %get-tuple-element.832 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.79), index=20
  %sharding_constraint.1031 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.832)
  %get-tuple-element.833 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.79), index=6
  %sharding_constraint.1032 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.833)
  %add.2887 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1031, %sharding_constraint.1032)
  %convert_element_type.3134 = f32[2,8192,4096]{2,1,0} convert(%add.2887)
  %square.121 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3134, %convert_element_type.3134)
  %reduce.484 = f32[2,8192]{1,0} reduce(%square.121, %constant.2882), dimensions={2}, to_apply=%region_356.19951
  %div.1875 = f32[2,8192]{1,0} multiply(%reduce.484, %broadcast.5097)
  %add.2888 = f32[2,8192]{1,0} add(%div.1875, %broadcast.5098)
  %add.2889 = f32[2,8192,1]{2,1,0} reshape(%add.2888)
  %rsqrt.183 = f32[2,8192,1]{2,1,0} rsqrt(%add.2889)
  %mul.5535 = f32[2,8192]{1,0} reshape(%rsqrt.183)
  %mul.5537 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5535), dimensions={0,1}
  %mul.5538 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3133, %mul.5537)
  %mul.5539 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3134, %convert_element_type.3133)
  %reduce.485 = f32[2,8192]{1,0} reduce(%mul.5539, %constant.2882), dimensions={2}, to_apply=%region_357.19964
  %reshape.9321 = f32[2,8192,1]{2,1,0} reshape(%reduce.485)
  %div.1876 = f32[2,8192,1]{2,1,0} divide(%rsqrt.183, %add.2889)
  %mul.5540 = f32[2,8192,1]{2,1,0} multiply(%div.1876, %broadcast.5145)
  %mul.5541 = f32[2,8192,1]{2,1,0} multiply(%reshape.9321, %mul.5540)
  %mul.5542 = f32[2,8192,1]{2,1,0} multiply(%mul.5541, %mul.2917)
  %mul.5543 = f32[2,8192]{1,0} reshape(%mul.5542)
  %mul.5544 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5543), dimensions={0,1}
  %mul.5548 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3134, %mul.5544)
  %add_any.518 = f32[2,8192,4096]{2,1,0} add(%mul.5538, %mul.5548)
  %convert_element_type.3135 = bf16[2,8192,4096]{2,1,0} convert(%add_any.518)
  %add_any.519 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1027, %convert_element_type.3135)
  %get-tuple-element.834 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.79), index=0
  %convert_element_type.3136 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.834)
  %get-tuple-element.835 = s32[2,8192]{1,0} get-tuple-element(%remat2.79), index=22
  %convert_element_type.3138 = f32[2,8192]{1,0} convert(%get-tuple-element.835)
  %div.1877 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.3138), dimensions={0,1}
  %div.1886 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1877, %div.371)
  %cos.122 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1886)
  %mul.5552 = f32[2,8192,128]{2,1,0} reshape(%cos.122)
  %mul.5553 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5552), dimensions={0,1,3}
  %mul.5554 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3136, %mul.5553)
  %slice.758 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.834), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.759 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.834), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.355 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.758, %slice.759), dimensions={3}
  %slice.760 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.834), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.761 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.834), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.356 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.760, %slice.761), dimensions={3}
  %select_n.2554 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.355, %concatenate.356)
  %convert_element_type.3143 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2554)
  %sin.118 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1886)
  %mul.5555 = f32[2,8192,128]{2,1,0} reshape(%sin.118)
  %mul.5556 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5555), dimensions={0,1,3}
  %mul.5557 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3143, %mul.5556)
  %get-tuple-element.836 = s32[2]{0} get-tuple-element(%remat2.79), index=9
  %broadcast_in_dim.631 = s32[64,2]{1,0} broadcast(%get-tuple-element.836), dimensions={1}
  %reshape.9328 = s32[128]{0} reshape(%broadcast_in_dim.631)
  %convert_element_type.3144 = f32[128]{0} convert(%reshape.9328)
  %mul.5558 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.3144), dimensions={3}
  %mul.5567 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5557, %mul.5558)
  %add.2892 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5554, %mul.5567)
  %convert_element_type.3145 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2892)
  %sharding_constraint.1033 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.3145)
  %get-tuple-element.837 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.79), index=1
  %convert_element_type.3146 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.837)
  %mul.5576 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5552), dimensions={0,1,3}
  %mul.5577 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3146, %mul.5576)
  %slice.762 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.837), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.763 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.837), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.357 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.762, %slice.763), dimensions={3}
  %slice.764 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.837), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.765 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.837), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.358 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.764, %slice.765), dimensions={3}
  %select_n.2561 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.357, %concatenate.358)
  %convert_element_type.3153 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2561)
  %mul.5581 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5555), dimensions={0,1,3}
  %mul.5582 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3153, %mul.5581)
  %get-tuple-element.838 = s32[2]{0} get-tuple-element(%remat2.79), index=10
  %broadcast_in_dim.633 = s32[64,2]{1,0} broadcast(%get-tuple-element.838), dimensions={1}
  %reshape.9336 = s32[128]{0} reshape(%broadcast_in_dim.633)
  %convert_element_type.3154 = f32[128]{0} convert(%reshape.9336)
  %mul.5583 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.3154), dimensions={3}
  %mul.5584 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5582, %mul.5583)
  %add.2895 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5577, %mul.5584)
  %convert_element_type.3155 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2895)
  %sharding_constraint.1034 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3155)
  %get-tuple-element.839 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.79), index=2
  %sharding_constraint.1035 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.839)
  %get-tuple-element.840 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.79), index=3
  %get-tuple-element.841 = u32[2,4]{1,0} get-tuple-element(%remat2.79), index=4
  %get-tuple-element.842 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.79), index=5
  %sharding_constraint.1036 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.842)
  %sharding_constraint.1037 = bf16[2,8192,4096]{2,1,0} copy(%add_any.519)
  %get-tuple-element.843 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.79), index=17
  %convert_element_type.3157 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.843)
  %all-gather.418 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3157), channel_id=421, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.517 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.1037, %all-gather.418), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.1038 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.517)
  %get-tuple-element.844 = s32[2,8192]{1,0} get-tuple-element(%remat2.79), index=21
  %eq.684 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.844), dimensions={0,1}
  %eq.685 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.844), dimensions={0,2}
  %eq.686 = pred[2,8192,8192]{2,1,0} compare(%eq.684, %eq.685), direction=EQ
  %and.800 = pred[2,8192,8192]{2,1,0} and(%eq.686, %and.455)
  %select_n.2562 = f32[2,8192,8192]{2,1,0} select(%and.800, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1159 = pred[2,8192,8192]{2,1,0} compare(%select_n.2562, %broadcast_in_dim.277), direction=NE
  %not.124 = pred[2,8192,8192]{2,1,0} not(%ne.1159)
  %convert_element_type.3158 = s32[2,8192,8192]{2,1,0} convert(%not.124)
  %reduce.486 = s32[2,8192]{1,0} reduce(%convert_element_type.3158, %constant.2873), dimensions={1}, to_apply=%region_358.20116
  %reduce_sum.4130 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.486)
  %slice.766 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4130), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.59 = s32[2,1]{1,0} reshape(%slice.766)
  %reshape.9338 = s32[2]{0} reshape(%squeeze.59)
  %lt.994 = pred[2]{0} compare(%reshape.9338, %broadcast.5111), direction=LT
  %select_n.2563 = s32[2]{0} select(%lt.994, %broadcast.5111, %reshape.9338)
  %reduce_window_sum.310 = s32[2]{0} reduce-window(%select_n.2563, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.27
  %concatenate.359 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.310), dimensions={0}
  %reduce.487 = s32[2,8192]{1,0} reduce(%convert_element_type.3158, %constant.2873), dimensions={2}, to_apply=%region_359.20125
  %reduce_sum.4131 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.487)
  %reduce.488 = s32[2,1]{1,0} reduce(%reduce_sum.4131, %constant.2985), dimensions={3,2}, to_apply=%region_360.20131
  %reshape.9339 = s32[2]{0} reshape(%reduce.488)
  %lt.996 = pred[2]{0} compare(%reshape.9339, %broadcast.5111), direction=LT
  %select_n.2564 = s32[2]{0} select(%lt.996, %broadcast.5111, %reshape.9339)
  %reduce_window_sum.311 = s32[2]{0} reduce-window(%select_n.2564, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.27.clone
  %concatenate.360 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.311), dimensions={0}
  %te_fused_attn_backward_ffi.135 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.1033, %sharding_constraint.1034, %sharding_constraint.1035, %constant.2973, %get-tuple-element.840, /*index=5*/%get-tuple-element.841, %sharding_constraint.1036, %sharding_constraint.1038, %concatenate.359, %concatenate.360, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.845 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.135), index=2
  %sharding_constraint.1039 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.845)
  %get-tuple-element.846 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.79), index=19
  %convert_element_type.3160 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.846)
  %all-gather.419 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3160), channel_id=422, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.518 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.1039, %all-gather.419), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.847 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.135), index=1
  %sharding_constraint.1040 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.847)
  %convert_element_type.3162 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.1040)
  %mul.5587 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3162, %mul.5576)
  %convert_element_type.3163 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5587)
  %mul.5589 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3162, %mul.5583)
  %mul.5592 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5589, %mul.5581)
  %convert_element_type.3164 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5592)
  %select_n.2566 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3164, %broadcast.5147)
  %slice.767 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2566), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.218 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.767, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.520 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3163, %pad.218)
  %slice.768 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2566), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.219 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.768, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.521 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.520, %pad.219)
  %select_n.2568 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3164, %broadcast.5147)
  %slice.769 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2568), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.220 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.769, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.522 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.521, %pad.220)
  %slice.770 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2568), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.221 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.770, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.523 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.522, %pad.221)
  %get-tuple-element.848 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.79), index=16
  %convert_element_type.3165 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.848)
  %all-gather.420 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3165), channel_id=423, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.519 = bf16[2,8192,4096]{2,1,0} dot(%add_any.523, %all-gather.420), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.524 = bf16[2,8192,4096]{2,1,0} add(%dot.518, %dot.519)
  %sharding_constraint.1041 = bf16[2,8192,4096]{2,1,0} copy(%add_any.524)
  %get-tuple-element.849 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.135), index=0
  %sharding_constraint.1042 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.849)
  %convert_element_type.3166 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.1042)
  %mul.5595 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3166, %mul.5553)
  %convert_element_type.3167 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5595)
  %mul.5597 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3166, %mul.5558)
  %mul.5605 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5597, %mul.5556)
  %convert_element_type.3169 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5605)
  %select_n.2576 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3169, %broadcast.5148)
  %slice.771 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2576), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.222 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.771, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.525 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3167, %pad.222)
  %slice.772 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2576), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.223 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.772, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.526 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.525, %pad.223)
  %select_n.2578 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3169, %broadcast.5148)
  %slice.773 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2578), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.224 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.773, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.527 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.526, %pad.224)
  %slice.774 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2578), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.225 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.774, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.528 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.527, %pad.225)
  %get-tuple-element.850 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.79), index=18
  %convert_element_type.3170 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.850)
  %all-gather.421 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3170), channel_id=424, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.520 = bf16[2,8192,4096]{2,1,0} dot(%add_any.528, %all-gather.421), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.1043 = bf16[2,8192,4096]{2,1,0} copy(%dot.520)
  %add_any.529 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1041, %sharding_constraint.1043)
  %sharding_constraint.1044 = bf16[2,8192,4096]{2,1,0} copy(%add_any.529)
  %get-tuple-element.851 = f32[4096]{0} get-tuple-element(%remat2.79), index=15
  %convert_element_type.3171 = bf16[4096]{0} convert(%get-tuple-element.851)
  %mul.5612 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3171), dimensions={2}
  %mul.5613 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1044, %mul.5612)
  %convert_element_type.3172 = f32[2,8192,4096]{2,1,0} convert(%mul.5613)
  %convert_element_type.3174 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.1031)
  %square.122 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3174, %convert_element_type.3174)
  %reduce.489 = f32[2,8192]{1,0} reduce(%square.122, %constant.2882), dimensions={2}, to_apply=%region_361.20219
  %div.1897 = f32[2,8192]{1,0} multiply(%reduce.489, %broadcast.5097)
  %add.2900 = f32[2,8192]{1,0} add(%div.1897, %broadcast.5098)
  %add.2901 = f32[2,8192,1]{2,1,0} reshape(%add.2900)
  %rsqrt.184 = f32[2,8192,1]{2,1,0} rsqrt(%add.2901)
  %mul.5614 = f32[2,8192]{1,0} reshape(%rsqrt.184)
  %mul.5615 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5614), dimensions={0,1}
  %mul.5616 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3172, %mul.5615)
  %mul.5617 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3174, %convert_element_type.3172)
  %reduce.490 = f32[2,8192]{1,0} reduce(%mul.5617, %constant.2882), dimensions={2}, to_apply=%region_362.20232
  %reshape.9361 = f32[2,8192,1]{2,1,0} reshape(%reduce.490)
  %div.1898 = f32[2,8192,1]{2,1,0} divide(%rsqrt.184, %add.2901)
  %mul.5618 = f32[2,8192,1]{2,1,0} multiply(%div.1898, %broadcast.5145)
  %mul.5619 = f32[2,8192,1]{2,1,0} multiply(%reshape.9361, %mul.5618)
  %mul.5620 = f32[2,8192,1]{2,1,0} multiply(%mul.5619, %mul.2917)
  %mul.5621 = f32[2,8192]{1,0} reshape(%mul.5620)
  %mul.5622 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5621), dimensions={0,1}
  %mul.5626 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3174, %mul.5622)
  %add_any.530 = f32[2,8192,4096]{2,1,0} add(%mul.5616, %mul.5626)
  %convert_element_type.3175 = bf16[2,8192,4096]{2,1,0} convert(%add_any.530)
  %add_any.531 = bf16[2,8192,4096]{2,1,0} add(%add_any.519, %convert_element_type.3175)
  %sharding_constraint.1045 = bf16[2,8192,4096]{2,1,0} copy(%add_any.531)
  %tuple.151 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.28, %reduce_precision.29, %reduce_precision.30, %get-tuple-element.38, %sharding_constraint.485, /*index=5*/%reduce_precision.31, %reduce_precision.32, %reduce_precision.33, %reduce_precision.34, %constant.2935, /*index=10*/%constant.2935, %param.40, %param.41, %param.42, %param.39, /*index=15*/%param.34, %param.36, %param.38, %param.35, %param.37, /*index=20*/%sharding_constraint.101, %param.10, %param.7, %sharding_constraint.1045)
  %remat2.80 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.151)
  %get-tuple-element.852 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.80), index=23
  %sharding_constraint.1046 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.852)
  %get-tuple-element.853 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.80), index=7
  %neg.186 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.853)
  %exp.187 = bf16[2,8192,14336]{2,1,0} exponential(%neg.186)
  %add.2902 = bf16[2,8192,14336]{2,1,0} add(%exp.187, %jit_silu_.0)
  %div.1899 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2902)
  %mul.5627 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.853, %div.1899)
  %sharding_constraint.1047 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1046)
  %get-tuple-element.854 = f32[14336,512]{1,0} get-tuple-element(%remat2.80), index=13
  %convert_element_type.3176 = bf16[14336,512]{1,0} convert(%get-tuple-element.854)
  %all-gather.422 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.3176), channel_id=425, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.521 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.1047, %all-gather.422), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.1048 = bf16[2,8192,14336]{2,1,0} copy(%dot.521)
  %mul.5628 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5627, %sharding_constraint.1048)
  %get-tuple-element.855 = f32[512,14336]{1,0} get-tuple-element(%remat2.80), index=12
  %convert_element_type.3177 = bf16[512,14336]{1,0} convert(%get-tuple-element.855)
  %all-gather.423 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3177), channel_id=426, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.522 = bf16[2,8192,4096]{2,1,0} dot(%mul.5628, %all-gather.423), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.856 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.80), index=8
  %mul.5631 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.1048, %get-tuple-element.856)
  %mul.5632 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5631, %div.1899)
  %mul.5633 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.853, %mul.5631)
  %sub.337 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1899)
  %mul.5634 = bf16[2,8192,14336]{2,1,0} multiply(%div.1899, %sub.337)
  %mul.5635 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5633, %mul.5634)
  %add_any.532 = bf16[2,8192,14336]{2,1,0} add(%mul.5632, %mul.5635)
  %get-tuple-element.857 = f32[512,14336]{1,0} get-tuple-element(%remat2.80), index=11
  %convert_element_type.3178 = bf16[512,14336]{1,0} convert(%get-tuple-element.857)
  %all-gather.424 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3178), channel_id=427, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.523 = bf16[2,8192,4096]{2,1,0} dot(%add_any.532, %all-gather.424), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.533 = bf16[2,8192,4096]{2,1,0} add(%dot.522, %dot.523)
  %sharding_constraint.1051 = bf16[2,8192,4096]{2,1,0} copy(%add_any.533)
  %get-tuple-element.858 = f32[4096]{0} get-tuple-element(%remat2.80), index=14
  %convert_element_type.3179 = bf16[4096]{0} convert(%get-tuple-element.858)
  %mul.5636 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3179), dimensions={2}
  %mul.5637 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1051, %mul.5636)
  %convert_element_type.3180 = f32[2,8192,4096]{2,1,0} convert(%mul.5637)
  %get-tuple-element.859 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.80), index=20
  %sharding_constraint.1052 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.859)
  %get-tuple-element.860 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.80), index=6
  %sharding_constraint.1053 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.860)
  %add.2903 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1052, %sharding_constraint.1053)
  %convert_element_type.3181 = f32[2,8192,4096]{2,1,0} convert(%add.2903)
  %square.123 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3181, %convert_element_type.3181)
  %reduce.491 = f32[2,8192]{1,0} reduce(%square.123, %constant.2882), dimensions={2}, to_apply=%region_363.20310
  %div.1900 = f32[2,8192]{1,0} multiply(%reduce.491, %broadcast.5097)
  %add.2904 = f32[2,8192]{1,0} add(%div.1900, %broadcast.5098)
  %add.2905 = f32[2,8192,1]{2,1,0} reshape(%add.2904)
  %rsqrt.185 = f32[2,8192,1]{2,1,0} rsqrt(%add.2905)
  %mul.5638 = f32[2,8192]{1,0} reshape(%rsqrt.185)
  %mul.5640 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5638), dimensions={0,1}
  %mul.5641 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3180, %mul.5640)
  %mul.5642 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3181, %convert_element_type.3180)
  %reduce.492 = f32[2,8192]{1,0} reduce(%mul.5642, %constant.2882), dimensions={2}, to_apply=%region_364.20323
  %reshape.9362 = f32[2,8192,1]{2,1,0} reshape(%reduce.492)
  %div.1901 = f32[2,8192,1]{2,1,0} divide(%rsqrt.185, %add.2905)
  %mul.5643 = f32[2,8192,1]{2,1,0} multiply(%div.1901, %broadcast.5145)
  %mul.5644 = f32[2,8192,1]{2,1,0} multiply(%reshape.9362, %mul.5643)
  %mul.5645 = f32[2,8192,1]{2,1,0} multiply(%mul.5644, %mul.2917)
  %mul.5646 = f32[2,8192]{1,0} reshape(%mul.5645)
  %mul.5647 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5646), dimensions={0,1}
  %mul.5648 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3181, %mul.5647)
  %add_any.534 = f32[2,8192,4096]{2,1,0} add(%mul.5641, %mul.5648)
  %convert_element_type.3182 = bf16[2,8192,4096]{2,1,0} convert(%add_any.534)
  %add_any.535 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1046, %convert_element_type.3182)
  %get-tuple-element.861 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.80), index=0
  %convert_element_type.3183 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.861)
  %get-tuple-element.862 = s32[2,8192]{1,0} get-tuple-element(%remat2.80), index=22
  %convert_element_type.3184 = f32[2,8192]{1,0} convert(%get-tuple-element.862)
  %div.1902 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.3184), dimensions={0,1}
  %div.1912 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1902, %div.371)
  %cos.124 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1912)
  %mul.5652 = f32[2,8192,128]{2,1,0} reshape(%cos.124)
  %mul.5653 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5652), dimensions={0,1,3}
  %mul.5654 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3183, %mul.5653)
  %slice.775 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.861), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.776 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.861), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.361 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.775, %slice.776), dimensions={3}
  %slice.777 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.861), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.778 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.861), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.362 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.777, %slice.778), dimensions={3}
  %select_n.2585 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.361, %concatenate.362)
  %convert_element_type.3192 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2585)
  %sin.120 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1912)
  %mul.5656 = f32[2,8192,128]{2,1,0} reshape(%sin.120)
  %mul.5658 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5656), dimensions={0,1,3}
  %mul.5659 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3192, %mul.5658)
  %get-tuple-element.863 = s32[2]{0} get-tuple-element(%remat2.80), index=9
  %broadcast_in_dim.637 = s32[64,2]{1,0} broadcast(%get-tuple-element.863), dimensions={1}
  %reshape.9370 = s32[128]{0} reshape(%broadcast_in_dim.637)
  %convert_element_type.3193 = f32[128]{0} convert(%reshape.9370)
  %mul.5660 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.3193), dimensions={3}
  %mul.5661 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5659, %mul.5660)
  %add.2908 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5654, %mul.5661)
  %convert_element_type.3194 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2908)
  %sharding_constraint.1054 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.3194)
  %get-tuple-element.864 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.80), index=1
  %convert_element_type.3196 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.864)
  %mul.5666 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5652), dimensions={0,1,3}
  %mul.5667 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3196, %mul.5666)
  %slice.779 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.864), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.780 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.864), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.363 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.779, %slice.780), dimensions={3}
  %slice.781 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.864), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.782 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.864), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.364 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.781, %slice.782), dimensions={3}
  %select_n.2592 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.363, %concatenate.364)
  %convert_element_type.3204 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2592)
  %mul.5669 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5656), dimensions={0,1,3}
  %mul.5670 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3204, %mul.5669)
  %get-tuple-element.865 = s32[2]{0} get-tuple-element(%remat2.80), index=10
  %broadcast_in_dim.639 = s32[64,2]{1,0} broadcast(%get-tuple-element.865), dimensions={1}
  %reshape.9378 = s32[128]{0} reshape(%broadcast_in_dim.639)
  %convert_element_type.3205 = f32[128]{0} convert(%reshape.9378)
  %mul.5671 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.3205), dimensions={3}
  %mul.5672 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5670, %mul.5671)
  %add.2911 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5667, %mul.5672)
  %convert_element_type.3206 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2911)
  %sharding_constraint.1055 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3206)
  %get-tuple-element.866 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.80), index=2
  %sharding_constraint.1056 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.866)
  %get-tuple-element.867 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.80), index=3
  %get-tuple-element.868 = u32[2,4]{1,0} get-tuple-element(%remat2.80), index=4
  %get-tuple-element.869 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.80), index=5
  %sharding_constraint.1057 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.869)
  %sharding_constraint.1058 = bf16[2,8192,4096]{2,1,0} copy(%add_any.535)
  %get-tuple-element.870 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.80), index=17
  %convert_element_type.3207 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.870)
  %all-gather.425 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3207), channel_id=428, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.524 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.1058, %all-gather.425), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.1059 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.524)
  %get-tuple-element.871 = s32[2,8192]{1,0} get-tuple-element(%remat2.80), index=21
  %eq.691 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.871), dimensions={0,1}
  %eq.692 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.871), dimensions={0,2}
  %eq.693 = pred[2,8192,8192]{2,1,0} compare(%eq.691, %eq.692), direction=EQ
  %and.808 = pred[2,8192,8192]{2,1,0} and(%eq.693, %and.455)
  %select_n.2596 = f32[2,8192,8192]{2,1,0} select(%and.808, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1167 = pred[2,8192,8192]{2,1,0} compare(%select_n.2596, %broadcast_in_dim.277), direction=NE
  %not.125 = pred[2,8192,8192]{2,1,0} not(%ne.1167)
  %convert_element_type.3208 = s32[2,8192,8192]{2,1,0} convert(%not.125)
  %reduce.493 = s32[2,8192]{1,0} reduce(%convert_element_type.3208, %constant.2873), dimensions={1}, to_apply=%region_365.20475
  %reduce_sum.4132 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.493)
  %slice.783 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4132), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.60 = s32[2,1]{1,0} reshape(%slice.783)
  %reshape.9380 = s32[2]{0} reshape(%squeeze.60)
  %lt.1006 = pred[2]{0} compare(%reshape.9380, %broadcast.5111), direction=LT
  %select_n.2597 = s32[2]{0} select(%lt.1006, %broadcast.5111, %reshape.9380)
  %reduce_window_sum.312 = s32[2]{0} reduce-window(%select_n.2597, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.28
  %concatenate.365 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.312), dimensions={0}
  %reduce.494 = s32[2,8192]{1,0} reduce(%convert_element_type.3208, %constant.2873), dimensions={2}, to_apply=%region_366.20484
  %reduce_sum.4133 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.494)
  %reduce.495 = s32[2,1]{1,0} reduce(%reduce_sum.4133, %constant.2985), dimensions={3,2}, to_apply=%region_367.20490
  %reshape.9381 = s32[2]{0} reshape(%reduce.495)
  %lt.1007 = pred[2]{0} compare(%reshape.9381, %broadcast.5111), direction=LT
  %select_n.2598 = s32[2]{0} select(%lt.1007, %broadcast.5111, %reshape.9381)
  %reduce_window_sum.313 = s32[2]{0} reduce-window(%select_n.2598, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.28.clone
  %concatenate.366 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.313), dimensions={0}
  %te_fused_attn_backward_ffi.140 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.1054, %sharding_constraint.1055, %sharding_constraint.1056, %constant.2973, %get-tuple-element.867, /*index=5*/%get-tuple-element.868, %sharding_constraint.1057, %sharding_constraint.1059, %concatenate.365, %concatenate.366, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.872 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.140), index=2
  %sharding_constraint.1060 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.872)
  %get-tuple-element.873 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.80), index=19
  %convert_element_type.3211 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.873)
  %all-gather.426 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3211), channel_id=429, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.525 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.1060, %all-gather.426), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.874 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.140), index=1
  %sharding_constraint.1061 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.874)
  %convert_element_type.3212 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.1061)
  %mul.5675 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3212, %mul.5666)
  %convert_element_type.3214 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5675)
  %mul.5677 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3212, %mul.5671)
  %mul.5680 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5677, %mul.5669)
  %convert_element_type.3215 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5680)
  %select_n.2600 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3215, %broadcast.5147)
  %slice.784 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2600), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.226 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.784, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.536 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3214, %pad.226)
  %slice.785 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2600), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.227 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.785, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.537 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.536, %pad.227)
  %select_n.2602 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3215, %broadcast.5147)
  %slice.786 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2602), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.228 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.786, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.538 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.537, %pad.228)
  %slice.787 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2602), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.229 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.787, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.539 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.538, %pad.229)
  %get-tuple-element.875 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.80), index=16
  %convert_element_type.3216 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.875)
  %all-gather.427 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3216), channel_id=430, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.526 = bf16[2,8192,4096]{2,1,0} dot(%add_any.539, %all-gather.427), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.540 = bf16[2,8192,4096]{2,1,0} add(%dot.525, %dot.526)
  %sharding_constraint.1062 = bf16[2,8192,4096]{2,1,0} copy(%add_any.540)
  %get-tuple-element.876 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.140), index=0
  %sharding_constraint.1063 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.876)
  %convert_element_type.3217 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.1063)
  %mul.5697 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3217, %mul.5653)
  %convert_element_type.3218 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5697)
  %mul.5699 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3217, %mul.5660)
  %mul.5702 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5699, %mul.5658)
  %convert_element_type.3219 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5702)
  %select_n.2604 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3219, %broadcast.5148)
  %slice.788 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2604), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.230 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.788, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.541 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3218, %pad.230)
  %slice.789 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2604), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.231 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.789, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.542 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.541, %pad.231)
  %select_n.2606 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3219, %broadcast.5148)
  %slice.790 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2606), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.232 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.790, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.543 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.542, %pad.232)
  %slice.791 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2606), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.233 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.791, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.544 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.543, %pad.233)
  %get-tuple-element.877 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.80), index=18
  %convert_element_type.3220 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.877)
  %all-gather.428 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3220), channel_id=431, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.527 = bf16[2,8192,4096]{2,1,0} dot(%add_any.544, %all-gather.428), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.1064 = bf16[2,8192,4096]{2,1,0} copy(%dot.527)
  %add_any.545 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1062, %sharding_constraint.1064)
  %sharding_constraint.1065 = bf16[2,8192,4096]{2,1,0} copy(%add_any.545)
  %get-tuple-element.878 = f32[4096]{0} get-tuple-element(%remat2.80), index=15
  %convert_element_type.3223 = bf16[4096]{0} convert(%get-tuple-element.878)
  %mul.5703 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3223), dimensions={2}
  %mul.5704 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1065, %mul.5703)
  %convert_element_type.3224 = f32[2,8192,4096]{2,1,0} convert(%mul.5704)
  %convert_element_type.3225 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.1052)
  %square.124 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3225, %convert_element_type.3225)
  %reduce.496 = f32[2,8192]{1,0} reduce(%square.124, %constant.2882), dimensions={2}, to_apply=%region_368.20578
  %div.1923 = f32[2,8192]{1,0} multiply(%reduce.496, %broadcast.5097)
  %add.2916 = f32[2,8192]{1,0} add(%div.1923, %broadcast.5098)
  %add.2917 = f32[2,8192,1]{2,1,0} reshape(%add.2916)
  %rsqrt.186 = f32[2,8192,1]{2,1,0} rsqrt(%add.2917)
  %mul.5706 = f32[2,8192]{1,0} reshape(%rsqrt.186)
  %mul.5707 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5706), dimensions={0,1}
  %mul.5708 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3224, %mul.5707)
  %mul.5710 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3225, %convert_element_type.3224)
  %reduce.497 = f32[2,8192]{1,0} reduce(%mul.5710, %constant.2882), dimensions={2}, to_apply=%region_369.20591
  %reshape.9403 = f32[2,8192,1]{2,1,0} reshape(%reduce.497)
  %div.1924 = f32[2,8192,1]{2,1,0} divide(%rsqrt.186, %add.2917)
  %mul.5711 = f32[2,8192,1]{2,1,0} multiply(%div.1924, %broadcast.5145)
  %mul.5712 = f32[2,8192,1]{2,1,0} multiply(%reshape.9403, %mul.5711)
  %mul.5713 = f32[2,8192,1]{2,1,0} multiply(%mul.5712, %mul.2917)
  %mul.5714 = f32[2,8192]{1,0} reshape(%mul.5713)
  %mul.5716 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5714), dimensions={0,1}
  %mul.5717 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3225, %mul.5716)
  %add_any.546 = f32[2,8192,4096]{2,1,0} add(%mul.5708, %mul.5717)
  %convert_element_type.3226 = bf16[2,8192,4096]{2,1,0} convert(%add_any.546)
  %add_any.547 = bf16[2,8192,4096]{2,1,0} add(%add_any.535, %convert_element_type.3226)
  %sharding_constraint.1066 = bf16[2,8192,4096]{2,1,0} copy(%add_any.547)
  %tuple.153 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.21, %reduce_precision.22, %reduce_precision.23, %get-tuple-element.36, %sharding_constraint.484, /*index=5*/%reduce_precision.24, %reduce_precision.25, %reduce_precision.26, %reduce_precision.27, %constant.2935, /*index=10*/%constant.2935, %param.31, %param.32, %param.33, %param.30, /*index=15*/%param.25, %param.27, %param.29, %param.26, %param.28, /*index=20*/%sharding_constraint.88, %param.10, %param.7, %sharding_constraint.1066)
  %remat2.81 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.153)
  %get-tuple-element.879 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.81), index=23
  %sharding_constraint.1067 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.879)
  %get-tuple-element.880 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.81), index=7
  %neg.187 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.880)
  %exp.188 = bf16[2,8192,14336]{2,1,0} exponential(%neg.187)
  %add.2918 = bf16[2,8192,14336]{2,1,0} add(%exp.188, %jit_silu_.0)
  %div.1925 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2918)
  %mul.5718 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.880, %div.1925)
  %sharding_constraint.1068 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1067)
  %get-tuple-element.881 = f32[14336,512]{1,0} get-tuple-element(%remat2.81), index=13
  %convert_element_type.3228 = bf16[14336,512]{1,0} convert(%get-tuple-element.881)
  %all-gather.429 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.3228), channel_id=432, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.528 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.1068, %all-gather.429), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.1069 = bf16[2,8192,14336]{2,1,0} copy(%dot.528)
  %mul.5719 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5718, %sharding_constraint.1069)
  %get-tuple-element.882 = f32[512,14336]{1,0} get-tuple-element(%remat2.81), index=12
  %convert_element_type.3229 = bf16[512,14336]{1,0} convert(%get-tuple-element.882)
  %all-gather.430 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3229), channel_id=433, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.529 = bf16[2,8192,4096]{2,1,0} dot(%mul.5719, %all-gather.430), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.883 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.81), index=8
  %mul.5720 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.1069, %get-tuple-element.883)
  %mul.5721 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5720, %div.1925)
  %mul.5722 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.880, %mul.5720)
  %sub.342 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1925)
  %mul.5723 = bf16[2,8192,14336]{2,1,0} multiply(%div.1925, %sub.342)
  %mul.5724 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5722, %mul.5723)
  %add_any.548 = bf16[2,8192,14336]{2,1,0} add(%mul.5721, %mul.5724)
  %get-tuple-element.884 = f32[512,14336]{1,0} get-tuple-element(%remat2.81), index=11
  %convert_element_type.3233 = bf16[512,14336]{1,0} convert(%get-tuple-element.884)
  %all-gather.431 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3233), channel_id=434, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.530 = bf16[2,8192,4096]{2,1,0} dot(%add_any.548, %all-gather.431), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.549 = bf16[2,8192,4096]{2,1,0} add(%dot.529, %dot.530)
  %sharding_constraint.1070 = bf16[2,8192,4096]{2,1,0} copy(%add_any.549)
  %get-tuple-element.885 = f32[4096]{0} get-tuple-element(%remat2.81), index=14
  %convert_element_type.3234 = bf16[4096]{0} convert(%get-tuple-element.885)
  %mul.5725 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3234), dimensions={2}
  %mul.5726 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1070, %mul.5725)
  %convert_element_type.3236 = f32[2,8192,4096]{2,1,0} convert(%mul.5726)
  %get-tuple-element.886 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.81), index=20
  %sharding_constraint.1071 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.886)
  %get-tuple-element.887 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.81), index=6
  %sharding_constraint.1072 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.887)
  %add.2919 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1071, %sharding_constraint.1072)
  %convert_element_type.3238 = f32[2,8192,4096]{2,1,0} convert(%add.2919)
  %square.125 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3238, %convert_element_type.3238)
  %reduce.498 = f32[2,8192]{1,0} reduce(%square.125, %constant.2882), dimensions={2}, to_apply=%region_370.20669
  %div.1926 = f32[2,8192]{1,0} multiply(%reduce.498, %broadcast.5097)
  %add.2920 = f32[2,8192]{1,0} add(%div.1926, %broadcast.5098)
  %add.2921 = f32[2,8192,1]{2,1,0} reshape(%add.2920)
  %rsqrt.187 = f32[2,8192,1]{2,1,0} rsqrt(%add.2921)
  %mul.5729 = f32[2,8192]{1,0} reshape(%rsqrt.187)
  %mul.5730 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5729), dimensions={0,1}
  %mul.5734 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3236, %mul.5730)
  %mul.5735 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3238, %convert_element_type.3236)
  %reduce.499 = f32[2,8192]{1,0} reduce(%mul.5735, %constant.2882), dimensions={2}, to_apply=%region_371.20682
  %reshape.9404 = f32[2,8192,1]{2,1,0} reshape(%reduce.499)
  %div.1927 = f32[2,8192,1]{2,1,0} divide(%rsqrt.187, %add.2921)
  %mul.5736 = f32[2,8192,1]{2,1,0} multiply(%div.1927, %broadcast.5145)
  %mul.5737 = f32[2,8192,1]{2,1,0} multiply(%reshape.9404, %mul.5736)
  %mul.5738 = f32[2,8192,1]{2,1,0} multiply(%mul.5737, %mul.2917)
  %mul.5739 = f32[2,8192]{1,0} reshape(%mul.5738)
  %mul.5740 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5739), dimensions={0,1}
  %mul.5741 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3238, %mul.5740)
  %add_any.550 = f32[2,8192,4096]{2,1,0} add(%mul.5734, %mul.5741)
  %convert_element_type.3239 = bf16[2,8192,4096]{2,1,0} convert(%add_any.550)
  %add_any.551 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1067, %convert_element_type.3239)
  %get-tuple-element.888 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.81), index=0
  %convert_element_type.3240 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.888)
  %get-tuple-element.889 = s32[2,8192]{1,0} get-tuple-element(%remat2.81), index=22
  %convert_element_type.3241 = f32[2,8192]{1,0} convert(%get-tuple-element.889)
  %div.1928 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.3241), dimensions={0,1}
  %div.1937 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1928, %div.371)
  %cos.126 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1937)
  %mul.5746 = f32[2,8192,128]{2,1,0} reshape(%cos.126)
  %mul.5747 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5746), dimensions={0,1,3}
  %mul.5748 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3240, %mul.5747)
  %slice.792 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.888), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.793 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.888), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.367 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.792, %slice.793), dimensions={3}
  %slice.794 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.888), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.795 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.888), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.368 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.794, %slice.795), dimensions={3}
  %select_n.2613 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.367, %concatenate.368)
  %convert_element_type.3248 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2613)
  %sin.122 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1937)
  %mul.5749 = f32[2,8192,128]{2,1,0} reshape(%sin.122)
  %mul.5750 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5749), dimensions={0,1,3}
  %mul.5751 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3248, %mul.5750)
  %get-tuple-element.890 = s32[2]{0} get-tuple-element(%remat2.81), index=9
  %broadcast_in_dim.643 = s32[64,2]{1,0} broadcast(%get-tuple-element.890), dimensions={1}
  %reshape.9412 = s32[128]{0} reshape(%broadcast_in_dim.643)
  %convert_element_type.3249 = f32[128]{0} convert(%reshape.9412)
  %mul.5752 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.3249), dimensions={3}
  %mul.5753 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5751, %mul.5752)
  %add.2925 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5748, %mul.5753)
  %convert_element_type.3250 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2925)
  %sharding_constraint.1076 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.3250)
  %get-tuple-element.891 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.81), index=1
  %convert_element_type.3251 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.891)
  %mul.5766 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5746), dimensions={0,1,3}
  %mul.5767 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3251, %mul.5766)
  %slice.796 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.891), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.797 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.891), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.369 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.796, %slice.797), dimensions={3}
  %slice.798 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.891), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.799 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.891), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.370 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.798, %slice.799), dimensions={3}
  %select_n.2625 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.369, %concatenate.370)
  %convert_element_type.3256 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2625)
  %mul.5776 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5749), dimensions={0,1,3}
  %mul.5777 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3256, %mul.5776)
  %get-tuple-element.892 = s32[2]{0} get-tuple-element(%remat2.81), index=10
  %broadcast_in_dim.645 = s32[64,2]{1,0} broadcast(%get-tuple-element.892), dimensions={1}
  %reshape.9419 = s32[128]{0} reshape(%broadcast_in_dim.645)
  %convert_element_type.3257 = f32[128]{0} convert(%reshape.9419)
  %mul.5778 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.3257), dimensions={3}
  %mul.5779 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5777, %mul.5778)
  %add.2928 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5767, %mul.5779)
  %convert_element_type.3258 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2928)
  %sharding_constraint.1077 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3258)
  %get-tuple-element.893 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.81), index=2
  %sharding_constraint.1078 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.893)
  %get-tuple-element.894 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.81), index=3
  %get-tuple-element.895 = u32[2,4]{1,0} get-tuple-element(%remat2.81), index=4
  %get-tuple-element.896 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.81), index=5
  %sharding_constraint.1079 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.896)
  %sharding_constraint.1080 = bf16[2,8192,4096]{2,1,0} copy(%add_any.551)
  %get-tuple-element.897 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.81), index=17
  %convert_element_type.3259 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.897)
  %all-gather.432 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3259), channel_id=435, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.531 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.1080, %all-gather.432), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.1081 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.531)
  %get-tuple-element.898 = s32[2,8192]{1,0} get-tuple-element(%remat2.81), index=21
  %eq.698 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.898), dimensions={0,1}
  %eq.699 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.898), dimensions={0,2}
  %eq.700 = pred[2,8192,8192]{2,1,0} compare(%eq.698, %eq.699), direction=EQ
  %and.816 = pred[2,8192,8192]{2,1,0} and(%eq.700, %and.455)
  %select_n.2626 = f32[2,8192,8192]{2,1,0} select(%and.816, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1175 = pred[2,8192,8192]{2,1,0} compare(%select_n.2626, %broadcast_in_dim.277), direction=NE
  %not.126 = pred[2,8192,8192]{2,1,0} not(%ne.1175)
  %convert_element_type.3260 = s32[2,8192,8192]{2,1,0} convert(%not.126)
  %reduce.500 = s32[2,8192]{1,0} reduce(%convert_element_type.3260, %constant.2873), dimensions={1}, to_apply=%region_372.20834
  %reduce_sum.4134 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.500)
  %slice.800 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4134), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.61 = s32[2,1]{1,0} reshape(%slice.800)
  %reshape.9421 = s32[2]{0} reshape(%squeeze.61)
  %lt.1018 = pred[2]{0} compare(%reshape.9421, %broadcast.5111), direction=LT
  %select_n.2627 = s32[2]{0} select(%lt.1018, %broadcast.5111, %reshape.9421)
  %reduce_window_sum.314 = s32[2]{0} reduce-window(%select_n.2627, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.29
  %concatenate.371 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.314), dimensions={0}
  %reduce.501 = s32[2,8192]{1,0} reduce(%convert_element_type.3260, %constant.2873), dimensions={2}, to_apply=%region_373.20843
  %reduce_sum.4135 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.501)
  %reduce.502 = s32[2,1]{1,0} reduce(%reduce_sum.4135, %constant.2985), dimensions={3,2}, to_apply=%region_374.20849
  %reshape.9422 = s32[2]{0} reshape(%reduce.502)
  %lt.1019 = pred[2]{0} compare(%reshape.9422, %broadcast.5111), direction=LT
  %select_n.2628 = s32[2]{0} select(%lt.1019, %broadcast.5111, %reshape.9422)
  %reduce_window_sum.315 = s32[2]{0} reduce-window(%select_n.2628, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.29.clone
  %concatenate.372 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.315), dimensions={0}
  %te_fused_attn_backward_ffi.145 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.1076, %sharding_constraint.1077, %sharding_constraint.1078, %constant.2973, %get-tuple-element.894, /*index=5*/%get-tuple-element.895, %sharding_constraint.1079, %sharding_constraint.1081, %concatenate.371, %concatenate.372, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.899 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.145), index=2
  %sharding_constraint.1082 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.899)
  %get-tuple-element.900 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.81), index=19
  %convert_element_type.3262 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.900)
  %all-gather.433 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3262), channel_id=436, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.532 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.1082, %all-gather.433), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.901 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.145), index=1
  %sharding_constraint.1083 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.901)
  %convert_element_type.3263 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.1083)
  %mul.5782 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3263, %mul.5766)
  %convert_element_type.3264 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5782)
  %mul.5784 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3263, %mul.5778)
  %mul.5790 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5784, %mul.5776)
  %convert_element_type.3265 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5790)
  %select_n.2630 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3265, %broadcast.5147)
  %slice.801 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2630), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.234 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.801, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.552 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3264, %pad.234)
  %slice.802 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2630), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.235 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.802, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.553 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.552, %pad.235)
  %select_n.2632 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3265, %broadcast.5147)
  %slice.803 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2632), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.236 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.803, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.554 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.553, %pad.236)
  %slice.804 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2632), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.237 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.804, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.555 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.554, %pad.237)
  %get-tuple-element.902 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.81), index=16
  %convert_element_type.3266 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.902)
  %all-gather.434 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3266), channel_id=437, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.533 = bf16[2,8192,4096]{2,1,0} dot(%add_any.555, %all-gather.434), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.556 = bf16[2,8192,4096]{2,1,0} add(%dot.532, %dot.533)
  %sharding_constraint.1084 = bf16[2,8192,4096]{2,1,0} copy(%add_any.556)
  %get-tuple-element.903 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.145), index=0
  %sharding_constraint.1085 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.903)
  %convert_element_type.3267 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.1085)
  %mul.5795 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3267, %mul.5747)
  %convert_element_type.3268 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5795)
  %mul.5797 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3267, %mul.5752)
  %mul.5800 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5797, %mul.5750)
  %convert_element_type.3269 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5800)
  %select_n.2634 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3269, %broadcast.5148)
  %slice.805 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2634), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.238 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.805, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.557 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3268, %pad.238)
  %slice.806 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2634), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.239 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.806, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.558 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.557, %pad.239)
  %select_n.2639 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3269, %broadcast.5148)
  %slice.807 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2639), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.240 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.807, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.559 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.558, %pad.240)
  %slice.808 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2639), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.241 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.808, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.560 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.559, %pad.241)
  %get-tuple-element.904 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.81), index=18
  %convert_element_type.3270 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.904)
  %all-gather.435 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3270), channel_id=438, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.534 = bf16[2,8192,4096]{2,1,0} dot(%add_any.560, %all-gather.435), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.1086 = bf16[2,8192,4096]{2,1,0} copy(%dot.534)
  %add_any.561 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1084, %sharding_constraint.1086)
  %sharding_constraint.1087 = bf16[2,8192,4096]{2,1,0} copy(%add_any.561)
  %get-tuple-element.905 = f32[4096]{0} get-tuple-element(%remat2.81), index=15
  %convert_element_type.3272 = bf16[4096]{0} convert(%get-tuple-element.905)
  %mul.5801 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3272), dimensions={2}
  %mul.5802 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1087, %mul.5801)
  %convert_element_type.3273 = f32[2,8192,4096]{2,1,0} convert(%mul.5802)
  %convert_element_type.3274 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.1071)
  %square.126 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3274, %convert_element_type.3274)
  %reduce.503 = f32[2,8192]{1,0} reduce(%square.126, %constant.2882), dimensions={2}, to_apply=%region_375.20937
  %div.1949 = f32[2,8192]{1,0} multiply(%reduce.503, %broadcast.5097)
  %add.2933 = f32[2,8192]{1,0} add(%div.1949, %broadcast.5098)
  %add.2934 = f32[2,8192,1]{2,1,0} reshape(%add.2933)
  %rsqrt.188 = f32[2,8192,1]{2,1,0} rsqrt(%add.2934)
  %mul.5803 = f32[2,8192]{1,0} reshape(%rsqrt.188)
  %mul.5804 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5803), dimensions={0,1}
  %mul.5805 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3273, %mul.5804)
  %mul.5807 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3274, %convert_element_type.3273)
  %reduce.504 = f32[2,8192]{1,0} reduce(%mul.5807, %constant.2882), dimensions={2}, to_apply=%region_376.20950
  %reshape.9445 = f32[2,8192,1]{2,1,0} reshape(%reduce.504)
  %div.1950 = f32[2,8192,1]{2,1,0} divide(%rsqrt.188, %add.2934)
  %mul.5808 = f32[2,8192,1]{2,1,0} multiply(%div.1950, %broadcast.5145)
  %mul.5809 = f32[2,8192,1]{2,1,0} multiply(%reshape.9445, %mul.5808)
  %mul.5810 = f32[2,8192,1]{2,1,0} multiply(%mul.5809, %mul.2917)
  %mul.5811 = f32[2,8192]{1,0} reshape(%mul.5810)
  %mul.5812 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5811), dimensions={0,1}
  %mul.5813 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3274, %mul.5812)
  %add_any.562 = f32[2,8192,4096]{2,1,0} add(%mul.5805, %mul.5813)
  %convert_element_type.3275 = bf16[2,8192,4096]{2,1,0} convert(%add_any.562)
  %add_any.563 = bf16[2,8192,4096]{2,1,0} add(%add_any.551, %convert_element_type.3275)
  %sharding_constraint.1088 = bf16[2,8192,4096]{2,1,0} copy(%add_any.563)
  %tuple.155 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.14, %reduce_precision.15, %reduce_precision.16, %get-tuple-element.34, %sharding_constraint.483, /*index=5*/%reduce_precision.17, %reduce_precision.18, %reduce_precision.19, %reduce_precision.20, %constant.2935, /*index=10*/%constant.2935, %param.22, %param.23, %param.24, %param.21, /*index=15*/%param.16, %param.18, %param.20, %param.17, %param.19, /*index=20*/%sharding_constraint.75, %param.10, %param.7, %sharding_constraint.1088)
  %remat2.82 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.155)
  %get-tuple-element.906 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.82), index=23
  %sharding_constraint.1089 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.906)
  %get-tuple-element.907 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.82), index=7
  %neg.188 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.907)
  %exp.189 = bf16[2,8192,14336]{2,1,0} exponential(%neg.188)
  %add.2935 = bf16[2,8192,14336]{2,1,0} add(%exp.189, %jit_silu_.0)
  %div.1951 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2935)
  %mul.5814 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.907, %div.1951)
  %sharding_constraint.1090 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1089)
  %get-tuple-element.908 = f32[14336,512]{1,0} get-tuple-element(%remat2.82), index=13
  %convert_element_type.3276 = bf16[14336,512]{1,0} convert(%get-tuple-element.908)
  %all-gather.436 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.3276), channel_id=439, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.535 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.1090, %all-gather.436), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.1091 = bf16[2,8192,14336]{2,1,0} copy(%dot.535)
  %mul.5815 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5814, %sharding_constraint.1091)
  %get-tuple-element.909 = f32[512,14336]{1,0} get-tuple-element(%remat2.82), index=12
  %convert_element_type.3278 = bf16[512,14336]{1,0} convert(%get-tuple-element.909)
  %all-gather.437 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3278), channel_id=440, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.536 = bf16[2,8192,4096]{2,1,0} dot(%mul.5815, %all-gather.437), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.910 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.82), index=8
  %mul.5816 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.1091, %get-tuple-element.910)
  %mul.5817 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5816, %div.1951)
  %mul.5818 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.907, %mul.5816)
  %sub.347 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1951)
  %mul.5819 = bf16[2,8192,14336]{2,1,0} multiply(%div.1951, %sub.347)
  %mul.5820 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5818, %mul.5819)
  %add_any.564 = bf16[2,8192,14336]{2,1,0} add(%mul.5817, %mul.5820)
  %get-tuple-element.911 = f32[512,14336]{1,0} get-tuple-element(%remat2.82), index=11
  %convert_element_type.3280 = bf16[512,14336]{1,0} convert(%get-tuple-element.911)
  %all-gather.438 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3280), channel_id=441, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.537 = bf16[2,8192,4096]{2,1,0} dot(%add_any.564, %all-gather.438), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.565 = bf16[2,8192,4096]{2,1,0} add(%dot.536, %dot.537)
  %sharding_constraint.1092 = bf16[2,8192,4096]{2,1,0} copy(%add_any.565)
  %get-tuple-element.912 = f32[4096]{0} get-tuple-element(%remat2.82), index=14
  %convert_element_type.3281 = bf16[4096]{0} convert(%get-tuple-element.912)
  %mul.5821 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3281), dimensions={2}
  %mul.5822 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1092, %mul.5821)
  %convert_element_type.3282 = f32[2,8192,4096]{2,1,0} convert(%mul.5822)
  %get-tuple-element.913 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.82), index=20
  %sharding_constraint.1093 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.913)
  %get-tuple-element.914 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.82), index=6
  %sharding_constraint.1094 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.914)
  %add.2936 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1093, %sharding_constraint.1094)
  %convert_element_type.3283 = f32[2,8192,4096]{2,1,0} convert(%add.2936)
  %square.127 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3283, %convert_element_type.3283)
  %reduce.505 = f32[2,8192]{1,0} reduce(%square.127, %constant.2882), dimensions={2}, to_apply=%region_377.21028
  %div.1952 = f32[2,8192]{1,0} multiply(%reduce.505, %broadcast.5097)
  %add.2937 = f32[2,8192]{1,0} add(%div.1952, %broadcast.5098)
  %add.2938 = f32[2,8192,1]{2,1,0} reshape(%add.2937)
  %rsqrt.189 = f32[2,8192,1]{2,1,0} rsqrt(%add.2938)
  %mul.5823 = f32[2,8192]{1,0} reshape(%rsqrt.189)
  %mul.5824 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5823), dimensions={0,1}
  %mul.5825 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3282, %mul.5824)
  %mul.5827 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3283, %convert_element_type.3282)
  %reduce.506 = f32[2,8192]{1,0} reduce(%mul.5827, %constant.2882), dimensions={2}, to_apply=%region_378.21041
  %reshape.9446 = f32[2,8192,1]{2,1,0} reshape(%reduce.506)
  %div.1953 = f32[2,8192,1]{2,1,0} divide(%rsqrt.189, %add.2938)
  %mul.5829 = f32[2,8192,1]{2,1,0} multiply(%div.1953, %broadcast.5145)
  %mul.5830 = f32[2,8192,1]{2,1,0} multiply(%reshape.9446, %mul.5829)
  %mul.5831 = f32[2,8192,1]{2,1,0} multiply(%mul.5830, %mul.2917)
  %mul.5832 = f32[2,8192]{1,0} reshape(%mul.5831)
  %mul.5833 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5832), dimensions={0,1}
  %mul.5834 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3283, %mul.5833)
  %add_any.566 = f32[2,8192,4096]{2,1,0} add(%mul.5825, %mul.5834)
  %convert_element_type.3285 = bf16[2,8192,4096]{2,1,0} convert(%add_any.566)
  %add_any.567 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1089, %convert_element_type.3285)
  %get-tuple-element.915 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.82), index=0
  %convert_element_type.3286 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.915)
  %get-tuple-element.916 = s32[2,8192]{1,0} get-tuple-element(%remat2.82), index=22
  %convert_element_type.3287 = f32[2,8192]{1,0} convert(%get-tuple-element.916)
  %div.1954 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.3287), dimensions={0,1}
  %div.1963 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1954, %div.371)
  %cos.128 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1963)
  %mul.5841 = f32[2,8192,128]{2,1,0} reshape(%cos.128)
  %mul.5846 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5841), dimensions={0,1,3}
  %mul.5847 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3286, %mul.5846)
  %slice.809 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.915), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.810 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.915), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.373 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.809, %slice.810), dimensions={3}
  %slice.811 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.915), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.812 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.915), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.374 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.811, %slice.812), dimensions={3}
  %select_n.2650 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.373, %concatenate.374)
  %convert_element_type.3293 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2650)
  %sin.124 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1963)
  %mul.5848 = f32[2,8192,128]{2,1,0} reshape(%sin.124)
  %mul.5854 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5848), dimensions={0,1,3}
  %mul.5855 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3293, %mul.5854)
  %get-tuple-element.917 = s32[2]{0} get-tuple-element(%remat2.82), index=9
  %broadcast_in_dim.649 = s32[64,2]{1,0} broadcast(%get-tuple-element.917), dimensions={1}
  %reshape.9453 = s32[128]{0} reshape(%broadcast_in_dim.649)
  %convert_element_type.3296 = f32[128]{0} convert(%reshape.9453)
  %mul.5856 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.3296), dimensions={3}
  %mul.5859 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5855, %mul.5856)
  %add.2941 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5847, %mul.5859)
  %convert_element_type.3298 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2941)
  %sharding_constraint.1095 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.3298)
  %get-tuple-element.918 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.82), index=1
  %convert_element_type.3300 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.918)
  %mul.5865 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5841), dimensions={0,1,3}
  %mul.5866 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3300, %mul.5865)
  %slice.813 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.918), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.814 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.918), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.375 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.813, %slice.814), dimensions={3}
  %slice.815 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.918), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.816 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.918), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.376 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.815, %slice.816), dimensions={3}
  %select_n.2660 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.375, %concatenate.376)
  %convert_element_type.3307 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2660)
  %mul.5868 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5848), dimensions={0,1,3}
  %mul.5869 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3307, %mul.5868)
  %get-tuple-element.919 = s32[2]{0} get-tuple-element(%remat2.82), index=10
  %broadcast_in_dim.651 = s32[64,2]{1,0} broadcast(%get-tuple-element.919), dimensions={1}
  %reshape.9461 = s32[128]{0} reshape(%broadcast_in_dim.651)
  %convert_element_type.3308 = f32[128]{0} convert(%reshape.9461)
  %mul.5870 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.3308), dimensions={3}
  %mul.5871 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5869, %mul.5870)
  %add.2945 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5866, %mul.5871)
  %convert_element_type.3310 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2945)
  %sharding_constraint.1096 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3310)
  %get-tuple-element.920 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.82), index=2
  %sharding_constraint.1097 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.920)
  %get-tuple-element.921 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.82), index=3
  %get-tuple-element.922 = u32[2,4]{1,0} get-tuple-element(%remat2.82), index=4
  %get-tuple-element.923 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.82), index=5
  %sharding_constraint.1098 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.923)
  %sharding_constraint.1099 = bf16[2,8192,4096]{2,1,0} copy(%add_any.567)
  %get-tuple-element.924 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.82), index=17
  %convert_element_type.3311 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.924)
  %all-gather.439 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3311), channel_id=442, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.538 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.1099, %all-gather.439), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.1100 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.538)
  %get-tuple-element.925 = s32[2,8192]{1,0} get-tuple-element(%remat2.82), index=21
  %eq.705 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.925), dimensions={0,1}
  %eq.706 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.925), dimensions={0,2}
  %eq.707 = pred[2,8192,8192]{2,1,0} compare(%eq.705, %eq.706), direction=EQ
  %and.824 = pred[2,8192,8192]{2,1,0} and(%eq.707, %and.455)
  %select_n.2661 = f32[2,8192,8192]{2,1,0} select(%and.824, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1183 = pred[2,8192,8192]{2,1,0} compare(%select_n.2661, %broadcast_in_dim.277), direction=NE
  %not.127 = pred[2,8192,8192]{2,1,0} not(%ne.1183)
  %convert_element_type.3312 = s32[2,8192,8192]{2,1,0} convert(%not.127)
  %reduce.507 = s32[2,8192]{1,0} reduce(%convert_element_type.3312, %constant.2873), dimensions={1}, to_apply=%region_379.21193
  %reduce_sum.4136 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.507)
  %slice.817 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4136), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.62 = s32[2,1]{1,0} reshape(%slice.817)
  %reshape.9463 = s32[2]{0} reshape(%squeeze.62)
  %lt.1029 = pred[2]{0} compare(%reshape.9463, %broadcast.5111), direction=LT
  %select_n.2662 = s32[2]{0} select(%lt.1029, %broadcast.5111, %reshape.9463)
  %reduce_window_sum.316 = s32[2]{0} reduce-window(%select_n.2662, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.30
  %concatenate.377 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.316), dimensions={0}
  %reduce.508 = s32[2,8192]{1,0} reduce(%convert_element_type.3312, %constant.2873), dimensions={2}, to_apply=%region_380.21202
  %reduce_sum.4137 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.508)
  %reduce.509 = s32[2,1]{1,0} reduce(%reduce_sum.4137, %constant.2985), dimensions={3,2}, to_apply=%region_381.21208
  %reshape.9464 = s32[2]{0} reshape(%reduce.509)
  %lt.1031 = pred[2]{0} compare(%reshape.9464, %broadcast.5111), direction=LT
  %select_n.2663 = s32[2]{0} select(%lt.1031, %broadcast.5111, %reshape.9464)
  %reduce_window_sum.317 = s32[2]{0} reduce-window(%select_n.2663, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.30.clone
  %concatenate.378 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.317), dimensions={0}
  %te_fused_attn_backward_ffi.150 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.1095, %sharding_constraint.1096, %sharding_constraint.1097, %constant.2973, %get-tuple-element.921, /*index=5*/%get-tuple-element.922, %sharding_constraint.1098, %sharding_constraint.1100, %concatenate.377, %concatenate.378, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.926 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.150), index=2
  %sharding_constraint.1101 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.926)
  %get-tuple-element.927 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.82), index=19
  %convert_element_type.3314 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.927)
  %all-gather.440 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3314), channel_id=443, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.539 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.1101, %all-gather.440), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.928 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.150), index=1
  %sharding_constraint.1102 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.928)
  %convert_element_type.3315 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.1102)
  %mul.5874 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3315, %mul.5865)
  %convert_element_type.3316 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5874)
  %mul.5876 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3315, %mul.5870)
  %mul.5879 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5876, %mul.5868)
  %convert_element_type.3319 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5879)
  %select_n.2665 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3319, %broadcast.5147)
  %slice.818 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2665), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.242 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.818, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.568 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3316, %pad.242)
  %slice.819 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2665), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.243 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.819, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.569 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.568, %pad.243)
  %select_n.2667 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3319, %broadcast.5147)
  %slice.820 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2667), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.244 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.820, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.570 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.569, %pad.244)
  %slice.821 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2667), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.245 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.821, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.571 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.570, %pad.245)
  %get-tuple-element.929 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.82), index=16
  %convert_element_type.3320 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.929)
  %all-gather.441 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3320), channel_id=444, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.540 = bf16[2,8192,4096]{2,1,0} dot(%add_any.571, %all-gather.441), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.572 = bf16[2,8192,4096]{2,1,0} add(%dot.539, %dot.540)
  %sharding_constraint.1103 = bf16[2,8192,4096]{2,1,0} copy(%add_any.572)
  %get-tuple-element.930 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.150), index=0
  %sharding_constraint.1104 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.930)
  %convert_element_type.3321 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.1104)
  %mul.5886 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3321, %mul.5846)
  %convert_element_type.3322 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5886)
  %mul.5892 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3321, %mul.5856)
  %mul.5895 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5892, %mul.5854)
  %convert_element_type.3323 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.5895)
  %select_n.2669 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3323, %broadcast.5148)
  %slice.822 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2669), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.246 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.822, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.573 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3322, %pad.246)
  %slice.823 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2669), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.247 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.823, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.574 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.573, %pad.247)
  %select_n.2671 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3323, %broadcast.5148)
  %slice.824 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2671), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.248 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.824, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.575 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.574, %pad.248)
  %slice.825 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2671), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.249 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.825, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.576 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.575, %pad.249)
  %get-tuple-element.931 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.82), index=18
  %convert_element_type.3324 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.931)
  %all-gather.442 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3324), channel_id=445, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.541 = bf16[2,8192,4096]{2,1,0} dot(%add_any.576, %all-gather.442), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.1105 = bf16[2,8192,4096]{2,1,0} copy(%dot.541)
  %add_any.577 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1103, %sharding_constraint.1105)
  %sharding_constraint.1106 = bf16[2,8192,4096]{2,1,0} copy(%add_any.577)
  %get-tuple-element.932 = f32[4096]{0} get-tuple-element(%remat2.82), index=15
  %convert_element_type.3326 = bf16[4096]{0} convert(%get-tuple-element.932)
  %mul.5896 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3326), dimensions={2}
  %mul.5897 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1106, %mul.5896)
  %convert_element_type.3327 = f32[2,8192,4096]{2,1,0} convert(%mul.5897)
  %convert_element_type.3328 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.1093)
  %square.128 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3328, %convert_element_type.3328)
  %reduce.510 = f32[2,8192]{1,0} reduce(%square.128, %constant.2882), dimensions={2}, to_apply=%region_382.21296
  %div.1974 = f32[2,8192]{1,0} multiply(%reduce.510, %broadcast.5097)
  %add.2950 = f32[2,8192]{1,0} add(%div.1974, %broadcast.5098)
  %add.2952 = f32[2,8192,1]{2,1,0} reshape(%add.2950)
  %rsqrt.190 = f32[2,8192,1]{2,1,0} rsqrt(%add.2952)
  %mul.5898 = f32[2,8192]{1,0} reshape(%rsqrt.190)
  %mul.5899 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5898), dimensions={0,1}
  %mul.5900 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3327, %mul.5899)
  %mul.5901 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3328, %convert_element_type.3327)
  %reduce.511 = f32[2,8192]{1,0} reduce(%mul.5901, %constant.2882), dimensions={2}, to_apply=%region_383.21309
  %reshape.9485 = f32[2,8192,1]{2,1,0} reshape(%reduce.511)
  %div.1975 = f32[2,8192,1]{2,1,0} divide(%rsqrt.190, %add.2952)
  %mul.5902 = f32[2,8192,1]{2,1,0} multiply(%div.1975, %broadcast.5145)
  %mul.5903 = f32[2,8192,1]{2,1,0} multiply(%reshape.9485, %mul.5902)
  %mul.5904 = f32[2,8192,1]{2,1,0} multiply(%mul.5903, %mul.2917)
  %mul.5905 = f32[2,8192]{1,0} reshape(%mul.5904)
  %mul.5906 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5905), dimensions={0,1}
  %mul.5907 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3328, %mul.5906)
  %add_any.578 = f32[2,8192,4096]{2,1,0} add(%mul.5900, %mul.5907)
  %convert_element_type.3330 = bf16[2,8192,4096]{2,1,0} convert(%add_any.578)
  %add_any.579 = bf16[2,8192,4096]{2,1,0} add(%add_any.567, %convert_element_type.3330)
  %sharding_constraint.1107 = bf16[2,8192,4096]{2,1,0} copy(%add_any.579)
  %tuple.157 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) tuple(%reduce_precision.7, %reduce_precision.8, %reduce_precision.9, %get-tuple-element.32, %sharding_constraint.482, /*index=5*/%reduce_precision.10, %reduce_precision.11, %reduce_precision.12, %reduce_precision.13, %constant.2935, /*index=10*/%constant.2935, %param.13, %param.14, %param.15, %param.12, /*index=15*/%param.5, %param.8, %param.11, %param.6, %param.9, /*index=20*/%sharding_constraint.62, %param.10, %param.7, %sharding_constraint.1107)
  %remat2.83 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, /*index=5*/bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,4096]{2,1,0}, bf16[2,8192,14336]{2,1,0}, bf16[2,8192,14336]{2,1,0}, s32[2]{0}, /*index=10*/s32[2]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/bf16[2,8192,4096]{2,1,0}, s32[2,8192]{1,0}, s32[2,8192]{1,0}, bf16[2,8192,4096]{2,1,0}) opt-barrier(%tuple.157)
  %get-tuple-element.933 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.83), index=20
  %sharding_constraint.1108 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.933)
  %get-tuple-element.934 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.83), index=6
  %sharding_constraint.1109 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.934)
  %add.2953 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1108, %sharding_constraint.1109)
  %convert_element_type.3331 = f32[2,8192,4096]{2,1,0} convert(%add.2953)
  %square.129 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3331, %convert_element_type.3331)
  %reduce.512 = f32[2,8192]{1,0} reduce(%square.129, %constant.2882), dimensions={2}, to_apply=%region_384.21360
  %div.1976 = f32[2,8192]{1,0} multiply(%reduce.512, %broadcast.5097)
  %add.2954 = f32[2,8192]{1,0} add(%div.1976, %broadcast.5098)
  %add.2955 = f32[2,8192,1]{2,1,0} reshape(%add.2954)
  %rsqrt.191 = f32[2,8192,1]{2,1,0} rsqrt(%add.2955)
  %mul.5908 = f32[2,8192]{1,0} reshape(%rsqrt.191)
  %mul.5909 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5908), dimensions={0,1}
  %mul.5910 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3331, %mul.5909)
  %convert_element_type.3332 = bf16[2,8192,4096]{2,1,0} convert(%mul.5910)
  %get-tuple-element.935 = f32[4096]{0} get-tuple-element(%remat2.83), index=14
  %convert_element_type.3333 = bf16[4096]{0} convert(%get-tuple-element.935)
  %mul.5911 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3333), dimensions={2}
  %mul.5912 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3332, %mul.5911)
  %sharding_constraint.1110 = bf16[2,8192,4096]{2,1,0} copy(%mul.5912)
  %get-tuple-element.936 = bf16[2,8192,4096]{2,1,0} get-tuple-element(%remat2.83), index=23
  %sharding_constraint.1111 = bf16[2,8192,4096]{2,1,0} copy(%get-tuple-element.936)
  %sharding_constraint.1112 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1111)
  %get-tuple-element.937 = f32[14336,512]{1,0} get-tuple-element(%remat2.83), index=13
  %convert_element_type.3335 = bf16[14336,512]{1,0} convert(%get-tuple-element.937)
  %all-gather.443 = bf16[14336,4096]{1,0} all-gather(%convert_element_type.3335), channel_id=446, replica_groups=[1,8]<=[8], dimensions={1}, use_global_device_ids=true
  %dot.542 = bf16[2,8192,14336]{2,1,0} dot(%sharding_constraint.1112, %all-gather.443), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %sharding_constraint.1113 = bf16[2,8192,14336]{2,1,0} copy(%dot.542)
  %get-tuple-element.938 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.83), index=8
  %mul.5913 = bf16[2,8192,14336]{2,1,0} multiply(%sharding_constraint.1113, %get-tuple-element.938)
  %get-tuple-element.939 = bf16[2,8192,14336]{2,1,0} get-tuple-element(%remat2.83), index=7
  %neg.189 = bf16[2,8192,14336]{2,1,0} negate(%get-tuple-element.939)
  %exp.190 = bf16[2,8192,14336]{2,1,0} exponential(%neg.189)
  %add.2956 = bf16[2,8192,14336]{2,1,0} add(%exp.190, %jit_silu_.0)
  %div.1977 = bf16[2,8192,14336]{2,1,0} divide(%jit_silu_.0, %add.2956)
  %mul.5914 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5913, %div.1977)
  %mul.5915 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.939, %mul.5913)
  %sub.352 = bf16[2,8192,14336]{2,1,0} subtract(%jit_silu_.0, %div.1977)
  %mul.5916 = bf16[2,8192,14336]{2,1,0} multiply(%div.1977, %sub.352)
  %mul.5917 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5915, %mul.5916)
  %add_any.580 = bf16[2,8192,14336]{2,1,0} add(%mul.5914, %mul.5917)
  %dot.543 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1110, %add_any.580), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.2 = bf16[4096,14336]{1,0} all-reduce(%dot.543), channel_id=447, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.clone
  %constant.12558 = s32[8]{0} constant({0, 512, 1024, 1536, 2048, 2560, 3072, 3584})
  %dynamic-slice.1065 = s32[1]{0} dynamic-slice(%constant.12558, %partition-id), dynamic_slice_sizes={1}
  %reshape.9486 = s32[] reshape(%dynamic-slice.1065)
  %dynamic-slice.1066 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.2, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3336 = f32[512,14336]{1,0} convert(%dynamic-slice.1066)
  %mul.5918 = f32[512,14336]{1,0} multiply(%convert_element_type.3336, %convert_element_type.3336)
  %reduce.513 = f32[] reduce(%mul.5918, %constant.2882), dimensions={0,1}, to_apply=%region_385.21395
  %all-reduce.3 = f32[] all-reduce(%reduce.513), channel_id=448, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_385.21395.clone
  %add.2957 = f32[] add(%reduce.293, %all-reduce.3)
  %mul.5921 = bf16[2,8192,14336]{2,1,0} multiply(%get-tuple-element.939, %div.1977)
  %mul.5922 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5921, %sharding_constraint.1113)
  %dot.544 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1110, %mul.5922), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.4 = bf16[4096,14336]{1,0} all-reduce(%dot.544), channel_id=449, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.1.clone
  %dynamic-slice.1068 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.4, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3337 = f32[512,14336]{1,0} convert(%dynamic-slice.1068)
  %mul.5925 = f32[512,14336]{1,0} multiply(%convert_element_type.3337, %convert_element_type.3337)
  %reduce.514 = f32[] reduce(%mul.5925, %constant.2882), dimensions={0,1}, to_apply=%region_386.21406
  %all-reduce.5 = f32[] all-reduce(%reduce.514), channel_id=450, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_386.21406.clone
  %add.2958 = f32[] add(%add.2957, %all-reduce.5)
  %mul.5926 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5921, %get-tuple-element.938)
  %sharding_constraint.1114 = bf16[2,8192,14336]{2,1,0} copy(%mul.5926)
  %dot.545 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1114, %sharding_constraint.1112), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.6 = bf16[14336,4096]{1,0} all-reduce(%dot.545), channel_id=451, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.2.clone
  %dynamic-slice.1070 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.6, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3338 = f32[14336,512]{1,0} convert(%dynamic-slice.1070)
  %mul.5927 = f32[14336,512]{1,0} multiply(%convert_element_type.3338, %convert_element_type.3338)
  %reduce.515 = f32[] reduce(%mul.5927, %constant.2882), dimensions={0,1}, to_apply=%region_387.21417
  %all-reduce.7 = f32[] all-reduce(%reduce.515), channel_id=452, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_387.21417.clone
  %add.2959 = f32[] add(%add.2958, %all-reduce.7)
  %get-tuple-element.940 = f32[512,14336]{1,0} get-tuple-element(%remat2.83), index=12
  %convert_element_type.3339 = bf16[512,14336]{1,0} convert(%get-tuple-element.940)
  %all-gather.444 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3339), channel_id=453, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.546 = bf16[2,8192,4096]{2,1,0} dot(%mul.5922, %all-gather.444), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %get-tuple-element.941 = f32[512,14336]{1,0} get-tuple-element(%remat2.83), index=11
  %convert_element_type.3342 = bf16[512,14336]{1,0} convert(%get-tuple-element.941)
  %all-gather.445 = bf16[4096,14336]{1,0} all-gather(%convert_element_type.3342), channel_id=454, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.547 = bf16[2,8192,4096]{2,1,0} dot(%add_any.580, %all-gather.445), lhs_contracting_dims={2}, rhs_contracting_dims={1}
  %add_any.581 = bf16[2,8192,4096]{2,1,0} add(%dot.546, %dot.547)
  %sharding_constraint.1115 = bf16[2,8192,4096]{2,1,0} copy(%add_any.581)
  %mul.5928 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3332, %sharding_constraint.1115)
  %reduce.516 = bf16[4096]{0} reduce(%mul.5928, %constant.5662), dimensions={0,1}, to_apply=%region_388.21430
  %all-reduce.8 = bf16[4096]{0} all-reduce(%reduce.516), channel_id=455, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_388.21430.clone
  %convert_element_type.3343 = f32[4096]{0} convert(%all-reduce.8)
  %mul.5929 = f32[4096]{0} multiply(%convert_element_type.3343, %convert_element_type.3343)
  %reduce.517 = f32[] reduce(%mul.5929, %constant.2882), dimensions={0}, to_apply=%region_389.21437
  %add.2960 = f32[] add(%add.2959, %reduce.517)
  %convert_element_type.3344 = f32[2,8192,4096]{2,1,0} convert(%sharding_constraint.1108)
  %square.130 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3344, %convert_element_type.3344)
  %reduce.518 = f32[2,8192]{1,0} reduce(%square.130, %constant.2882), dimensions={2}, to_apply=%region_390.21445
  %div.1978 = f32[2,8192]{1,0} multiply(%reduce.518, %broadcast.5097)
  %add.2961 = f32[2,8192]{1,0} add(%div.1978, %broadcast.5098)
  %add.2963 = f32[2,8192,1]{2,1,0} reshape(%add.2961)
  %rsqrt.192 = f32[2,8192,1]{2,1,0} rsqrt(%add.2963)
  %mul.5930 = f32[2,8192]{1,0} reshape(%rsqrt.192)
  %mul.5931 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5930), dimensions={0,1}
  %mul.5932 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3344, %mul.5931)
  %convert_element_type.3345 = bf16[2,8192,4096]{2,1,0} convert(%mul.5932)
  %get-tuple-element.942 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.83), index=0
  %convert_element_type.3346 = f32[2,8192,32,128]{3,2,1,0} convert(%get-tuple-element.942)
  %get-tuple-element.943 = s32[2,8192]{1,0} get-tuple-element(%remat2.83), index=22
  %convert_element_type.3347 = f32[2,8192]{1,0} convert(%get-tuple-element.943)
  %div.1979 = f32[2,8192,1,128]{3,2,1,0} broadcast(%convert_element_type.3347), dimensions={0,1}
  %div.1989 = f32[2,8192,1,128]{3,2,1,0} divide(%div.1979, %div.371)
  %cos.130 = f32[2,8192,1,128]{3,2,1,0} cosine(%div.1989)
  %mul.5940 = f32[2,8192,128]{2,1,0} reshape(%cos.130)
  %mul.5941 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5940), dimensions={0,1,3}
  %mul.5942 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3346, %mul.5941)
  %slice.826 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.942), slice={[0:2], [0:8192], [0:32], [1:128]}
  %slice.827 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.942), slice={[0:2], [0:8192], [0:32], [0:1]}
  %concatenate.379 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.826, %slice.827), dimensions={3}
  %slice.828 = bf16[2,8192,32,1]{3,2,1,0} slice(%get-tuple-element.942), slice={[0:2], [0:8192], [0:32], [127:128]}
  %slice.829 = bf16[2,8192,32,127]{3,2,1,0} slice(%get-tuple-element.942), slice={[0:2], [0:8192], [0:32], [0:127]}
  %concatenate.380 = bf16[2,8192,32,128]{3,2,1,0} concatenate(%slice.828, %slice.829), dimensions={3}
  %select_n.2681 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.7631, %concatenate.379, %concatenate.380)
  %convert_element_type.3353 = f32[2,8192,32,128]{3,2,1,0} convert(%select_n.2681)
  %sin.126 = f32[2,8192,1,128]{3,2,1,0} sine(%div.1989)
  %mul.5943 = f32[2,8192,128]{2,1,0} reshape(%sin.126)
  %mul.5944 = f32[2,8192,32,128]{3,2,1,0} broadcast(%mul.5943), dimensions={0,1,3}
  %mul.5945 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3353, %mul.5944)
  %get-tuple-element.944 = s32[2]{0} get-tuple-element(%remat2.83), index=9
  %broadcast_in_dim.655 = s32[64,2]{1,0} broadcast(%get-tuple-element.944), dimensions={1}
  %reshape.9496 = s32[128]{0} reshape(%broadcast_in_dim.655)
  %convert_element_type.3357 = f32[128]{0} convert(%reshape.9496)
  %mul.5946 = f32[2,8192,32,128]{3,2,1,0} broadcast(%convert_element_type.3357), dimensions={3}
  %mul.5947 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.5945, %mul.5946)
  %add.2966 = f32[2,8192,32,128]{3,2,1,0} add(%mul.5942, %mul.5947)
  %convert_element_type.3358 = bf16[2,8192,32,128]{3,2,1,0} convert(%add.2966)
  %sharding_constraint.1116 = bf16[2,8192,32,128]{3,2,1,0} copy(%convert_element_type.3358)
  %get-tuple-element.945 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.83), index=1
  %convert_element_type.3359 = f32[2,8192,8,128]{3,2,1,0} convert(%get-tuple-element.945)
  %mul.5952 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5940), dimensions={0,1,3}
  %mul.5953 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3359, %mul.5952)
  %slice.830 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.945), slice={[0:2], [0:8192], [0:8], [1:128]}
  %slice.831 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.945), slice={[0:2], [0:8192], [0:8], [0:1]}
  %concatenate.381 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.830, %slice.831), dimensions={3}
  %slice.832 = bf16[2,8192,8,1]{3,2,1,0} slice(%get-tuple-element.945), slice={[0:2], [0:8192], [0:8], [127:128]}
  %slice.833 = bf16[2,8192,8,127]{3,2,1,0} slice(%get-tuple-element.945), slice={[0:2], [0:8192], [0:8], [0:127]}
  %concatenate.382 = bf16[2,8192,8,128]{3,2,1,0} concatenate(%slice.832, %slice.833), dimensions={3}
  %select_n.2688 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.7639, %concatenate.381, %concatenate.382)
  %convert_element_type.3364 = f32[2,8192,8,128]{3,2,1,0} convert(%select_n.2688)
  %mul.5957 = f32[2,8192,8,128]{3,2,1,0} broadcast(%mul.5943), dimensions={0,1,3}
  %mul.5958 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3364, %mul.5957)
  %get-tuple-element.946 = s32[2]{0} get-tuple-element(%remat2.83), index=10
  %broadcast_in_dim.657 = s32[64,2]{1,0} broadcast(%get-tuple-element.946), dimensions={1}
  %reshape.9504 = s32[128]{0} reshape(%broadcast_in_dim.657)
  %convert_element_type.3366 = f32[128]{0} convert(%reshape.9504)
  %mul.5961 = f32[2,8192,8,128]{3,2,1,0} broadcast(%convert_element_type.3366), dimensions={3}
  %mul.5966 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5958, %mul.5961)
  %add.2970 = f32[2,8192,8,128]{3,2,1,0} add(%mul.5953, %mul.5966)
  %convert_element_type.3367 = bf16[2,8192,8,128]{3,2,1,0} convert(%add.2970)
  %sharding_constraint.1117 = bf16[2,8192,8,128]{3,2,1,0} copy(%convert_element_type.3367)
  %get-tuple-element.947 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%remat2.83), index=2
  %sharding_constraint.1118 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.947)
  %get-tuple-element.948 = f32[2,32,8192,1]{3,2,1,0} get-tuple-element(%remat2.83), index=3
  %get-tuple-element.949 = u32[2,4]{1,0} get-tuple-element(%remat2.83), index=4
  %get-tuple-element.950 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%remat2.83), index=5
  %sharding_constraint.1119 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.950)
  %mul.5972 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1115, %mul.5911)
  %convert_element_type.3370 = f32[2,8192,4096]{2,1,0} convert(%mul.5972)
  %mul.5979 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3370, %mul.5909)
  %mul.5980 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3331, %convert_element_type.3370)
  %reduce.519 = f32[2,8192]{1,0} reduce(%mul.5980, %constant.2882), dimensions={2}, to_apply=%region_391.21585
  %reshape.9505 = f32[2,8192,1]{2,1,0} reshape(%reduce.519)
  %div.2005 = f32[2,8192,1]{2,1,0} divide(%rsqrt.191, %add.2955)
  %mul.5981 = f32[2,8192,1]{2,1,0} multiply(%div.2005, %broadcast.5145)
  %mul.5982 = f32[2,8192,1]{2,1,0} multiply(%reshape.9505, %mul.5981)
  %mul.5983 = f32[2,8192,1]{2,1,0} multiply(%mul.5982, %mul.2917)
  %mul.5984 = f32[2,8192]{1,0} reshape(%mul.5983)
  %mul.5985 = f32[2,8192,4096]{2,1,0} broadcast(%mul.5984), dimensions={0,1}
  %mul.5986 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3331, %mul.5985)
  %add_any.582 = f32[2,8192,4096]{2,1,0} add(%mul.5979, %mul.5986)
  %convert_element_type.3372 = bf16[2,8192,4096]{2,1,0} convert(%add_any.582)
  %add_any.583 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1111, %convert_element_type.3372)
  %sharding_constraint.1120 = bf16[2,8192,4096]{2,1,0} copy(%add_any.583)
  %get-tuple-element.951 = f32[32,128,512]{2,1,0} get-tuple-element(%remat2.83), index=17
  %convert_element_type.3373 = bf16[32,128,512]{2,1,0} convert(%get-tuple-element.951)
  %all-gather.446 = bf16[32,128,4096]{2,1,0} all-gather(%convert_element_type.3373), channel_id=456, replica_groups=[1,8]<=[8], dimensions={2}, use_global_device_ids=true
  %dot.548 = bf16[2,8192,32,128]{3,2,1,0} dot(%sharding_constraint.1120, %all-gather.446), lhs_contracting_dims={2}, rhs_contracting_dims={2}
  %sharding_constraint.1121 = bf16[2,8192,32,128]{3,2,1,0} copy(%dot.548)
  %get-tuple-element.952 = s32[2,8192]{1,0} get-tuple-element(%remat2.83), index=21
  %eq.712 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.952), dimensions={0,1}
  %eq.713 = s32[2,8192,8192]{2,1,0} broadcast(%get-tuple-element.952), dimensions={0,2}
  %eq.714 = pred[2,8192,8192]{2,1,0} compare(%eq.712, %eq.713), direction=EQ
  %and.832 = pred[2,8192,8192]{2,1,0} and(%eq.714, %and.455)
  %select_n.2689 = f32[2,8192,8192]{2,1,0} select(%and.832, %broadcast_in_dim.277, %broadcast_in_dim.278)
  %ne.1191 = pred[2,8192,8192]{2,1,0} compare(%select_n.2689, %broadcast_in_dim.277), direction=NE
  %not.128 = pred[2,8192,8192]{2,1,0} not(%ne.1191)
  %convert_element_type.3374 = s32[2,8192,8192]{2,1,0} convert(%not.128)
  %reduce.520 = s32[2,8192]{1,0} reduce(%convert_element_type.3374, %constant.2873), dimensions={1}, to_apply=%region_392.21617
  %reduce_sum.4138 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.520)
  %slice.834 = s32[2,1,1,1]{3,2,1,0} slice(%reduce_sum.4138), slice={[0:2], [0:1], [0:1], [0:1]}
  %squeeze.63 = s32[2,1]{1,0} reshape(%slice.834)
  %reshape.9507 = s32[2]{0} reshape(%squeeze.63)
  %lt.1041 = pred[2]{0} compare(%reshape.9507, %broadcast.5111), direction=LT
  %select_n.2690 = s32[2]{0} select(%lt.1041, %broadcast.5111, %reshape.9507)
  %reduce_window_sum.318 = s32[2]{0} reduce-window(%select_n.2690, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.31
  %concatenate.383 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.318), dimensions={0}
  %reduce.521 = s32[2,8192]{1,0} reduce(%convert_element_type.3374, %constant.2873), dimensions={2}, to_apply=%region_393.21626
  %reduce_sum.4139 = s32[2,1,1,8192]{3,2,1,0} reshape(%reduce.521)
  %reduce.522 = s32[2,1]{1,0} reduce(%reduce_sum.4139, %constant.2985), dimensions={3,2}, to_apply=%region_394.21632
  %reshape.9508 = s32[2]{0} reshape(%reduce.522)
  %lt.1042 = pred[2]{0} compare(%reshape.9508, %broadcast.5111), direction=LT
  %select_n.2691 = s32[2]{0} select(%lt.1042, %broadcast.5111, %reshape.9508)
  %reduce_window_sum.319 = s32[2]{0} reduce-window(%select_n.2691, %constant.2873), window={size=2 pad=1_0}, to_apply=%region_0.36._custom_call_lowering_rule.31.clone
  %concatenate.384 = s32[3]{0} concatenate(%constant.2988, %reduce_window_sum.319), dimensions={0}
  %te_fused_attn_backward_ffi.155 = (bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, u8[538968112]{0}) custom-call(%sharding_constraint.1116, %sharding_constraint.1117, %sharding_constraint.1118, %constant.2973, %get-tuple-element.948, /*index=5*/%get-tuple-element.949, %sharding_constraint.1119, %sharding_constraint.1121, %concatenate.383, %concatenate.384, /*index=10*/%constant.2986, %constant.2986, %constant.2986, %constant.2986, %constant.2986, /*index=15*/%constant.2986), custom_call_target="te_fused_attn_backward_ffi", operand_layout_constraints={bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[2,8192,8,128]{3,2,1,0}, bf16[0]{0}, f32[2,32,8192,1]{3,2,1,0}, u32[2,4]{1,0}, bf16[2,8192,32,128]{3,2,1,0}, bf16[2,8192,32,128]{3,2,1,0}, s32[3]{0}, s32[3]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}, f32[0]{0}}, api_version=API_VERSION_TYPED_FFI, backend_config={attn_heads = 32 : i64, bias_batch = 0 : i64, bias_heads = 0 : i64, bias_type = 0 : i64, deterministic = false, dropout_probability = 0.000000e+00 : f64, input_batch = 2 : i64, is_training = true, kv_max_seqlen = 8192 : i64, mask_type = 3 : i64, max_segments_per_seq = 1 : i64, num_gqa_groups = 8 : i64, q_max_seqlen = 8192 : i64, qk_head_dim = 128 : i64, qkv_layout = 9 : i64, scaling_factor = 1.000000e+00 : f64, v_head_dim = 128 : i64, window_size_left = -1 : i64, window_size_right = -1 : i64}
  %get-tuple-element.953 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.155), index=2
  %sharding_constraint.1122 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.953)
  %get-tuple-element.954 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.83), index=19
  %convert_element_type.3376 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.954)
  %all-gather.447 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3376), channel_id=457, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.549 = bf16[2,8192,4096]{2,1,0} dot(%sharding_constraint.1122, %all-gather.447), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %get-tuple-element.955 = bf16[2,8192,8,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.155), index=1
  %sharding_constraint.1123 = bf16[2,8192,8,128]{3,2,1,0} copy(%get-tuple-element.955)
  %convert_element_type.3377 = f32[2,8192,8,128]{3,2,1,0} convert(%sharding_constraint.1123)
  %mul.5989 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3377, %mul.5952)
  %convert_element_type.3379 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5989)
  %mul.5993 = f32[2,8192,8,128]{3,2,1,0} multiply(%convert_element_type.3377, %mul.5961)
  %mul.5997 = f32[2,8192,8,128]{3,2,1,0} multiply(%mul.5993, %mul.5957)
  %convert_element_type.3380 = bf16[2,8192,8,128]{3,2,1,0} convert(%mul.5997)
  %select_n.2693 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8226, %convert_element_type.3380, %broadcast.5147)
  %slice.835 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2693), slice={[0:2], [0:8192], [0:8], [1:128]}
  %pad.250 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.835, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.584 = bf16[2,8192,8,128]{3,2,1,0} add(%convert_element_type.3379, %pad.250)
  %slice.836 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2693), slice={[0:2], [0:8192], [0:8], [0:1]}
  %pad.251 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.836, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.585 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.584, %pad.251)
  %select_n.2695 = bf16[2,8192,8,128]{3,2,1,0} select(%reshape.8231, %convert_element_type.3380, %broadcast.5147)
  %slice.837 = bf16[2,8192,8,1]{3,2,1,0} slice(%select_n.2695), slice={[0:2], [0:8192], [0:8], [127:128]}
  %pad.252 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.837, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.586 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.585, %pad.252)
  %slice.838 = bf16[2,8192,8,127]{3,2,1,0} slice(%select_n.2695), slice={[0:2], [0:8192], [0:8], [0:127]}
  %pad.253 = bf16[2,8192,8,128]{3,2,1,0} pad(%slice.838, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.587 = bf16[2,8192,8,128]{3,2,1,0} add(%add_any.586, %pad.253)
  %get-tuple-element.956 = f32[512,8,128]{2,1,0} get-tuple-element(%remat2.83), index=16
  %convert_element_type.3381 = bf16[512,8,128]{2,1,0} convert(%get-tuple-element.956)
  %all-gather.448 = bf16[4096,8,128]{2,1,0} all-gather(%convert_element_type.3381), channel_id=458, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.550 = bf16[2,8192,4096]{2,1,0} dot(%add_any.587, %all-gather.448), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %add_any.588 = bf16[2,8192,4096]{2,1,0} add(%dot.549, %dot.550)
  %sharding_constraint.1124 = bf16[2,8192,4096]{2,1,0} copy(%add_any.588)
  %get-tuple-element.957 = bf16[2,8192,32,128]{3,2,1,0} get-tuple-element(%te_fused_attn_backward_ffi.155), index=0
  %sharding_constraint.1125 = bf16[2,8192,32,128]{3,2,1,0} copy(%get-tuple-element.957)
  %convert_element_type.3382 = f32[2,8192,32,128]{3,2,1,0} convert(%sharding_constraint.1125)
  %mul.6000 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3382, %mul.5941)
  %convert_element_type.3383 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.6000)
  %mul.6005 = f32[2,8192,32,128]{3,2,1,0} multiply(%convert_element_type.3382, %mul.5946)
  %mul.6008 = f32[2,8192,32,128]{3,2,1,0} multiply(%mul.6005, %mul.5944)
  %convert_element_type.3384 = bf16[2,8192,32,128]{3,2,1,0} convert(%mul.6008)
  %select_n.2697 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8237, %convert_element_type.3384, %broadcast.5148)
  %slice.839 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2697), slice={[0:2], [0:8192], [0:32], [1:128]}
  %pad.254 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.839, %constant.5662), padding=0_0x0_0x0_0x0_1
  %add_any.589 = bf16[2,8192,32,128]{3,2,1,0} add(%convert_element_type.3383, %pad.254)
  %slice.840 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2697), slice={[0:2], [0:8192], [0:32], [0:1]}
  %pad.255 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.840, %constant.5662), padding=0_0x0_0x0_0x127_0
  %add_any.590 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.589, %pad.255)
  %select_n.2699 = bf16[2,8192,32,128]{3,2,1,0} select(%reshape.8243, %convert_element_type.3384, %broadcast.5148)
  %slice.841 = bf16[2,8192,32,1]{3,2,1,0} slice(%select_n.2699), slice={[0:2], [0:8192], [0:32], [127:128]}
  %pad.256 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.841, %constant.5662), padding=0_0x0_0x0_0x0_127
  %add_any.591 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.590, %pad.256)
  %slice.842 = bf16[2,8192,32,127]{3,2,1,0} slice(%select_n.2699), slice={[0:2], [0:8192], [0:32], [0:127]}
  %pad.257 = bf16[2,8192,32,128]{3,2,1,0} pad(%slice.842, %constant.5662), padding=0_0x0_0x0_0x1_0
  %add_any.592 = bf16[2,8192,32,128]{3,2,1,0} add(%add_any.591, %pad.257)
  %get-tuple-element.958 = f32[512,32,128]{2,1,0} get-tuple-element(%remat2.83), index=18
  %convert_element_type.3385 = bf16[512,32,128]{2,1,0} convert(%get-tuple-element.958)
  %all-gather.449 = bf16[4096,32,128]{2,1,0} all-gather(%convert_element_type.3385), channel_id=459, replica_groups=[1,8]<=[8], dimensions={0}, use_global_device_ids=true
  %dot.551 = bf16[2,8192,4096]{2,1,0} dot(%add_any.592, %all-gather.449), lhs_contracting_dims={2,3}, rhs_contracting_dims={1,2}
  %sharding_constraint.1126 = bf16[2,8192,4096]{2,1,0} copy(%dot.551)
  %add_any.593 = bf16[2,8192,4096]{2,1,0} add(%sharding_constraint.1124, %sharding_constraint.1126)
  %sharding_constraint.1127 = bf16[2,8192,4096]{2,1,0} copy(%add_any.593)
  %mul.6009 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3345, %sharding_constraint.1127)
  %reduce.523 = bf16[4096]{0} reduce(%mul.6009, %constant.5662), dimensions={0,1}, to_apply=%region_395.21715
  %all-reduce.9 = bf16[4096]{0} all-reduce(%reduce.523), channel_id=460, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_395.21715.clone
  %convert_element_type.3386 = f32[4096]{0} convert(%all-reduce.9)
  %mul.6010 = f32[4096]{0} multiply(%convert_element_type.3386, %convert_element_type.3386)
  %reduce.524 = f32[] reduce(%mul.6010, %constant.2882), dimensions={0}, to_apply=%region_396.21722
  %add.2975 = f32[] add(%add.2960, %reduce.524)
  %get-tuple-element.959 = f32[4096]{0} get-tuple-element(%remat2.83), index=15
  %convert_element_type.3387 = bf16[4096]{0} convert(%get-tuple-element.959)
  %mul.6011 = bf16[2,8192,4096]{2,1,0} broadcast(%convert_element_type.3387), dimensions={2}
  %mul.6013 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3345, %mul.6011)
  %sharding_constraint.1128 = bf16[2,8192,4096]{2,1,0} copy(%mul.6013)
  %sharding_constraint.1129 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1128)
  %dot.552 = bf16[8,128,4096]{2,1,0} dot(%add_any.587, %sharding_constraint.1129), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.10 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.552), channel_id=461, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.3.clone
  %dynamic-slice.1097 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.10, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3388 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1097)
  %convert_element_type.3389 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3388), dimensions={2,0,1}
  %mul.6018 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3389, %convert_element_type.3389)
  %reduce.525 = f32[] reduce(%mul.6018, %constant.2882), dimensions={0,1,2}, to_apply=%region_397.21737
  %all-reduce.11 = f32[] all-reduce(%reduce.525), channel_id=462, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_397.21737.clone
  %add.2976 = f32[] add(%add.2975, %all-reduce.11)
  %dot.553 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.1120, %sharding_constraint.1119), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.12 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.553), channel_id=463, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.4.clone
  %dynamic-slice.1099 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.12, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3390 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1099)
  %convert_element_type.3391 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3390), dimensions={1,2,0}
  %mul.6019 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3391, %convert_element_type.3391)
  %reduce.526 = f32[] reduce(%mul.6019, %constant.2882), dimensions={0,1,2}, to_apply=%region_398.21747
  %all-reduce.13 = f32[] all-reduce(%reduce.526), channel_id=464, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_398.21747.clone
  %add.2977 = f32[] add(%add.2976, %all-reduce.13)
  %dot.554 = bf16[32,128,4096]{2,1,0} dot(%add_any.592, %sharding_constraint.1129), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.14 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.554), channel_id=465, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.5.clone
  %dynamic-slice.1101 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.14, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3393 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1101)
  %convert_element_type.3394 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3393), dimensions={2,0,1}
  %mul.6020 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3394, %convert_element_type.3394)
  %reduce.527 = f32[] reduce(%mul.6020, %constant.2882), dimensions={0,1,2}, to_apply=%region_399.21758
  %all-reduce.15 = f32[] all-reduce(%reduce.527), channel_id=466, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_399.21758.clone
  %add.2979 = f32[] add(%add.2977, %all-reduce.15)
  %dot.555 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.1122, %sharding_constraint.1129), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.16 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.555), channel_id=467, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.6.clone
  %dynamic-slice.1103 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.16, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3395 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1103)
  %convert_element_type.3397 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3395), dimensions={2,0,1}
  %mul.6023 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3397, %convert_element_type.3397)
  %reduce.528 = f32[] reduce(%mul.6023, %constant.2882), dimensions={0,1,2}, to_apply=%region_400.21768
  %all-reduce.17 = f32[] all-reduce(%reduce.528), channel_id=468, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_400.21768.clone
  %add.2980 = f32[] add(%add.2979, %all-reduce.17)
  %mul.6026 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3283, %mul.5824)
  %convert_element_type.3398 = bf16[2,8192,4096]{2,1,0} convert(%mul.6026)
  %mul.6028 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3398, %mul.5821)
  %sharding_constraint.1131 = bf16[2,8192,4096]{2,1,0} copy(%mul.6028)
  %dot.556 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1131, %add_any.564), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.18 = bf16[4096,14336]{1,0} all-reduce(%dot.556), channel_id=469, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.7.clone
  %dynamic-slice.1105 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.18, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3399 = f32[512,14336]{1,0} convert(%dynamic-slice.1105)
  %mul.6029 = f32[512,14336]{1,0} multiply(%convert_element_type.3399, %convert_element_type.3399)
  %reduce.529 = f32[] reduce(%mul.6029, %constant.2882), dimensions={0,1}, to_apply=%region_401.21784
  %all-reduce.19 = f32[] all-reduce(%reduce.529), channel_id=470, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_401.21784.clone
  %add.2981 = f32[] add(%add.2980, %all-reduce.19)
  %dot.557 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1131, %mul.5815), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.20 = bf16[4096,14336]{1,0} all-reduce(%dot.557), channel_id=471, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.8.clone
  %dynamic-slice.1107 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.20, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3403 = f32[512,14336]{1,0} convert(%dynamic-slice.1107)
  %mul.6030 = f32[512,14336]{1,0} multiply(%convert_element_type.3403, %convert_element_type.3403)
  %reduce.530 = f32[] reduce(%mul.6030, %constant.2882), dimensions={0,1}, to_apply=%region_402.21793
  %all-reduce.21 = f32[] all-reduce(%reduce.530), channel_id=472, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_402.21793.clone
  %add.2982 = f32[] add(%add.2981, %all-reduce.21)
  %mul.6031 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5814, %get-tuple-element.910)
  %sharding_constraint.1132 = bf16[2,8192,14336]{2,1,0} copy(%mul.6031)
  %dot.558 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1132, %sharding_constraint.1090), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.22 = bf16[14336,4096]{1,0} all-reduce(%dot.558), channel_id=473, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.9.clone
  %dynamic-slice.1109 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.22, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3404 = f32[14336,512]{1,0} convert(%dynamic-slice.1109)
  %mul.6032 = f32[14336,512]{1,0} multiply(%convert_element_type.3404, %convert_element_type.3404)
  %reduce.531 = f32[] reduce(%mul.6032, %constant.2882), dimensions={0,1}, to_apply=%region_403.21804
  %all-reduce.23 = f32[] all-reduce(%reduce.531), channel_id=474, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_403.21804.clone
  %add.2983 = f32[] add(%add.2982, %all-reduce.23)
  %mul.6033 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3398, %sharding_constraint.1092)
  %reduce.532 = bf16[4096]{0} reduce(%mul.6033, %constant.5662), dimensions={0,1}, to_apply=%region_404.21811
  %all-reduce.24 = bf16[4096]{0} all-reduce(%reduce.532), channel_id=475, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_404.21811.clone
  %convert_element_type.3405 = f32[4096]{0} convert(%all-reduce.24)
  %mul.6035 = f32[4096]{0} multiply(%convert_element_type.3405, %convert_element_type.3405)
  %reduce.533 = f32[] reduce(%mul.6035, %constant.2882), dimensions={0}, to_apply=%region_405.21818
  %add.2984 = f32[] add(%add.2983, %reduce.533)
  %mul.6042 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3328, %mul.5899)
  %convert_element_type.3406 = bf16[2,8192,4096]{2,1,0} convert(%mul.6042)
  %mul.6047 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3406, %sharding_constraint.1106)
  %reduce.534 = bf16[4096]{0} reduce(%mul.6047, %constant.5662), dimensions={0,1}, to_apply=%region_406.21829
  %all-reduce.25 = bf16[4096]{0} all-reduce(%reduce.534), channel_id=476, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_406.21829.clone
  %convert_element_type.3407 = f32[4096]{0} convert(%all-reduce.25)
  %mul.6048 = f32[4096]{0} multiply(%convert_element_type.3407, %convert_element_type.3407)
  %reduce.535 = f32[] reduce(%mul.6048, %constant.2882), dimensions={0}, to_apply=%region_407.21836
  %add.2985 = f32[] add(%add.2984, %reduce.535)
  %mul.6055 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3406, %mul.5896)
  %sharding_constraint.1133 = bf16[2,8192,4096]{2,1,0} copy(%mul.6055)
  %sharding_constraint.1134 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1133)
  %dot.559 = bf16[8,128,4096]{2,1,0} dot(%add_any.571, %sharding_constraint.1134), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.26 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.559), channel_id=477, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.10.clone
  %dynamic-slice.1111 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.26, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3408 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1111)
  %convert_element_type.3409 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3408), dimensions={2,0,1}
  %mul.6057 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3409, %convert_element_type.3409)
  %reduce.536 = f32[] reduce(%mul.6057, %constant.2882), dimensions={0,1,2}, to_apply=%region_408.21850
  %all-reduce.27 = f32[] all-reduce(%reduce.536), channel_id=478, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_408.21850.clone
  %add.2986 = f32[] add(%add.2985, %all-reduce.27)
  %dot.560 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.1099, %sharding_constraint.1098), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.28 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.560), channel_id=479, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.11.clone
  %dynamic-slice.1113 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.28, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3410 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1113)
  %convert_element_type.3411 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3410), dimensions={1,2,0}
  %mul.6058 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3411, %convert_element_type.3411)
  %reduce.537 = f32[] reduce(%mul.6058, %constant.2882), dimensions={0,1,2}, to_apply=%region_409.21860
  %all-reduce.29 = f32[] all-reduce(%reduce.537), channel_id=480, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_409.21860.clone
  %add.2987 = f32[] add(%add.2986, %all-reduce.29)
  %dot.561 = bf16[32,128,4096]{2,1,0} dot(%add_any.576, %sharding_constraint.1134), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.30 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.561), channel_id=481, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.12.clone
  %dynamic-slice.1115 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.30, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3412 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1115)
  %convert_element_type.3415 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3412), dimensions={2,0,1}
  %mul.6059 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3415, %convert_element_type.3415)
  %reduce.538 = f32[] reduce(%mul.6059, %constant.2882), dimensions={0,1,2}, to_apply=%region_410.21871
  %all-reduce.31 = f32[] all-reduce(%reduce.538), channel_id=482, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_410.21871.clone
  %add.2988 = f32[] add(%add.2987, %all-reduce.31)
  %dot.562 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.1101, %sharding_constraint.1134), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.32 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.562), channel_id=483, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.13.clone
  %dynamic-slice.1117 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.32, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3416 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1117)
  %convert_element_type.3417 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3416), dimensions={2,0,1}
  %mul.6060 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3417, %convert_element_type.3417)
  %reduce.539 = f32[] reduce(%mul.6060, %constant.2882), dimensions={0,1,2}, to_apply=%region_411.21881
  %all-reduce.33 = f32[] all-reduce(%reduce.539), channel_id=484, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_411.21881.clone
  %add.2990 = f32[] add(%add.2988, %all-reduce.33)
  %mul.6063 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2832, %mul.4965)
  %convert_element_type.3419 = bf16[2,8192,4096]{2,1,0} convert(%mul.6063)
  %mul.6068 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3419, %mul.4962)
  %sharding_constraint.1136 = bf16[2,8192,4096]{2,1,0} copy(%mul.6068)
  %dot.563 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1136, %add_any.420), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.34 = bf16[4096,14336]{1,0} all-reduce(%dot.563), channel_id=485, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.14.clone
  %dynamic-slice.1119 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.34, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3420 = f32[512,14336]{1,0} convert(%dynamic-slice.1119)
  %mul.6069 = f32[512,14336]{1,0} multiply(%convert_element_type.3420, %convert_element_type.3420)
  %reduce.540 = f32[] reduce(%mul.6069, %constant.2882), dimensions={0,1}, to_apply=%region_412.21897
  %all-reduce.35 = f32[] all-reduce(%reduce.540), channel_id=486, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_412.21897.clone
  %add.2991 = f32[] add(%add.2990, %all-reduce.35)
  %dot.564 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1136, %mul.4956), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.36 = bf16[4096,14336]{1,0} all-reduce(%dot.564), channel_id=487, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.15.clone
  %dynamic-slice.1121 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.36, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3421 = f32[512,14336]{1,0} convert(%dynamic-slice.1121)
  %mul.6070 = f32[512,14336]{1,0} multiply(%convert_element_type.3421, %convert_element_type.3421)
  %reduce.541 = f32[] reduce(%mul.6070, %constant.2882), dimensions={0,1}, to_apply=%region_413.21906
  %all-reduce.37 = f32[] all-reduce(%reduce.541), channel_id=488, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_413.21906.clone
  %add.2992 = f32[] add(%add.2991, %all-reduce.37)
  %mul.6071 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4955, %get-tuple-element.667)
  %sharding_constraint.1137 = bf16[2,8192,14336]{2,1,0} copy(%mul.6071)
  %dot.565 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1137, %sharding_constraint.914), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.38 = bf16[14336,4096]{1,0} all-reduce(%dot.565), channel_id=489, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.16.clone
  %dynamic-slice.1123 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.38, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3422 = f32[14336,512]{1,0} convert(%dynamic-slice.1123)
  %mul.6072 = f32[14336,512]{1,0} multiply(%convert_element_type.3422, %convert_element_type.3422)
  %reduce.542 = f32[] reduce(%mul.6072, %constant.2882), dimensions={0,1}, to_apply=%region_414.21917
  %all-reduce.39 = f32[] all-reduce(%reduce.542), channel_id=490, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_414.21917.clone
  %add.2993 = f32[] add(%add.2992, %all-reduce.39)
  %mul.6073 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3419, %sharding_constraint.916)
  %reduce.543 = bf16[4096]{0} reduce(%mul.6073, %constant.5662), dimensions={0,1}, to_apply=%region_415.21924
  %all-reduce.40 = bf16[4096]{0} all-reduce(%reduce.543), channel_id=491, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_415.21924.clone
  %convert_element_type.3423 = f32[4096]{0} convert(%all-reduce.40)
  %mul.6074 = f32[4096]{0} multiply(%convert_element_type.3423, %convert_element_type.3423)
  %reduce.544 = f32[] reduce(%mul.6074, %constant.2882), dimensions={0}, to_apply=%region_416.21931
  %add.2994 = f32[] add(%add.2993, %reduce.544)
  %mul.6077 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2869, %mul.5028)
  %convert_element_type.3424 = bf16[2,8192,4096]{2,1,0} convert(%mul.6077)
  %mul.6078 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3424, %sharding_constraint.930)
  %reduce.545 = bf16[4096]{0} reduce(%mul.6078, %constant.5662), dimensions={0,1}, to_apply=%region_417.21942
  %all-reduce.41 = bf16[4096]{0} all-reduce(%reduce.545), channel_id=492, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_417.21942.clone
  %convert_element_type.3425 = f32[4096]{0} convert(%all-reduce.41)
  %mul.6082 = f32[4096]{0} multiply(%convert_element_type.3425, %convert_element_type.3425)
  %reduce.546 = f32[] reduce(%mul.6082, %constant.2882), dimensions={0}, to_apply=%region_418.21949
  %add.2995 = f32[] add(%add.2994, %reduce.546)
  %mul.6084 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3424, %mul.5024)
  %sharding_constraint.1138 = bf16[2,8192,4096]{2,1,0} copy(%mul.6084)
  %sharding_constraint.1139 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1138)
  %dot.566 = bf16[8,128,4096]{2,1,0} dot(%add_any.427, %sharding_constraint.1139), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.42 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.566), channel_id=493, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.17.clone
  %dynamic-slice.1125 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.42, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3427 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1125)
  %convert_element_type.3428 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3427), dimensions={2,0,1}
  %mul.6087 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3428, %convert_element_type.3428)
  %reduce.547 = f32[] reduce(%mul.6087, %constant.2882), dimensions={0,1,2}, to_apply=%region_419.21963
  %all-reduce.43 = f32[] all-reduce(%reduce.547), channel_id=494, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_419.21963.clone
  %add.2996 = f32[] add(%add.2995, %all-reduce.43)
  %dot.567 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.923, %sharding_constraint.922), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.44 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.567), channel_id=495, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.18.clone
  %dynamic-slice.1127 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.44, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3429 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1127)
  %convert_element_type.3430 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3429), dimensions={1,2,0}
  %mul.6088 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3430, %convert_element_type.3430)
  %reduce.548 = f32[] reduce(%mul.6088, %constant.2882), dimensions={0,1,2}, to_apply=%region_420.21973
  %all-reduce.45 = f32[] all-reduce(%reduce.548), channel_id=496, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_420.21973.clone
  %add.2997 = f32[] add(%add.2996, %all-reduce.45)
  %dot.568 = bf16[32,128,4096]{2,1,0} dot(%add_any.432, %sharding_constraint.1139), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.46 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.568), channel_id=497, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.19.clone
  %dynamic-slice.1129 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.46, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3433 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1129)
  %convert_element_type.3434 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3433), dimensions={2,0,1}
  %mul.6089 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3434, %convert_element_type.3434)
  %reduce.549 = f32[] reduce(%mul.6089, %constant.2882), dimensions={0,1,2}, to_apply=%region_421.21984
  %all-reduce.47 = f32[] all-reduce(%reduce.549), channel_id=498, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_421.21984.clone
  %add.2998 = f32[] add(%add.2997, %all-reduce.47)
  %dot.569 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.925, %sharding_constraint.1139), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.48 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.569), channel_id=499, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.20.clone
  %dynamic-slice.1131 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.48, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3435 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1131)
  %convert_element_type.3436 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3435), dimensions={2,0,1}
  %mul.6090 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3436, %convert_element_type.3436)
  %reduce.550 = f32[] reduce(%mul.6090, %constant.2882), dimensions={0,1,2}, to_apply=%region_422.21994
  %all-reduce.49 = f32[] all-reduce(%reduce.550), channel_id=500, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_422.21994.clone
  %add.2999 = f32[] add(%add.2998, %all-reduce.49)
  %mul.6093 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2781, %mul.4870)
  %convert_element_type.3438 = bf16[2,8192,4096]{2,1,0} convert(%mul.6093)
  %mul.6095 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3438, %mul.4867)
  %sharding_constraint.1141 = bf16[2,8192,4096]{2,1,0} copy(%mul.6095)
  %dot.570 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1141, %add_any.404), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.50 = bf16[4096,14336]{1,0} all-reduce(%dot.570), channel_id=501, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.21.clone
  %dynamic-slice.1133 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.50, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3439 = f32[512,14336]{1,0} convert(%dynamic-slice.1133)
  %mul.6096 = f32[512,14336]{1,0} multiply(%convert_element_type.3439, %convert_element_type.3439)
  %reduce.551 = f32[] reduce(%mul.6096, %constant.2882), dimensions={0,1}, to_apply=%region_423.22010
  %all-reduce.51 = f32[] all-reduce(%reduce.551), channel_id=502, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_423.22010.clone
  %add.3000 = f32[] add(%add.2999, %all-reduce.51)
  %dot.571 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1141, %mul.4858), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.52 = bf16[4096,14336]{1,0} all-reduce(%dot.571), channel_id=503, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.22.clone
  %dynamic-slice.1135 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.52, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3440 = f32[512,14336]{1,0} convert(%dynamic-slice.1135)
  %mul.6097 = f32[512,14336]{1,0} multiply(%convert_element_type.3440, %convert_element_type.3440)
  %reduce.552 = f32[] reduce(%mul.6097, %constant.2882), dimensions={0,1}, to_apply=%region_424.22019
  %all-reduce.53 = f32[] all-reduce(%reduce.552), channel_id=504, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_424.22019.clone
  %add.3001 = f32[] add(%add.3000, %all-reduce.53)
  %mul.6098 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4857, %get-tuple-element.640)
  %sharding_constraint.1142 = bf16[2,8192,14336]{2,1,0} copy(%mul.6098)
  %dot.572 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1142, %sharding_constraint.895), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.54 = bf16[14336,4096]{1,0} all-reduce(%dot.572), channel_id=505, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.23.clone
  %dynamic-slice.1137 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.54, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3441 = f32[14336,512]{1,0} convert(%dynamic-slice.1137)
  %mul.6099 = f32[14336,512]{1,0} multiply(%convert_element_type.3441, %convert_element_type.3441)
  %reduce.553 = f32[] reduce(%mul.6099, %constant.2882), dimensions={0,1}, to_apply=%region_425.22030
  %all-reduce.55 = f32[] all-reduce(%reduce.553), channel_id=506, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_425.22030.clone
  %add.3002 = f32[] add(%add.3001, %all-reduce.55)
  %mul.6100 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3438, %sharding_constraint.897)
  %reduce.554 = bf16[4096]{0} reduce(%mul.6100, %constant.5662), dimensions={0,1}, to_apply=%region_426.22037
  %all-reduce.56 = bf16[4096]{0} all-reduce(%reduce.554), channel_id=507, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_426.22037.clone
  %convert_element_type.3443 = f32[4096]{0} convert(%all-reduce.56)
  %mul.6101 = f32[4096]{0} multiply(%convert_element_type.3443, %convert_element_type.3443)
  %reduce.555 = f32[] reduce(%mul.6101, %constant.2882), dimensions={0}, to_apply=%region_427.22044
  %add.3003 = f32[] add(%add.3002, %reduce.555)
  %mul.6104 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2820, %mul.4944)
  %convert_element_type.3444 = bf16[2,8192,4096]{2,1,0} convert(%mul.6104)
  %mul.6105 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3444, %sharding_constraint.911)
  %reduce.556 = bf16[4096]{0} reduce(%mul.6105, %constant.5662), dimensions={0,1}, to_apply=%region_428.22055
  %all-reduce.57 = bf16[4096]{0} all-reduce(%reduce.556), channel_id=508, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_428.22055.clone
  %convert_element_type.3445 = f32[4096]{0} convert(%all-reduce.57)
  %mul.6106 = f32[4096]{0} multiply(%convert_element_type.3445, %convert_element_type.3445)
  %reduce.557 = f32[] reduce(%mul.6106, %constant.2882), dimensions={0}, to_apply=%region_429.22062
  %add.3004 = f32[] add(%add.3003, %reduce.557)
  %mul.6108 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3444, %mul.4938)
  %sharding_constraint.1143 = bf16[2,8192,4096]{2,1,0} copy(%mul.6108)
  %sharding_constraint.1144 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1143)
  %dot.573 = bf16[8,128,4096]{2,1,0} dot(%add_any.411, %sharding_constraint.1144), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.58 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.573), channel_id=509, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.24.clone
  %dynamic-slice.1139 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.58, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3446 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1139)
  %convert_element_type.3447 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3446), dimensions={2,0,1}
  %mul.6109 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3447, %convert_element_type.3447)
  %reduce.558 = f32[] reduce(%mul.6109, %constant.2882), dimensions={0,1,2}, to_apply=%region_430.22076
  %all-reduce.59 = f32[] all-reduce(%reduce.558), channel_id=510, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_430.22076.clone
  %add.3005 = f32[] add(%add.3004, %all-reduce.59)
  %dot.574 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.904, %sharding_constraint.903), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.60 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.574), channel_id=511, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.25.clone
  %dynamic-slice.1141 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.60, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3448 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1141)
  %convert_element_type.3451 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3448), dimensions={1,2,0}
  %mul.6110 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3451, %convert_element_type.3451)
  %reduce.559 = f32[] reduce(%mul.6110, %constant.2882), dimensions={0,1,2}, to_apply=%region_431.22086
  %all-reduce.61 = f32[] all-reduce(%reduce.559), channel_id=512, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_431.22086.clone
  %add.3006 = f32[] add(%add.3005, %all-reduce.61)
  %dot.575 = bf16[32,128,4096]{2,1,0} dot(%add_any.416, %sharding_constraint.1144), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.62 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.575), channel_id=513, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.26.clone
  %dynamic-slice.1143 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.62, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3452 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1143)
  %convert_element_type.3453 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3452), dimensions={2,0,1}
  %mul.6111 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3453, %convert_element_type.3453)
  %reduce.560 = f32[] reduce(%mul.6111, %constant.2882), dimensions={0,1,2}, to_apply=%region_432.22097
  %all-reduce.63 = f32[] all-reduce(%reduce.560), channel_id=514, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_432.22097.clone
  %add.3007 = f32[] add(%add.3006, %all-reduce.63)
  %dot.576 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.906, %sharding_constraint.1144), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.64 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.576), channel_id=515, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.27.clone
  %dynamic-slice.1145 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.64, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3454 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1145)
  %convert_element_type.3456 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3454), dimensions={2,0,1}
  %mul.6112 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3456, %convert_element_type.3456)
  %reduce.561 = f32[] reduce(%mul.6112, %constant.2882), dimensions={0,1,2}, to_apply=%region_433.22107
  %all-reduce.65 = f32[] all-reduce(%reduce.561), channel_id=516, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_433.22107.clone
  %add.3008 = f32[] add(%add.3007, %all-reduce.65)
  %mul.6115 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2728, %mul.4772)
  %convert_element_type.3457 = bf16[2,8192,4096]{2,1,0} convert(%mul.6115)
  %mul.6117 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3457, %mul.4769)
  %sharding_constraint.1146 = bf16[2,8192,4096]{2,1,0} copy(%mul.6117)
  %dot.577 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1146, %add_any.388), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.66 = bf16[4096,14336]{1,0} all-reduce(%dot.577), channel_id=517, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.28.clone
  %dynamic-slice.1147 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.66, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3460 = f32[512,14336]{1,0} convert(%dynamic-slice.1147)
  %mul.6118 = f32[512,14336]{1,0} multiply(%convert_element_type.3460, %convert_element_type.3460)
  %reduce.562 = f32[] reduce(%mul.6118, %constant.2882), dimensions={0,1}, to_apply=%region_434.22123
  %all-reduce.67 = f32[] all-reduce(%reduce.562), channel_id=518, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_434.22123.clone
  %add.3009 = f32[] add(%add.3008, %all-reduce.67)
  %dot.578 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1146, %mul.4755), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.68 = bf16[4096,14336]{1,0} all-reduce(%dot.578), channel_id=519, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.29.clone
  %dynamic-slice.1149 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.68, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3461 = f32[512,14336]{1,0} convert(%dynamic-slice.1149)
  %mul.6119 = f32[512,14336]{1,0} multiply(%convert_element_type.3461, %convert_element_type.3461)
  %reduce.563 = f32[] reduce(%mul.6119, %constant.2882), dimensions={0,1}, to_apply=%region_435.22132
  %all-reduce.69 = f32[] all-reduce(%reduce.563), channel_id=520, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_435.22132.clone
  %add.3010 = f32[] add(%add.3009, %all-reduce.69)
  %mul.6120 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4754, %get-tuple-element.613)
  %sharding_constraint.1147 = bf16[2,8192,14336]{2,1,0} copy(%mul.6120)
  %dot.579 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1147, %sharding_constraint.876), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.70 = bf16[14336,4096]{1,0} all-reduce(%dot.579), channel_id=521, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.30.clone
  %dynamic-slice.1151 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.70, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3462 = f32[14336,512]{1,0} convert(%dynamic-slice.1151)
  %mul.6121 = f32[14336,512]{1,0} multiply(%convert_element_type.3462, %convert_element_type.3462)
  %reduce.564 = f32[] reduce(%mul.6121, %constant.2882), dimensions={0,1}, to_apply=%region_436.22143
  %all-reduce.71 = f32[] all-reduce(%reduce.564), channel_id=522, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_436.22143.clone
  %add.3011 = f32[] add(%add.3010, %all-reduce.71)
  %mul.6122 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3457, %sharding_constraint.878)
  %reduce.565 = bf16[4096]{0} reduce(%mul.6122, %constant.5662), dimensions={0,1}, to_apply=%region_437.22150
  %all-reduce.72 = bf16[4096]{0} all-reduce(%reduce.565), channel_id=523, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_437.22150.clone
  %convert_element_type.3464 = f32[4096]{0} convert(%all-reduce.72)
  %mul.6127 = f32[4096]{0} multiply(%convert_element_type.3464, %convert_element_type.3464)
  %reduce.566 = f32[] reduce(%mul.6127, %constant.2882), dimensions={0}, to_apply=%region_438.22157
  %add.3012 = f32[] add(%add.3011, %reduce.566)
  %mul.6134 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2773, %mul.4836)
  %convert_element_type.3465 = bf16[2,8192,4096]{2,1,0} convert(%mul.6134)
  %mul.6135 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3465, %sharding_constraint.892)
  %reduce.567 = bf16[4096]{0} reduce(%mul.6135, %constant.5662), dimensions={0,1}, to_apply=%region_439.22168
  %all-reduce.73 = bf16[4096]{0} all-reduce(%reduce.567), channel_id=524, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_439.22168.clone
  %convert_element_type.3466 = f32[4096]{0} convert(%all-reduce.73)
  %mul.6136 = f32[4096]{0} multiply(%convert_element_type.3466, %convert_element_type.3466)
  %reduce.568 = f32[] reduce(%mul.6136, %constant.2882), dimensions={0}, to_apply=%region_440.22175
  %add.3013 = f32[] add(%add.3012, %reduce.568)
  %mul.6138 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3465, %mul.4833)
  %sharding_constraint.1148 = bf16[2,8192,4096]{2,1,0} copy(%mul.6138)
  %sharding_constraint.1149 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1148)
  %dot.580 = bf16[8,128,4096]{2,1,0} dot(%add_any.395, %sharding_constraint.1149), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.74 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.580), channel_id=525, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.31.clone
  %dynamic-slice.1153 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.74, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3467 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1153)
  %convert_element_type.3469 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3467), dimensions={2,0,1}
  %mul.6139 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3469, %convert_element_type.3469)
  %reduce.569 = f32[] reduce(%mul.6139, %constant.2882), dimensions={0,1,2}, to_apply=%region_441.22189
  %all-reduce.75 = f32[] all-reduce(%reduce.569), channel_id=526, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_441.22189.clone
  %add.3014 = f32[] add(%add.3013, %all-reduce.75)
  %dot.581 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.885, %sharding_constraint.884), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.76 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.581), channel_id=527, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.32.clone
  %dynamic-slice.1155 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.76, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3471 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1155)
  %convert_element_type.3472 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3471), dimensions={1,2,0}
  %mul.6140 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3472, %convert_element_type.3472)
  %reduce.570 = f32[] reduce(%mul.6140, %constant.2882), dimensions={0,1,2}, to_apply=%region_442.22199
  %all-reduce.77 = f32[] all-reduce(%reduce.570), channel_id=528, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_442.22199.clone
  %add.3015 = f32[] add(%add.3014, %all-reduce.77)
  %dot.582 = bf16[32,128,4096]{2,1,0} dot(%add_any.400, %sharding_constraint.1149), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.78 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.582), channel_id=529, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.33.clone
  %dynamic-slice.1157 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.78, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3474 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1157)
  %convert_element_type.3475 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3474), dimensions={2,0,1}
  %mul.6141 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3475, %convert_element_type.3475)
  %reduce.571 = f32[] reduce(%mul.6141, %constant.2882), dimensions={0,1,2}, to_apply=%region_443.22210
  %all-reduce.79 = f32[] all-reduce(%reduce.571), channel_id=530, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_443.22210.clone
  %add.3016 = f32[] add(%add.3015, %all-reduce.79)
  %dot.583 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.887, %sharding_constraint.1149), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.80 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.583), channel_id=531, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.34.clone
  %dynamic-slice.1159 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.80, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3477 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1159)
  %convert_element_type.3479 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3477), dimensions={2,0,1}
  %mul.6143 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3479, %convert_element_type.3479)
  %reduce.572 = f32[] reduce(%mul.6143, %constant.2882), dimensions={0,1,2}, to_apply=%region_444.22220
  %all-reduce.81 = f32[] all-reduce(%reduce.572), channel_id=532, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_444.22220.clone
  %add.3017 = f32[] add(%add.3016, %all-reduce.81)
  %mul.6146 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2681, %mul.4677)
  %convert_element_type.3480 = bf16[2,8192,4096]{2,1,0} convert(%mul.6146)
  %mul.6150 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3480, %mul.4674)
  %sharding_constraint.1151 = bf16[2,8192,4096]{2,1,0} copy(%mul.6150)
  %dot.584 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1151, %add_any.372), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.82 = bf16[4096,14336]{1,0} all-reduce(%dot.584), channel_id=533, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.35.clone
  %dynamic-slice.1161 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.82, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3481 = f32[512,14336]{1,0} convert(%dynamic-slice.1161)
  %mul.6153 = f32[512,14336]{1,0} multiply(%convert_element_type.3481, %convert_element_type.3481)
  %reduce.573 = f32[] reduce(%mul.6153, %constant.2882), dimensions={0,1}, to_apply=%region_445.22236
  %all-reduce.83 = f32[] all-reduce(%reduce.573), channel_id=534, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_445.22236.clone
  %add.3018 = f32[] add(%add.3017, %all-reduce.83)
  %dot.585 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1151, %mul.4668), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.84 = bf16[4096,14336]{1,0} all-reduce(%dot.585), channel_id=535, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.36.clone
  %dynamic-slice.1163 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.84, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3482 = f32[512,14336]{1,0} convert(%dynamic-slice.1163)
  %mul.6154 = f32[512,14336]{1,0} multiply(%convert_element_type.3482, %convert_element_type.3482)
  %reduce.574 = f32[] reduce(%mul.6154, %constant.2882), dimensions={0,1}, to_apply=%region_446.22245
  %all-reduce.85 = f32[] all-reduce(%reduce.574), channel_id=536, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_446.22245.clone
  %add.3019 = f32[] add(%add.3018, %all-reduce.85)
  %mul.6155 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4667, %get-tuple-element.586)
  %sharding_constraint.1152 = bf16[2,8192,14336]{2,1,0} copy(%mul.6155)
  %dot.586 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1152, %sharding_constraint.857), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.86 = bf16[14336,4096]{1,0} all-reduce(%dot.586), channel_id=537, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.37.clone
  %dynamic-slice.1165 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.86, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3483 = f32[14336,512]{1,0} convert(%dynamic-slice.1165)
  %mul.6156 = f32[14336,512]{1,0} multiply(%convert_element_type.3483, %convert_element_type.3483)
  %reduce.575 = f32[] reduce(%mul.6156, %constant.2882), dimensions={0,1}, to_apply=%region_447.22256
  %all-reduce.87 = f32[] all-reduce(%reduce.575), channel_id=538, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_447.22256.clone
  %add.3021 = f32[] add(%add.3019, %all-reduce.87)
  %mul.6157 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3480, %sharding_constraint.859)
  %reduce.576 = bf16[4096]{0} reduce(%mul.6157, %constant.5662), dimensions={0,1}, to_apply=%region_448.22263
  %all-reduce.88 = bf16[4096]{0} all-reduce(%reduce.576), channel_id=539, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_448.22263.clone
  %convert_element_type.3484 = f32[4096]{0} convert(%all-reduce.88)
  %mul.6158 = f32[4096]{0} multiply(%convert_element_type.3484, %convert_element_type.3484)
  %reduce.577 = f32[] reduce(%mul.6158, %constant.2882), dimensions={0}, to_apply=%region_449.22270
  %add.3022 = f32[] add(%add.3021, %reduce.577)
  %mul.6166 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2721, %mul.4745)
  %convert_element_type.3485 = bf16[2,8192,4096]{2,1,0} convert(%mul.6166)
  %mul.6167 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3485, %sharding_constraint.873)
  %reduce.578 = bf16[4096]{0} reduce(%mul.6167, %constant.5662), dimensions={0,1}, to_apply=%region_450.22281
  %all-reduce.89 = bf16[4096]{0} all-reduce(%reduce.578), channel_id=540, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_450.22281.clone
  %convert_element_type.3486 = f32[4096]{0} convert(%all-reduce.89)
  %mul.6172 = f32[4096]{0} multiply(%convert_element_type.3486, %convert_element_type.3486)
  %reduce.579 = f32[] reduce(%mul.6172, %constant.2882), dimensions={0}, to_apply=%region_451.22288
  %add.3023 = f32[] add(%add.3022, %reduce.579)
  %mul.6174 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3485, %mul.4742)
  %sharding_constraint.1153 = bf16[2,8192,4096]{2,1,0} copy(%mul.6174)
  %sharding_constraint.1154 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1153)
  %dot.587 = bf16[8,128,4096]{2,1,0} dot(%add_any.379, %sharding_constraint.1154), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.90 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.587), channel_id=541, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.38.clone
  %dynamic-slice.1167 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.90, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3487 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1167)
  %convert_element_type.3488 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3487), dimensions={2,0,1}
  %mul.6175 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3488, %convert_element_type.3488)
  %reduce.580 = f32[] reduce(%mul.6175, %constant.2882), dimensions={0,1,2}, to_apply=%region_452.22302
  %all-reduce.91 = f32[] all-reduce(%reduce.580), channel_id=542, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_452.22302.clone
  %add.3024 = f32[] add(%add.3023, %all-reduce.91)
  %dot.588 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.866, %sharding_constraint.865), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.92 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.588), channel_id=543, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.39.clone
  %dynamic-slice.1169 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.92, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3489 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1169)
  %convert_element_type.3490 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3489), dimensions={1,2,0}
  %mul.6176 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3490, %convert_element_type.3490)
  %reduce.581 = f32[] reduce(%mul.6176, %constant.2882), dimensions={0,1,2}, to_apply=%region_453.22312
  %all-reduce.93 = f32[] all-reduce(%reduce.581), channel_id=544, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_453.22312.clone
  %add.3025 = f32[] add(%add.3024, %all-reduce.93)
  %dot.589 = bf16[32,128,4096]{2,1,0} dot(%add_any.384, %sharding_constraint.1154), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.94 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.589), channel_id=545, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.40.clone
  %dynamic-slice.1171 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.94, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3491 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1171)
  %convert_element_type.3492 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3491), dimensions={2,0,1}
  %mul.6177 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3492, %convert_element_type.3492)
  %reduce.582 = f32[] reduce(%mul.6177, %constant.2882), dimensions={0,1,2}, to_apply=%region_454.22323
  %all-reduce.95 = f32[] all-reduce(%reduce.582), channel_id=546, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_454.22323.clone
  %add.3026 = f32[] add(%add.3025, %all-reduce.95)
  %dot.590 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.868, %sharding_constraint.1154), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.96 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.590), channel_id=547, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.41.clone
  %dynamic-slice.1173 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.96, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3493 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1173)
  %convert_element_type.3495 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3493), dimensions={2,0,1}
  %mul.6178 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3495, %convert_element_type.3495)
  %reduce.583 = f32[] reduce(%mul.6178, %constant.2882), dimensions={0,1,2}, to_apply=%region_455.22333
  %all-reduce.97 = f32[] all-reduce(%reduce.583), channel_id=548, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_455.22333.clone
  %add.3027 = f32[] add(%add.3026, %all-reduce.97)
  %mul.6181 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2638, %mul.4582)
  %convert_element_type.3496 = bf16[2,8192,4096]{2,1,0} convert(%mul.6181)
  %mul.6185 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3496, %mul.4579)
  %sharding_constraint.1156 = bf16[2,8192,4096]{2,1,0} copy(%mul.6185)
  %dot.591 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1156, %add_any.356), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.98 = bf16[4096,14336]{1,0} all-reduce(%dot.591), channel_id=549, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.42.clone
  %dynamic-slice.1175 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.98, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3497 = f32[512,14336]{1,0} convert(%dynamic-slice.1175)
  %mul.6186 = f32[512,14336]{1,0} multiply(%convert_element_type.3497, %convert_element_type.3497)
  %reduce.584 = f32[] reduce(%mul.6186, %constant.2882), dimensions={0,1}, to_apply=%region_456.22349
  %all-reduce.99 = f32[] all-reduce(%reduce.584), channel_id=550, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_456.22349.clone
  %add.3028 = f32[] add(%add.3027, %all-reduce.99)
  %dot.592 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1156, %mul.4573), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.100 = bf16[4096,14336]{1,0} all-reduce(%dot.592), channel_id=551, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.43.clone
  %dynamic-slice.1177 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.100, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3498 = f32[512,14336]{1,0} convert(%dynamic-slice.1177)
  %mul.6189 = f32[512,14336]{1,0} multiply(%convert_element_type.3498, %convert_element_type.3498)
  %reduce.585 = f32[] reduce(%mul.6189, %constant.2882), dimensions={0,1}, to_apply=%region_457.22358
  %all-reduce.101 = f32[] all-reduce(%reduce.585), channel_id=552, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_457.22358.clone
  %add.3031 = f32[] add(%add.3028, %all-reduce.101)
  %mul.6190 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4572, %get-tuple-element.559)
  %sharding_constraint.1157 = bf16[2,8192,14336]{2,1,0} copy(%mul.6190)
  %dot.593 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1157, %sharding_constraint.838), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.102 = bf16[14336,4096]{1,0} all-reduce(%dot.593), channel_id=553, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.44.clone
  %dynamic-slice.1179 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.102, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3499 = f32[14336,512]{1,0} convert(%dynamic-slice.1179)
  %mul.6191 = f32[14336,512]{1,0} multiply(%convert_element_type.3499, %convert_element_type.3499)
  %reduce.586 = f32[] reduce(%mul.6191, %constant.2882), dimensions={0,1}, to_apply=%region_458.22369
  %all-reduce.103 = f32[] all-reduce(%reduce.586), channel_id=554, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_458.22369.clone
  %add.3032 = f32[] add(%add.3031, %all-reduce.103)
  %mul.6192 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3496, %sharding_constraint.840)
  %reduce.587 = bf16[4096]{0} reduce(%mul.6192, %constant.5662), dimensions={0,1}, to_apply=%region_459.22376
  %all-reduce.104 = bf16[4096]{0} all-reduce(%reduce.587), channel_id=555, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_459.22376.clone
  %convert_element_type.3500 = f32[4096]{0} convert(%all-reduce.104)
  %mul.6193 = f32[4096]{0} multiply(%convert_element_type.3500, %convert_element_type.3500)
  %reduce.588 = f32[] reduce(%mul.6193, %constant.2882), dimensions={0}, to_apply=%region_460.22383
  %add.3033 = f32[] add(%add.3032, %reduce.588)
  %mul.6196 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2673, %mul.4657)
  %convert_element_type.3501 = bf16[2,8192,4096]{2,1,0} convert(%mul.6196)
  %mul.6197 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3501, %sharding_constraint.854)
  %reduce.589 = bf16[4096]{0} reduce(%mul.6197, %constant.5662), dimensions={0,1}, to_apply=%region_461.22394
  %all-reduce.105 = bf16[4096]{0} all-reduce(%reduce.589), channel_id=556, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_461.22394.clone
  %convert_element_type.3502 = f32[4096]{0} convert(%all-reduce.105)
  %mul.6199 = f32[4096]{0} multiply(%convert_element_type.3502, %convert_element_type.3502)
  %reduce.590 = f32[] reduce(%mul.6199, %constant.2882), dimensions={0}, to_apply=%region_462.22401
  %add.3034 = f32[] add(%add.3033, %reduce.590)
  %mul.6202 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3501, %mul.4652)
  %sharding_constraint.1158 = bf16[2,8192,4096]{2,1,0} copy(%mul.6202)
  %sharding_constraint.1159 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1158)
  %dot.594 = bf16[8,128,4096]{2,1,0} dot(%add_any.363, %sharding_constraint.1159), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.106 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.594), channel_id=557, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.45.clone
  %dynamic-slice.1181 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.106, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3503 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1181)
  %convert_element_type.3504 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3503), dimensions={2,0,1}
  %mul.6203 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3504, %convert_element_type.3504)
  %reduce.591 = f32[] reduce(%mul.6203, %constant.2882), dimensions={0,1,2}, to_apply=%region_463.22415
  %all-reduce.107 = f32[] all-reduce(%reduce.591), channel_id=558, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_463.22415.clone
  %add.3035 = f32[] add(%add.3034, %all-reduce.107)
  %dot.595 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.847, %sharding_constraint.846), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.108 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.595), channel_id=559, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.46.clone
  %dynamic-slice.1183 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.108, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3506 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1183)
  %convert_element_type.3507 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3506), dimensions={1,2,0}
  %mul.6204 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3507, %convert_element_type.3507)
  %reduce.592 = f32[] reduce(%mul.6204, %constant.2882), dimensions={0,1,2}, to_apply=%region_464.22425
  %all-reduce.109 = f32[] all-reduce(%reduce.592), channel_id=560, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_464.22425.clone
  %add.3036 = f32[] add(%add.3035, %all-reduce.109)
  %dot.596 = bf16[32,128,4096]{2,1,0} dot(%add_any.368, %sharding_constraint.1159), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.110 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.596), channel_id=561, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.47.clone
  %dynamic-slice.1185 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.110, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3509 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1185)
  %convert_element_type.3510 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3509), dimensions={2,0,1}
  %mul.6205 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3510, %convert_element_type.3510)
  %reduce.593 = f32[] reduce(%mul.6205, %constant.2882), dimensions={0,1,2}, to_apply=%region_465.22436
  %all-reduce.111 = f32[] all-reduce(%reduce.593), channel_id=562, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_465.22436.clone
  %add.3037 = f32[] add(%add.3036, %all-reduce.111)
  %dot.597 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.849, %sharding_constraint.1159), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.112 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.597), channel_id=563, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.48.clone
  %dynamic-slice.1187 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.112, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3511 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1187)
  %convert_element_type.3514 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3511), dimensions={2,0,1}
  %mul.6206 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3514, %convert_element_type.3514)
  %reduce.594 = f32[] reduce(%mul.6206, %constant.2882), dimensions={0,1,2}, to_apply=%region_466.22446
  %all-reduce.113 = f32[] all-reduce(%reduce.594), channel_id=564, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_466.22446.clone
  %add.3038 = f32[] add(%add.3037, %all-reduce.113)
  %mul.6209 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2593, %mul.4494)
  %convert_element_type.3515 = bf16[2,8192,4096]{2,1,0} convert(%mul.6209)
  %mul.6211 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3515, %mul.4491)
  %sharding_constraint.1161 = bf16[2,8192,4096]{2,1,0} copy(%mul.6211)
  %dot.598 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1161, %add_any.340), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.114 = bf16[4096,14336]{1,0} all-reduce(%dot.598), channel_id=565, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.49.clone
  %dynamic-slice.1189 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.114, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3517 = f32[512,14336]{1,0} convert(%dynamic-slice.1189)
  %mul.6212 = f32[512,14336]{1,0} multiply(%convert_element_type.3517, %convert_element_type.3517)
  %reduce.595 = f32[] reduce(%mul.6212, %constant.2882), dimensions={0,1}, to_apply=%region_467.22462
  %all-reduce.115 = f32[] all-reduce(%reduce.595), channel_id=566, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_467.22462.clone
  %add.3039 = f32[] add(%add.3038, %all-reduce.115)
  %dot.599 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1161, %mul.4479), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.116 = bf16[4096,14336]{1,0} all-reduce(%dot.599), channel_id=567, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.50.clone
  %dynamic-slice.1191 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.116, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3520 = f32[512,14336]{1,0} convert(%dynamic-slice.1191)
  %mul.6213 = f32[512,14336]{1,0} multiply(%convert_element_type.3520, %convert_element_type.3520)
  %reduce.596 = f32[] reduce(%mul.6213, %constant.2882), dimensions={0,1}, to_apply=%region_468.22471
  %all-reduce.117 = f32[] all-reduce(%reduce.596), channel_id=568, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_468.22471.clone
  %add.3040 = f32[] add(%add.3039, %all-reduce.117)
  %mul.6214 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4474, %get-tuple-element.532)
  %sharding_constraint.1162 = bf16[2,8192,14336]{2,1,0} copy(%mul.6214)
  %dot.600 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1162, %sharding_constraint.819), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.118 = bf16[14336,4096]{1,0} all-reduce(%dot.600), channel_id=569, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.51.clone
  %dynamic-slice.1193 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.118, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3521 = f32[14336,512]{1,0} convert(%dynamic-slice.1193)
  %mul.6215 = f32[14336,512]{1,0} multiply(%convert_element_type.3521, %convert_element_type.3521)
  %reduce.597 = f32[] reduce(%mul.6215, %constant.2882), dimensions={0,1}, to_apply=%region_469.22482
  %all-reduce.119 = f32[] all-reduce(%reduce.597), channel_id=570, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_469.22482.clone
  %add.3041 = f32[] add(%add.3040, %all-reduce.119)
  %mul.6216 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3515, %sharding_constraint.821)
  %reduce.598 = bf16[4096]{0} reduce(%mul.6216, %constant.5662), dimensions={0,1}, to_apply=%region_470.22489
  %all-reduce.120 = bf16[4096]{0} all-reduce(%reduce.598), channel_id=571, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_470.22489.clone
  %convert_element_type.3524 = f32[4096]{0} convert(%all-reduce.120)
  %mul.6221 = f32[4096]{0} multiply(%convert_element_type.3524, %convert_element_type.3524)
  %reduce.599 = f32[] reduce(%mul.6221, %constant.2882), dimensions={0}, to_apply=%region_471.22496
  %add.3042 = f32[] add(%add.3041, %reduce.599)
  %mul.6224 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2629, %mul.4547)
  %convert_element_type.3526 = bf16[2,8192,4096]{2,1,0} convert(%mul.6224)
  %mul.6225 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3526, %sharding_constraint.835)
  %reduce.600 = bf16[4096]{0} reduce(%mul.6225, %constant.5662), dimensions={0,1}, to_apply=%region_472.22507
  %all-reduce.121 = bf16[4096]{0} all-reduce(%reduce.600), channel_id=572, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_472.22507.clone
  %convert_element_type.3528 = f32[4096]{0} convert(%all-reduce.121)
  %mul.6226 = f32[4096]{0} multiply(%convert_element_type.3528, %convert_element_type.3528)
  %reduce.601 = f32[] reduce(%mul.6226, %constant.2882), dimensions={0}, to_apply=%region_473.22514
  %add.3043 = f32[] add(%add.3042, %reduce.601)
  %mul.6228 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3526, %mul.4544)
  %sharding_constraint.1163 = bf16[2,8192,4096]{2,1,0} copy(%mul.6228)
  %sharding_constraint.1164 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1163)
  %dot.601 = bf16[8,128,4096]{2,1,0} dot(%add_any.347, %sharding_constraint.1164), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.122 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.601), channel_id=573, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.52.clone
  %dynamic-slice.1195 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.122, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3529 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1195)
  %convert_element_type.3530 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3529), dimensions={2,0,1}
  %mul.6232 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3530, %convert_element_type.3530)
  %reduce.602 = f32[] reduce(%mul.6232, %constant.2882), dimensions={0,1,2}, to_apply=%region_474.22528
  %all-reduce.123 = f32[] all-reduce(%reduce.602), channel_id=574, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_474.22528.clone
  %add.3044 = f32[] add(%add.3043, %all-reduce.123)
  %dot.602 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.828, %sharding_constraint.827), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.124 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.602), channel_id=575, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.53.clone
  %dynamic-slice.1197 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.124, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3531 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1197)
  %convert_element_type.3532 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3531), dimensions={1,2,0}
  %mul.6233 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3532, %convert_element_type.3532)
  %reduce.603 = f32[] reduce(%mul.6233, %constant.2882), dimensions={0,1,2}, to_apply=%region_475.22538
  %all-reduce.125 = f32[] all-reduce(%reduce.603), channel_id=576, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_475.22538.clone
  %add.3045 = f32[] add(%add.3044, %all-reduce.125)
  %dot.603 = bf16[32,128,4096]{2,1,0} dot(%add_any.352, %sharding_constraint.1164), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.126 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.603), channel_id=577, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.54.clone
  %dynamic-slice.1199 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.126, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3533 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1199)
  %convert_element_type.3535 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3533), dimensions={2,0,1}
  %mul.6234 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3535, %convert_element_type.3535)
  %reduce.604 = f32[] reduce(%mul.6234, %constant.2882), dimensions={0,1,2}, to_apply=%region_476.22549
  %all-reduce.127 = f32[] all-reduce(%reduce.604), channel_id=578, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_476.22549.clone
  %add.3046 = f32[] add(%add.3045, %all-reduce.127)
  %dot.604 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.830, %sharding_constraint.1164), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.128 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.604), channel_id=579, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.55.clone
  %dynamic-slice.1201 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.128, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3536 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1201)
  %convert_element_type.3538 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3536), dimensions={2,0,1}
  %mul.6235 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3538, %convert_element_type.3538)
  %reduce.605 = f32[] reduce(%mul.6235, %constant.2882), dimensions={0,1,2}, to_apply=%region_477.22559
  %all-reduce.129 = f32[] all-reduce(%reduce.605), channel_id=580, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_477.22559.clone
  %add.3047 = f32[] add(%add.3046, %all-reduce.129)
  %mul.6238 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2550, %mul.4391)
  %convert_element_type.3539 = bf16[2,8192,4096]{2,1,0} convert(%mul.6238)
  %mul.6240 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3539, %mul.4388)
  %sharding_constraint.1166 = bf16[2,8192,4096]{2,1,0} copy(%mul.6240)
  %dot.605 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1166, %add_any.324), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.130 = bf16[4096,14336]{1,0} all-reduce(%dot.605), channel_id=581, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.56.clone
  %dynamic-slice.1203 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.130, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3540 = f32[512,14336]{1,0} convert(%dynamic-slice.1203)
  %mul.6241 = f32[512,14336]{1,0} multiply(%convert_element_type.3540, %convert_element_type.3540)
  %reduce.606 = f32[] reduce(%mul.6241, %constant.2882), dimensions={0,1}, to_apply=%region_478.22575
  %all-reduce.131 = f32[] all-reduce(%reduce.606), channel_id=582, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_478.22575.clone
  %add.3048 = f32[] add(%add.3047, %all-reduce.131)
  %dot.606 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1166, %mul.4382), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.132 = bf16[4096,14336]{1,0} all-reduce(%dot.606), channel_id=583, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.57.clone
  %dynamic-slice.1205 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.132, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3541 = f32[512,14336]{1,0} convert(%dynamic-slice.1205)
  %mul.6242 = f32[512,14336]{1,0} multiply(%convert_element_type.3541, %convert_element_type.3541)
  %reduce.607 = f32[] reduce(%mul.6242, %constant.2882), dimensions={0,1}, to_apply=%region_479.22584
  %all-reduce.133 = f32[] all-reduce(%reduce.607), channel_id=584, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_479.22584.clone
  %add.3049 = f32[] add(%add.3048, %all-reduce.133)
  %mul.6247 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4381, %get-tuple-element.505)
  %sharding_constraint.1167 = bf16[2,8192,14336]{2,1,0} copy(%mul.6247)
  %dot.607 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1167, %sharding_constraint.800), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.134 = bf16[14336,4096]{1,0} all-reduce(%dot.607), channel_id=585, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.58.clone
  %dynamic-slice.1207 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.134, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3542 = f32[14336,512]{1,0} convert(%dynamic-slice.1207)
  %mul.6252 = f32[14336,512]{1,0} multiply(%convert_element_type.3542, %convert_element_type.3542)
  %reduce.608 = f32[] reduce(%mul.6252, %constant.2882), dimensions={0,1}, to_apply=%region_480.22595
  %all-reduce.135 = f32[] all-reduce(%reduce.608), channel_id=586, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_480.22595.clone
  %add.3050 = f32[] add(%add.3049, %all-reduce.135)
  %mul.6253 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3539, %sharding_constraint.802)
  %reduce.609 = bf16[4096]{0} reduce(%mul.6253, %constant.5662), dimensions={0,1}, to_apply=%region_481.22602
  %all-reduce.136 = bf16[4096]{0} all-reduce(%reduce.609), channel_id=587, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_481.22602.clone
  %convert_element_type.3543 = f32[4096]{0} convert(%all-reduce.136)
  %mul.6258 = f32[4096]{0} multiply(%convert_element_type.3543, %convert_element_type.3543)
  %reduce.610 = f32[] reduce(%mul.6258, %constant.2882), dimensions={0}, to_apply=%region_482.22609
  %add.3051 = f32[] add(%add.3050, %reduce.610)
  %mul.6261 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2585, %mul.4462)
  %convert_element_type.3544 = bf16[2,8192,4096]{2,1,0} convert(%mul.6261)
  %mul.6263 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3544, %sharding_constraint.816)
  %reduce.611 = bf16[4096]{0} reduce(%mul.6263, %constant.5662), dimensions={0,1}, to_apply=%region_483.22620
  %all-reduce.137 = bf16[4096]{0} all-reduce(%reduce.611), channel_id=588, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_483.22620.clone
  %convert_element_type.3545 = f32[4096]{0} convert(%all-reduce.137)
  %mul.6264 = f32[4096]{0} multiply(%convert_element_type.3545, %convert_element_type.3545)
  %reduce.612 = f32[] reduce(%mul.6264, %constant.2882), dimensions={0}, to_apply=%region_484.22627
  %add.3052 = f32[] add(%add.3051, %reduce.612)
  %mul.6266 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3544, %mul.4457)
  %sharding_constraint.1168 = bf16[2,8192,4096]{2,1,0} copy(%mul.6266)
  %sharding_constraint.1169 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1168)
  %dot.608 = bf16[8,128,4096]{2,1,0} dot(%add_any.331, %sharding_constraint.1169), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.138 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.608), channel_id=589, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.59.clone
  %dynamic-slice.1209 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.138, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3546 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1209)
  %convert_element_type.3547 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3546), dimensions={2,0,1}
  %mul.6267 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3547, %convert_element_type.3547)
  %reduce.613 = f32[] reduce(%mul.6267, %constant.2882), dimensions={0,1,2}, to_apply=%region_485.22641
  %all-reduce.139 = f32[] all-reduce(%reduce.613), channel_id=590, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_485.22641.clone
  %add.3053 = f32[] add(%add.3052, %all-reduce.139)
  %dot.609 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.809, %sharding_constraint.808), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.140 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.609), channel_id=591, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.60.clone
  %dynamic-slice.1211 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.140, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3548 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1211)
  %convert_element_type.3549 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3548), dimensions={1,2,0}
  %mul.6268 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3549, %convert_element_type.3549)
  %reduce.614 = f32[] reduce(%mul.6268, %constant.2882), dimensions={0,1,2}, to_apply=%region_486.22651
  %all-reduce.141 = f32[] all-reduce(%reduce.614), channel_id=592, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_486.22651.clone
  %add.3054 = f32[] add(%add.3053, %all-reduce.141)
  %dot.610 = bf16[32,128,4096]{2,1,0} dot(%add_any.336, %sharding_constraint.1169), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.142 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.610), channel_id=593, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.61.clone
  %dynamic-slice.1213 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.142, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3550 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1213)
  %convert_element_type.3551 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3550), dimensions={2,0,1}
  %mul.6269 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3551, %convert_element_type.3551)
  %reduce.615 = f32[] reduce(%mul.6269, %constant.2882), dimensions={0,1,2}, to_apply=%region_487.22662
  %all-reduce.143 = f32[] all-reduce(%reduce.615), channel_id=594, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_487.22662.clone
  %add.3055 = f32[] add(%add.3054, %all-reduce.143)
  %dot.611 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.811, %sharding_constraint.1169), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.144 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.611), channel_id=595, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.62.clone
  %dynamic-slice.1215 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.144, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3553 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1215)
  %convert_element_type.3554 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3553), dimensions={2,0,1}
  %mul.6270 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3554, %convert_element_type.3554)
  %reduce.616 = f32[] reduce(%mul.6270, %constant.2882), dimensions={0,1,2}, to_apply=%region_488.22672
  %all-reduce.145 = f32[] all-reduce(%reduce.616), channel_id=596, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_488.22672.clone
  %add.3057 = f32[] add(%add.3055, %all-reduce.145)
  %mul.6273 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2505, %mul.4301)
  %convert_element_type.3555 = bf16[2,8192,4096]{2,1,0} convert(%mul.6273)
  %mul.6275 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3555, %mul.4298)
  %sharding_constraint.1171 = bf16[2,8192,4096]{2,1,0} copy(%mul.6275)
  %dot.612 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1171, %add_any.308), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.146 = bf16[4096,14336]{1,0} all-reduce(%dot.612), channel_id=597, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.63.clone
  %dynamic-slice.1217 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.146, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3556 = f32[512,14336]{1,0} convert(%dynamic-slice.1217)
  %mul.6276 = f32[512,14336]{1,0} multiply(%convert_element_type.3556, %convert_element_type.3556)
  %reduce.617 = f32[] reduce(%mul.6276, %constant.2882), dimensions={0,1}, to_apply=%region_489.22688
  %all-reduce.147 = f32[] all-reduce(%reduce.617), channel_id=598, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_489.22688.clone
  %add.3058 = f32[] add(%add.3057, %all-reduce.147)
  %dot.613 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1171, %mul.4292), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.148 = bf16[4096,14336]{1,0} all-reduce(%dot.613), channel_id=599, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.64.clone
  %dynamic-slice.1219 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.148, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3557 = f32[512,14336]{1,0} convert(%dynamic-slice.1219)
  %mul.6278 = f32[512,14336]{1,0} multiply(%convert_element_type.3557, %convert_element_type.3557)
  %reduce.618 = f32[] reduce(%mul.6278, %constant.2882), dimensions={0,1}, to_apply=%region_490.22697
  %all-reduce.149 = f32[] all-reduce(%reduce.618), channel_id=600, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_490.22697.clone
  %add.3060 = f32[] add(%add.3058, %all-reduce.149)
  %mul.6279 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4291, %get-tuple-element.478)
  %sharding_constraint.1172 = bf16[2,8192,14336]{2,1,0} copy(%mul.6279)
  %dot.614 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1172, %sharding_constraint.781), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.150 = bf16[14336,4096]{1,0} all-reduce(%dot.614), channel_id=601, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.65.clone
  %dynamic-slice.1221 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.150, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3558 = f32[14336,512]{1,0} convert(%dynamic-slice.1221)
  %mul.6280 = f32[14336,512]{1,0} multiply(%convert_element_type.3558, %convert_element_type.3558)
  %reduce.619 = f32[] reduce(%mul.6280, %constant.2882), dimensions={0,1}, to_apply=%region_491.22708
  %all-reduce.151 = f32[] all-reduce(%reduce.619), channel_id=602, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_491.22708.clone
  %add.3061 = f32[] add(%add.3060, %all-reduce.151)
  %mul.6281 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3555, %sharding_constraint.783)
  %reduce.620 = bf16[4096]{0} reduce(%mul.6281, %constant.5662), dimensions={0,1}, to_apply=%region_492.22715
  %all-reduce.152 = bf16[4096]{0} all-reduce(%reduce.620), channel_id=603, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_492.22715.clone
  %convert_element_type.3559 = f32[4096]{0} convert(%all-reduce.152)
  %mul.6283 = f32[4096]{0} multiply(%convert_element_type.3559, %convert_element_type.3559)
  %reduce.621 = f32[] reduce(%mul.6283, %constant.2882), dimensions={0}, to_apply=%region_493.22722
  %add.3062 = f32[] add(%add.3061, %reduce.621)
  %mul.6287 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2542, %mul.4371)
  %convert_element_type.3561 = bf16[2,8192,4096]{2,1,0} convert(%mul.6287)
  %mul.6288 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3561, %sharding_constraint.797)
  %reduce.622 = bf16[4096]{0} reduce(%mul.6288, %constant.5662), dimensions={0,1}, to_apply=%region_494.22733
  %all-reduce.153 = bf16[4096]{0} all-reduce(%reduce.622), channel_id=604, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_494.22733.clone
  %convert_element_type.3562 = f32[4096]{0} convert(%all-reduce.153)
  %mul.6289 = f32[4096]{0} multiply(%convert_element_type.3562, %convert_element_type.3562)
  %reduce.623 = f32[] reduce(%mul.6289, %constant.2882), dimensions={0}, to_apply=%region_495.22740
  %add.3063 = f32[] add(%add.3062, %reduce.623)
  %mul.6291 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3561, %mul.4368)
  %sharding_constraint.1173 = bf16[2,8192,4096]{2,1,0} copy(%mul.6291)
  %sharding_constraint.1174 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1173)
  %dot.615 = bf16[8,128,4096]{2,1,0} dot(%add_any.315, %sharding_constraint.1174), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.154 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.615), channel_id=605, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.66.clone
  %dynamic-slice.1223 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.154, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3563 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1223)
  %convert_element_type.3564 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3563), dimensions={2,0,1}
  %mul.6292 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3564, %convert_element_type.3564)
  %reduce.624 = f32[] reduce(%mul.6292, %constant.2882), dimensions={0,1,2}, to_apply=%region_496.22754
  %all-reduce.155 = f32[] all-reduce(%reduce.624), channel_id=606, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_496.22754.clone
  %add.3064 = f32[] add(%add.3063, %all-reduce.155)
  %dot.616 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.790, %sharding_constraint.789), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.156 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.616), channel_id=607, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.67.clone
  %dynamic-slice.1225 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.156, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3565 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1225)
  %convert_element_type.3566 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3565), dimensions={1,2,0}
  %mul.6296 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3566, %convert_element_type.3566)
  %reduce.625 = f32[] reduce(%mul.6296, %constant.2882), dimensions={0,1,2}, to_apply=%region_497.22764
  %all-reduce.157 = f32[] all-reduce(%reduce.625), channel_id=608, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_497.22764.clone
  %add.3065 = f32[] add(%add.3064, %all-reduce.157)
  %dot.617 = bf16[32,128,4096]{2,1,0} dot(%add_any.320, %sharding_constraint.1174), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.158 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.617), channel_id=609, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.68.clone
  %dynamic-slice.1227 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.158, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3567 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1227)
  %convert_element_type.3568 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3567), dimensions={2,0,1}
  %mul.6297 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3568, %convert_element_type.3568)
  %reduce.626 = f32[] reduce(%mul.6297, %constant.2882), dimensions={0,1,2}, to_apply=%region_498.22775
  %all-reduce.159 = f32[] all-reduce(%reduce.626), channel_id=610, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_498.22775.clone
  %add.3066 = f32[] add(%add.3065, %all-reduce.159)
  %dot.618 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.792, %sharding_constraint.1174), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.160 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.618), channel_id=611, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.69.clone
  %dynamic-slice.1229 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.160, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3570 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1229)
  %convert_element_type.3571 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3570), dimensions={2,0,1}
  %mul.6298 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3571, %convert_element_type.3571)
  %reduce.627 = f32[] reduce(%mul.6298, %constant.2882), dimensions={0,1,2}, to_apply=%region_499.22785
  %all-reduce.161 = f32[] all-reduce(%reduce.627), channel_id=612, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_499.22785.clone
  %add.3067 = f32[] add(%add.3066, %all-reduce.161)
  %mul.6301 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2460, %mul.4206)
  %convert_element_type.3572 = bf16[2,8192,4096]{2,1,0} convert(%mul.6301)
  %mul.6303 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3572, %mul.4199)
  %sharding_constraint.1176 = bf16[2,8192,4096]{2,1,0} copy(%mul.6303)
  %dot.619 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1176, %add_any.292), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.162 = bf16[4096,14336]{1,0} all-reduce(%dot.619), channel_id=613, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.70.clone
  %dynamic-slice.1231 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.162, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3573 = f32[512,14336]{1,0} convert(%dynamic-slice.1231)
  %mul.6304 = f32[512,14336]{1,0} multiply(%convert_element_type.3573, %convert_element_type.3573)
  %reduce.628 = f32[] reduce(%mul.6304, %constant.2882), dimensions={0,1}, to_apply=%region_500.22801
  %all-reduce.163 = f32[] all-reduce(%reduce.628), channel_id=614, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_500.22801.clone
  %add.3069 = f32[] add(%add.3067, %all-reduce.163)
  %dot.620 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1176, %mul.4185), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.164 = bf16[4096,14336]{1,0} all-reduce(%dot.620), channel_id=615, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.71.clone
  %dynamic-slice.1233 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.164, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3574 = f32[512,14336]{1,0} convert(%dynamic-slice.1233)
  %mul.6305 = f32[512,14336]{1,0} multiply(%convert_element_type.3574, %convert_element_type.3574)
  %reduce.629 = f32[] reduce(%mul.6305, %constant.2882), dimensions={0,1}, to_apply=%region_501.22810
  %all-reduce.165 = f32[] all-reduce(%reduce.629), channel_id=616, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_501.22810.clone
  %add.3070 = f32[] add(%add.3069, %all-reduce.165)
  %mul.6306 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4184, %get-tuple-element.451)
  %sharding_constraint.1177 = bf16[2,8192,14336]{2,1,0} copy(%mul.6306)
  %dot.621 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1177, %sharding_constraint.762), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.166 = bf16[14336,4096]{1,0} all-reduce(%dot.621), channel_id=617, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.72.clone
  %dynamic-slice.1235 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.166, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3575 = f32[14336,512]{1,0} convert(%dynamic-slice.1235)
  %mul.6310 = f32[14336,512]{1,0} multiply(%convert_element_type.3575, %convert_element_type.3575)
  %reduce.630 = f32[] reduce(%mul.6310, %constant.2882), dimensions={0,1}, to_apply=%region_502.22821
  %all-reduce.167 = f32[] all-reduce(%reduce.630), channel_id=618, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_502.22821.clone
  %add.3071 = f32[] add(%add.3070, %all-reduce.167)
  %mul.6311 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3572, %sharding_constraint.764)
  %reduce.631 = bf16[4096]{0} reduce(%mul.6311, %constant.5662), dimensions={0,1}, to_apply=%region_503.22828
  %all-reduce.168 = bf16[4096]{0} all-reduce(%reduce.631), channel_id=619, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_503.22828.clone
  %convert_element_type.3577 = f32[4096]{0} convert(%all-reduce.168)
  %mul.6312 = f32[4096]{0} multiply(%convert_element_type.3577, %convert_element_type.3577)
  %reduce.632 = f32[] reduce(%mul.6312, %constant.2882), dimensions={0}, to_apply=%region_504.22835
  %add.3072 = f32[] add(%add.3071, %reduce.632)
  %mul.6317 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2498, %mul.4270)
  %convert_element_type.3579 = bf16[2,8192,4096]{2,1,0} convert(%mul.6317)
  %mul.6318 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3579, %sharding_constraint.778)
  %reduce.633 = bf16[4096]{0} reduce(%mul.6318, %constant.5662), dimensions={0,1}, to_apply=%region_505.22846
  %all-reduce.169 = bf16[4096]{0} all-reduce(%reduce.633), channel_id=620, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_505.22846.clone
  %convert_element_type.3581 = f32[4096]{0} convert(%all-reduce.169)
  %mul.6323 = f32[4096]{0} multiply(%convert_element_type.3581, %convert_element_type.3581)
  %reduce.634 = f32[] reduce(%mul.6323, %constant.2882), dimensions={0}, to_apply=%region_506.22853
  %add.3073 = f32[] add(%add.3072, %reduce.634)
  %mul.6329 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3579, %mul.4267)
  %sharding_constraint.1178 = bf16[2,8192,4096]{2,1,0} copy(%mul.6329)
  %sharding_constraint.1179 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1178)
  %dot.622 = bf16[8,128,4096]{2,1,0} dot(%add_any.299, %sharding_constraint.1179), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.170 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.622), channel_id=621, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.73.clone
  %dynamic-slice.1237 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.170, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3584 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1237)
  %convert_element_type.3585 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3584), dimensions={2,0,1}
  %mul.6334 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3585, %convert_element_type.3585)
  %reduce.635 = f32[] reduce(%mul.6334, %constant.2882), dimensions={0,1,2}, to_apply=%region_507.22867
  %all-reduce.171 = f32[] all-reduce(%reduce.635), channel_id=622, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_507.22867.clone
  %add.3074 = f32[] add(%add.3073, %all-reduce.171)
  %dot.623 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.771, %sharding_constraint.770), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.172 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.623), channel_id=623, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.74.clone
  %dynamic-slice.1239 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.172, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3586 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1239)
  %convert_element_type.3587 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3586), dimensions={1,2,0}
  %mul.6335 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3587, %convert_element_type.3587)
  %reduce.636 = f32[] reduce(%mul.6335, %constant.2882), dimensions={0,1,2}, to_apply=%region_508.22877
  %all-reduce.173 = f32[] all-reduce(%reduce.636), channel_id=624, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_508.22877.clone
  %add.3075 = f32[] add(%add.3074, %all-reduce.173)
  %dot.624 = bf16[32,128,4096]{2,1,0} dot(%add_any.304, %sharding_constraint.1179), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.174 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.624), channel_id=625, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.75.clone
  %dynamic-slice.1241 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.174, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3588 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1241)
  %convert_element_type.3589 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3588), dimensions={2,0,1}
  %mul.6336 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3589, %convert_element_type.3589)
  %reduce.637 = f32[] reduce(%mul.6336, %constant.2882), dimensions={0,1,2}, to_apply=%region_509.22888
  %all-reduce.175 = f32[] all-reduce(%reduce.637), channel_id=626, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_509.22888.clone
  %add.3076 = f32[] add(%add.3075, %all-reduce.175)
  %dot.625 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.773, %sharding_constraint.1179), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.176 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.625), channel_id=627, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.76.clone
  %dynamic-slice.1243 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.176, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3590 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1243)
  %convert_element_type.3591 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3590), dimensions={2,0,1}
  %mul.6337 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3591, %convert_element_type.3591)
  %reduce.638 = f32[] reduce(%mul.6337, %constant.2882), dimensions={0,1,2}, to_apply=%region_510.22898
  %all-reduce.177 = f32[] all-reduce(%reduce.638), channel_id=628, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_510.22898.clone
  %add.3077 = f32[] add(%add.3076, %all-reduce.177)
  %mul.6340 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2417, %mul.4105)
  %convert_element_type.3592 = bf16[2,8192,4096]{2,1,0} convert(%mul.6340)
  %mul.6342 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3592, %mul.4102)
  %sharding_constraint.1181 = bf16[2,8192,4096]{2,1,0} copy(%mul.6342)
  %dot.626 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1181, %add_any.276), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.178 = bf16[4096,14336]{1,0} all-reduce(%dot.626), channel_id=629, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.77.clone
  %dynamic-slice.1245 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.178, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3593 = f32[512,14336]{1,0} convert(%dynamic-slice.1245)
  %mul.6343 = f32[512,14336]{1,0} multiply(%convert_element_type.3593, %convert_element_type.3593)
  %reduce.639 = f32[] reduce(%mul.6343, %constant.2882), dimensions={0,1}, to_apply=%region_511.22914
  %all-reduce.179 = f32[] all-reduce(%reduce.639), channel_id=630, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_511.22914.clone
  %add.3078 = f32[] add(%add.3077, %all-reduce.179)
  %dot.627 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1181, %mul.4092), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.180 = bf16[4096,14336]{1,0} all-reduce(%dot.627), channel_id=631, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.78.clone
  %dynamic-slice.1247 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.180, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3594 = f32[512,14336]{1,0} convert(%dynamic-slice.1247)
  %mul.6344 = f32[512,14336]{1,0} multiply(%convert_element_type.3594, %convert_element_type.3594)
  %reduce.640 = f32[] reduce(%mul.6344, %constant.2882), dimensions={0,1}, to_apply=%region_512.22923
  %all-reduce.181 = f32[] all-reduce(%reduce.640), channel_id=632, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_512.22923.clone
  %add.3079 = f32[] add(%add.3078, %all-reduce.181)
  %mul.6345 = bf16[2,8192,14336]{2,1,0} multiply(%mul.4091, %get-tuple-element.424)
  %sharding_constraint.1182 = bf16[2,8192,14336]{2,1,0} copy(%mul.6345)
  %dot.628 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1182, %sharding_constraint.743), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.182 = bf16[14336,4096]{1,0} all-reduce(%dot.628), channel_id=633, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.79.clone
  %dynamic-slice.1249 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.182, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3595 = f32[14336,512]{1,0} convert(%dynamic-slice.1249)
  %mul.6346 = f32[14336,512]{1,0} multiply(%convert_element_type.3595, %convert_element_type.3595)
  %reduce.641 = f32[] reduce(%mul.6346, %constant.2882), dimensions={0,1}, to_apply=%region_513.22934
  %all-reduce.183 = f32[] all-reduce(%reduce.641), channel_id=634, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_513.22934.clone
  %add.3080 = f32[] add(%add.3079, %all-reduce.183)
  %mul.6347 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3592, %sharding_constraint.745)
  %reduce.642 = bf16[4096]{0} reduce(%mul.6347, %constant.5662), dimensions={0,1}, to_apply=%region_514.22941
  %all-reduce.184 = bf16[4096]{0} all-reduce(%reduce.642), channel_id=635, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_514.22941.clone
  %convert_element_type.3596 = f32[4096]{0} convert(%all-reduce.184)
  %mul.6348 = f32[4096]{0} multiply(%convert_element_type.3596, %convert_element_type.3596)
  %reduce.643 = f32[] reduce(%mul.6348, %constant.2882), dimensions={0}, to_apply=%region_515.22948
  %add.3081 = f32[] add(%add.3080, %reduce.643)
  %mul.6351 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2451, %mul.4171)
  %convert_element_type.3600 = bf16[2,8192,4096]{2,1,0} convert(%mul.6351)
  %mul.6352 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3600, %sharding_constraint.759)
  %reduce.644 = bf16[4096]{0} reduce(%mul.6352, %constant.5662), dimensions={0,1}, to_apply=%region_516.22959
  %all-reduce.185 = bf16[4096]{0} all-reduce(%reduce.644), channel_id=636, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_516.22959.clone
  %convert_element_type.3601 = f32[4096]{0} convert(%all-reduce.185)
  %mul.6353 = f32[4096]{0} multiply(%convert_element_type.3601, %convert_element_type.3601)
  %reduce.645 = f32[] reduce(%mul.6353, %constant.2882), dimensions={0}, to_apply=%region_517.22966
  %add.3082 = f32[] add(%add.3081, %reduce.645)
  %mul.6355 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3600, %mul.4167)
  %sharding_constraint.1183 = bf16[2,8192,4096]{2,1,0} copy(%mul.6355)
  %sharding_constraint.1184 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1183)
  %dot.629 = bf16[8,128,4096]{2,1,0} dot(%add_any.283, %sharding_constraint.1184), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.186 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.629), channel_id=637, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.80.clone
  %dynamic-slice.1251 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.186, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3602 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1251)
  %convert_element_type.3603 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3602), dimensions={2,0,1}
  %mul.6356 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3603, %convert_element_type.3603)
  %reduce.646 = f32[] reduce(%mul.6356, %constant.2882), dimensions={0,1,2}, to_apply=%region_518.22980
  %all-reduce.187 = f32[] all-reduce(%reduce.646), channel_id=638, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_518.22980.clone
  %add.3083 = f32[] add(%add.3082, %all-reduce.187)
  %dot.630 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.752, %sharding_constraint.751), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.188 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.630), channel_id=639, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.81.clone
  %dynamic-slice.1253 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.188, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3604 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1253)
  %convert_element_type.3605 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3604), dimensions={1,2,0}
  %mul.6357 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3605, %convert_element_type.3605)
  %reduce.647 = f32[] reduce(%mul.6357, %constant.2882), dimensions={0,1,2}, to_apply=%region_519.22990
  %all-reduce.189 = f32[] all-reduce(%reduce.647), channel_id=640, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_519.22990.clone
  %add.3084 = f32[] add(%add.3083, %all-reduce.189)
  %dot.631 = bf16[32,128,4096]{2,1,0} dot(%add_any.288, %sharding_constraint.1184), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.190 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.631), channel_id=641, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.82.clone
  %dynamic-slice.1255 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.190, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3607 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1255)
  %convert_element_type.3608 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3607), dimensions={2,0,1}
  %mul.6358 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3608, %convert_element_type.3608)
  %reduce.648 = f32[] reduce(%mul.6358, %constant.2882), dimensions={0,1,2}, to_apply=%region_520.23001
  %all-reduce.191 = f32[] all-reduce(%reduce.648), channel_id=642, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_520.23001.clone
  %add.3085 = f32[] add(%add.3084, %all-reduce.191)
  %dot.632 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.754, %sharding_constraint.1184), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.192 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.632), channel_id=643, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.83.clone
  %dynamic-slice.1257 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.192, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3609 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1257)
  %convert_element_type.3611 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3609), dimensions={2,0,1}
  %mul.6359 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3611, %convert_element_type.3611)
  %reduce.649 = f32[] reduce(%mul.6359, %constant.2882), dimensions={0,1,2}, to_apply=%region_521.23011
  %all-reduce.193 = f32[] all-reduce(%reduce.649), channel_id=644, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_521.23011.clone
  %add.3086 = f32[] add(%add.3085, %all-reduce.193)
  %mul.6362 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3238, %mul.5730)
  %convert_element_type.3612 = bf16[2,8192,4096]{2,1,0} convert(%mul.6362)
  %mul.6364 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3612, %mul.5725)
  %sharding_constraint.1186 = bf16[2,8192,4096]{2,1,0} copy(%mul.6364)
  %dot.633 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1186, %add_any.548), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.194 = bf16[4096,14336]{1,0} all-reduce(%dot.633), channel_id=645, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.84.clone
  %dynamic-slice.1259 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.194, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3613 = f32[512,14336]{1,0} convert(%dynamic-slice.1259)
  %mul.6365 = f32[512,14336]{1,0} multiply(%convert_element_type.3613, %convert_element_type.3613)
  %reduce.650 = f32[] reduce(%mul.6365, %constant.2882), dimensions={0,1}, to_apply=%region_522.23027
  %all-reduce.195 = f32[] all-reduce(%reduce.650), channel_id=646, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_522.23027.clone
  %add.3087 = f32[] add(%add.3086, %all-reduce.195)
  %dot.634 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1186, %mul.5719), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.196 = bf16[4096,14336]{1,0} all-reduce(%dot.634), channel_id=647, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.85.clone
  %dynamic-slice.1261 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.196, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3614 = f32[512,14336]{1,0} convert(%dynamic-slice.1261)
  %mul.6366 = f32[512,14336]{1,0} multiply(%convert_element_type.3614, %convert_element_type.3614)
  %reduce.651 = f32[] reduce(%mul.6366, %constant.2882), dimensions={0,1}, to_apply=%region_523.23036
  %all-reduce.197 = f32[] all-reduce(%reduce.651), channel_id=648, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_523.23036.clone
  %add.3088 = f32[] add(%add.3087, %all-reduce.197)
  %mul.6367 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5718, %get-tuple-element.883)
  %sharding_constraint.1187 = bf16[2,8192,14336]{2,1,0} copy(%mul.6367)
  %dot.635 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1187, %sharding_constraint.1068), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.198 = bf16[14336,4096]{1,0} all-reduce(%dot.635), channel_id=649, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.86.clone
  %dynamic-slice.1263 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.198, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3616 = f32[14336,512]{1,0} convert(%dynamic-slice.1263)
  %mul.6368 = f32[14336,512]{1,0} multiply(%convert_element_type.3616, %convert_element_type.3616)
  %reduce.652 = f32[] reduce(%mul.6368, %constant.2882), dimensions={0,1}, to_apply=%region_524.23047
  %all-reduce.199 = f32[] all-reduce(%reduce.652), channel_id=650, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_524.23047.clone
  %add.3089 = f32[] add(%add.3088, %all-reduce.199)
  %mul.6369 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3612, %sharding_constraint.1070)
  %reduce.653 = bf16[4096]{0} reduce(%mul.6369, %constant.5662), dimensions={0,1}, to_apply=%region_525.23054
  %all-reduce.200 = bf16[4096]{0} all-reduce(%reduce.653), channel_id=651, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_525.23054.clone
  %convert_element_type.3617 = f32[4096]{0} convert(%all-reduce.200)
  %mul.6370 = f32[4096]{0} multiply(%convert_element_type.3617, %convert_element_type.3617)
  %reduce.654 = f32[] reduce(%mul.6370, %constant.2882), dimensions={0}, to_apply=%region_526.23061
  %add.3090 = f32[] add(%add.3089, %reduce.654)
  %mul.6373 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3274, %mul.5804)
  %convert_element_type.3618 = bf16[2,8192,4096]{2,1,0} convert(%mul.6373)
  %mul.6374 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3618, %sharding_constraint.1087)
  %reduce.655 = bf16[4096]{0} reduce(%mul.6374, %constant.5662), dimensions={0,1}, to_apply=%region_527.23072
  %all-reduce.201 = bf16[4096]{0} all-reduce(%reduce.655), channel_id=652, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_527.23072.clone
  %convert_element_type.3619 = f32[4096]{0} convert(%all-reduce.201)
  %mul.6377 = f32[4096]{0} multiply(%convert_element_type.3619, %convert_element_type.3619)
  %reduce.656 = f32[] reduce(%mul.6377, %constant.2882), dimensions={0}, to_apply=%region_528.23079
  %add.3091 = f32[] add(%add.3090, %reduce.656)
  %mul.6381 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3618, %mul.5801)
  %sharding_constraint.1188 = bf16[2,8192,4096]{2,1,0} copy(%mul.6381)
  %sharding_constraint.1189 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1188)
  %dot.636 = bf16[8,128,4096]{2,1,0} dot(%add_any.555, %sharding_constraint.1189), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.202 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.636), channel_id=653, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.87.clone
  %dynamic-slice.1265 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.202, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3620 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1265)
  %convert_element_type.3622 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3620), dimensions={2,0,1}
  %mul.6382 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3622, %convert_element_type.3622)
  %reduce.657 = f32[] reduce(%mul.6382, %constant.2882), dimensions={0,1,2}, to_apply=%region_529.23093
  %all-reduce.203 = f32[] all-reduce(%reduce.657), channel_id=654, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_529.23093.clone
  %add.3092 = f32[] add(%add.3091, %all-reduce.203)
  %dot.637 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.1080, %sharding_constraint.1079), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.204 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.637), channel_id=655, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.88.clone
  %dynamic-slice.1267 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.204, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3623 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1267)
  %convert_element_type.3625 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3623), dimensions={1,2,0}
  %mul.6383 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3625, %convert_element_type.3625)
  %reduce.658 = f32[] reduce(%mul.6383, %constant.2882), dimensions={0,1,2}, to_apply=%region_530.23103
  %all-reduce.205 = f32[] all-reduce(%reduce.658), channel_id=656, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_530.23103.clone
  %add.3094 = f32[] add(%add.3092, %all-reduce.205)
  %dot.638 = bf16[32,128,4096]{2,1,0} dot(%add_any.560, %sharding_constraint.1189), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.206 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.638), channel_id=657, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.89.clone
  %dynamic-slice.1269 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.206, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3626 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1269)
  %convert_element_type.3627 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3626), dimensions={2,0,1}
  %mul.6384 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3627, %convert_element_type.3627)
  %reduce.659 = f32[] reduce(%mul.6384, %constant.2882), dimensions={0,1,2}, to_apply=%region_531.23114
  %all-reduce.207 = f32[] all-reduce(%reduce.659), channel_id=658, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_531.23114.clone
  %add.3095 = f32[] add(%add.3094, %all-reduce.207)
  %dot.639 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.1082, %sharding_constraint.1189), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.208 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.639), channel_id=659, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.90.clone
  %dynamic-slice.1271 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.208, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3628 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1271)
  %convert_element_type.3630 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3628), dimensions={2,0,1}
  %mul.6385 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3630, %convert_element_type.3630)
  %reduce.660 = f32[] reduce(%mul.6385, %constant.2882), dimensions={0,1,2}, to_apply=%region_532.23124
  %all-reduce.209 = f32[] all-reduce(%reduce.660), channel_id=660, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_532.23124.clone
  %add.3096 = f32[] add(%add.3095, %all-reduce.209)
  %mul.6388 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2374, %mul.4010)
  %convert_element_type.3631 = bf16[2,8192,4096]{2,1,0} convert(%mul.6388)
  %mul.6391 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3631, %mul.3994)
  %sharding_constraint.1191 = bf16[2,8192,4096]{2,1,0} copy(%mul.6391)
  %dot.640 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1191, %add_any.260), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.210 = bf16[4096,14336]{1,0} all-reduce(%dot.640), channel_id=661, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.91.clone
  %dynamic-slice.1273 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.210, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3632 = f32[512,14336]{1,0} convert(%dynamic-slice.1273)
  %mul.6392 = f32[512,14336]{1,0} multiply(%convert_element_type.3632, %convert_element_type.3632)
  %reduce.661 = f32[] reduce(%mul.6392, %constant.2882), dimensions={0,1}, to_apply=%region_533.23140
  %all-reduce.211 = f32[] all-reduce(%reduce.661), channel_id=662, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_533.23140.clone
  %add.3097 = f32[] add(%add.3096, %all-reduce.211)
  %dot.641 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1191, %mul.3988), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.212 = bf16[4096,14336]{1,0} all-reduce(%dot.641), channel_id=663, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.92.clone
  %dynamic-slice.1275 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.212, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3633 = f32[512,14336]{1,0} convert(%dynamic-slice.1275)
  %mul.6394 = f32[512,14336]{1,0} multiply(%convert_element_type.3633, %convert_element_type.3633)
  %reduce.662 = f32[] reduce(%mul.6394, %constant.2882), dimensions={0,1}, to_apply=%region_534.23149
  %all-reduce.213 = f32[] all-reduce(%reduce.662), channel_id=664, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_534.23149.clone
  %add.3098 = f32[] add(%add.3097, %all-reduce.213)
  %mul.6395 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3987, %get-tuple-element.397)
  %sharding_constraint.1192 = bf16[2,8192,14336]{2,1,0} copy(%mul.6395)
  %dot.642 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1192, %sharding_constraint.724), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.214 = bf16[14336,4096]{1,0} all-reduce(%dot.642), channel_id=665, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.93.clone
  %dynamic-slice.1277 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.214, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3634 = f32[14336,512]{1,0} convert(%dynamic-slice.1277)
  %mul.6396 = f32[14336,512]{1,0} multiply(%convert_element_type.3634, %convert_element_type.3634)
  %reduce.663 = f32[] reduce(%mul.6396, %constant.2882), dimensions={0,1}, to_apply=%region_535.23160
  %all-reduce.215 = f32[] all-reduce(%reduce.663), channel_id=666, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_535.23160.clone
  %add.3099 = f32[] add(%add.3098, %all-reduce.215)
  %mul.6397 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3631, %sharding_constraint.726)
  %reduce.664 = bf16[4096]{0} reduce(%mul.6397, %constant.5662), dimensions={0,1}, to_apply=%region_536.23167
  %all-reduce.216 = bf16[4096]{0} all-reduce(%reduce.664), channel_id=667, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_536.23167.clone
  %convert_element_type.3635 = f32[4096]{0} convert(%all-reduce.216)
  %mul.6398 = f32[4096]{0} multiply(%convert_element_type.3635, %convert_element_type.3635)
  %reduce.665 = f32[] reduce(%mul.6398, %constant.2882), dimensions={0}, to_apply=%region_537.23174
  %add.3100 = f32[] add(%add.3099, %reduce.665)
  %mul.6401 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2410, %mul.4070)
  %convert_element_type.3638 = bf16[2,8192,4096]{2,1,0} convert(%mul.6401)
  %mul.6402 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3638, %sharding_constraint.740)
  %reduce.666 = bf16[4096]{0} reduce(%mul.6402, %constant.5662), dimensions={0,1}, to_apply=%region_538.23185
  %all-reduce.217 = bf16[4096]{0} all-reduce(%reduce.666), channel_id=668, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_538.23185.clone
  %convert_element_type.3639 = f32[4096]{0} convert(%all-reduce.217)
  %mul.6403 = f32[4096]{0} multiply(%convert_element_type.3639, %convert_element_type.3639)
  %reduce.667 = f32[] reduce(%mul.6403, %constant.2882), dimensions={0}, to_apply=%region_539.23192
  %add.3101 = f32[] add(%add.3100, %reduce.667)
  %mul.6409 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3638, %mul.4067)
  %sharding_constraint.1193 = bf16[2,8192,4096]{2,1,0} copy(%mul.6409)
  %sharding_constraint.1194 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1193)
  %dot.643 = bf16[8,128,4096]{2,1,0} dot(%add_any.267, %sharding_constraint.1194), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.218 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.643), channel_id=669, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.94.clone
  %dynamic-slice.1279 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.218, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3640 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1279)
  %convert_element_type.3643 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3640), dimensions={2,0,1}
  %mul.6410 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3643, %convert_element_type.3643)
  %reduce.668 = f32[] reduce(%mul.6410, %constant.2882), dimensions={0,1,2}, to_apply=%region_540.23206
  %all-reduce.219 = f32[] all-reduce(%reduce.668), channel_id=670, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_540.23206.clone
  %add.3102 = f32[] add(%add.3101, %all-reduce.219)
  %dot.644 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.733, %sharding_constraint.732), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.220 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.644), channel_id=671, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.95.clone
  %dynamic-slice.1281 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.220, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3644 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1281)
  %convert_element_type.3645 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3644), dimensions={1,2,0}
  %mul.6417 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3645, %convert_element_type.3645)
  %reduce.669 = f32[] reduce(%mul.6417, %constant.2882), dimensions={0,1,2}, to_apply=%region_541.23216
  %all-reduce.221 = f32[] all-reduce(%reduce.669), channel_id=672, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_541.23216.clone
  %add.3103 = f32[] add(%add.3102, %all-reduce.221)
  %dot.645 = bf16[32,128,4096]{2,1,0} dot(%add_any.272, %sharding_constraint.1194), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.222 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.645), channel_id=673, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.96.clone
  %dynamic-slice.1283 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.222, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3647 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1283)
  %convert_element_type.3648 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3647), dimensions={2,0,1}
  %mul.6418 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3648, %convert_element_type.3648)
  %reduce.670 = f32[] reduce(%mul.6418, %constant.2882), dimensions={0,1,2}, to_apply=%region_542.23227
  %all-reduce.223 = f32[] all-reduce(%reduce.670), channel_id=674, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_542.23227.clone
  %add.3104 = f32[] add(%add.3103, %all-reduce.223)
  %dot.646 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.735, %sharding_constraint.1194), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.224 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.646), channel_id=675, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.97.clone
  %dynamic-slice.1285 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.224, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3650 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1285)
  %convert_element_type.3651 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3650), dimensions={2,0,1}
  %mul.6419 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3651, %convert_element_type.3651)
  %reduce.671 = f32[] reduce(%mul.6419, %constant.2882), dimensions={0,1,2}, to_apply=%region_543.23237
  %all-reduce.225 = f32[] all-reduce(%reduce.671), channel_id=676, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_543.23237.clone
  %add.3105 = f32[] add(%add.3104, %all-reduce.225)
  %mul.6422 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2331, %mul.3902)
  %convert_element_type.3653 = bf16[2,8192,4096]{2,1,0} convert(%mul.6422)
  %mul.6425 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3653, %mul.3899)
  %sharding_constraint.1196 = bf16[2,8192,4096]{2,1,0} copy(%mul.6425)
  %dot.647 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1196, %add_any.244), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.226 = bf16[4096,14336]{1,0} all-reduce(%dot.647), channel_id=677, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.98.clone
  %dynamic-slice.1287 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.226, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3655 = f32[512,14336]{1,0} convert(%dynamic-slice.1287)
  %mul.6427 = f32[512,14336]{1,0} multiply(%convert_element_type.3655, %convert_element_type.3655)
  %reduce.672 = f32[] reduce(%mul.6427, %constant.2882), dimensions={0,1}, to_apply=%region_544.23253
  %all-reduce.227 = f32[] all-reduce(%reduce.672), channel_id=678, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_544.23253.clone
  %add.3106 = f32[] add(%add.3105, %all-reduce.227)
  %dot.648 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1196, %mul.3892), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.228 = bf16[4096,14336]{1,0} all-reduce(%dot.648), channel_id=679, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.99.clone
  %dynamic-slice.1289 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.228, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3656 = f32[512,14336]{1,0} convert(%dynamic-slice.1289)
  %mul.6428 = f32[512,14336]{1,0} multiply(%convert_element_type.3656, %convert_element_type.3656)
  %reduce.673 = f32[] reduce(%mul.6428, %constant.2882), dimensions={0,1}, to_apply=%region_545.23262
  %all-reduce.229 = f32[] all-reduce(%reduce.673), channel_id=680, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_545.23262.clone
  %add.3107 = f32[] add(%add.3106, %all-reduce.229)
  %mul.6429 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3891, %get-tuple-element.370)
  %sharding_constraint.1197 = bf16[2,8192,14336]{2,1,0} copy(%mul.6429)
  %dot.649 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1197, %sharding_constraint.705), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.230 = bf16[14336,4096]{1,0} all-reduce(%dot.649), channel_id=681, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.100.clone
  %dynamic-slice.1291 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.230, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3657 = f32[14336,512]{1,0} convert(%dynamic-slice.1291)
  %mul.6430 = f32[14336,512]{1,0} multiply(%convert_element_type.3657, %convert_element_type.3657)
  %reduce.674 = f32[] reduce(%mul.6430, %constant.2882), dimensions={0,1}, to_apply=%region_546.23273
  %all-reduce.231 = f32[] all-reduce(%reduce.674), channel_id=682, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_546.23273.clone
  %add.3108 = f32[] add(%add.3107, %all-reduce.231)
  %mul.6431 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3653, %sharding_constraint.707)
  %reduce.675 = bf16[4096]{0} reduce(%mul.6431, %constant.5662), dimensions={0,1}, to_apply=%region_547.23280
  %all-reduce.232 = bf16[4096]{0} all-reduce(%reduce.675), channel_id=683, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_547.23280.clone
  %convert_element_type.3658 = f32[4096]{0} convert(%all-reduce.232)
  %mul.6432 = f32[4096]{0} multiply(%convert_element_type.3658, %convert_element_type.3658)
  %reduce.676 = f32[] reduce(%mul.6432, %constant.2882), dimensions={0}, to_apply=%region_548.23287
  %add.3109 = f32[] add(%add.3108, %reduce.676)
  %mul.6435 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2366, %mul.3977)
  %convert_element_type.3660 = bf16[2,8192,4096]{2,1,0} convert(%mul.6435)
  %mul.6436 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3660, %sharding_constraint.721)
  %reduce.677 = bf16[4096]{0} reduce(%mul.6436, %constant.5662), dimensions={0,1}, to_apply=%region_549.23298
  %all-reduce.233 = bf16[4096]{0} all-reduce(%reduce.677), channel_id=684, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_549.23298.clone
  %convert_element_type.3661 = f32[4096]{0} convert(%all-reduce.233)
  %mul.6437 = f32[4096]{0} multiply(%convert_element_type.3661, %convert_element_type.3661)
  %reduce.678 = f32[] reduce(%mul.6437, %constant.2882), dimensions={0}, to_apply=%region_550.23305
  %add.3110 = f32[] add(%add.3109, %reduce.678)
  %mul.6439 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3660, %mul.3974)
  %sharding_constraint.1198 = bf16[2,8192,4096]{2,1,0} copy(%mul.6439)
  %sharding_constraint.1199 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1198)
  %dot.650 = bf16[8,128,4096]{2,1,0} dot(%add_any.251, %sharding_constraint.1199), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.234 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.650), channel_id=685, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.101.clone
  %dynamic-slice.1293 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.234, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3662 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1293)
  %convert_element_type.3663 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3662), dimensions={2,0,1}
  %mul.6440 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3663, %convert_element_type.3663)
  %reduce.679 = f32[] reduce(%mul.6440, %constant.2882), dimensions={0,1,2}, to_apply=%region_551.23319
  %all-reduce.235 = f32[] all-reduce(%reduce.679), channel_id=686, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_551.23319.clone
  %add.3111 = f32[] add(%add.3110, %all-reduce.235)
  %dot.651 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.714, %sharding_constraint.713), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.236 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.651), channel_id=687, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.102.clone
  %dynamic-slice.1295 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.236, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3664 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1295)
  %convert_element_type.3666 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3664), dimensions={1,2,0}
  %mul.6441 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3666, %convert_element_type.3666)
  %reduce.680 = f32[] reduce(%mul.6441, %constant.2882), dimensions={0,1,2}, to_apply=%region_552.23329
  %all-reduce.237 = f32[] all-reduce(%reduce.680), channel_id=688, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_552.23329.clone
  %add.3112 = f32[] add(%add.3111, %all-reduce.237)
  %dot.652 = bf16[32,128,4096]{2,1,0} dot(%add_any.256, %sharding_constraint.1199), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.238 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.652), channel_id=689, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.103.clone
  %dynamic-slice.1297 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.238, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3667 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1297)
  %convert_element_type.3668 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3667), dimensions={2,0,1}
  %mul.6447 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3668, %convert_element_type.3668)
  %reduce.681 = f32[] reduce(%mul.6447, %constant.2882), dimensions={0,1,2}, to_apply=%region_553.23340
  %all-reduce.239 = f32[] all-reduce(%reduce.681), channel_id=690, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_553.23340.clone
  %add.3113 = f32[] add(%add.3112, %all-reduce.239)
  %dot.653 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.716, %sharding_constraint.1199), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.240 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.653), channel_id=691, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.104.clone
  %dynamic-slice.1299 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.240, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3669 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1299)
  %convert_element_type.3670 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3669), dimensions={2,0,1}
  %mul.6453 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3670, %convert_element_type.3670)
  %reduce.682 = f32[] reduce(%mul.6453, %constant.2882), dimensions={0,1,2}, to_apply=%region_554.23350
  %all-reduce.241 = f32[] all-reduce(%reduce.682), channel_id=692, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_554.23350.clone
  %add.3114 = f32[] add(%add.3113, %all-reduce.241)
  %mul.6456 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2287, %mul.3819)
  %convert_element_type.3671 = bf16[2,8192,4096]{2,1,0} convert(%mul.6456)
  %mul.6461 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3671, %mul.3816)
  %sharding_constraint.1201 = bf16[2,8192,4096]{2,1,0} copy(%mul.6461)
  %dot.654 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1201, %add_any.228), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.242 = bf16[4096,14336]{1,0} all-reduce(%dot.654), channel_id=693, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.105.clone
  %dynamic-slice.1301 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.242, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3672 = f32[512,14336]{1,0} convert(%dynamic-slice.1301)
  %mul.6462 = f32[512,14336]{1,0} multiply(%convert_element_type.3672, %convert_element_type.3672)
  %reduce.683 = f32[] reduce(%mul.6462, %constant.2882), dimensions={0,1}, to_apply=%region_555.23366
  %all-reduce.243 = f32[] all-reduce(%reduce.683), channel_id=694, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_555.23366.clone
  %add.3115 = f32[] add(%add.3114, %all-reduce.243)
  %dot.655 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1201, %mul.3810), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.244 = bf16[4096,14336]{1,0} all-reduce(%dot.655), channel_id=695, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.106.clone
  %dynamic-slice.1303 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.244, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3674 = f32[512,14336]{1,0} convert(%dynamic-slice.1303)
  %mul.6463 = f32[512,14336]{1,0} multiply(%convert_element_type.3674, %convert_element_type.3674)
  %reduce.684 = f32[] reduce(%mul.6463, %constant.2882), dimensions={0,1}, to_apply=%region_556.23375
  %all-reduce.245 = f32[] all-reduce(%reduce.684), channel_id=696, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_556.23375.clone
  %add.3116 = f32[] add(%add.3115, %all-reduce.245)
  %mul.6464 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3809, %get-tuple-element.343)
  %sharding_constraint.1202 = bf16[2,8192,14336]{2,1,0} copy(%mul.6464)
  %dot.656 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1202, %sharding_constraint.686), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.246 = bf16[14336,4096]{1,0} all-reduce(%dot.656), channel_id=697, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.107.clone
  %dynamic-slice.1305 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.246, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3675 = f32[14336,512]{1,0} convert(%dynamic-slice.1305)
  %mul.6465 = f32[14336,512]{1,0} multiply(%convert_element_type.3675, %convert_element_type.3675)
  %reduce.685 = f32[] reduce(%mul.6465, %constant.2882), dimensions={0,1}, to_apply=%region_557.23386
  %all-reduce.247 = f32[] all-reduce(%reduce.685), channel_id=698, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_557.23386.clone
  %add.3117 = f32[] add(%add.3116, %all-reduce.247)
  %mul.6466 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3671, %sharding_constraint.688)
  %reduce.686 = bf16[4096]{0} reduce(%mul.6466, %constant.5662), dimensions={0,1}, to_apply=%region_558.23393
  %all-reduce.248 = bf16[4096]{0} all-reduce(%reduce.686), channel_id=699, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_558.23393.clone
  %convert_element_type.3676 = f32[4096]{0} convert(%all-reduce.248)
  %mul.6467 = f32[4096]{0} multiply(%convert_element_type.3676, %convert_element_type.3676)
  %reduce.687 = f32[] reduce(%mul.6467, %constant.2882), dimensions={0}, to_apply=%region_559.23400
  %add.3118 = f32[] add(%add.3117, %reduce.687)
  %mul.6470 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2323, %mul.3873)
  %convert_element_type.3679 = bf16[2,8192,4096]{2,1,0} convert(%mul.6470)
  %mul.6474 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3679, %sharding_constraint.702)
  %reduce.688 = bf16[4096]{0} reduce(%mul.6474, %constant.5662), dimensions={0,1}, to_apply=%region_560.23411
  %all-reduce.249 = bf16[4096]{0} all-reduce(%reduce.688), channel_id=700, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_560.23411.clone
  %convert_element_type.3680 = f32[4096]{0} convert(%all-reduce.249)
  %mul.6475 = f32[4096]{0} multiply(%convert_element_type.3680, %convert_element_type.3680)
  %reduce.689 = f32[] reduce(%mul.6475, %constant.2882), dimensions={0}, to_apply=%region_561.23418
  %add.3119 = f32[] add(%add.3118, %reduce.689)
  %mul.6479 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3679, %mul.3866)
  %sharding_constraint.1203 = bf16[2,8192,4096]{2,1,0} copy(%mul.6479)
  %sharding_constraint.1204 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1203)
  %dot.657 = bf16[8,128,4096]{2,1,0} dot(%add_any.235, %sharding_constraint.1204), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.250 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.657), channel_id=701, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.108.clone
  %dynamic-slice.1307 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.250, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3682 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1307)
  %convert_element_type.3684 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3682), dimensions={2,0,1}
  %mul.6480 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3684, %convert_element_type.3684)
  %reduce.690 = f32[] reduce(%mul.6480, %constant.2882), dimensions={0,1,2}, to_apply=%region_562.23432
  %all-reduce.251 = f32[] all-reduce(%reduce.690), channel_id=702, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_562.23432.clone
  %add.3120 = f32[] add(%add.3119, %all-reduce.251)
  %dot.658 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.695, %sharding_constraint.694), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.252 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.658), channel_id=703, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.109.clone
  %dynamic-slice.1309 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.252, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3685 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1309)
  %convert_element_type.3688 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3685), dimensions={1,2,0}
  %mul.6481 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3688, %convert_element_type.3688)
  %reduce.691 = f32[] reduce(%mul.6481, %constant.2882), dimensions={0,1,2}, to_apply=%region_563.23442
  %all-reduce.253 = f32[] all-reduce(%reduce.691), channel_id=704, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_563.23442.clone
  %add.3121 = f32[] add(%add.3120, %all-reduce.253)
  %dot.659 = bf16[32,128,4096]{2,1,0} dot(%add_any.240, %sharding_constraint.1204), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.254 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.659), channel_id=705, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.110.clone
  %dynamic-slice.1311 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.254, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3689 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1311)
  %convert_element_type.3690 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3689), dimensions={2,0,1}
  %mul.6483 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3690, %convert_element_type.3690)
  %reduce.692 = f32[] reduce(%mul.6483, %constant.2882), dimensions={0,1,2}, to_apply=%region_564.23453
  %all-reduce.255 = f32[] all-reduce(%reduce.692), channel_id=706, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_564.23453.clone
  %add.3122 = f32[] add(%add.3121, %all-reduce.255)
  %dot.660 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.697, %sharding_constraint.1204), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.256 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.660), channel_id=707, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.111.clone
  %dynamic-slice.1313 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.256, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3692 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1313)
  %convert_element_type.3693 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3692), dimensions={2,0,1}
  %mul.6484 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3693, %convert_element_type.3693)
  %reduce.693 = f32[] reduce(%mul.6484, %constant.2882), dimensions={0,1,2}, to_apply=%region_565.23463
  %all-reduce.257 = f32[] all-reduce(%reduce.693), channel_id=708, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_565.23463.clone
  %add.3124 = f32[] add(%add.3122, %all-reduce.257)
  %mul.6487 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2243, %mul.3705)
  %convert_element_type.3694 = bf16[2,8192,4096]{2,1,0} convert(%mul.6487)
  %mul.6489 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3694, %mul.3702)
  %sharding_constraint.1206 = bf16[2,8192,4096]{2,1,0} copy(%mul.6489)
  %dot.661 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1206, %add_any.212), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.258 = bf16[4096,14336]{1,0} all-reduce(%dot.661), channel_id=709, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.112.clone
  %dynamic-slice.1315 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.258, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3695 = f32[512,14336]{1,0} convert(%dynamic-slice.1315)
  %mul.6491 = f32[512,14336]{1,0} multiply(%convert_element_type.3695, %convert_element_type.3695)
  %reduce.694 = f32[] reduce(%mul.6491, %constant.2882), dimensions={0,1}, to_apply=%region_566.23479
  %all-reduce.259 = f32[] all-reduce(%reduce.694), channel_id=710, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_566.23479.clone
  %add.3125 = f32[] add(%add.3124, %all-reduce.259)
  %dot.662 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1206, %mul.3696), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.260 = bf16[4096,14336]{1,0} all-reduce(%dot.662), channel_id=711, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.113.clone
  %dynamic-slice.1317 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.260, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3696 = f32[512,14336]{1,0} convert(%dynamic-slice.1317)
  %mul.6492 = f32[512,14336]{1,0} multiply(%convert_element_type.3696, %convert_element_type.3696)
  %reduce.695 = f32[] reduce(%mul.6492, %constant.2882), dimensions={0,1}, to_apply=%region_567.23488
  %all-reduce.261 = f32[] all-reduce(%reduce.695), channel_id=712, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_567.23488.clone
  %add.3126 = f32[] add(%add.3125, %all-reduce.261)
  %mul.6493 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3695, %get-tuple-element.316)
  %sharding_constraint.1207 = bf16[2,8192,14336]{2,1,0} copy(%mul.6493)
  %dot.663 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1207, %sharding_constraint.667), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.262 = bf16[14336,4096]{1,0} all-reduce(%dot.663), channel_id=713, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.114.clone
  %dynamic-slice.1319 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.262, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3697 = f32[14336,512]{1,0} convert(%dynamic-slice.1319)
  %mul.6494 = f32[14336,512]{1,0} multiply(%convert_element_type.3697, %convert_element_type.3697)
  %reduce.696 = f32[] reduce(%mul.6494, %constant.2882), dimensions={0,1}, to_apply=%region_568.23499
  %all-reduce.263 = f32[] all-reduce(%reduce.696), channel_id=714, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_568.23499.clone
  %add.3127 = f32[] add(%add.3126, %all-reduce.263)
  %mul.6495 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3694, %sharding_constraint.669)
  %reduce.697 = bf16[4096]{0} reduce(%mul.6495, %constant.5662), dimensions={0,1}, to_apply=%region_569.23506
  %all-reduce.264 = bf16[4096]{0} all-reduce(%reduce.697), channel_id=715, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_569.23506.clone
  %convert_element_type.3700 = f32[4096]{0} convert(%all-reduce.264)
  %mul.6496 = f32[4096]{0} multiply(%convert_element_type.3700, %convert_element_type.3700)
  %reduce.698 = f32[] reduce(%mul.6496, %constant.2882), dimensions={0}, to_apply=%region_570.23513
  %add.3128 = f32[] add(%add.3127, %reduce.698)
  %mul.6501 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2280, %mul.3781)
  %convert_element_type.3702 = bf16[2,8192,4096]{2,1,0} convert(%mul.6501)
  %mul.6502 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3702, %sharding_constraint.683)
  %reduce.699 = bf16[4096]{0} reduce(%mul.6502, %constant.5662), dimensions={0,1}, to_apply=%region_571.23524
  %all-reduce.265 = bf16[4096]{0} all-reduce(%reduce.699), channel_id=716, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_571.23524.clone
  %convert_element_type.3703 = f32[4096]{0} convert(%all-reduce.265)
  %mul.6503 = f32[4096]{0} multiply(%convert_element_type.3703, %convert_element_type.3703)
  %reduce.700 = f32[] reduce(%mul.6503, %constant.2882), dimensions={0}, to_apply=%region_572.23531
  %add.3130 = f32[] add(%add.3128, %reduce.700)
  %mul.6505 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3702, %mul.3778)
  %sharding_constraint.1208 = bf16[2,8192,4096]{2,1,0} copy(%mul.6505)
  %sharding_constraint.1209 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1208)
  %dot.664 = bf16[8,128,4096]{2,1,0} dot(%add_any.219, %sharding_constraint.1209), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.266 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.664), channel_id=717, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.115.clone
  %dynamic-slice.1321 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.266, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3704 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1321)
  %convert_element_type.3705 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3704), dimensions={2,0,1}
  %mul.6506 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3705, %convert_element_type.3705)
  %reduce.701 = f32[] reduce(%mul.6506, %constant.2882), dimensions={0,1,2}, to_apply=%region_573.23545
  %all-reduce.267 = f32[] all-reduce(%reduce.701), channel_id=718, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_573.23545.clone
  %add.3131 = f32[] add(%add.3130, %all-reduce.267)
  %dot.665 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.676, %sharding_constraint.675), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.268 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.665), channel_id=719, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.116.clone
  %dynamic-slice.1323 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.268, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3706 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1323)
  %convert_element_type.3707 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3706), dimensions={1,2,0}
  %mul.6507 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3707, %convert_element_type.3707)
  %reduce.702 = f32[] reduce(%mul.6507, %constant.2882), dimensions={0,1,2}, to_apply=%region_574.23555
  %all-reduce.269 = f32[] all-reduce(%reduce.702), channel_id=720, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_574.23555.clone
  %add.3132 = f32[] add(%add.3131, %all-reduce.269)
  %dot.666 = bf16[32,128,4096]{2,1,0} dot(%add_any.224, %sharding_constraint.1209), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.270 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.666), channel_id=721, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.117.clone
  %dynamic-slice.1325 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.270, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3708 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1325)
  %convert_element_type.3709 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3708), dimensions={2,0,1}
  %mul.6508 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3709, %convert_element_type.3709)
  %reduce.703 = f32[] reduce(%mul.6508, %constant.2882), dimensions={0,1,2}, to_apply=%region_575.23566
  %all-reduce.271 = f32[] all-reduce(%reduce.703), channel_id=722, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_575.23566.clone
  %add.3133 = f32[] add(%add.3132, %all-reduce.271)
  %dot.667 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.678, %sharding_constraint.1209), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.272 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.667), channel_id=723, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.118.clone
  %dynamic-slice.1327 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.272, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3710 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1327)
  %convert_element_type.3711 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3710), dimensions={2,0,1}
  %mul.6509 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3711, %convert_element_type.3711)
  %reduce.704 = f32[] reduce(%mul.6509, %constant.2882), dimensions={0,1,2}, to_apply=%region_576.23576
  %all-reduce.273 = f32[] all-reduce(%reduce.704), channel_id=724, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_576.23576.clone
  %add.3134 = f32[] add(%add.3133, %all-reduce.273)
  %mul.6514 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2197, %mul.3617)
  %convert_element_type.3712 = bf16[2,8192,4096]{2,1,0} convert(%mul.6514)
  %mul.6516 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3712, %mul.3614)
  %sharding_constraint.1211 = bf16[2,8192,4096]{2,1,0} copy(%mul.6516)
  %dot.668 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1211, %add_any.196), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.274 = bf16[4096,14336]{1,0} all-reduce(%dot.668), channel_id=725, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.119.clone
  %dynamic-slice.1329 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.274, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3714 = f32[512,14336]{1,0} convert(%dynamic-slice.1329)
  %mul.6517 = f32[512,14336]{1,0} multiply(%convert_element_type.3714, %convert_element_type.3714)
  %reduce.705 = f32[] reduce(%mul.6517, %constant.2882), dimensions={0,1}, to_apply=%region_577.23592
  %all-reduce.275 = f32[] all-reduce(%reduce.705), channel_id=726, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_577.23592.clone
  %add.3135 = f32[] add(%add.3134, %all-reduce.275)
  %dot.669 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1211, %mul.3607), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.276 = bf16[4096,14336]{1,0} all-reduce(%dot.669), channel_id=727, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.120.clone
  %dynamic-slice.1331 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.276, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3715 = f32[512,14336]{1,0} convert(%dynamic-slice.1331)
  %mul.6518 = f32[512,14336]{1,0} multiply(%convert_element_type.3715, %convert_element_type.3715)
  %reduce.706 = f32[] reduce(%mul.6518, %constant.2882), dimensions={0,1}, to_apply=%region_578.23601
  %all-reduce.277 = f32[] all-reduce(%reduce.706), channel_id=728, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_578.23601.clone
  %add.3136 = f32[] add(%add.3135, %all-reduce.277)
  %mul.6519 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3606, %get-tuple-element.289)
  %sharding_constraint.1212 = bf16[2,8192,14336]{2,1,0} copy(%mul.6519)
  %dot.670 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1212, %sharding_constraint.648), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.278 = bf16[14336,4096]{1,0} all-reduce(%dot.670), channel_id=729, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.121.clone
  %dynamic-slice.1333 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.278, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3716 = f32[14336,512]{1,0} convert(%dynamic-slice.1333)
  %mul.6520 = f32[14336,512]{1,0} multiply(%convert_element_type.3716, %convert_element_type.3716)
  %reduce.707 = f32[] reduce(%mul.6520, %constant.2882), dimensions={0,1}, to_apply=%region_579.23612
  %all-reduce.279 = f32[] all-reduce(%reduce.707), channel_id=730, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_579.23612.clone
  %add.3137 = f32[] add(%add.3136, %all-reduce.279)
  %mul.6528 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3712, %sharding_constraint.650)
  %reduce.708 = bf16[4096]{0} reduce(%mul.6528, %constant.5662), dimensions={0,1}, to_apply=%region_580.23619
  %all-reduce.280 = bf16[4096]{0} all-reduce(%reduce.708), channel_id=731, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_580.23619.clone
  %convert_element_type.3717 = f32[4096]{0} convert(%all-reduce.280)
  %mul.6533 = f32[4096]{0} multiply(%convert_element_type.3717, %convert_element_type.3717)
  %reduce.709 = f32[] reduce(%mul.6533, %constant.2882), dimensions={0}, to_apply=%region_581.23626
  %add.3138 = f32[] add(%add.3137, %reduce.709)
  %mul.6540 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2235, %mul.3684)
  %convert_element_type.3719 = bf16[2,8192,4096]{2,1,0} convert(%mul.6540)
  %mul.6543 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3719, %sharding_constraint.664)
  %reduce.710 = bf16[4096]{0} reduce(%mul.6543, %constant.5662), dimensions={0,1}, to_apply=%region_582.23637
  %all-reduce.281 = bf16[4096]{0} all-reduce(%reduce.710), channel_id=732, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_582.23637.clone
  %convert_element_type.3720 = f32[4096]{0} convert(%all-reduce.281)
  %mul.6544 = f32[4096]{0} multiply(%convert_element_type.3720, %convert_element_type.3720)
  %reduce.711 = f32[] reduce(%mul.6544, %constant.2882), dimensions={0}, to_apply=%region_583.23644
  %add.3139 = f32[] add(%add.3138, %reduce.711)
  %mul.6546 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3719, %mul.3681)
  %sharding_constraint.1213 = bf16[2,8192,4096]{2,1,0} copy(%mul.6546)
  %sharding_constraint.1214 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1213)
  %dot.671 = bf16[8,128,4096]{2,1,0} dot(%add_any.203, %sharding_constraint.1214), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.282 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.671), channel_id=733, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.122.clone
  %dynamic-slice.1335 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.282, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3721 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1335)
  %convert_element_type.3722 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3721), dimensions={2,0,1}
  %mul.6547 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3722, %convert_element_type.3722)
  %reduce.712 = f32[] reduce(%mul.6547, %constant.2882), dimensions={0,1,2}, to_apply=%region_584.23658
  %all-reduce.283 = f32[] all-reduce(%reduce.712), channel_id=734, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_584.23658.clone
  %add.3140 = f32[] add(%add.3139, %all-reduce.283)
  %dot.672 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.657, %sharding_constraint.656), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.284 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.672), channel_id=735, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.123.clone
  %dynamic-slice.1337 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.284, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3724 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1337)
  %convert_element_type.3725 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3724), dimensions={1,2,0}
  %mul.6548 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3725, %convert_element_type.3725)
  %reduce.713 = f32[] reduce(%mul.6548, %constant.2882), dimensions={0,1,2}, to_apply=%region_585.23668
  %all-reduce.285 = f32[] all-reduce(%reduce.713), channel_id=736, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_585.23668.clone
  %add.3141 = f32[] add(%add.3140, %all-reduce.285)
  %dot.673 = bf16[32,128,4096]{2,1,0} dot(%add_any.208, %sharding_constraint.1214), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.286 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.673), channel_id=737, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.124.clone
  %dynamic-slice.1339 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.286, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3726 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1339)
  %convert_element_type.3727 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3726), dimensions={2,0,1}
  %mul.6549 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3727, %convert_element_type.3727)
  %reduce.714 = f32[] reduce(%mul.6549, %constant.2882), dimensions={0,1,2}, to_apply=%region_586.23679
  %all-reduce.287 = f32[] all-reduce(%reduce.714), channel_id=738, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_586.23679.clone
  %add.3142 = f32[] add(%add.3141, %all-reduce.287)
  %dot.674 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.659, %sharding_constraint.1214), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.288 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.674), channel_id=739, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.125.clone
  %dynamic-slice.1341 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.288, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3728 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1341)
  %convert_element_type.3729 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3728), dimensions={2,0,1}
  %mul.6550 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3729, %convert_element_type.3729)
  %reduce.715 = f32[] reduce(%mul.6550, %constant.2882), dimensions={0,1,2}, to_apply=%region_587.23689
  %all-reduce.289 = f32[] all-reduce(%reduce.715), channel_id=740, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_587.23689.clone
  %add.3143 = f32[] add(%add.3142, %all-reduce.289)
  %mul.6553 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2153, %mul.3529)
  %convert_element_type.3731 = bf16[2,8192,4096]{2,1,0} convert(%mul.6553)
  %mul.6555 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3731, %mul.3525)
  %sharding_constraint.1216 = bf16[2,8192,4096]{2,1,0} copy(%mul.6555)
  %dot.675 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1216, %add_any.180), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.290 = bf16[4096,14336]{1,0} all-reduce(%dot.675), channel_id=741, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.126.clone
  %dynamic-slice.1343 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.290, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3732 = f32[512,14336]{1,0} convert(%dynamic-slice.1343)
  %mul.6556 = f32[512,14336]{1,0} multiply(%convert_element_type.3732, %convert_element_type.3732)
  %reduce.716 = f32[] reduce(%mul.6556, %constant.2882), dimensions={0,1}, to_apply=%region_588.23705
  %all-reduce.291 = f32[] all-reduce(%reduce.716), channel_id=742, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_588.23705.clone
  %add.3144 = f32[] add(%add.3143, %all-reduce.291)
  %dot.676 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1216, %mul.3504), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.292 = bf16[4096,14336]{1,0} all-reduce(%dot.676), channel_id=743, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.127.clone
  %dynamic-slice.1345 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.292, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3734 = f32[512,14336]{1,0} convert(%dynamic-slice.1345)
  %mul.6557 = f32[512,14336]{1,0} multiply(%convert_element_type.3734, %convert_element_type.3734)
  %reduce.717 = f32[] reduce(%mul.6557, %constant.2882), dimensions={0,1}, to_apply=%region_589.23714
  %all-reduce.293 = f32[] all-reduce(%reduce.717), channel_id=744, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_589.23714.clone
  %add.3145 = f32[] add(%add.3144, %all-reduce.293)
  %mul.6559 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3503, %get-tuple-element.262)
  %sharding_constraint.1217 = bf16[2,8192,14336]{2,1,0} copy(%mul.6559)
  %dot.677 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1217, %sharding_constraint.629), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.294 = bf16[14336,4096]{1,0} all-reduce(%dot.677), channel_id=745, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.128.clone
  %dynamic-slice.1347 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.294, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3735 = f32[14336,512]{1,0} convert(%dynamic-slice.1347)
  %mul.6560 = f32[14336,512]{1,0} multiply(%convert_element_type.3735, %convert_element_type.3735)
  %reduce.718 = f32[] reduce(%mul.6560, %constant.2882), dimensions={0,1}, to_apply=%region_590.23725
  %all-reduce.295 = f32[] all-reduce(%reduce.718), channel_id=746, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_590.23725.clone
  %add.3146 = f32[] add(%add.3145, %all-reduce.295)
  %mul.6561 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3731, %sharding_constraint.631)
  %reduce.719 = bf16[4096]{0} reduce(%mul.6561, %constant.5662), dimensions={0,1}, to_apply=%region_591.23732
  %all-reduce.296 = bf16[4096]{0} all-reduce(%reduce.719), channel_id=747, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_591.23732.clone
  %convert_element_type.3736 = f32[4096]{0} convert(%all-reduce.296)
  %mul.6562 = f32[4096]{0} multiply(%convert_element_type.3736, %convert_element_type.3736)
  %reduce.720 = f32[] reduce(%mul.6562, %constant.2882), dimensions={0}, to_apply=%region_592.23739
  %add.3147 = f32[] add(%add.3146, %reduce.720)
  %mul.6565 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2188, %mul.3589)
  %convert_element_type.3737 = bf16[2,8192,4096]{2,1,0} convert(%mul.6565)
  %mul.6566 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3737, %sharding_constraint.645)
  %reduce.721 = bf16[4096]{0} reduce(%mul.6566, %constant.5662), dimensions={0,1}, to_apply=%region_593.23750
  %all-reduce.297 = bf16[4096]{0} all-reduce(%reduce.721), channel_id=748, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_593.23750.clone
  %convert_element_type.3738 = f32[4096]{0} convert(%all-reduce.297)
  %mul.6567 = f32[4096]{0} multiply(%convert_element_type.3738, %convert_element_type.3738)
  %reduce.722 = f32[] reduce(%mul.6567, %constant.2882), dimensions={0}, to_apply=%region_594.23757
  %add.3148 = f32[] add(%add.3147, %reduce.722)
  %mul.6569 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3737, %mul.3586)
  %sharding_constraint.1218 = bf16[2,8192,4096]{2,1,0} copy(%mul.6569)
  %sharding_constraint.1219 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1218)
  %dot.678 = bf16[8,128,4096]{2,1,0} dot(%add_any.187, %sharding_constraint.1219), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.298 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.678), channel_id=749, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.129.clone
  %dynamic-slice.1349 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.298, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3739 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1349)
  %convert_element_type.3741 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3739), dimensions={2,0,1}
  %mul.6570 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3741, %convert_element_type.3741)
  %reduce.723 = f32[] reduce(%mul.6570, %constant.2882), dimensions={0,1,2}, to_apply=%region_595.23771
  %all-reduce.299 = f32[] all-reduce(%reduce.723), channel_id=750, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_595.23771.clone
  %add.3149 = f32[] add(%add.3148, %all-reduce.299)
  %dot.679 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.638, %sharding_constraint.637), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.300 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.679), channel_id=751, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.130.clone
  %dynamic-slice.1351 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.300, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3742 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1351)
  %convert_element_type.3743 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3742), dimensions={1,2,0}
  %mul.6571 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3743, %convert_element_type.3743)
  %reduce.724 = f32[] reduce(%mul.6571, %constant.2882), dimensions={0,1,2}, to_apply=%region_596.23781
  %all-reduce.301 = f32[] all-reduce(%reduce.724), channel_id=752, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_596.23781.clone
  %add.3150 = f32[] add(%add.3149, %all-reduce.301)
  %dot.680 = bf16[32,128,4096]{2,1,0} dot(%add_any.192, %sharding_constraint.1219), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.302 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.680), channel_id=753, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.131.clone
  %dynamic-slice.1353 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.302, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3745 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1353)
  %convert_element_type.3746 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3745), dimensions={2,0,1}
  %mul.6572 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3746, %convert_element_type.3746)
  %reduce.725 = f32[] reduce(%mul.6572, %constant.2882), dimensions={0,1,2}, to_apply=%region_597.23792
  %all-reduce.303 = f32[] all-reduce(%reduce.725), channel_id=754, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_597.23792.clone
  %add.3151 = f32[] add(%add.3150, %all-reduce.303)
  %dot.681 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.640, %sharding_constraint.1219), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.304 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.681), channel_id=755, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.132.clone
  %dynamic-slice.1355 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.304, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3748 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1355)
  %convert_element_type.3752 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3748), dimensions={2,0,1}
  %mul.6573 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3752, %convert_element_type.3752)
  %reduce.726 = f32[] reduce(%mul.6573, %constant.2882), dimensions={0,1,2}, to_apply=%region_598.23802
  %all-reduce.305 = f32[] all-reduce(%reduce.726), channel_id=756, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_598.23802.clone
  %add.3152 = f32[] add(%add.3151, %all-reduce.305)
  %mul.6578 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2111, %mul.3418)
  %convert_element_type.3753 = bf16[2,8192,4096]{2,1,0} convert(%mul.6578)
  %mul.6580 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3753, %mul.3413)
  %sharding_constraint.1221 = bf16[2,8192,4096]{2,1,0} copy(%mul.6580)
  %dot.682 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1221, %add_any.164), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.306 = bf16[4096,14336]{1,0} all-reduce(%dot.682), channel_id=757, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.133.clone
  %dynamic-slice.1357 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.306, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3754 = f32[512,14336]{1,0} convert(%dynamic-slice.1357)
  %mul.6581 = f32[512,14336]{1,0} multiply(%convert_element_type.3754, %convert_element_type.3754)
  %reduce.727 = f32[] reduce(%mul.6581, %constant.2882), dimensions={0,1}, to_apply=%region_599.23818
  %all-reduce.307 = f32[] all-reduce(%reduce.727), channel_id=758, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_599.23818.clone
  %add.3153 = f32[] add(%add.3152, %all-reduce.307)
  %dot.683 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1221, %mul.3403), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.308 = bf16[4096,14336]{1,0} all-reduce(%dot.683), channel_id=759, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.134.clone
  %dynamic-slice.1359 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.308, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3756 = f32[512,14336]{1,0} convert(%dynamic-slice.1359)
  %mul.6582 = f32[512,14336]{1,0} multiply(%convert_element_type.3756, %convert_element_type.3756)
  %reduce.728 = f32[] reduce(%mul.6582, %constant.2882), dimensions={0,1}, to_apply=%region_600.23827
  %all-reduce.309 = f32[] all-reduce(%reduce.728), channel_id=760, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_600.23827.clone
  %add.3154 = f32[] add(%add.3153, %all-reduce.309)
  %mul.6583 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3402, %get-tuple-element.235)
  %sharding_constraint.1222 = bf16[2,8192,14336]{2,1,0} copy(%mul.6583)
  %dot.684 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1222, %sharding_constraint.610), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.310 = bf16[14336,4096]{1,0} all-reduce(%dot.684), channel_id=761, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.135.clone
  %dynamic-slice.1361 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.310, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3758 = f32[14336,512]{1,0} convert(%dynamic-slice.1361)
  %mul.6584 = f32[14336,512]{1,0} multiply(%convert_element_type.3758, %convert_element_type.3758)
  %reduce.729 = f32[] reduce(%mul.6584, %constant.2882), dimensions={0,1}, to_apply=%region_601.23838
  %all-reduce.311 = f32[] all-reduce(%reduce.729), channel_id=762, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_601.23838.clone
  %add.3155 = f32[] add(%add.3154, %all-reduce.311)
  %mul.6585 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3753, %sharding_constraint.612)
  %reduce.730 = bf16[4096]{0} reduce(%mul.6585, %constant.5662), dimensions={0,1}, to_apply=%region_602.23845
  %all-reduce.312 = bf16[4096]{0} all-reduce(%reduce.730), channel_id=763, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_602.23845.clone
  %convert_element_type.3760 = f32[4096]{0} convert(%all-reduce.312)
  %mul.6586 = f32[4096]{0} multiply(%convert_element_type.3760, %convert_element_type.3760)
  %reduce.731 = f32[] reduce(%mul.6586, %constant.2882), dimensions={0}, to_apply=%region_603.23852
  %add.3156 = f32[] add(%add.3155, %reduce.731)
  %mul.6589 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2145, %mul.3491)
  %convert_element_type.3761 = bf16[2,8192,4096]{2,1,0} convert(%mul.6589)
  %mul.6590 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3761, %sharding_constraint.626)
  %reduce.732 = bf16[4096]{0} reduce(%mul.6590, %constant.5662), dimensions={0,1}, to_apply=%region_604.23863
  %all-reduce.313 = bf16[4096]{0} all-reduce(%reduce.732), channel_id=764, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_604.23863.clone
  %convert_element_type.3763 = f32[4096]{0} convert(%all-reduce.313)
  %mul.6591 = f32[4096]{0} multiply(%convert_element_type.3763, %convert_element_type.3763)
  %reduce.733 = f32[] reduce(%mul.6591, %constant.2882), dimensions={0}, to_apply=%region_605.23870
  %add.3157 = f32[] add(%add.3156, %reduce.733)
  %mul.6593 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3761, %mul.3488)
  %sharding_constraint.1223 = bf16[2,8192,4096]{2,1,0} copy(%mul.6593)
  %sharding_constraint.1224 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1223)
  %dot.685 = bf16[8,128,4096]{2,1,0} dot(%add_any.171, %sharding_constraint.1224), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.314 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.685), channel_id=765, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.136.clone
  %dynamic-slice.1363 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.314, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3764 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1363)
  %convert_element_type.3766 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3764), dimensions={2,0,1}
  %mul.6594 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3766, %convert_element_type.3766)
  %reduce.734 = f32[] reduce(%mul.6594, %constant.2882), dimensions={0,1,2}, to_apply=%region_606.23884
  %all-reduce.315 = f32[] all-reduce(%reduce.734), channel_id=766, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_606.23884.clone
  %add.3158 = f32[] add(%add.3157, %all-reduce.315)
  %dot.686 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.619, %sharding_constraint.618), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.316 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.686), channel_id=767, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.137.clone
  %dynamic-slice.1365 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.316, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3767 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1365)
  %convert_element_type.3768 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3767), dimensions={1,2,0}
  %mul.6595 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3768, %convert_element_type.3768)
  %reduce.735 = f32[] reduce(%mul.6595, %constant.2882), dimensions={0,1,2}, to_apply=%region_607.23894
  %all-reduce.317 = f32[] all-reduce(%reduce.735), channel_id=768, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_607.23894.clone
  %add.3159 = f32[] add(%add.3158, %all-reduce.317)
  %dot.687 = bf16[32,128,4096]{2,1,0} dot(%add_any.176, %sharding_constraint.1224), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.318 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.687), channel_id=769, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.138.clone
  %dynamic-slice.1367 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.318, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3769 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1367)
  %convert_element_type.3770 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3769), dimensions={2,0,1}
  %mul.6596 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3770, %convert_element_type.3770)
  %reduce.736 = f32[] reduce(%mul.6596, %constant.2882), dimensions={0,1,2}, to_apply=%region_608.23905
  %all-reduce.319 = f32[] all-reduce(%reduce.736), channel_id=770, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_608.23905.clone
  %add.3160 = f32[] add(%add.3159, %all-reduce.319)
  %dot.688 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.621, %sharding_constraint.1224), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.320 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.688), channel_id=771, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.139.clone
  %dynamic-slice.1369 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.320, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3771 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1369)
  %convert_element_type.3772 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3771), dimensions={2,0,1}
  %mul.6597 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3772, %convert_element_type.3772)
  %reduce.737 = f32[] reduce(%mul.6597, %constant.2882), dimensions={0,1,2}, to_apply=%region_609.23915
  %all-reduce.321 = f32[] all-reduce(%reduce.737), channel_id=772, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_609.23915.clone
  %add.3161 = f32[] add(%add.3160, %all-reduce.321)
  %mul.6609 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2067, %mul.3325)
  %convert_element_type.3773 = bf16[2,8192,4096]{2,1,0} convert(%mul.6609)
  %mul.6615 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3773, %mul.3317)
  %sharding_constraint.1226 = bf16[2,8192,4096]{2,1,0} copy(%mul.6615)
  %dot.689 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1226, %add_any.148), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.322 = bf16[4096,14336]{1,0} all-reduce(%dot.689), channel_id=773, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.140.clone
  %dynamic-slice.1371 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.322, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3774 = f32[512,14336]{1,0} convert(%dynamic-slice.1371)
  %mul.6616 = f32[512,14336]{1,0} multiply(%convert_element_type.3774, %convert_element_type.3774)
  %reduce.738 = f32[] reduce(%mul.6616, %constant.2882), dimensions={0,1}, to_apply=%region_610.23931
  %all-reduce.323 = f32[] all-reduce(%reduce.738), channel_id=774, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_610.23931.clone
  %add.3162 = f32[] add(%add.3161, %all-reduce.323)
  %dot.690 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1226, %mul.3307), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.324 = bf16[4096,14336]{1,0} all-reduce(%dot.690), channel_id=775, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.141.clone
  %dynamic-slice.1373 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.324, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3776 = f32[512,14336]{1,0} convert(%dynamic-slice.1373)
  %mul.6618 = f32[512,14336]{1,0} multiply(%convert_element_type.3776, %convert_element_type.3776)
  %reduce.739 = f32[] reduce(%mul.6618, %constant.2882), dimensions={0,1}, to_apply=%region_611.23940
  %all-reduce.325 = f32[] all-reduce(%reduce.739), channel_id=776, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_611.23940.clone
  %add.3163 = f32[] add(%add.3162, %all-reduce.325)
  %mul.6619 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3306, %get-tuple-element.208)
  %sharding_constraint.1227 = bf16[2,8192,14336]{2,1,0} copy(%mul.6619)
  %dot.691 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1227, %sharding_constraint.591), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.326 = bf16[14336,4096]{1,0} all-reduce(%dot.691), channel_id=777, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.142.clone
  %dynamic-slice.1375 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.326, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3777 = f32[14336,512]{1,0} convert(%dynamic-slice.1375)
  %mul.6620 = f32[14336,512]{1,0} multiply(%convert_element_type.3777, %convert_element_type.3777)
  %reduce.740 = f32[] reduce(%mul.6620, %constant.2882), dimensions={0,1}, to_apply=%region_612.23951
  %all-reduce.327 = f32[] all-reduce(%reduce.740), channel_id=778, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_612.23951.clone
  %add.3164 = f32[] add(%add.3163, %all-reduce.327)
  %mul.6622 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3773, %sharding_constraint.593)
  %reduce.741 = bf16[4096]{0} reduce(%mul.6622, %constant.5662), dimensions={0,1}, to_apply=%region_613.23958
  %all-reduce.328 = bf16[4096]{0} all-reduce(%reduce.741), channel_id=779, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_613.23958.clone
  %convert_element_type.3778 = f32[4096]{0} convert(%all-reduce.328)
  %mul.6623 = f32[4096]{0} multiply(%convert_element_type.3778, %convert_element_type.3778)
  %reduce.742 = f32[] reduce(%mul.6623, %constant.2882), dimensions={0}, to_apply=%region_614.23965
  %add.3165 = f32[] add(%add.3164, %reduce.742)
  %mul.6626 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2102, %mul.3393)
  %convert_element_type.3779 = bf16[2,8192,4096]{2,1,0} convert(%mul.6626)
  %mul.6627 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3779, %sharding_constraint.607)
  %reduce.743 = bf16[4096]{0} reduce(%mul.6627, %constant.5662), dimensions={0,1}, to_apply=%region_615.23976
  %all-reduce.329 = bf16[4096]{0} all-reduce(%reduce.743), channel_id=780, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_615.23976.clone
  %convert_element_type.3780 = f32[4096]{0} convert(%all-reduce.329)
  %mul.6628 = f32[4096]{0} multiply(%convert_element_type.3780, %convert_element_type.3780)
  %reduce.744 = f32[] reduce(%mul.6628, %constant.2882), dimensions={0}, to_apply=%region_616.23983
  %add.3166 = f32[] add(%add.3165, %reduce.744)
  %mul.6630 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3779, %mul.3389)
  %sharding_constraint.1228 = bf16[2,8192,4096]{2,1,0} copy(%mul.6630)
  %sharding_constraint.1229 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1228)
  %dot.692 = bf16[8,128,4096]{2,1,0} dot(%add_any.155, %sharding_constraint.1229), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.330 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.692), channel_id=781, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.143.clone
  %dynamic-slice.1377 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.330, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3781 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1377)
  %convert_element_type.3782 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3781), dimensions={2,0,1}
  %mul.6631 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3782, %convert_element_type.3782)
  %reduce.745 = f32[] reduce(%mul.6631, %constant.2882), dimensions={0,1,2}, to_apply=%region_617.23997
  %all-reduce.331 = f32[] all-reduce(%reduce.745), channel_id=782, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_617.23997.clone
  %add.3168 = f32[] add(%add.3166, %all-reduce.331)
  %dot.693 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.600, %sharding_constraint.599), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.332 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.693), channel_id=783, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.144.clone
  %dynamic-slice.1379 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.332, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3783 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1379)
  %convert_element_type.3784 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3783), dimensions={1,2,0}
  %mul.6632 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3784, %convert_element_type.3784)
  %reduce.746 = f32[] reduce(%mul.6632, %constant.2882), dimensions={0,1,2}, to_apply=%region_618.24007
  %all-reduce.333 = f32[] all-reduce(%reduce.746), channel_id=784, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_618.24007.clone
  %add.3169 = f32[] add(%add.3168, %all-reduce.333)
  %dot.694 = bf16[32,128,4096]{2,1,0} dot(%add_any.160, %sharding_constraint.1229), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.334 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.694), channel_id=785, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.145.clone
  %dynamic-slice.1381 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.334, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3785 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1381)
  %convert_element_type.3786 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3785), dimensions={2,0,1}
  %mul.6633 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3786, %convert_element_type.3786)
  %reduce.747 = f32[] reduce(%mul.6633, %constant.2882), dimensions={0,1,2}, to_apply=%region_619.24018
  %all-reduce.335 = f32[] all-reduce(%reduce.747), channel_id=786, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_619.24018.clone
  %add.3170 = f32[] add(%add.3169, %all-reduce.335)
  %dot.695 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.602, %sharding_constraint.1229), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.336 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.695), channel_id=787, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.146.clone
  %dynamic-slice.1383 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.336, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3787 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1383)
  %convert_element_type.3788 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3787), dimensions={2,0,1}
  %mul.6634 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3788, %convert_element_type.3788)
  %reduce.748 = f32[] reduce(%mul.6634, %constant.2882), dimensions={0,1,2}, to_apply=%region_620.24028
  %all-reduce.337 = f32[] all-reduce(%reduce.748), channel_id=788, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_620.24028.clone
  %add.3171 = f32[] add(%add.3170, %all-reduce.337)
  %mul.6637 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2023, %mul.3222)
  %convert_element_type.3790 = bf16[2,8192,4096]{2,1,0} convert(%mul.6637)
  %mul.6641 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3790, %mul.3217)
  %sharding_constraint.1231 = bf16[2,8192,4096]{2,1,0} copy(%mul.6641)
  %dot.696 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1231, %add_any.132), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.338 = bf16[4096,14336]{1,0} all-reduce(%dot.696), channel_id=789, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.147.clone
  %dynamic-slice.1385 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.338, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3791 = f32[512,14336]{1,0} convert(%dynamic-slice.1385)
  %mul.6642 = f32[512,14336]{1,0} multiply(%convert_element_type.3791, %convert_element_type.3791)
  %reduce.749 = f32[] reduce(%mul.6642, %constant.2882), dimensions={0,1}, to_apply=%region_621.24044
  %all-reduce.339 = f32[] all-reduce(%reduce.749), channel_id=790, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_621.24044.clone
  %add.3173 = f32[] add(%add.3171, %all-reduce.339)
  %dot.697 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1231, %mul.3211), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.340 = bf16[4096,14336]{1,0} all-reduce(%dot.697), channel_id=791, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.148.clone
  %dynamic-slice.1387 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.340, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3792 = f32[512,14336]{1,0} convert(%dynamic-slice.1387)
  %mul.6645 = f32[512,14336]{1,0} multiply(%convert_element_type.3792, %convert_element_type.3792)
  %reduce.750 = f32[] reduce(%mul.6645, %constant.2882), dimensions={0,1}, to_apply=%region_622.24053
  %all-reduce.341 = f32[] all-reduce(%reduce.750), channel_id=792, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_622.24053.clone
  %add.3174 = f32[] add(%add.3173, %all-reduce.341)
  %mul.6646 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3210, %get-tuple-element.181)
  %sharding_constraint.1232 = bf16[2,8192,14336]{2,1,0} copy(%mul.6646)
  %dot.698 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1232, %sharding_constraint.572), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.342 = bf16[14336,4096]{1,0} all-reduce(%dot.698), channel_id=793, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.149.clone
  %dynamic-slice.1389 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.342, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3793 = f32[14336,512]{1,0} convert(%dynamic-slice.1389)
  %mul.6647 = f32[14336,512]{1,0} multiply(%convert_element_type.3793, %convert_element_type.3793)
  %reduce.751 = f32[] reduce(%mul.6647, %constant.2882), dimensions={0,1}, to_apply=%region_623.24064
  %all-reduce.343 = f32[] all-reduce(%reduce.751), channel_id=794, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_623.24064.clone
  %add.3175 = f32[] add(%add.3174, %all-reduce.343)
  %mul.6648 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3790, %sharding_constraint.574)
  %reduce.752 = bf16[4096]{0} reduce(%mul.6648, %constant.5662), dimensions={0,1}, to_apply=%region_624.24071
  %all-reduce.344 = bf16[4096]{0} all-reduce(%reduce.752), channel_id=795, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_624.24071.clone
  %convert_element_type.3795 = f32[4096]{0} convert(%all-reduce.344)
  %mul.6649 = f32[4096]{0} multiply(%convert_element_type.3795, %convert_element_type.3795)
  %reduce.753 = f32[] reduce(%mul.6649, %constant.2882), dimensions={0}, to_apply=%region_625.24078
  %add.3176 = f32[] add(%add.3175, %reduce.753)
  %mul.6652 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2059, %mul.3296)
  %convert_element_type.3796 = bf16[2,8192,4096]{2,1,0} convert(%mul.6652)
  %mul.6653 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3796, %sharding_constraint.588)
  %reduce.754 = bf16[4096]{0} reduce(%mul.6653, %constant.5662), dimensions={0,1}, to_apply=%region_626.24089
  %all-reduce.345 = bf16[4096]{0} all-reduce(%reduce.754), channel_id=796, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_626.24089.clone
  %convert_element_type.3798 = f32[4096]{0} convert(%all-reduce.345)
  %mul.6655 = f32[4096]{0} multiply(%convert_element_type.3798, %convert_element_type.3798)
  %reduce.755 = f32[] reduce(%mul.6655, %constant.2882), dimensions={0}, to_apply=%region_627.24096
  %add.3177 = f32[] add(%add.3176, %reduce.755)
  %mul.6657 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3796, %mul.3293)
  %sharding_constraint.1233 = bf16[2,8192,4096]{2,1,0} copy(%mul.6657)
  %sharding_constraint.1234 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1233)
  %dot.699 = bf16[8,128,4096]{2,1,0} dot(%add_any.139, %sharding_constraint.1234), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.346 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.699), channel_id=797, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.150.clone
  %dynamic-slice.1391 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.346, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3800 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1391)
  %convert_element_type.3801 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3800), dimensions={2,0,1}
  %mul.6658 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3801, %convert_element_type.3801)
  %reduce.756 = f32[] reduce(%mul.6658, %constant.2882), dimensions={0,1,2}, to_apply=%region_628.24110
  %all-reduce.347 = f32[] all-reduce(%reduce.756), channel_id=798, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_628.24110.clone
  %add.3178 = f32[] add(%add.3177, %all-reduce.347)
  %dot.700 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.581, %sharding_constraint.580), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.348 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.700), channel_id=799, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.151.clone
  %dynamic-slice.1393 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.348, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3802 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1393)
  %convert_element_type.3803 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3802), dimensions={1,2,0}
  %mul.6659 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3803, %convert_element_type.3803)
  %reduce.757 = f32[] reduce(%mul.6659, %constant.2882), dimensions={0,1,2}, to_apply=%region_629.24120
  %all-reduce.349 = f32[] all-reduce(%reduce.757), channel_id=800, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_629.24120.clone
  %add.3179 = f32[] add(%add.3178, %all-reduce.349)
  %dot.701 = bf16[32,128,4096]{2,1,0} dot(%add_any.144, %sharding_constraint.1234), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.350 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.701), channel_id=801, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.152.clone
  %dynamic-slice.1395 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.350, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3805 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1395)
  %convert_element_type.3807 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3805), dimensions={2,0,1}
  %mul.6660 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3807, %convert_element_type.3807)
  %reduce.758 = f32[] reduce(%mul.6660, %constant.2882), dimensions={0,1,2}, to_apply=%region_630.24131
  %all-reduce.351 = f32[] all-reduce(%reduce.758), channel_id=802, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_630.24131.clone
  %add.3180 = f32[] add(%add.3179, %all-reduce.351)
  %dot.702 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.583, %sharding_constraint.1234), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.352 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.702), channel_id=803, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.153.clone
  %dynamic-slice.1397 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.352, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3809 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1397)
  %convert_element_type.3811 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3809), dimensions={2,0,1}
  %mul.6661 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3811, %convert_element_type.3811)
  %reduce.759 = f32[] reduce(%mul.6661, %constant.2882), dimensions={0,1,2}, to_apply=%region_631.24141
  %all-reduce.353 = f32[] all-reduce(%reduce.759), channel_id=804, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_631.24141.clone
  %add.3182 = f32[] add(%add.3180, %all-reduce.353)
  %mul.6664 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1980, %mul.3130)
  %convert_element_type.3812 = bf16[2,8192,4096]{2,1,0} convert(%mul.6664)
  %mul.6666 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3812, %mul.3125)
  %sharding_constraint.1236 = bf16[2,8192,4096]{2,1,0} copy(%mul.6666)
  %dot.703 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1236, %add_any.116), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.354 = bf16[4096,14336]{1,0} all-reduce(%dot.703), channel_id=805, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.154.clone
  %dynamic-slice.1399 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.354, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3813 = f32[512,14336]{1,0} convert(%dynamic-slice.1399)
  %mul.6667 = f32[512,14336]{1,0} multiply(%convert_element_type.3813, %convert_element_type.3813)
  %reduce.760 = f32[] reduce(%mul.6667, %constant.2882), dimensions={0,1}, to_apply=%region_632.24157
  %all-reduce.355 = f32[] all-reduce(%reduce.760), channel_id=806, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_632.24157.clone
  %add.3183 = f32[] add(%add.3182, %all-reduce.355)
  %dot.704 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1236, %mul.3114), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.356 = bf16[4096,14336]{1,0} all-reduce(%dot.704), channel_id=807, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.155.clone
  %dynamic-slice.1401 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.356, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3814 = f32[512,14336]{1,0} convert(%dynamic-slice.1401)
  %mul.6668 = f32[512,14336]{1,0} multiply(%convert_element_type.3814, %convert_element_type.3814)
  %reduce.761 = f32[] reduce(%mul.6668, %constant.2882), dimensions={0,1}, to_apply=%region_633.24166
  %all-reduce.357 = f32[] all-reduce(%reduce.761), channel_id=808, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_633.24166.clone
  %add.3184 = f32[] add(%add.3183, %all-reduce.357)
  %mul.6669 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3113, %get-tuple-element.154)
  %sharding_constraint.1237 = bf16[2,8192,14336]{2,1,0} copy(%mul.6669)
  %dot.705 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1237, %sharding_constraint.553), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.358 = bf16[14336,4096]{1,0} all-reduce(%dot.705), channel_id=809, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.156.clone
  %dynamic-slice.1403 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.358, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3815 = f32[14336,512]{1,0} convert(%dynamic-slice.1403)
  %mul.6670 = f32[14336,512]{1,0} multiply(%convert_element_type.3815, %convert_element_type.3815)
  %reduce.762 = f32[] reduce(%mul.6670, %constant.2882), dimensions={0,1}, to_apply=%region_634.24177
  %all-reduce.359 = f32[] all-reduce(%reduce.762), channel_id=810, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_634.24177.clone
  %add.3185 = f32[] add(%add.3184, %all-reduce.359)
  %mul.6671 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3812, %sharding_constraint.555)
  %reduce.763 = bf16[4096]{0} reduce(%mul.6671, %constant.5662), dimensions={0,1}, to_apply=%region_635.24184
  %all-reduce.360 = bf16[4096]{0} all-reduce(%reduce.763), channel_id=811, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_635.24184.clone
  %convert_element_type.3816 = f32[4096]{0} convert(%all-reduce.360)
  %mul.6672 = f32[4096]{0} multiply(%convert_element_type.3816, %convert_element_type.3816)
  %reduce.764 = f32[] reduce(%mul.6672, %constant.2882), dimensions={0}, to_apply=%region_636.24191
  %add.3186 = f32[] add(%add.3185, %reduce.764)
  %mul.6677 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2016, %mul.3198)
  %convert_element_type.3817 = bf16[2,8192,4096]{2,1,0} convert(%mul.6677)
  %mul.6678 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3817, %sharding_constraint.569)
  %reduce.765 = bf16[4096]{0} reduce(%mul.6678, %constant.5662), dimensions={0,1}, to_apply=%region_637.24202
  %all-reduce.361 = bf16[4096]{0} all-reduce(%reduce.765), channel_id=812, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_637.24202.clone
  %convert_element_type.3818 = f32[4096]{0} convert(%all-reduce.361)
  %mul.6679 = f32[4096]{0} multiply(%convert_element_type.3818, %convert_element_type.3818)
  %reduce.766 = f32[] reduce(%mul.6679, %constant.2882), dimensions={0}, to_apply=%region_638.24209
  %add.3187 = f32[] add(%add.3186, %reduce.766)
  %mul.6681 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3817, %mul.3194)
  %sharding_constraint.1238 = bf16[2,8192,4096]{2,1,0} copy(%mul.6681)
  %sharding_constraint.1239 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1238)
  %dot.706 = bf16[8,128,4096]{2,1,0} dot(%add_any.123, %sharding_constraint.1239), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.362 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.706), channel_id=813, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.157.clone
  %dynamic-slice.1405 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.362, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3819 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1405)
  %convert_element_type.3820 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3819), dimensions={2,0,1}
  %mul.6682 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3820, %convert_element_type.3820)
  %reduce.767 = f32[] reduce(%mul.6682, %constant.2882), dimensions={0,1,2}, to_apply=%region_639.24223
  %all-reduce.363 = f32[] all-reduce(%reduce.767), channel_id=814, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_639.24223.clone
  %add.3188 = f32[] add(%add.3187, %all-reduce.363)
  %dot.707 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.562, %sharding_constraint.561), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.364 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.707), channel_id=815, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.158.clone
  %dynamic-slice.1407 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.364, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3821 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1407)
  %convert_element_type.3822 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3821), dimensions={1,2,0}
  %mul.6683 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3822, %convert_element_type.3822)
  %reduce.768 = f32[] reduce(%mul.6683, %constant.2882), dimensions={0,1,2}, to_apply=%region_640.24233
  %all-reduce.365 = f32[] all-reduce(%reduce.768), channel_id=816, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_640.24233.clone
  %add.3189 = f32[] add(%add.3188, %all-reduce.365)
  %dot.708 = bf16[32,128,4096]{2,1,0} dot(%add_any.128, %sharding_constraint.1239), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.366 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.708), channel_id=817, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.159.clone
  %dynamic-slice.1409 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.366, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3823 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1409)
  %convert_element_type.3824 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3823), dimensions={2,0,1}
  %mul.6684 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3824, %convert_element_type.3824)
  %reduce.769 = f32[] reduce(%mul.6684, %constant.2882), dimensions={0,1,2}, to_apply=%region_641.24244
  %all-reduce.367 = f32[] all-reduce(%reduce.769), channel_id=818, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_641.24244.clone
  %add.3190 = f32[] add(%add.3189, %all-reduce.367)
  %dot.709 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.564, %sharding_constraint.1239), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.368 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.709), channel_id=819, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.160.clone
  %dynamic-slice.1411 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.368, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3826 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1411)
  %convert_element_type.3827 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3826), dimensions={2,0,1}
  %mul.6689 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3827, %convert_element_type.3827)
  %reduce.770 = f32[] reduce(%mul.6689, %constant.2882), dimensions={0,1,2}, to_apply=%region_642.24254
  %all-reduce.369 = f32[] all-reduce(%reduce.770), channel_id=820, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_642.24254.clone
  %add.3191 = f32[] add(%add.3190, %all-reduce.369)
  %mul.6696 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3181, %mul.5640)
  %convert_element_type.3828 = bf16[2,8192,4096]{2,1,0} convert(%mul.6696)
  %mul.6698 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3828, %mul.5636)
  %sharding_constraint.1241 = bf16[2,8192,4096]{2,1,0} copy(%mul.6698)
  %dot.710 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1241, %add_any.532), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.370 = bf16[4096,14336]{1,0} all-reduce(%dot.710), channel_id=821, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.161.clone
  %dynamic-slice.1413 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.370, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3829 = f32[512,14336]{1,0} convert(%dynamic-slice.1413)
  %mul.6702 = f32[512,14336]{1,0} multiply(%convert_element_type.3829, %convert_element_type.3829)
  %reduce.771 = f32[] reduce(%mul.6702, %constant.2882), dimensions={0,1}, to_apply=%region_643.24270
  %all-reduce.371 = f32[] all-reduce(%reduce.771), channel_id=822, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_643.24270.clone
  %add.3192 = f32[] add(%add.3191, %all-reduce.371)
  %dot.711 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1241, %mul.5628), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.372 = bf16[4096,14336]{1,0} all-reduce(%dot.711), channel_id=823, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.162.clone
  %dynamic-slice.1415 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.372, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3830 = f32[512,14336]{1,0} convert(%dynamic-slice.1415)
  %mul.6703 = f32[512,14336]{1,0} multiply(%convert_element_type.3830, %convert_element_type.3830)
  %reduce.772 = f32[] reduce(%mul.6703, %constant.2882), dimensions={0,1}, to_apply=%region_644.24279
  %all-reduce.373 = f32[] all-reduce(%reduce.772), channel_id=824, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_644.24279.clone
  %add.3193 = f32[] add(%add.3192, %all-reduce.373)
  %mul.6707 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5627, %get-tuple-element.856)
  %sharding_constraint.1242 = bf16[2,8192,14336]{2,1,0} copy(%mul.6707)
  %dot.712 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1242, %sharding_constraint.1047), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.374 = bf16[14336,4096]{1,0} all-reduce(%dot.712), channel_id=825, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.163.clone
  %dynamic-slice.1417 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.374, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3831 = f32[14336,512]{1,0} convert(%dynamic-slice.1417)
  %mul.6708 = f32[14336,512]{1,0} multiply(%convert_element_type.3831, %convert_element_type.3831)
  %reduce.773 = f32[] reduce(%mul.6708, %constant.2882), dimensions={0,1}, to_apply=%region_645.24290
  %all-reduce.375 = f32[] all-reduce(%reduce.773), channel_id=826, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_645.24290.clone
  %add.3194 = f32[] add(%add.3193, %all-reduce.375)
  %mul.6709 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3828, %sharding_constraint.1051)
  %reduce.774 = bf16[4096]{0} reduce(%mul.6709, %constant.5662), dimensions={0,1}, to_apply=%region_646.24297
  %all-reduce.376 = bf16[4096]{0} all-reduce(%reduce.774), channel_id=827, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_646.24297.clone
  %convert_element_type.3832 = f32[4096]{0} convert(%all-reduce.376)
  %mul.6710 = f32[4096]{0} multiply(%convert_element_type.3832, %convert_element_type.3832)
  %reduce.775 = f32[] reduce(%mul.6710, %constant.2882), dimensions={0}, to_apply=%region_647.24304
  %add.3196 = f32[] add(%add.3194, %reduce.775)
  %mul.6713 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3225, %mul.5707)
  %convert_element_type.3835 = bf16[2,8192,4096]{2,1,0} convert(%mul.6713)
  %mul.6714 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3835, %sharding_constraint.1065)
  %reduce.776 = bf16[4096]{0} reduce(%mul.6714, %constant.5662), dimensions={0,1}, to_apply=%region_648.24315
  %all-reduce.377 = bf16[4096]{0} all-reduce(%reduce.776), channel_id=828, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_648.24315.clone
  %convert_element_type.3836 = f32[4096]{0} convert(%all-reduce.377)
  %mul.6715 = f32[4096]{0} multiply(%convert_element_type.3836, %convert_element_type.3836)
  %reduce.777 = f32[] reduce(%mul.6715, %constant.2882), dimensions={0}, to_apply=%region_649.24322
  %add.3197 = f32[] add(%add.3196, %reduce.777)
  %mul.6717 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3835, %mul.5703)
  %sharding_constraint.1243 = bf16[2,8192,4096]{2,1,0} copy(%mul.6717)
  %sharding_constraint.1244 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1243)
  %dot.713 = bf16[8,128,4096]{2,1,0} dot(%add_any.539, %sharding_constraint.1244), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.378 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.713), channel_id=829, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.164.clone
  %dynamic-slice.1419 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.378, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3837 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1419)
  %convert_element_type.3838 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3837), dimensions={2,0,1}
  %mul.6719 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3838, %convert_element_type.3838)
  %reduce.778 = f32[] reduce(%mul.6719, %constant.2882), dimensions={0,1,2}, to_apply=%region_650.24336
  %all-reduce.379 = f32[] all-reduce(%reduce.778), channel_id=830, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_650.24336.clone
  %add.3198 = f32[] add(%add.3197, %all-reduce.379)
  %dot.714 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.1058, %sharding_constraint.1057), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.380 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.714), channel_id=831, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.165.clone
  %dynamic-slice.1421 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.380, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3839 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1421)
  %convert_element_type.3840 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3839), dimensions={1,2,0}
  %mul.6720 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3840, %convert_element_type.3840)
  %reduce.779 = f32[] reduce(%mul.6720, %constant.2882), dimensions={0,1,2}, to_apply=%region_651.24346
  %all-reduce.381 = f32[] all-reduce(%reduce.779), channel_id=832, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_651.24346.clone
  %add.3199 = f32[] add(%add.3198, %all-reduce.381)
  %dot.715 = bf16[32,128,4096]{2,1,0} dot(%add_any.544, %sharding_constraint.1244), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.382 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.715), channel_id=833, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.166.clone
  %dynamic-slice.1423 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.382, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3842 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1423)
  %convert_element_type.3843 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3842), dimensions={2,0,1}
  %mul.6721 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3843, %convert_element_type.3843)
  %reduce.780 = f32[] reduce(%mul.6721, %constant.2882), dimensions={0,1,2}, to_apply=%region_652.24357
  %all-reduce.383 = f32[] all-reduce(%reduce.780), channel_id=834, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_652.24357.clone
  %add.3200 = f32[] add(%add.3199, %all-reduce.383)
  %dot.716 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.1060, %sharding_constraint.1244), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.384 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.716), channel_id=835, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.167.clone
  %dynamic-slice.1425 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.384, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3844 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1425)
  %convert_element_type.3845 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3844), dimensions={2,0,1}
  %mul.6722 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3845, %convert_element_type.3845)
  %reduce.781 = f32[] reduce(%mul.6722, %constant.2882), dimensions={0,1,2}, to_apply=%region_653.24367
  %all-reduce.385 = f32[] all-reduce(%reduce.781), channel_id=836, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_653.24367.clone
  %add.3201 = f32[] add(%add.3200, %all-reduce.385)
  %mul.6729 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1936, %mul.3023)
  %convert_element_type.3846 = bf16[2,8192,4096]{2,1,0} convert(%mul.6729)
  %mul.6735 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3846, %mul.3020)
  %sharding_constraint.1246 = bf16[2,8192,4096]{2,1,0} copy(%mul.6735)
  %dot.717 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1246, %add_any.100), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.386 = bf16[4096,14336]{1,0} all-reduce(%dot.717), channel_id=837, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.168.clone
  %dynamic-slice.1427 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.386, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3847 = f32[512,14336]{1,0} convert(%dynamic-slice.1427)
  %mul.6736 = f32[512,14336]{1,0} multiply(%convert_element_type.3847, %convert_element_type.3847)
  %reduce.782 = f32[] reduce(%mul.6736, %constant.2882), dimensions={0,1}, to_apply=%region_654.24383
  %all-reduce.387 = f32[] all-reduce(%reduce.782), channel_id=838, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_654.24383.clone
  %add.3202 = f32[] add(%add.3201, %all-reduce.387)
  %dot.718 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1246, %mul.3014), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.388 = bf16[4096,14336]{1,0} all-reduce(%dot.718), channel_id=839, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.169.clone
  %dynamic-slice.1429 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.388, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3848 = f32[512,14336]{1,0} convert(%dynamic-slice.1429)
  %mul.6737 = f32[512,14336]{1,0} multiply(%convert_element_type.3848, %convert_element_type.3848)
  %reduce.783 = f32[] reduce(%mul.6737, %constant.2882), dimensions={0,1}, to_apply=%region_655.24392
  %all-reduce.389 = f32[] all-reduce(%reduce.783), channel_id=840, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_655.24392.clone
  %add.3203 = f32[] add(%add.3202, %all-reduce.389)
  %mul.6739 = bf16[2,8192,14336]{2,1,0} multiply(%mul.3013, %get-tuple-element.127)
  %sharding_constraint.1247 = bf16[2,8192,14336]{2,1,0} copy(%mul.6739)
  %dot.719 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1247, %sharding_constraint.534), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.390 = bf16[14336,4096]{1,0} all-reduce(%dot.719), channel_id=841, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.170.clone
  %dynamic-slice.1431 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.390, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3849 = f32[14336,512]{1,0} convert(%dynamic-slice.1431)
  %mul.6741 = f32[14336,512]{1,0} multiply(%convert_element_type.3849, %convert_element_type.3849)
  %reduce.784 = f32[] reduce(%mul.6741, %constant.2882), dimensions={0,1}, to_apply=%region_656.24403
  %all-reduce.391 = f32[] all-reduce(%reduce.784), channel_id=842, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_656.24403.clone
  %add.3204 = f32[] add(%add.3203, %all-reduce.391)
  %mul.6742 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3846, %sharding_constraint.536)
  %reduce.785 = bf16[4096]{0} reduce(%mul.6742, %constant.5662), dimensions={0,1}, to_apply=%region_657.24410
  %all-reduce.392 = bf16[4096]{0} all-reduce(%reduce.785), channel_id=843, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_657.24410.clone
  %convert_element_type.3850 = f32[4096]{0} convert(%all-reduce.392)
  %mul.6743 = f32[4096]{0} multiply(%convert_element_type.3850, %convert_element_type.3850)
  %reduce.786 = f32[] reduce(%mul.6743, %constant.2882), dimensions={0}, to_apply=%region_658.24417
  %add.3207 = f32[] add(%add.3204, %reduce.786)
  %mul.6746 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1973, %mul.3100)
  %convert_element_type.3851 = bf16[2,8192,4096]{2,1,0} convert(%mul.6746)
  %mul.6747 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3851, %sharding_constraint.550)
  %reduce.787 = bf16[4096]{0} reduce(%mul.6747, %constant.5662), dimensions={0,1}, to_apply=%region_659.24428
  %all-reduce.393 = bf16[4096]{0} all-reduce(%reduce.787), channel_id=844, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_659.24428.clone
  %convert_element_type.3853 = f32[4096]{0} convert(%all-reduce.393)
  %mul.6748 = f32[4096]{0} multiply(%convert_element_type.3853, %convert_element_type.3853)
  %reduce.788 = f32[] reduce(%mul.6748, %constant.2882), dimensions={0}, to_apply=%region_660.24435
  %add.3208 = f32[] add(%add.3207, %reduce.788)
  %mul.6753 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3851, %mul.3097)
  %sharding_constraint.1248 = bf16[2,8192,4096]{2,1,0} copy(%mul.6753)
  %sharding_constraint.1249 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1248)
  %dot.720 = bf16[8,128,4096]{2,1,0} dot(%add_any.107, %sharding_constraint.1249), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.394 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.720), channel_id=845, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.171.clone
  %dynamic-slice.1433 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.394, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3854 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1433)
  %convert_element_type.3855 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3854), dimensions={2,0,1}
  %mul.6754 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3855, %convert_element_type.3855)
  %reduce.789 = f32[] reduce(%mul.6754, %constant.2882), dimensions={0,1,2}, to_apply=%region_661.24449
  %all-reduce.395 = f32[] all-reduce(%reduce.789), channel_id=846, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_661.24449.clone
  %add.3209 = f32[] add(%add.3208, %all-reduce.395)
  %dot.721 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.543, %sharding_constraint.542), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.396 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.721), channel_id=847, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.172.clone
  %dynamic-slice.1435 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.396, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3856 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1435)
  %convert_element_type.3858 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3856), dimensions={1,2,0}
  %mul.6755 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3858, %convert_element_type.3858)
  %reduce.790 = f32[] reduce(%mul.6755, %constant.2882), dimensions={0,1,2}, to_apply=%region_662.24459
  %all-reduce.397 = f32[] all-reduce(%reduce.790), channel_id=848, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_662.24459.clone
  %add.3210 = f32[] add(%add.3209, %all-reduce.397)
  %dot.722 = bf16[32,128,4096]{2,1,0} dot(%add_any.112, %sharding_constraint.1249), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.398 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.722), channel_id=849, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.173.clone
  %dynamic-slice.1437 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.398, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3860 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1437)
  %convert_element_type.3861 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3860), dimensions={2,0,1}
  %mul.6756 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3861, %convert_element_type.3861)
  %reduce.791 = f32[] reduce(%mul.6756, %constant.2882), dimensions={0,1,2}, to_apply=%region_663.24470
  %all-reduce.399 = f32[] all-reduce(%reduce.791), channel_id=850, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_663.24470.clone
  %add.3211 = f32[] add(%add.3210, %all-reduce.399)
  %dot.723 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.545, %sharding_constraint.1249), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.400 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.723), channel_id=851, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.174.clone
  %dynamic-slice.1439 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.400, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3862 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1439)
  %convert_element_type.3863 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3862), dimensions={2,0,1}
  %mul.6757 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3863, %convert_element_type.3863)
  %reduce.792 = f32[] reduce(%mul.6757, %constant.2882), dimensions={0,1,2}, to_apply=%region_664.24480
  %all-reduce.401 = f32[] all-reduce(%reduce.792), channel_id=852, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_664.24480.clone
  %add.3212 = f32[] add(%add.3211, %all-reduce.401)
  %mul.6760 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1889, %mul.2934)
  %convert_element_type.3865 = bf16[2,8192,4096]{2,1,0} convert(%mul.6760)
  %mul.6762 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3865, %mul.2931)
  %sharding_constraint.1251 = bf16[2,8192,4096]{2,1,0} copy(%mul.6762)
  %dot.724 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1251, %add_any.84), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.402 = bf16[4096,14336]{1,0} all-reduce(%dot.724), channel_id=853, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.175.clone
  %dynamic-slice.1441 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.402, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3866 = f32[512,14336]{1,0} convert(%dynamic-slice.1441)
  %mul.6766 = f32[512,14336]{1,0} multiply(%convert_element_type.3866, %convert_element_type.3866)
  %reduce.793 = f32[] reduce(%mul.6766, %constant.2882), dimensions={0,1}, to_apply=%region_665.24496
  %all-reduce.403 = f32[] all-reduce(%reduce.793), channel_id=854, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_665.24496.clone
  %add.3213 = f32[] add(%add.3212, %all-reduce.403)
  %dot.725 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1251, %mul.2925), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.404 = bf16[4096,14336]{1,0} all-reduce(%dot.725), channel_id=855, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.176.clone
  %dynamic-slice.1443 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.404, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3867 = f32[512,14336]{1,0} convert(%dynamic-slice.1443)
  %mul.6767 = f32[512,14336]{1,0} multiply(%convert_element_type.3867, %convert_element_type.3867)
  %reduce.794 = f32[] reduce(%mul.6767, %constant.2882), dimensions={0,1}, to_apply=%region_666.24505
  %all-reduce.405 = f32[] all-reduce(%reduce.794), channel_id=856, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_666.24505.clone
  %add.3214 = f32[] add(%add.3213, %all-reduce.405)
  %mul.6768 = bf16[2,8192,14336]{2,1,0} multiply(%mul.2924, %get-tuple-element.100)
  %sharding_constraint.1252 = bf16[2,8192,14336]{2,1,0} copy(%mul.6768)
  %dot.726 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1252, %sharding_constraint.515), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.406 = bf16[14336,4096]{1,0} all-reduce(%dot.726), channel_id=857, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.177.clone
  %dynamic-slice.1445 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.406, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3868 = f32[14336,512]{1,0} convert(%dynamic-slice.1445)
  %mul.6771 = f32[14336,512]{1,0} multiply(%convert_element_type.3868, %convert_element_type.3868)
  %reduce.795 = f32[] reduce(%mul.6771, %constant.2882), dimensions={0,1}, to_apply=%region_667.24516
  %all-reduce.407 = f32[] all-reduce(%reduce.795), channel_id=858, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_667.24516.clone
  %add.3215 = f32[] add(%add.3214, %all-reduce.407)
  %mul.6772 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3865, %sharding_constraint.517)
  %reduce.796 = bf16[4096]{0} reduce(%mul.6772, %constant.5662), dimensions={0,1}, to_apply=%region_668.24523
  %all-reduce.408 = bf16[4096]{0} all-reduce(%reduce.796), channel_id=859, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_668.24523.clone
  %convert_element_type.3871 = f32[4096]{0} convert(%all-reduce.408)
  %mul.6773 = f32[4096]{0} multiply(%convert_element_type.3871, %convert_element_type.3871)
  %reduce.797 = f32[] reduce(%mul.6773, %constant.2882), dimensions={0}, to_apply=%region_669.24530
  %add.3216 = f32[] add(%add.3215, %reduce.797)
  %mul.6776 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.1927, %mul.3003)
  %convert_element_type.3872 = bf16[2,8192,4096]{2,1,0} convert(%mul.6776)
  %mul.6777 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3872, %sharding_constraint.531)
  %reduce.798 = bf16[4096]{0} reduce(%mul.6777, %constant.5662), dimensions={0,1}, to_apply=%region_670.24541
  %all-reduce.409 = bf16[4096]{0} all-reduce(%reduce.798), channel_id=860, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_670.24541.clone
  %convert_element_type.3873 = f32[4096]{0} convert(%all-reduce.409)
  %mul.6778 = f32[4096]{0} multiply(%convert_element_type.3873, %convert_element_type.3873)
  %reduce.799 = f32[] reduce(%mul.6778, %constant.2882), dimensions={0}, to_apply=%region_671.24548
  %add.3218 = f32[] add(%add.3216, %reduce.799)
  %mul.6782 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3872, %mul.3000)
  %sharding_constraint.1253 = bf16[2,8192,4096]{2,1,0} copy(%mul.6782)
  %sharding_constraint.1254 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1253)
  %dot.727 = bf16[8,128,4096]{2,1,0} dot(%add_any.91, %sharding_constraint.1254), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.410 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.727), channel_id=861, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.178.clone
  %dynamic-slice.1447 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.410, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3875 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1447)
  %convert_element_type.3876 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3875), dimensions={2,0,1}
  %mul.6783 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3876, %convert_element_type.3876)
  %reduce.800 = f32[] reduce(%mul.6783, %constant.2882), dimensions={0,1,2}, to_apply=%region_672.24562
  %all-reduce.411 = f32[] all-reduce(%reduce.800), channel_id=862, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_672.24562.clone
  %add.3219 = f32[] add(%add.3218, %all-reduce.411)
  %dot.728 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.524, %sharding_constraint.523), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.412 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.728), channel_id=863, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.179.clone
  %dynamic-slice.1449 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.412, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3877 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1449)
  %convert_element_type.3878 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3877), dimensions={1,2,0}
  %mul.6784 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3878, %convert_element_type.3878)
  %reduce.801 = f32[] reduce(%mul.6784, %constant.2882), dimensions={0,1,2}, to_apply=%region_673.24572
  %all-reduce.413 = f32[] all-reduce(%reduce.801), channel_id=864, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_673.24572.clone
  %add.3220 = f32[] add(%add.3219, %all-reduce.413)
  %dot.729 = bf16[32,128,4096]{2,1,0} dot(%add_any.96, %sharding_constraint.1254), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.414 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.729), channel_id=865, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.180.clone
  %dynamic-slice.1451 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.414, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3881 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1451)
  %convert_element_type.3883 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3881), dimensions={2,0,1}
  %mul.6785 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3883, %convert_element_type.3883)
  %reduce.802 = f32[] reduce(%mul.6785, %constant.2882), dimensions={0,1,2}, to_apply=%region_674.24583
  %all-reduce.415 = f32[] all-reduce(%reduce.802), channel_id=866, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_674.24583.clone
  %add.3221 = f32[] add(%add.3220, %all-reduce.415)
  %dot.730 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.526, %sharding_constraint.1254), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.416 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.730), channel_id=867, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.181.clone
  %dynamic-slice.1453 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.416, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3884 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1453)
  %convert_element_type.3885 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3884), dimensions={2,0,1}
  %mul.6786 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3885, %convert_element_type.3885)
  %reduce.803 = f32[] reduce(%mul.6786, %constant.2882), dimensions={0,1,2}, to_apply=%region_675.24593
  %all-reduce.417 = f32[] all-reduce(%reduce.803), channel_id=868, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_675.24593.clone
  %add.3222 = f32[] add(%add.3221, %all-reduce.417)
  %mul.6789 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3134, %mul.5537)
  %convert_element_type.3886 = bf16[2,8192,4096]{2,1,0} convert(%mul.6789)
  %mul.6791 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3886, %mul.5532)
  %sharding_constraint.1256 = bf16[2,8192,4096]{2,1,0} copy(%mul.6791)
  %dot.731 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1256, %add_any.516), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.418 = bf16[4096,14336]{1,0} all-reduce(%dot.731), channel_id=869, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.182.clone
  %dynamic-slice.1455 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.418, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3888 = f32[512,14336]{1,0} convert(%dynamic-slice.1455)
  %mul.6792 = f32[512,14336]{1,0} multiply(%convert_element_type.3888, %convert_element_type.3888)
  %reduce.804 = f32[] reduce(%mul.6792, %constant.2882), dimensions={0,1}, to_apply=%region_676.24609
  %all-reduce.419 = f32[] all-reduce(%reduce.804), channel_id=870, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_676.24609.clone
  %add.3223 = f32[] add(%add.3222, %all-reduce.419)
  %dot.732 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1256, %mul.5526), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.420 = bf16[4096,14336]{1,0} all-reduce(%dot.732), channel_id=871, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.183.clone
  %dynamic-slice.1457 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.420, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3889 = f32[512,14336]{1,0} convert(%dynamic-slice.1457)
  %mul.6793 = f32[512,14336]{1,0} multiply(%convert_element_type.3889, %convert_element_type.3889)
  %reduce.805 = f32[] reduce(%mul.6793, %constant.2882), dimensions={0,1}, to_apply=%region_677.24618
  %all-reduce.421 = f32[] all-reduce(%reduce.805), channel_id=872, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_677.24618.clone
  %add.3224 = f32[] add(%add.3223, %all-reduce.421)
  %mul.6794 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5525, %get-tuple-element.829)
  %sharding_constraint.1257 = bf16[2,8192,14336]{2,1,0} copy(%mul.6794)
  %dot.733 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1257, %sharding_constraint.1028), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.422 = bf16[14336,4096]{1,0} all-reduce(%dot.733), channel_id=873, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.184.clone
  %dynamic-slice.1459 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.422, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3890 = f32[14336,512]{1,0} convert(%dynamic-slice.1459)
  %mul.6795 = f32[14336,512]{1,0} multiply(%convert_element_type.3890, %convert_element_type.3890)
  %reduce.806 = f32[] reduce(%mul.6795, %constant.2882), dimensions={0,1}, to_apply=%region_678.24629
  %all-reduce.423 = f32[] all-reduce(%reduce.806), channel_id=874, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_678.24629.clone
  %add.3225 = f32[] add(%add.3224, %all-reduce.423)
  %mul.6796 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3886, %sharding_constraint.1030)
  %reduce.807 = bf16[4096]{0} reduce(%mul.6796, %constant.5662), dimensions={0,1}, to_apply=%region_679.24636
  %all-reduce.424 = bf16[4096]{0} all-reduce(%reduce.807), channel_id=875, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_679.24636.clone
  %convert_element_type.3892 = f32[4096]{0} convert(%all-reduce.424)
  %mul.6797 = f32[4096]{0} multiply(%convert_element_type.3892, %convert_element_type.3892)
  %reduce.808 = f32[] reduce(%mul.6797, %constant.2882), dimensions={0}, to_apply=%region_680.24643
  %add.3226 = f32[] add(%add.3225, %reduce.808)
  %mul.6800 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3174, %mul.5615)
  %convert_element_type.3894 = bf16[2,8192,4096]{2,1,0} convert(%mul.6800)
  %mul.6801 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3894, %sharding_constraint.1044)
  %reduce.809 = bf16[4096]{0} reduce(%mul.6801, %constant.5662), dimensions={0,1}, to_apply=%region_681.24654
  %all-reduce.425 = bf16[4096]{0} all-reduce(%reduce.809), channel_id=876, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_681.24654.clone
  %convert_element_type.3895 = f32[4096]{0} convert(%all-reduce.425)
  %mul.6802 = f32[4096]{0} multiply(%convert_element_type.3895, %convert_element_type.3895)
  %reduce.810 = f32[] reduce(%mul.6802, %constant.2882), dimensions={0}, to_apply=%region_682.24661
  %add.3227 = f32[] add(%add.3226, %reduce.810)
  %mul.6804 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3894, %mul.5612)
  %sharding_constraint.1258 = bf16[2,8192,4096]{2,1,0} copy(%mul.6804)
  %sharding_constraint.1259 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1258)
  %dot.734 = bf16[8,128,4096]{2,1,0} dot(%add_any.523, %sharding_constraint.1259), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.426 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.734), channel_id=877, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.185.clone
  %dynamic-slice.1461 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.426, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3897 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1461)
  %convert_element_type.3898 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3897), dimensions={2,0,1}
  %mul.6809 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3898, %convert_element_type.3898)
  %reduce.811 = f32[] reduce(%mul.6809, %constant.2882), dimensions={0,1,2}, to_apply=%region_683.24675
  %all-reduce.427 = f32[] all-reduce(%reduce.811), channel_id=878, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_683.24675.clone
  %add.3228 = f32[] add(%add.3227, %all-reduce.427)
  %dot.735 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.1037, %sharding_constraint.1036), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.428 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.735), channel_id=879, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.186.clone
  %dynamic-slice.1463 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.428, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3899 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1463)
  %convert_element_type.3900 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3899), dimensions={1,2,0}
  %mul.6814 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3900, %convert_element_type.3900)
  %reduce.812 = f32[] reduce(%mul.6814, %constant.2882), dimensions={0,1,2}, to_apply=%region_684.24685
  %all-reduce.429 = f32[] all-reduce(%reduce.812), channel_id=880, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_684.24685.clone
  %add.3229 = f32[] add(%add.3228, %all-reduce.429)
  %dot.736 = bf16[32,128,4096]{2,1,0} dot(%add_any.528, %sharding_constraint.1259), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.430 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.736), channel_id=881, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.187.clone
  %dynamic-slice.1465 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.430, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3901 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1465)
  %convert_element_type.3903 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3901), dimensions={2,0,1}
  %mul.6815 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3903, %convert_element_type.3903)
  %reduce.813 = f32[] reduce(%mul.6815, %constant.2882), dimensions={0,1,2}, to_apply=%region_685.24696
  %all-reduce.431 = f32[] all-reduce(%reduce.813), channel_id=882, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_685.24696.clone
  %add.3230 = f32[] add(%add.3229, %all-reduce.431)
  %dot.737 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.1039, %sharding_constraint.1259), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.432 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.737), channel_id=883, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.188.clone
  %dynamic-slice.1467 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.432, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3904 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1467)
  %convert_element_type.3907 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3904), dimensions={2,0,1}
  %mul.6820 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3907, %convert_element_type.3907)
  %reduce.814 = f32[] reduce(%mul.6820, %constant.2882), dimensions={0,1,2}, to_apply=%region_686.24706
  %all-reduce.433 = f32[] all-reduce(%reduce.814), channel_id=884, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_686.24706.clone
  %add.3231 = f32[] add(%add.3230, %all-reduce.433)
  %mul.6823 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3086, %mul.5443)
  %convert_element_type.3908 = bf16[2,8192,4096]{2,1,0} convert(%mul.6823)
  %mul.6825 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3908, %mul.5440)
  %sharding_constraint.1261 = bf16[2,8192,4096]{2,1,0} copy(%mul.6825)
  %dot.738 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1261, %add_any.500), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.434 = bf16[4096,14336]{1,0} all-reduce(%dot.738), channel_id=885, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.189.clone
  %dynamic-slice.1469 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.434, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3909 = f32[512,14336]{1,0} convert(%dynamic-slice.1469)
  %mul.6826 = f32[512,14336]{1,0} multiply(%convert_element_type.3909, %convert_element_type.3909)
  %reduce.815 = f32[] reduce(%mul.6826, %constant.2882), dimensions={0,1}, to_apply=%region_687.24722
  %all-reduce.435 = f32[] all-reduce(%reduce.815), channel_id=886, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_687.24722.clone
  %add.3232 = f32[] add(%add.3231, %all-reduce.435)
  %dot.739 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1261, %mul.5433), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.436 = bf16[4096,14336]{1,0} all-reduce(%dot.739), channel_id=887, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.190.clone
  %dynamic-slice.1471 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.436, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3910 = f32[512,14336]{1,0} convert(%dynamic-slice.1471)
  %mul.6827 = f32[512,14336]{1,0} multiply(%convert_element_type.3910, %convert_element_type.3910)
  %reduce.816 = f32[] reduce(%mul.6827, %constant.2882), dimensions={0,1}, to_apply=%region_688.24731
  %all-reduce.437 = f32[] all-reduce(%reduce.816), channel_id=888, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_688.24731.clone
  %add.3233 = f32[] add(%add.3232, %all-reduce.437)
  %mul.6828 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5432, %get-tuple-element.802)
  %sharding_constraint.1265 = bf16[2,8192,14336]{2,1,0} copy(%mul.6828)
  %dot.740 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1265, %sharding_constraint.1009), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.438 = bf16[14336,4096]{1,0} all-reduce(%dot.740), channel_id=889, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.191.clone
  %dynamic-slice.1473 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.438, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3912 = f32[14336,512]{1,0} convert(%dynamic-slice.1473)
  %mul.6829 = f32[14336,512]{1,0} multiply(%convert_element_type.3912, %convert_element_type.3912)
  %reduce.817 = f32[] reduce(%mul.6829, %constant.2882), dimensions={0,1}, to_apply=%region_689.24742
  %all-reduce.439 = f32[] all-reduce(%reduce.817), channel_id=890, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_689.24742.clone
  %add.3234 = f32[] add(%add.3233, %all-reduce.439)
  %mul.6830 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3908, %sharding_constraint.1011)
  %reduce.818 = bf16[4096]{0} reduce(%mul.6830, %constant.5662), dimensions={0,1}, to_apply=%region_690.24749
  %all-reduce.440 = bf16[4096]{0} all-reduce(%reduce.818), channel_id=891, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_690.24749.clone
  %convert_element_type.3913 = f32[4096]{0} convert(%all-reduce.440)
  %mul.6833 = f32[4096]{0} multiply(%convert_element_type.3913, %convert_element_type.3913)
  %reduce.819 = f32[] reduce(%mul.6833, %constant.2882), dimensions={0}, to_apply=%region_691.24756
  %add.3235 = f32[] add(%add.3234, %reduce.819)
  %mul.6838 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3127, %mul.5516)
  %convert_element_type.3916 = bf16[2,8192,4096]{2,1,0} convert(%mul.6838)
  %mul.6840 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3916, %sharding_constraint.1025)
  %reduce.820 = bf16[4096]{0} reduce(%mul.6840, %constant.5662), dimensions={0,1}, to_apply=%region_692.24767
  %all-reduce.441 = bf16[4096]{0} all-reduce(%reduce.820), channel_id=892, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_692.24767.clone
  %convert_element_type.3920 = f32[4096]{0} convert(%all-reduce.441)
  %mul.6841 = f32[4096]{0} multiply(%convert_element_type.3920, %convert_element_type.3920)
  %reduce.821 = f32[] reduce(%mul.6841, %constant.2882), dimensions={0}, to_apply=%region_693.24774
  %add.3236 = f32[] add(%add.3235, %reduce.821)
  %mul.6843 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3916, %mul.5512)
  %sharding_constraint.1266 = bf16[2,8192,4096]{2,1,0} copy(%mul.6843)
  %sharding_constraint.1267 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1266)
  %dot.741 = bf16[8,128,4096]{2,1,0} dot(%add_any.507, %sharding_constraint.1267), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.442 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.741), channel_id=893, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.192.clone
  %dynamic-slice.1475 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.442, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3921 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1475)
  %convert_element_type.3922 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3921), dimensions={2,0,1}
  %mul.6844 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3922, %convert_element_type.3922)
  %reduce.822 = f32[] reduce(%mul.6844, %constant.2882), dimensions={0,1,2}, to_apply=%region_694.24788
  %all-reduce.443 = f32[] all-reduce(%reduce.822), channel_id=894, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_694.24788.clone
  %add.3237 = f32[] add(%add.3236, %all-reduce.443)
  %dot.742 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.1018, %sharding_constraint.1017), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.444 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.742), channel_id=895, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.193.clone
  %dynamic-slice.1477 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.444, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3923 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1477)
  %convert_element_type.3924 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3923), dimensions={1,2,0}
  %mul.6846 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3924, %convert_element_type.3924)
  %reduce.823 = f32[] reduce(%mul.6846, %constant.2882), dimensions={0,1,2}, to_apply=%region_695.24798
  %all-reduce.445 = f32[] all-reduce(%reduce.823), channel_id=896, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_695.24798.clone
  %add.3238 = f32[] add(%add.3237, %all-reduce.445)
  %dot.743 = bf16[32,128,4096]{2,1,0} dot(%add_any.512, %sharding_constraint.1267), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.446 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.743), channel_id=897, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.194.clone
  %dynamic-slice.1479 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.446, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3925 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1479)
  %convert_element_type.3928 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3925), dimensions={2,0,1}
  %mul.6847 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3928, %convert_element_type.3928)
  %reduce.824 = f32[] reduce(%mul.6847, %constant.2882), dimensions={0,1,2}, to_apply=%region_696.24809
  %all-reduce.447 = f32[] all-reduce(%reduce.824), channel_id=898, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_696.24809.clone
  %add.3239 = f32[] add(%add.3238, %all-reduce.447)
  %dot.744 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.1020, %sharding_constraint.1267), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.448 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.744), channel_id=899, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.195.clone
  %dynamic-slice.1481 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.448, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3931 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1481)
  %convert_element_type.3932 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3931), dimensions={2,0,1}
  %mul.6848 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3932, %convert_element_type.3932)
  %reduce.825 = f32[] reduce(%mul.6848, %constant.2882), dimensions={0,1,2}, to_apply=%region_697.24819
  %all-reduce.449 = f32[] all-reduce(%reduce.825), channel_id=900, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_697.24819.clone
  %add.3240 = f32[] add(%add.3239, %all-reduce.449)
  %mul.6852 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3029, %mul.5349)
  %convert_element_type.3934 = bf16[2,8192,4096]{2,1,0} convert(%mul.6852)
  %mul.6854 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3934, %mul.5346)
  %sharding_constraint.1269 = bf16[2,8192,4096]{2,1,0} copy(%mul.6854)
  %dot.745 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1269, %add_any.484), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.450 = bf16[4096,14336]{1,0} all-reduce(%dot.745), channel_id=901, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.196.clone
  %dynamic-slice.1483 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.450, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3935 = f32[512,14336]{1,0} convert(%dynamic-slice.1483)
  %mul.6856 = f32[512,14336]{1,0} multiply(%convert_element_type.3935, %convert_element_type.3935)
  %reduce.826 = f32[] reduce(%mul.6856, %constant.2882), dimensions={0,1}, to_apply=%region_698.24835
  %all-reduce.451 = f32[] all-reduce(%reduce.826), channel_id=902, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_698.24835.clone
  %add.3241 = f32[] add(%add.3240, %all-reduce.451)
  %dot.746 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1269, %mul.5340), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.452 = bf16[4096,14336]{1,0} all-reduce(%dot.746), channel_id=903, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.197.clone
  %dynamic-slice.1485 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.452, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3936 = f32[512,14336]{1,0} convert(%dynamic-slice.1485)
  %mul.6858 = f32[512,14336]{1,0} multiply(%convert_element_type.3936, %convert_element_type.3936)
  %reduce.827 = f32[] reduce(%mul.6858, %constant.2882), dimensions={0,1}, to_apply=%region_699.24844
  %all-reduce.453 = f32[] all-reduce(%reduce.827), channel_id=904, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_699.24844.clone
  %add.3242 = f32[] add(%add.3241, %all-reduce.453)
  %mul.6859 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5339, %get-tuple-element.775)
  %sharding_constraint.1270 = bf16[2,8192,14336]{2,1,0} copy(%mul.6859)
  %dot.747 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1270, %sharding_constraint.990), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.454 = bf16[14336,4096]{1,0} all-reduce(%dot.747), channel_id=905, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.198.clone
  %dynamic-slice.1487 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.454, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3937 = f32[14336,512]{1,0} convert(%dynamic-slice.1487)
  %mul.6860 = f32[14336,512]{1,0} multiply(%convert_element_type.3937, %convert_element_type.3937)
  %reduce.828 = f32[] reduce(%mul.6860, %constant.2882), dimensions={0,1}, to_apply=%region_700.24855
  %all-reduce.455 = f32[] all-reduce(%reduce.828), channel_id=906, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_700.24855.clone
  %add.3244 = f32[] add(%add.3242, %all-reduce.455)
  %mul.6861 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3934, %sharding_constraint.992)
  %reduce.829 = bf16[4096]{0} reduce(%mul.6861, %constant.5662), dimensions={0,1}, to_apply=%region_701.24862
  %all-reduce.456 = bf16[4096]{0} all-reduce(%reduce.829), channel_id=907, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_701.24862.clone
  %convert_element_type.3938 = f32[4096]{0} convert(%all-reduce.456)
  %mul.6862 = f32[4096]{0} multiply(%convert_element_type.3938, %convert_element_type.3938)
  %reduce.830 = f32[] reduce(%mul.6862, %constant.2882), dimensions={0}, to_apply=%region_702.24869
  %add.3245 = f32[] add(%add.3244, %reduce.830)
  %mul.6865 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3076, %mul.5423)
  %convert_element_type.3939 = bf16[2,8192,4096]{2,1,0} convert(%mul.6865)
  %mul.6866 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3939, %sharding_constraint.1006)
  %reduce.831 = bf16[4096]{0} reduce(%mul.6866, %constant.5662), dimensions={0,1}, to_apply=%region_703.24880
  %all-reduce.457 = bf16[4096]{0} all-reduce(%reduce.831), channel_id=908, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_703.24880.clone
  %convert_element_type.3940 = f32[4096]{0} convert(%all-reduce.457)
  %mul.6869 = f32[4096]{0} multiply(%convert_element_type.3940, %convert_element_type.3940)
  %reduce.832 = f32[] reduce(%mul.6869, %constant.2882), dimensions={0}, to_apply=%region_704.24887
  %add.3246 = f32[] add(%add.3245, %reduce.832)
  %mul.6873 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3939, %mul.5420)
  %sharding_constraint.1271 = bf16[2,8192,4096]{2,1,0} copy(%mul.6873)
  %sharding_constraint.1272 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1271)
  %dot.748 = bf16[8,128,4096]{2,1,0} dot(%add_any.491, %sharding_constraint.1272), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.458 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.748), channel_id=909, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.199.clone
  %dynamic-slice.1489 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.458, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3941 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1489)
  %convert_element_type.3942 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3941), dimensions={2,0,1}
  %mul.6874 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3942, %convert_element_type.3942)
  %reduce.833 = f32[] reduce(%mul.6874, %constant.2882), dimensions={0,1,2}, to_apply=%region_705.24901
  %all-reduce.459 = f32[] all-reduce(%reduce.833), channel_id=910, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_705.24901.clone
  %add.3247 = f32[] add(%add.3246, %all-reduce.459)
  %dot.749 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.999, %sharding_constraint.998), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.460 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.749), channel_id=911, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.200.clone
  %dynamic-slice.1491 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.460, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3943 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1491)
  %convert_element_type.3944 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3943), dimensions={1,2,0}
  %mul.6875 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3944, %convert_element_type.3944)
  %reduce.834 = f32[] reduce(%mul.6875, %constant.2882), dimensions={0,1,2}, to_apply=%region_706.24911
  %all-reduce.461 = f32[] all-reduce(%reduce.834), channel_id=912, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_706.24911.clone
  %add.3248 = f32[] add(%add.3247, %all-reduce.461)
  %dot.750 = bf16[32,128,4096]{2,1,0} dot(%add_any.496, %sharding_constraint.1272), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.462 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.750), channel_id=913, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.201.clone
  %dynamic-slice.1493 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.462, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3945 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1493)
  %convert_element_type.3946 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3945), dimensions={2,0,1}
  %mul.6876 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3946, %convert_element_type.3946)
  %reduce.835 = f32[] reduce(%mul.6876, %constant.2882), dimensions={0,1,2}, to_apply=%region_707.24922
  %all-reduce.463 = f32[] all-reduce(%reduce.835), channel_id=914, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_707.24922.clone
  %add.3249 = f32[] add(%add.3248, %all-reduce.463)
  %dot.751 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.1001, %sharding_constraint.1272), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.464 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.751), channel_id=915, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.202.clone
  %dynamic-slice.1495 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.464, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3947 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1495)
  %convert_element_type.3948 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3947), dimensions={2,0,1}
  %mul.6877 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3948, %convert_element_type.3948)
  %reduce.836 = f32[] reduce(%mul.6877, %constant.2882), dimensions={0,1,2}, to_apply=%region_708.24932
  %all-reduce.465 = f32[] all-reduce(%reduce.836), channel_id=916, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_708.24932.clone
  %add.3250 = f32[] add(%add.3249, %all-reduce.465)
  %mul.6880 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2977, %mul.5248)
  %convert_element_type.3949 = bf16[2,8192,4096]{2,1,0} convert(%mul.6880)
  %mul.6890 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3949, %mul.5245)
  %sharding_constraint.1274 = bf16[2,8192,4096]{2,1,0} copy(%mul.6890)
  %dot.752 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1274, %add_any.468), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.466 = bf16[4096,14336]{1,0} all-reduce(%dot.752), channel_id=917, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.203.clone
  %dynamic-slice.1497 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.466, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3950 = f32[512,14336]{1,0} convert(%dynamic-slice.1497)
  %mul.6891 = f32[512,14336]{1,0} multiply(%convert_element_type.3950, %convert_element_type.3950)
  %reduce.837 = f32[] reduce(%mul.6891, %constant.2882), dimensions={0,1}, to_apply=%region_709.24948
  %all-reduce.467 = f32[] all-reduce(%reduce.837), channel_id=918, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_709.24948.clone
  %add.3251 = f32[] add(%add.3250, %all-reduce.467)
  %dot.753 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1274, %mul.5237), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.468 = bf16[4096,14336]{1,0} all-reduce(%dot.753), channel_id=919, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.204.clone
  %dynamic-slice.1499 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.468, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3951 = f32[512,14336]{1,0} convert(%dynamic-slice.1499)
  %mul.6896 = f32[512,14336]{1,0} multiply(%convert_element_type.3951, %convert_element_type.3951)
  %reduce.838 = f32[] reduce(%mul.6896, %constant.2882), dimensions={0,1}, to_apply=%region_710.24957
  %all-reduce.469 = f32[] all-reduce(%reduce.838), channel_id=920, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_710.24957.clone
  %add.3252 = f32[] add(%add.3251, %all-reduce.469)
  %mul.6897 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5234, %get-tuple-element.748)
  %sharding_constraint.1275 = bf16[2,8192,14336]{2,1,0} copy(%mul.6897)
  %dot.754 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1275, %sharding_constraint.971), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.470 = bf16[14336,4096]{1,0} all-reduce(%dot.754), channel_id=921, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.205.clone
  %dynamic-slice.1501 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.470, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3952 = f32[14336,512]{1,0} convert(%dynamic-slice.1501)
  %mul.6898 = f32[14336,512]{1,0} multiply(%convert_element_type.3952, %convert_element_type.3952)
  %reduce.839 = f32[] reduce(%mul.6898, %constant.2882), dimensions={0,1}, to_apply=%region_711.24968
  %all-reduce.471 = f32[] all-reduce(%reduce.839), channel_id=922, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_711.24968.clone
  %add.3253 = f32[] add(%add.3252, %all-reduce.471)
  %mul.6899 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3949, %sharding_constraint.973)
  %reduce.840 = bf16[4096]{0} reduce(%mul.6899, %constant.5662), dimensions={0,1}, to_apply=%region_712.24975
  %all-reduce.472 = bf16[4096]{0} all-reduce(%reduce.840), channel_id=923, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_712.24975.clone
  %convert_element_type.3953 = f32[4096]{0} convert(%all-reduce.472)
  %mul.6900 = f32[4096]{0} multiply(%convert_element_type.3953, %convert_element_type.3953)
  %reduce.841 = f32[] reduce(%mul.6900, %constant.2882), dimensions={0}, to_apply=%region_713.24982
  %add.3254 = f32[] add(%add.3253, %reduce.841)
  %mul.6905 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3022, %mul.5316)
  %convert_element_type.3955 = bf16[2,8192,4096]{2,1,0} convert(%mul.6905)
  %mul.6906 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3955, %sharding_constraint.987)
  %reduce.842 = bf16[4096]{0} reduce(%mul.6906, %constant.5662), dimensions={0,1}, to_apply=%region_714.24993
  %all-reduce.473 = bf16[4096]{0} all-reduce(%reduce.842), channel_id=924, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_714.24993.clone
  %convert_element_type.3956 = f32[4096]{0} convert(%all-reduce.473)
  %mul.6907 = f32[4096]{0} multiply(%convert_element_type.3956, %convert_element_type.3956)
  %reduce.843 = f32[] reduce(%mul.6907, %constant.2882), dimensions={0}, to_apply=%region_715.25000
  %add.3255 = f32[] add(%add.3254, %reduce.843)
  %mul.6909 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3955, %mul.5313)
  %sharding_constraint.1276 = bf16[2,8192,4096]{2,1,0} copy(%mul.6909)
  %sharding_constraint.1277 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1276)
  %dot.755 = bf16[8,128,4096]{2,1,0} dot(%add_any.475, %sharding_constraint.1277), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.474 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.755), channel_id=925, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.206.clone
  %dynamic-slice.1503 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.474, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3957 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1503)
  %convert_element_type.3958 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3957), dimensions={2,0,1}
  %mul.6910 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3958, %convert_element_type.3958)
  %reduce.844 = f32[] reduce(%mul.6910, %constant.2882), dimensions={0,1,2}, to_apply=%region_716.25014
  %all-reduce.475 = f32[] all-reduce(%reduce.844), channel_id=926, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_716.25014.clone
  %add.3256 = f32[] add(%add.3255, %all-reduce.475)
  %dot.756 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.980, %sharding_constraint.979), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.476 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.756), channel_id=927, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.207.clone
  %dynamic-slice.1505 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.476, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3959 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1505)
  %convert_element_type.3960 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3959), dimensions={1,2,0}
  %mul.6911 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3960, %convert_element_type.3960)
  %reduce.845 = f32[] reduce(%mul.6911, %constant.2882), dimensions={0,1,2}, to_apply=%region_717.25024
  %all-reduce.477 = f32[] all-reduce(%reduce.845), channel_id=928, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_717.25024.clone
  %add.3258 = f32[] add(%add.3256, %all-reduce.477)
  %dot.757 = bf16[32,128,4096]{2,1,0} dot(%add_any.480, %sharding_constraint.1277), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.478 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.757), channel_id=929, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.208.clone
  %dynamic-slice.1507 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.478, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3963 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1507)
  %convert_element_type.3965 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3963), dimensions={2,0,1}
  %mul.6912 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3965, %convert_element_type.3965)
  %reduce.846 = f32[] reduce(%mul.6912, %constant.2882), dimensions={0,1,2}, to_apply=%region_718.25035
  %all-reduce.479 = f32[] all-reduce(%reduce.846), channel_id=930, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_718.25035.clone
  %add.3259 = f32[] add(%add.3258, %all-reduce.479)
  %dot.758 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.982, %sharding_constraint.1277), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.480 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.758), channel_id=931, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.209.clone
  %dynamic-slice.1509 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.480, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3966 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1509)
  %convert_element_type.3967 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3966), dimensions={2,0,1}
  %mul.6916 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3967, %convert_element_type.3967)
  %reduce.847 = f32[] reduce(%mul.6916, %constant.2882), dimensions={0,1,2}, to_apply=%region_719.25045
  %all-reduce.481 = f32[] all-reduce(%reduce.847), channel_id=932, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_719.25045.clone
  %add.3260 = f32[] add(%add.3259, %all-reduce.481)
  %mul.6919 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2927, %mul.5157)
  %convert_element_type.3969 = bf16[2,8192,4096]{2,1,0} convert(%mul.6919)
  %mul.6921 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3969, %mul.5151)
  %sharding_constraint.1279 = bf16[2,8192,4096]{2,1,0} copy(%mul.6921)
  %dot.759 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1279, %add_any.452), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.482 = bf16[4096,14336]{1,0} all-reduce(%dot.759), channel_id=933, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.210.clone
  %dynamic-slice.1511 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.482, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3970 = f32[512,14336]{1,0} convert(%dynamic-slice.1511)
  %mul.6922 = f32[512,14336]{1,0} multiply(%convert_element_type.3970, %convert_element_type.3970)
  %reduce.848 = f32[] reduce(%mul.6922, %constant.2882), dimensions={0,1}, to_apply=%region_720.25061
  %all-reduce.483 = f32[] all-reduce(%reduce.848), channel_id=934, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_720.25061.clone
  %add.3261 = f32[] add(%add.3260, %all-reduce.483)
  %dot.760 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1279, %mul.5145), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.484 = bf16[4096,14336]{1,0} all-reduce(%dot.760), channel_id=935, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.211.clone
  %dynamic-slice.1513 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.484, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3971 = f32[512,14336]{1,0} convert(%dynamic-slice.1513)
  %mul.6923 = f32[512,14336]{1,0} multiply(%convert_element_type.3971, %convert_element_type.3971)
  %reduce.849 = f32[] reduce(%mul.6923, %constant.2882), dimensions={0,1}, to_apply=%region_721.25070
  %all-reduce.485 = f32[] all-reduce(%reduce.849), channel_id=936, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_721.25070.clone
  %add.3262 = f32[] add(%add.3261, %all-reduce.485)
  %mul.6924 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5143, %get-tuple-element.721)
  %sharding_constraint.1280 = bf16[2,8192,14336]{2,1,0} copy(%mul.6924)
  %dot.761 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1280, %sharding_constraint.952), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.486 = bf16[14336,4096]{1,0} all-reduce(%dot.761), channel_id=937, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.212.clone
  %dynamic-slice.1515 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.486, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3973 = f32[14336,512]{1,0} convert(%dynamic-slice.1515)
  %mul.6925 = f32[14336,512]{1,0} multiply(%convert_element_type.3973, %convert_element_type.3973)
  %reduce.850 = f32[] reduce(%mul.6925, %constant.2882), dimensions={0,1}, to_apply=%region_722.25081
  %all-reduce.487 = f32[] all-reduce(%reduce.850), channel_id=938, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_722.25081.clone
  %add.3263 = f32[] add(%add.3262, %all-reduce.487)
  %mul.6926 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3969, %sharding_constraint.954)
  %reduce.851 = bf16[4096]{0} reduce(%mul.6926, %constant.5662), dimensions={0,1}, to_apply=%region_723.25088
  %all-reduce.488 = bf16[4096]{0} all-reduce(%reduce.851), channel_id=939, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_723.25088.clone
  %convert_element_type.3974 = f32[4096]{0} convert(%all-reduce.488)
  %mul.6930 = f32[4096]{0} multiply(%convert_element_type.3974, %convert_element_type.3974)
  %reduce.852 = f32[] reduce(%mul.6930, %constant.2882), dimensions={0}, to_apply=%region_724.25095
  %add.3264 = f32[] add(%add.3263, %reduce.852)
  %mul.6935 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2968, %mul.5225)
  %convert_element_type.3976 = bf16[2,8192,4096]{2,1,0} convert(%mul.6935)
  %mul.6936 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3976, %sharding_constraint.968)
  %reduce.853 = bf16[4096]{0} reduce(%mul.6936, %constant.5662), dimensions={0,1}, to_apply=%region_725.25106
  %all-reduce.489 = bf16[4096]{0} all-reduce(%reduce.853), channel_id=940, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_725.25106.clone
  %convert_element_type.3977 = f32[4096]{0} convert(%all-reduce.489)
  %mul.6937 = f32[4096]{0} multiply(%convert_element_type.3977, %convert_element_type.3977)
  %reduce.854 = f32[] reduce(%mul.6937, %constant.2882), dimensions={0}, to_apply=%region_726.25113
  %add.3265 = f32[] add(%add.3264, %reduce.854)
  %mul.6939 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3976, %mul.5222)
  %sharding_constraint.1281 = bf16[2,8192,4096]{2,1,0} copy(%mul.6939)
  %sharding_constraint.1282 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1281)
  %dot.762 = bf16[8,128,4096]{2,1,0} dot(%add_any.459, %sharding_constraint.1282), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.490 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.762), channel_id=941, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.213.clone
  %dynamic-slice.1517 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.490, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3981 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1517)
  %convert_element_type.3982 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3981), dimensions={2,0,1}
  %mul.6940 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3982, %convert_element_type.3982)
  %reduce.855 = f32[] reduce(%mul.6940, %constant.2882), dimensions={0,1,2}, to_apply=%region_727.25127
  %all-reduce.491 = f32[] all-reduce(%reduce.855), channel_id=942, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_727.25127.clone
  %add.3266 = f32[] add(%add.3265, %all-reduce.491)
  %dot.763 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.961, %sharding_constraint.960), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.492 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.763), channel_id=943, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.214.clone
  %dynamic-slice.1519 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.492, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.3984 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1519)
  %convert_element_type.3985 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.3984), dimensions={1,2,0}
  %mul.6941 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.3985, %convert_element_type.3985)
  %reduce.856 = f32[] reduce(%mul.6941, %constant.2882), dimensions={0,1,2}, to_apply=%region_728.25137
  %all-reduce.493 = f32[] all-reduce(%reduce.856), channel_id=944, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_728.25137.clone
  %add.3267 = f32[] add(%add.3266, %all-reduce.493)
  %dot.764 = bf16[32,128,4096]{2,1,0} dot(%add_any.464, %sharding_constraint.1282), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.494 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.764), channel_id=945, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.215.clone
  %dynamic-slice.1521 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.494, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.3986 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1521)
  %convert_element_type.3987 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.3986), dimensions={2,0,1}
  %mul.6942 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.3987, %convert_element_type.3987)
  %reduce.857 = f32[] reduce(%mul.6942, %constant.2882), dimensions={0,1,2}, to_apply=%region_729.25148
  %all-reduce.495 = f32[] all-reduce(%reduce.857), channel_id=946, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_729.25148.clone
  %add.3268 = f32[] add(%add.3267, %all-reduce.495)
  %dot.765 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.963, %sharding_constraint.1282), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.496 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.765), channel_id=947, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.216.clone
  %dynamic-slice.1523 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.496, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.3988 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1523)
  %convert_element_type.3989 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.3988), dimensions={2,0,1}
  %mul.6943 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.3989, %convert_element_type.3989)
  %reduce.858 = f32[] reduce(%mul.6943, %constant.2882), dimensions={0,1,2}, to_apply=%region_730.25158
  %all-reduce.497 = f32[] all-reduce(%reduce.858), channel_id=948, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_730.25158.clone
  %add.3269 = f32[] add(%add.3268, %all-reduce.497)
  %mul.6947 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2878, %mul.5057)
  %convert_element_type.3991 = bf16[2,8192,4096]{2,1,0} convert(%mul.6947)
  %mul.6949 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3991, %mul.5054)
  %sharding_constraint.1284 = bf16[2,8192,4096]{2,1,0} copy(%mul.6949)
  %dot.766 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1284, %add_any.436), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.498 = bf16[4096,14336]{1,0} all-reduce(%dot.766), channel_id=949, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.217.clone
  %dynamic-slice.1525 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.498, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3992 = f32[512,14336]{1,0} convert(%dynamic-slice.1525)
  %mul.6950 = f32[512,14336]{1,0} multiply(%convert_element_type.3992, %convert_element_type.3992)
  %reduce.859 = f32[] reduce(%mul.6950, %constant.2882), dimensions={0,1}, to_apply=%region_731.25174
  %all-reduce.499 = f32[] all-reduce(%reduce.859), channel_id=950, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_731.25174.clone
  %add.3270 = f32[] add(%add.3269, %all-reduce.499)
  %dot.767 = bf16[4096,14336]{1,0} dot(%sharding_constraint.1284, %mul.5042), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.500 = bf16[4096,14336]{1,0} all-reduce(%dot.767), channel_id=951, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.218.clone
  %dynamic-slice.1527 = bf16[512,14336]{1,0} dynamic-slice(%all-reduce.500, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,14336}
  %convert_element_type.3995 = f32[512,14336]{1,0} convert(%dynamic-slice.1527)
  %mul.6951 = f32[512,14336]{1,0} multiply(%convert_element_type.3995, %convert_element_type.3995)
  %reduce.860 = f32[] reduce(%mul.6951, %constant.2882), dimensions={0,1}, to_apply=%region_732.25183
  %all-reduce.501 = f32[] all-reduce(%reduce.860), channel_id=952, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_732.25183.clone
  %add.3271 = f32[] add(%add.3270, %all-reduce.501)
  %mul.6952 = bf16[2,8192,14336]{2,1,0} multiply(%mul.5041, %get-tuple-element.694)
  %sharding_constraint.1285 = bf16[2,8192,14336]{2,1,0} copy(%mul.6952)
  %dot.768 = bf16[14336,4096]{1,0} dot(%sharding_constraint.1285, %sharding_constraint.933), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.502 = bf16[14336,4096]{1,0} all-reduce(%dot.768), channel_id=953, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.219.clone
  %dynamic-slice.1529 = bf16[14336,512]{1,0} dynamic-slice(%all-reduce.502, %constant.2873, %reshape.9486), dynamic_slice_sizes={14336,512}
  %convert_element_type.3996 = f32[14336,512]{1,0} convert(%dynamic-slice.1529)
  %mul.6953 = f32[14336,512]{1,0} multiply(%convert_element_type.3996, %convert_element_type.3996)
  %reduce.861 = f32[] reduce(%mul.6953, %constant.2882), dimensions={0,1}, to_apply=%region_733.25194
  %all-reduce.503 = f32[] all-reduce(%reduce.861), channel_id=954, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_733.25194.clone
  %add.3272 = f32[] add(%add.3271, %all-reduce.503)
  %mul.6954 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3991, %sharding_constraint.935)
  %reduce.862 = bf16[4096]{0} reduce(%mul.6954, %constant.5662), dimensions={0,1}, to_apply=%region_734.25201
  %all-reduce.504 = bf16[4096]{0} all-reduce(%reduce.862), channel_id=955, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_734.25201.clone
  %convert_element_type.3997 = f32[4096]{0} convert(%all-reduce.504)
  %mul.6955 = f32[4096]{0} multiply(%convert_element_type.3997, %convert_element_type.3997)
  %reduce.863 = f32[] reduce(%mul.6955, %constant.2882), dimensions={0}, to_apply=%region_735.25208
  %add.3273 = f32[] add(%add.3272, %reduce.863)
  %mul.6958 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.2920, %mul.5129)
  %convert_element_type.3998 = bf16[2,8192,4096]{2,1,0} convert(%mul.6958)
  %mul.6959 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3998, %sharding_constraint.949)
  %reduce.864 = bf16[4096]{0} reduce(%mul.6959, %constant.5662), dimensions={0,1}, to_apply=%region_736.25219
  %all-reduce.505 = bf16[4096]{0} all-reduce(%reduce.864), channel_id=956, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_736.25219.clone
  %convert_element_type.4000 = f32[4096]{0} convert(%all-reduce.505)
  %mul.6960 = f32[4096]{0} multiply(%convert_element_type.4000, %convert_element_type.4000)
  %reduce.865 = f32[] reduce(%mul.6960, %constant.2882), dimensions={0}, to_apply=%region_737.25226
  %add.3274 = f32[] add(%add.3273, %reduce.865)
  %mul.6962 = bf16[2,8192,4096]{2,1,0} multiply(%convert_element_type.3998, %mul.5118)
  %sharding_constraint.1286 = bf16[2,8192,4096]{2,1,0} copy(%mul.6962)
  %sharding_constraint.1287 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1286)
  %dot.769 = bf16[8,128,4096]{2,1,0} dot(%add_any.443, %sharding_constraint.1287), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.506 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.769), channel_id=957, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.220.clone
  %dynamic-slice.1531 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.506, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.4001 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1531)
  %convert_element_type.4002 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.4001), dimensions={2,0,1}
  %mul.6963 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.4002, %convert_element_type.4002)
  %reduce.866 = f32[] reduce(%mul.6963, %constant.2882), dimensions={0,1,2}, to_apply=%region_738.25240
  %all-reduce.507 = f32[] all-reduce(%reduce.866), channel_id=958, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_738.25240.clone
  %add.3275 = f32[] add(%add.3274, %all-reduce.507)
  %dot.770 = bf16[4096,32,128]{2,1,0} dot(%sharding_constraint.942, %sharding_constraint.941), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.508 = bf16[4096,32,128]{2,1,0} all-reduce(%dot.770), channel_id=959, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.221.clone
  %dynamic-slice.1533 = bf16[512,32,128]{2,1,0} dynamic-slice(%all-reduce.508, %reshape.9486, %constant.2873, %constant.2873), dynamic_slice_sizes={512,32,128}
  %convert_element_type.4003 = f32[512,32,128]{2,1,0} convert(%dynamic-slice.1533)
  %convert_element_type.4005 = f32[32,128,512]{1,0,2} transpose(%convert_element_type.4003), dimensions={1,2,0}
  %mul.6964 = f32[32,128,512]{1,0,2} multiply(%convert_element_type.4005, %convert_element_type.4005)
  %reduce.867 = f32[] reduce(%mul.6964, %constant.2882), dimensions={0,1,2}, to_apply=%region_739.25250
  %all-reduce.509 = f32[] all-reduce(%reduce.867), channel_id=960, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_739.25250.clone
  %add.3276 = f32[] add(%add.3275, %all-reduce.509)
  %dot.771 = bf16[32,128,4096]{2,1,0} dot(%add_any.448, %sharding_constraint.1287), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.510 = bf16[32,128,4096]{2,1,0} all-reduce(%dot.771), channel_id=961, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.222.clone
  %dynamic-slice.1535 = bf16[32,128,512]{2,1,0} dynamic-slice(%all-reduce.510, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={32,128,512}
  %convert_element_type.4006 = f32[32,128,512]{2,1,0} convert(%dynamic-slice.1535)
  %convert_element_type.4007 = f32[512,32,128]{0,2,1} transpose(%convert_element_type.4006), dimensions={2,0,1}
  %mul.6965 = f32[512,32,128]{0,2,1} multiply(%convert_element_type.4007, %convert_element_type.4007)
  %reduce.868 = f32[] reduce(%mul.6965, %constant.2882), dimensions={0,1,2}, to_apply=%region_740.25261
  %all-reduce.511 = f32[] all-reduce(%reduce.868), channel_id=962, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_740.25261.clone
  %add.3277 = f32[] add(%add.3276, %all-reduce.511)
  %dot.772 = bf16[8,128,4096]{2,1,0} dot(%sharding_constraint.944, %sharding_constraint.1287), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.512 = bf16[8,128,4096]{2,1,0} all-reduce(%dot.772), channel_id=963, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.223.clone
  %dynamic-slice.1537 = bf16[8,128,512]{2,1,0} dynamic-slice(%all-reduce.512, %constant.2873, %constant.2873, %reshape.9486), dynamic_slice_sizes={8,128,512}
  %convert_element_type.4008 = f32[8,128,512]{2,1,0} convert(%dynamic-slice.1537)
  %convert_element_type.4009 = f32[512,8,128]{0,2,1} transpose(%convert_element_type.4008), dimensions={2,0,1}
  %mul.6970 = f32[512,8,128]{0,2,1} multiply(%convert_element_type.4009, %convert_element_type.4009)
  %reduce.869 = f32[] reduce(%mul.6970, %constant.2882), dimensions={0,1,2}, to_apply=%region_741.25271
  %all-reduce.513 = f32[] all-reduce(%reduce.869), channel_id=964, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_741.25271.clone
  %add.3278 = f32[] add(%add.3277, %all-reduce.513)
  %dot.773 = bf16[4096,128256]{1,0} dot(%mul.2901, %sharding_constraint.481), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.514 = bf16[4096,128256]{1,0} all-reduce(%dot.773), channel_id=965, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.224.clone
  %dynamic-slice.1539 = bf16[512,128256]{1,0} dynamic-slice(%all-reduce.514, %reshape.9486, %constant.2873), dynamic_slice_sizes={512,128256}
  %convert_element_type.4010 = f32[512,128256]{1,0} convert(%dynamic-slice.1539)
  %mul.6971 = f32[512,128256]{1,0} multiply(%convert_element_type.4010, %convert_element_type.4010)
  %reduce.870 = f32[] reduce(%mul.6971, %constant.2882), dimensions={0,1}, to_apply=%region_742.25280
  %all-reduce.515 = f32[] all-reduce(%reduce.870), channel_id=966, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_742.25280.clone
  %add.3279 = f32[] add(%add.3278, %all-reduce.515)
  %mul.6980 = bf16[2,8192,4096]{2,1,0} multiply(%sharding_constraint.1127, %mul.6011)
  %convert_element_type.4012 = f32[2,8192,4096]{2,1,0} convert(%mul.6980)
  %mul.6983 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.4012, %mul.5931)
  %mul.6984 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3344, %convert_element_type.4012)
  %reduce.871 = f32[2,8192]{1,0} reduce(%mul.6984, %constant.2882), dimensions={2}, to_apply=%region_743.25293
  %reshape.9764 = f32[2,8192,1]{2,1,0} reshape(%reduce.871)
  %div.2007 = f32[2,8192,1]{2,1,0} divide(%rsqrt.192, %add.2963)
  %mul.6986 = f32[2,8192,1]{2,1,0} multiply(%div.2007, %broadcast.5145)
  %mul.6987 = f32[2,8192,1]{2,1,0} multiply(%reshape.9764, %mul.6986)
  %mul.6988 = f32[2,8192,1]{2,1,0} multiply(%mul.6987, %mul.2917)
  %mul.6989 = f32[2,8192]{1,0} reshape(%mul.6988)
  %mul.6990 = f32[2,8192,4096]{2,1,0} broadcast(%mul.6989), dimensions={0,1}
  %mul.6994 = f32[2,8192,4096]{2,1,0} multiply(%convert_element_type.3344, %mul.6990)
  %add_any.594 = f32[2,8192,4096]{2,1,0} add(%mul.6983, %mul.6994)
  %convert_element_type.4013 = bf16[2,8192,4096]{2,1,0} convert(%add_any.594)
  %add_any.595 = bf16[2,8192,4096]{2,1,0} add(%add_any.583, %convert_element_type.4013)
  %sharding_constraint.1289 = bf16[2,8192,4096]{2,1,0} copy(%add_any.595)
  %sharding_constraint.1290 = bf16[2,8192,4096]{2,1,0} copy(%sharding_constraint.1289)
  %dot.774 = bf16[128256,4096]{1,0} dot(%convert_element_type.790, %sharding_constraint.1290), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}
  %all-reduce.516 = bf16[128256,4096]{1,0} all-reduce(%dot.774), channel_id=967, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%add.225.clone
  %dynamic-slice.1541 = bf16[128256,512]{1,0} dynamic-slice(%all-reduce.516, %constant.2873, %reshape.9486), dynamic_slice_sizes={128256,512}
  %convert_element_type.4014 = f32[128256,512]{1,0} convert(%dynamic-slice.1541)
  %mul.6995 = f32[128256,512]{1,0} multiply(%convert_element_type.4014, %convert_element_type.4014)
  %reduce.872 = f32[] reduce(%mul.6995, %constant.2882), dimensions={0,1}, to_apply=%region_744.25314
  %all-reduce.517 = f32[] all-reduce(%reduce.872), channel_id=968, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_744.25314.clone
  %add.3280 = f32[] add(%add.3279, %all-reduce.517)
  %sqrt.1 = f32[] sqrt(%add.3280)
  %lt.1048 = pred[] compare(%sqrt.1, %constant.2872), direction=LT
  %select_n.2700 = pred[4096]{0} broadcast(%lt.1048), dimensions={}
  %div.2008 = f32[4096]{0} broadcast(%sqrt.1), dimensions={}
  %div.2009 = f32[4096]{0} divide(%convert_element_type.1881, %div.2008)
  %select_n.2701 = f32[4096]{0} select(%select_n.2700, %convert_element_type.1881, %div.2009)
  %constant.13810 = f32[] constant(0.1)
  %broadcast.5180 = f32[4096]{0} broadcast(%constant.13810), dimensions={}
  %mul.6996 = f32[4096]{0} multiply(%select_n.2701, %broadcast.5180)
  %param.298 = f32[4096]{0} parameter(293), sharding={replicated}
  %constant.13811 = f32[] constant(0.9)
  %broadcast.5181 = f32[4096]{0} broadcast(%constant.13811), dimensions={}
  %mul.6999 = f32[4096]{0} multiply(%param.298, %broadcast.5181)
  %add.3281 = f32[4096]{0} add(%mul.6996, %mul.6999)
  %param.299 = s32[] parameter(292), sharding={replicated}
  %constant.13812 = s32[] constant(2147483647)
  %lt.1049 = pred[] compare(%param.299, %constant.13812), direction=LT
  %add.3282 = s32[] add(%param.299, %constant.2871)
  %select_n.2702 = s32[] select(%lt.1049, %add.3282, %constant.13812)
  %pow.387 = f32[] convert(%select_n.2702)
  %pow.388 = f32[] power(%constant.13811, %pow.387)
  %sub.357 = f32[] subtract(%constant.2872, %pow.388)
  %div.2010 = f32[4096]{0} broadcast(%sub.357), dimensions={}
  %integer_pow.13 = f32[4096]{0} multiply(%select_n.2701, %select_n.2701)
  %constant.13813 = f32[] constant(0.05)
  %broadcast.5182 = f32[4096]{0} broadcast(%constant.13813), dimensions={}
  %mul.7000 = f32[4096]{0} multiply(%integer_pow.13, %broadcast.5182)
  %param.300 = f32[4096]{0} parameter(584), sharding={replicated}
  %constant.13814 = f32[] constant(0.95)
  %broadcast.5183 = f32[4096]{0} broadcast(%constant.13814), dimensions={}
  %mul.7001 = f32[4096]{0} multiply(%param.300, %broadcast.5183)
  %add.3283 = f32[4096]{0} add(%mul.7000, %mul.7001)
  %pow.390 = f32[] power(%constant.13814, %pow.387)
  %sub.358 = f32[] subtract(%constant.2872, %pow.390)
  %div.2012 = f32[4096]{0} broadcast(%sub.358), dimensions={}
  %div.2013 = f32[4096]{0} divide(%add.3283, %div.2012)
  %sqrt.2 = f32[4096]{0} sqrt(%div.2013)
  %broadcast.5184 = f32[4096]{0} broadcast(%constant.5660), dimensions={}
  %add.3284 = f32[4096]{0} add(%sqrt.2, %broadcast.5184)
  %multiply.3188 = f32[4096]{0} multiply(%div.2010, %add.3284)
  %div.2021 = f32[4096]{0} divide(%add.3281, %multiply.3188)
  %mul.7002 = f32[4096]{0} multiply(%param.1, %broadcast.5180)
  %add.3285 = f32[4096]{0} add(%div.2021, %mul.7002)
  %mul.7003 = f32[4096]{0} multiply(%mul.1626, %add.3285)
  %add.3286 = f32[4096]{0} add(%param.1, %mul.7003)
  %mul.7008 = f32[512,14336]{1,0} broadcast(%mul.1625), dimensions={}
  %select_n.2703 = pred[512,14336]{1,0} broadcast(%lt.1048), dimensions={}
  %div.2022 = f32[512,14336]{1,0} broadcast(%sqrt.1), dimensions={}
  %div.2023 = f32[512,14336]{1,0} divide(%convert_element_type.3336, %div.2022)
  %select_n.2704 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3336, %div.2023)
  %broadcast.5185 = f32[512,14336]{1,0} broadcast(%constant.13810), dimensions={}
  %mul.7009 = f32[512,14336]{1,0} multiply(%select_n.2704, %broadcast.5185)
  %param.301 = f32[512,14336]{1,0} parameter(294), sharding={devices=[8,1]<=[8]}
  %broadcast.5186 = f32[512,14336]{1,0} broadcast(%constant.13811), dimensions={}
  %mul.7010 = f32[512,14336]{1,0} multiply(%param.301, %broadcast.5186)
  %add.3288 = f32[512,14336]{1,0} add(%mul.7009, %mul.7010)
  %div.2024 = f32[512,14336]{1,0} broadcast(%sub.357), dimensions={}
  %integer_pow.14 = f32[512,14336]{1,0} multiply(%select_n.2704, %select_n.2704)
  %broadcast.5187 = f32[512,14336]{1,0} broadcast(%constant.13813), dimensions={}
  %mul.7015 = f32[512,14336]{1,0} multiply(%integer_pow.14, %broadcast.5187)
  %param.302 = f32[512,14336]{1,0} parameter(585), sharding={devices=[8,1]<=[8]}
  %broadcast.5188 = f32[512,14336]{1,0} broadcast(%constant.13814), dimensions={}
  %mul.7016 = f32[512,14336]{1,0} multiply(%param.302, %broadcast.5188)
  %add.3289 = f32[512,14336]{1,0} add(%mul.7015, %mul.7016)
  %div.2025 = f32[512,14336]{1,0} broadcast(%sub.358), dimensions={}
  %div.2026 = f32[512,14336]{1,0} divide(%add.3289, %div.2025)
  %sqrt.3 = f32[512,14336]{1,0} sqrt(%div.2026)
  %broadcast.5189 = f32[512,14336]{1,0} broadcast(%constant.5660), dimensions={}
  %add.3290 = f32[512,14336]{1,0} add(%sqrt.3, %broadcast.5189)
  %multiply.3189 = f32[512,14336]{1,0} multiply(%div.2024, %add.3290)
  %div.2027 = f32[512,14336]{1,0} divide(%add.3288, %multiply.3189)
  %mul.7017 = f32[512,14336]{1,0} multiply(%param.13, %broadcast.5185)
  %add.3291 = f32[512,14336]{1,0} add(%div.2027, %mul.7017)
  %mul.7018 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3291)
  %add.3292 = f32[512,14336]{1,0} add(%param.13, %mul.7018)
  %div.2028 = f32[512,14336]{1,0} divide(%convert_element_type.3337, %div.2022)
  %select_n.2705 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3337, %div.2028)
  %mul.7019 = f32[512,14336]{1,0} multiply(%select_n.2705, %broadcast.5185)
  %param.303 = f32[512,14336]{1,0} parameter(295), sharding={devices=[8,1]<=[8]}
  %mul.7020 = f32[512,14336]{1,0} multiply(%param.303, %broadcast.5186)
  %add.3293 = f32[512,14336]{1,0} add(%mul.7019, %mul.7020)
  %integer_pow.15 = f32[512,14336]{1,0} multiply(%select_n.2705, %select_n.2705)
  %mul.7021 = f32[512,14336]{1,0} multiply(%integer_pow.15, %broadcast.5187)
  %param.304 = f32[512,14336]{1,0} parameter(586), sharding={devices=[8,1]<=[8]}
  %mul.7022 = f32[512,14336]{1,0} multiply(%param.304, %broadcast.5188)
  %add.3294 = f32[512,14336]{1,0} add(%mul.7021, %mul.7022)
  %div.2029 = f32[512,14336]{1,0} divide(%add.3294, %div.2025)
  %sqrt.4 = f32[512,14336]{1,0} sqrt(%div.2029)
  %add.3295 = f32[512,14336]{1,0} add(%sqrt.4, %broadcast.5189)
  %multiply.3190 = f32[512,14336]{1,0} multiply(%div.2024, %add.3295)
  %div.2030 = f32[512,14336]{1,0} divide(%add.3293, %multiply.3190)
  %mul.7023 = f32[512,14336]{1,0} multiply(%param.14, %broadcast.5185)
  %add.3296 = f32[512,14336]{1,0} add(%div.2030, %mul.7023)
  %mul.7024 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3296)
  %add.3297 = f32[512,14336]{1,0} add(%param.14, %mul.7024)
  %mul.7025 = f32[14336,512]{1,0} broadcast(%mul.1625), dimensions={}
  %select_n.2707 = pred[14336,512]{1,0} broadcast(%lt.1048), dimensions={}
  %div.2031 = f32[14336,512]{1,0} broadcast(%sqrt.1), dimensions={}
  %div.2032 = f32[14336,512]{1,0} divide(%convert_element_type.3338, %div.2031)
  %select_n.2708 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3338, %div.2032)
  %broadcast.5190 = f32[14336,512]{1,0} broadcast(%constant.13810), dimensions={}
  %mul.7026 = f32[14336,512]{1,0} multiply(%select_n.2708, %broadcast.5190)
  %param.305 = f32[14336,512]{1,0} parameter(296), sharding={devices=[1,8]<=[8]}
  %broadcast.5191 = f32[14336,512]{1,0} broadcast(%constant.13811), dimensions={}
  %mul.7027 = f32[14336,512]{1,0} multiply(%param.305, %broadcast.5191)
  %add.3298 = f32[14336,512]{1,0} add(%mul.7026, %mul.7027)
  %div.2033 = f32[14336,512]{1,0} broadcast(%sub.357), dimensions={}
  %integer_pow.16 = f32[14336,512]{1,0} multiply(%select_n.2708, %select_n.2708)
  %broadcast.5192 = f32[14336,512]{1,0} broadcast(%constant.13813), dimensions={}
  %mul.7028 = f32[14336,512]{1,0} multiply(%integer_pow.16, %broadcast.5192)
  %param.306 = f32[14336,512]{1,0} parameter(587), sharding={devices=[1,8]<=[8]}
  %broadcast.5193 = f32[14336,512]{1,0} broadcast(%constant.13814), dimensions={}
  %mul.7029 = f32[14336,512]{1,0} multiply(%param.306, %broadcast.5193)
  %add.3299 = f32[14336,512]{1,0} add(%mul.7028, %mul.7029)
  %div.2034 = f32[14336,512]{1,0} broadcast(%sub.358), dimensions={}
  %div.2035 = f32[14336,512]{1,0} divide(%add.3299, %div.2034)
  %sqrt.5 = f32[14336,512]{1,0} sqrt(%div.2035)
  %broadcast.5194 = f32[14336,512]{1,0} broadcast(%constant.5660), dimensions={}
  %add.3300 = f32[14336,512]{1,0} add(%sqrt.5, %broadcast.5194)
  %multiply.3191 = f32[14336,512]{1,0} multiply(%div.2033, %add.3300)
  %div.2036 = f32[14336,512]{1,0} divide(%add.3298, %multiply.3191)
  %mul.7030 = f32[14336,512]{1,0} multiply(%param.15, %broadcast.5190)
  %add.3302 = f32[14336,512]{1,0} add(%div.2036, %mul.7030)
  %mul.7031 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3302)
  %add.3303 = f32[14336,512]{1,0} add(%param.15, %mul.7031)
  %div.2037 = f32[4096]{0} divide(%convert_element_type.3343, %div.2008)
  %select_n.2709 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3343, %div.2037)
  %mul.7032 = f32[4096]{0} multiply(%select_n.2709, %broadcast.5180)
  %param.307 = f32[4096]{0} parameter(297), sharding={replicated}
  %mul.7033 = f32[4096]{0} multiply(%param.307, %broadcast.5181)
  %add.3304 = f32[4096]{0} add(%mul.7032, %mul.7033)
  %integer_pow.17 = f32[4096]{0} multiply(%select_n.2709, %select_n.2709)
  %mul.7034 = f32[4096]{0} multiply(%integer_pow.17, %broadcast.5182)
  %param.308 = f32[4096]{0} parameter(588), sharding={replicated}
  %mul.7035 = f32[4096]{0} multiply(%param.308, %broadcast.5183)
  %add.3305 = f32[4096]{0} add(%mul.7034, %mul.7035)
  %div.2038 = f32[4096]{0} divide(%add.3305, %div.2012)
  %sqrt.6 = f32[4096]{0} sqrt(%div.2038)
  %add.3306 = f32[4096]{0} add(%sqrt.6, %broadcast.5184)
  %multiply.3192 = f32[4096]{0} multiply(%div.2010, %add.3306)
  %div.2039 = f32[4096]{0} divide(%add.3304, %multiply.3192)
  %mul.7036 = f32[4096]{0} multiply(%param.12, %broadcast.5180)
  %add.3307 = f32[4096]{0} add(%div.2039, %mul.7036)
  %mul.7037 = f32[4096]{0} multiply(%mul.1626, %add.3307)
  %add.3308 = f32[4096]{0} add(%param.12, %mul.7037)
  %div.2040 = f32[4096]{0} divide(%convert_element_type.3386, %div.2008)
  %select_n.2710 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3386, %div.2040)
  %mul.7038 = f32[4096]{0} multiply(%select_n.2710, %broadcast.5180)
  %param.309 = f32[4096]{0} parameter(298), sharding={replicated}
  %mul.7039 = f32[4096]{0} multiply(%param.309, %broadcast.5181)
  %add.3309 = f32[4096]{0} add(%mul.7038, %mul.7039)
  %integer_pow.18 = f32[4096]{0} multiply(%select_n.2710, %select_n.2710)
  %mul.7040 = f32[4096]{0} multiply(%integer_pow.18, %broadcast.5182)
  %param.310 = f32[4096]{0} parameter(589), sharding={replicated}
  %mul.7041 = f32[4096]{0} multiply(%param.310, %broadcast.5183)
  %add.3310 = f32[4096]{0} add(%mul.7040, %mul.7041)
  %div.2041 = f32[4096]{0} divide(%add.3310, %div.2012)
  %sqrt.7 = f32[4096]{0} sqrt(%div.2041)
  %add.3312 = f32[4096]{0} add(%sqrt.7, %broadcast.5184)
  %multiply.3193 = f32[4096]{0} multiply(%div.2010, %add.3312)
  %div.2042 = f32[4096]{0} divide(%add.3309, %multiply.3193)
  %mul.7042 = f32[4096]{0} multiply(%param.5, %broadcast.5180)
  %add.3313 = f32[4096]{0} add(%div.2042, %mul.7042)
  %mul.7043 = f32[4096]{0} multiply(%mul.1626, %add.3313)
  %add.3314 = f32[4096]{0} add(%param.5, %mul.7043)
  %mul.7045 = f32[512,8,128]{2,1,0} broadcast(%mul.1625), dimensions={}
  %select_n.2711 = pred[512,8,128]{2,1,0} broadcast(%lt.1048), dimensions={}
  %div.2043 = f32[512,8,128]{2,1,0} broadcast(%sqrt.1), dimensions={}
  %div.2044 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3389, %div.2043)
  %select_n.2712 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3389, %div.2044)
  %broadcast.5195 = f32[512,8,128]{2,1,0} broadcast(%constant.13810), dimensions={}
  %mul.7046 = f32[512,8,128]{2,1,0} multiply(%select_n.2712, %broadcast.5195)
  %param.311 = f32[512,8,128]{2,1,0} parameter(299), sharding={devices=[8,1,1]<=[8]}
  %broadcast.5196 = f32[512,8,128]{2,1,0} broadcast(%constant.13811), dimensions={}
  %mul.7047 = f32[512,8,128]{2,1,0} multiply(%param.311, %broadcast.5196)
  %add.3315 = f32[512,8,128]{2,1,0} add(%mul.7046, %mul.7047)
  %div.2045 = f32[512,8,128]{2,1,0} broadcast(%sub.357), dimensions={}
  %integer_pow.19 = f32[512,8,128]{2,1,0} multiply(%select_n.2712, %select_n.2712)
  %broadcast.5197 = f32[512,8,128]{2,1,0} broadcast(%constant.13813), dimensions={}
  %mul.7048 = f32[512,8,128]{2,1,0} multiply(%integer_pow.19, %broadcast.5197)
  %param.312 = f32[512,8,128]{2,1,0} parameter(590), sharding={devices=[8,1,1]<=[8]}
  %broadcast.5198 = f32[512,8,128]{2,1,0} broadcast(%constant.13814), dimensions={}
  %mul.7049 = f32[512,8,128]{2,1,0} multiply(%param.312, %broadcast.5198)
  %add.3316 = f32[512,8,128]{2,1,0} add(%mul.7048, %mul.7049)
  %div.2046 = f32[512,8,128]{2,1,0} broadcast(%sub.358), dimensions={}
  %div.2047 = f32[512,8,128]{2,1,0} divide(%add.3316, %div.2046)
  %sqrt.8 = f32[512,8,128]{2,1,0} sqrt(%div.2047)
  %broadcast.5199 = f32[512,8,128]{2,1,0} broadcast(%constant.5660), dimensions={}
  %add.3317 = f32[512,8,128]{2,1,0} add(%sqrt.8, %broadcast.5199)
  %multiply.3194 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3317)
  %div.2048 = f32[512,8,128]{2,1,0} divide(%add.3315, %multiply.3194)
  %mul.7050 = f32[512,8,128]{2,1,0} multiply(%param.8, %broadcast.5195)
  %add.3318 = f32[512,8,128]{2,1,0} add(%div.2048, %mul.7050)
  %mul.7051 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3318)
  %add.3319 = f32[512,8,128]{2,1,0} add(%param.8, %mul.7051)
  %mul.7052 = f32[32,128,512]{2,1,0} broadcast(%mul.1625), dimensions={}
  %select_n.2713 = pred[32,128,512]{2,1,0} broadcast(%lt.1048), dimensions={}
  %div.2049 = f32[32,128,512]{2,1,0} broadcast(%sqrt.1), dimensions={}
  %div.2050 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3391, %div.2049)
  %select_n.2714 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3391, %div.2050)
  %broadcast.5200 = f32[32,128,512]{2,1,0} broadcast(%constant.13810), dimensions={}
  %mul.7053 = f32[32,128,512]{2,1,0} multiply(%select_n.2714, %broadcast.5200)
  %param.313 = f32[32,128,512]{2,1,0} parameter(300), sharding={devices=[1,1,8]<=[8]}
  %broadcast.5201 = f32[32,128,512]{2,1,0} broadcast(%constant.13811), dimensions={}
  %mul.7054 = f32[32,128,512]{2,1,0} multiply(%param.313, %broadcast.5201)
  %add.3320 = f32[32,128,512]{2,1,0} add(%mul.7053, %mul.7054)
  %div.2051 = f32[32,128,512]{2,1,0} broadcast(%sub.357), dimensions={}
  %integer_pow.20 = f32[32,128,512]{2,1,0} multiply(%select_n.2714, %select_n.2714)
  %broadcast.5202 = f32[32,128,512]{2,1,0} broadcast(%constant.13813), dimensions={}
  %mul.7055 = f32[32,128,512]{2,1,0} multiply(%integer_pow.20, %broadcast.5202)
  %param.314 = f32[32,128,512]{2,1,0} parameter(591), sharding={devices=[1,1,8]<=[8]}
  %broadcast.5203 = f32[32,128,512]{2,1,0} broadcast(%constant.13814), dimensions={}
  %mul.7056 = f32[32,128,512]{2,1,0} multiply(%param.314, %broadcast.5203)
  %add.3322 = f32[32,128,512]{2,1,0} add(%mul.7055, %mul.7056)
  %div.2052 = f32[32,128,512]{2,1,0} broadcast(%sub.358), dimensions={}
  %div.2053 = f32[32,128,512]{2,1,0} divide(%add.3322, %div.2052)
  %sqrt.9 = f32[32,128,512]{2,1,0} sqrt(%div.2053)
  %broadcast.5204 = f32[32,128,512]{2,1,0} broadcast(%constant.5660), dimensions={}
  %add.3323 = f32[32,128,512]{2,1,0} add(%sqrt.9, %broadcast.5204)
  %multiply.3195 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3323)
  %div.2054 = f32[32,128,512]{2,1,0} divide(%add.3320, %multiply.3195)
  %mul.7057 = f32[32,128,512]{2,1,0} multiply(%param.11, %broadcast.5200)
  %add.3324 = f32[32,128,512]{2,1,0} add(%div.2054, %mul.7057)
  %mul.7058 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3324)
  %add.3325 = f32[32,128,512]{2,1,0} add(%param.11, %mul.7058)
  %mul.7061 = f32[512,32,128]{2,1,0} broadcast(%mul.1625), dimensions={}
  %select_n.2715 = pred[512,32,128]{2,1,0} broadcast(%lt.1048), dimensions={}
  %div.2055 = f32[512,32,128]{2,1,0} broadcast(%sqrt.1), dimensions={}
  %div.2056 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3394, %div.2055)
  %select_n.2716 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3394, %div.2056)
  %broadcast.5205 = f32[512,32,128]{2,1,0} broadcast(%constant.13810), dimensions={}
  %mul.7065 = f32[512,32,128]{2,1,0} multiply(%select_n.2716, %broadcast.5205)
  %param.315 = f32[512,32,128]{2,1,0} parameter(301), sharding={devices=[8,1,1]<=[8]}
  %broadcast.5206 = f32[512,32,128]{2,1,0} broadcast(%constant.13811), dimensions={}
  %mul.7066 = f32[512,32,128]{2,1,0} multiply(%param.315, %broadcast.5206)
  %add.3326 = f32[512,32,128]{2,1,0} add(%mul.7065, %mul.7066)
  %div.2057 = f32[512,32,128]{2,1,0} broadcast(%sub.357), dimensions={}
  %integer_pow.21 = f32[512,32,128]{2,1,0} multiply(%select_n.2716, %select_n.2716)
  %broadcast.5207 = f32[512,32,128]{2,1,0} broadcast(%constant.13813), dimensions={}
  %mul.7067 = f32[512,32,128]{2,1,0} multiply(%integer_pow.21, %broadcast.5207)
  %param.316 = f32[512,32,128]{2,1,0} parameter(592), sharding={devices=[8,1,1]<=[8]}
  %broadcast.5208 = f32[512,32,128]{2,1,0} broadcast(%constant.13814), dimensions={}
  %mul.7068 = f32[512,32,128]{2,1,0} multiply(%param.316, %broadcast.5208)
  %add.3327 = f32[512,32,128]{2,1,0} add(%mul.7067, %mul.7068)
  %div.2058 = f32[512,32,128]{2,1,0} broadcast(%sub.358), dimensions={}
  %div.2059 = f32[512,32,128]{2,1,0} divide(%add.3327, %div.2058)
  %sqrt.10 = f32[512,32,128]{2,1,0} sqrt(%div.2059)
  %broadcast.5209 = f32[512,32,128]{2,1,0} broadcast(%constant.5660), dimensions={}
  %add.3328 = f32[512,32,128]{2,1,0} add(%sqrt.10, %broadcast.5209)
  %multiply.3196 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3328)
  %div.2060 = f32[512,32,128]{2,1,0} divide(%add.3326, %multiply.3196)
  %mul.7069 = f32[512,32,128]{2,1,0} multiply(%param.6, %broadcast.5205)
  %add.3329 = f32[512,32,128]{2,1,0} add(%div.2060, %mul.7069)
  %mul.7070 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3329)
  %add.3330 = f32[512,32,128]{2,1,0} add(%param.6, %mul.7070)
  %div.2061 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3397, %div.2043)
  %select_n.2717 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3397, %div.2061)
  %mul.7071 = f32[512,8,128]{2,1,0} multiply(%select_n.2717, %broadcast.5195)
  %param.317 = f32[512,8,128]{2,1,0} parameter(302), sharding={devices=[8,1,1]<=[8]}
  %mul.7072 = f32[512,8,128]{2,1,0} multiply(%param.317, %broadcast.5196)
  %add.3331 = f32[512,8,128]{2,1,0} add(%mul.7071, %mul.7072)
  %integer_pow.22 = f32[512,8,128]{2,1,0} multiply(%select_n.2717, %select_n.2717)
  %mul.7074 = f32[512,8,128]{2,1,0} multiply(%integer_pow.22, %broadcast.5197)
  %param.318 = f32[512,8,128]{2,1,0} parameter(593), sharding={devices=[8,1,1]<=[8]}
  %mul.7075 = f32[512,8,128]{2,1,0} multiply(%param.318, %broadcast.5198)
  %add.3332 = f32[512,8,128]{2,1,0} add(%mul.7074, %mul.7075)
  %div.2062 = f32[512,8,128]{2,1,0} divide(%add.3332, %div.2046)
  %sqrt.11 = f32[512,8,128]{2,1,0} sqrt(%div.2062)
  %add.3333 = f32[512,8,128]{2,1,0} add(%sqrt.11, %broadcast.5199)
  %multiply.3197 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3333)
  %div.2063 = f32[512,8,128]{2,1,0} divide(%add.3331, %multiply.3197)
  %mul.7076 = f32[512,8,128]{2,1,0} multiply(%param.9, %broadcast.5195)
  %add.3334 = f32[512,8,128]{2,1,0} add(%div.2063, %mul.7076)
  %mul.7078 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3334)
  %add.3335 = f32[512,8,128]{2,1,0} add(%param.9, %mul.7078)
  %div.2065 = f32[512,14336]{1,0} divide(%convert_element_type.3399, %div.2022)
  %select_n.2718 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3399, %div.2065)
  %mul.7079 = f32[512,14336]{1,0} multiply(%select_n.2718, %broadcast.5185)
  %param.319 = f32[512,14336]{1,0} parameter(303), sharding={devices=[8,1]<=[8]}
  %mul.7080 = f32[512,14336]{1,0} multiply(%param.319, %broadcast.5186)
  %add.3336 = f32[512,14336]{1,0} add(%mul.7079, %mul.7080)
  %integer_pow.23 = f32[512,14336]{1,0} multiply(%select_n.2718, %select_n.2718)
  %mul.7081 = f32[512,14336]{1,0} multiply(%integer_pow.23, %broadcast.5187)
  %param.320 = f32[512,14336]{1,0} parameter(594), sharding={devices=[8,1]<=[8]}
  %mul.7082 = f32[512,14336]{1,0} multiply(%param.320, %broadcast.5188)
  %add.3338 = f32[512,14336]{1,0} add(%mul.7081, %mul.7082)
  %div.2066 = f32[512,14336]{1,0} divide(%add.3338, %div.2025)
  %sqrt.12 = f32[512,14336]{1,0} sqrt(%div.2066)
  %add.3339 = f32[512,14336]{1,0} add(%sqrt.12, %broadcast.5189)
  %multiply.3198 = f32[512,14336]{1,0} multiply(%div.2024, %add.3339)
  %div.2067 = f32[512,14336]{1,0} divide(%add.3336, %multiply.3198)
  %mul.7083 = f32[512,14336]{1,0} multiply(%param.22, %broadcast.5185)
  %add.3340 = f32[512,14336]{1,0} add(%div.2067, %mul.7083)
  %mul.7084 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3340)
  %add.3341 = f32[512,14336]{1,0} add(%param.22, %mul.7084)
  %div.2070 = f32[512,14336]{1,0} divide(%convert_element_type.3403, %div.2022)
  %select_n.2719 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3403, %div.2070)
  %mul.7085 = f32[512,14336]{1,0} multiply(%select_n.2719, %broadcast.5185)
  %param.321 = f32[512,14336]{1,0} parameter(304), sharding={devices=[8,1]<=[8]}
  %mul.7090 = f32[512,14336]{1,0} multiply(%param.321, %broadcast.5186)
  %add.3342 = f32[512,14336]{1,0} add(%mul.7085, %mul.7090)
  %integer_pow.24 = f32[512,14336]{1,0} multiply(%select_n.2719, %select_n.2719)
  %mul.7101 = f32[512,14336]{1,0} multiply(%integer_pow.24, %broadcast.5187)
  %param.322 = f32[512,14336]{1,0} parameter(595), sharding={devices=[8,1]<=[8]}
  %mul.7102 = f32[512,14336]{1,0} multiply(%param.322, %broadcast.5188)
  %add.3343 = f32[512,14336]{1,0} add(%mul.7101, %mul.7102)
  %div.2071 = f32[512,14336]{1,0} divide(%add.3343, %div.2025)
  %sqrt.13 = f32[512,14336]{1,0} sqrt(%div.2071)
  %add.3344 = f32[512,14336]{1,0} add(%sqrt.13, %broadcast.5189)
  %multiply.3199 = f32[512,14336]{1,0} multiply(%div.2024, %add.3344)
  %div.2072 = f32[512,14336]{1,0} divide(%add.3342, %multiply.3199)
  %mul.7103 = f32[512,14336]{1,0} multiply(%param.23, %broadcast.5185)
  %add.3345 = f32[512,14336]{1,0} add(%div.2072, %mul.7103)
  %mul.7104 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3345)
  %add.3346 = f32[512,14336]{1,0} add(%param.23, %mul.7104)
  %div.2073 = f32[14336,512]{1,0} divide(%convert_element_type.3404, %div.2031)
  %select_n.2720 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3404, %div.2073)
  %mul.7105 = f32[14336,512]{1,0} multiply(%select_n.2720, %broadcast.5190)
  %param.323 = f32[14336,512]{1,0} parameter(305), sharding={devices=[1,8]<=[8]}
  %mul.7106 = f32[14336,512]{1,0} multiply(%param.323, %broadcast.5191)
  %add.3347 = f32[14336,512]{1,0} add(%mul.7105, %mul.7106)
  %integer_pow.25 = f32[14336,512]{1,0} multiply(%select_n.2720, %select_n.2720)
  %mul.7107 = f32[14336,512]{1,0} multiply(%integer_pow.25, %broadcast.5192)
  %param.324 = f32[14336,512]{1,0} parameter(596), sharding={devices=[1,8]<=[8]}
  %mul.7108 = f32[14336,512]{1,0} multiply(%param.324, %broadcast.5193)
  %add.3348 = f32[14336,512]{1,0} add(%mul.7107, %mul.7108)
  %div.2075 = f32[14336,512]{1,0} divide(%add.3348, %div.2034)
  %sqrt.14 = f32[14336,512]{1,0} sqrt(%div.2075)
  %add.3350 = f32[14336,512]{1,0} add(%sqrt.14, %broadcast.5194)
  %multiply.3200 = f32[14336,512]{1,0} multiply(%div.2033, %add.3350)
  %div.2077 = f32[14336,512]{1,0} divide(%add.3347, %multiply.3200)
  %mul.7109 = f32[14336,512]{1,0} multiply(%param.24, %broadcast.5190)
  %add.3352 = f32[14336,512]{1,0} add(%div.2077, %mul.7109)
  %mul.7111 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3352)
  %add.3353 = f32[14336,512]{1,0} add(%param.24, %mul.7111)
  %div.2078 = f32[4096]{0} divide(%convert_element_type.3405, %div.2008)
  %select_n.2721 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3405, %div.2078)
  %mul.7112 = f32[4096]{0} multiply(%select_n.2721, %broadcast.5180)
  %param.325 = f32[4096]{0} parameter(306), sharding={replicated}
  %mul.7113 = f32[4096]{0} multiply(%param.325, %broadcast.5181)
  %add.3354 = f32[4096]{0} add(%mul.7112, %mul.7113)
  %integer_pow.26 = f32[4096]{0} multiply(%select_n.2721, %select_n.2721)
  %mul.7114 = f32[4096]{0} multiply(%integer_pow.26, %broadcast.5182)
  %param.326 = f32[4096]{0} parameter(597), sharding={replicated}
  %mul.7115 = f32[4096]{0} multiply(%param.326, %broadcast.5183)
  %add.3355 = f32[4096]{0} add(%mul.7114, %mul.7115)
  %div.2080 = f32[4096]{0} divide(%add.3355, %div.2012)
  %sqrt.15 = f32[4096]{0} sqrt(%div.2080)
  %add.3356 = f32[4096]{0} add(%sqrt.15, %broadcast.5184)
  %multiply.3201 = f32[4096]{0} multiply(%div.2010, %add.3356)
  %div.2081 = f32[4096]{0} divide(%add.3354, %multiply.3201)
  %mul.7116 = f32[4096]{0} multiply(%param.21, %broadcast.5180)
  %add.3357 = f32[4096]{0} add(%div.2081, %mul.7116)
  %mul.7117 = f32[4096]{0} multiply(%mul.1626, %add.3357)
  %add.3358 = f32[4096]{0} add(%param.21, %mul.7117)
  %div.2083 = f32[4096]{0} divide(%convert_element_type.3407, %div.2008)
  %select_n.2722 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3407, %div.2083)
  %mul.7118 = f32[4096]{0} multiply(%select_n.2722, %broadcast.5180)
  %param.327 = f32[4096]{0} parameter(307), sharding={replicated}
  %mul.7119 = f32[4096]{0} multiply(%param.327, %broadcast.5181)
  %add.3359 = f32[4096]{0} add(%mul.7118, %mul.7119)
  %integer_pow.27 = f32[4096]{0} multiply(%select_n.2722, %select_n.2722)
  %mul.7121 = f32[4096]{0} multiply(%integer_pow.27, %broadcast.5182)
  %param.328 = f32[4096]{0} parameter(598), sharding={replicated}
  %mul.7122 = f32[4096]{0} multiply(%param.328, %broadcast.5183)
  %add.3360 = f32[4096]{0} add(%mul.7121, %mul.7122)
  %div.2084 = f32[4096]{0} divide(%add.3360, %div.2012)
  %sqrt.16 = f32[4096]{0} sqrt(%div.2084)
  %add.3361 = f32[4096]{0} add(%sqrt.16, %broadcast.5184)
  %multiply.3202 = f32[4096]{0} multiply(%div.2010, %add.3361)
  %div.2085 = f32[4096]{0} divide(%add.3359, %multiply.3202)
  %mul.7123 = f32[4096]{0} multiply(%param.16, %broadcast.5180)
  %add.3362 = f32[4096]{0} add(%div.2085, %mul.7123)
  %mul.7124 = f32[4096]{0} multiply(%mul.1626, %add.3362)
  %add.3363 = f32[4096]{0} add(%param.16, %mul.7124)
  %div.2086 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3409, %div.2043)
  %select_n.2723 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3409, %div.2086)
  %mul.7125 = f32[512,8,128]{2,1,0} multiply(%select_n.2723, %broadcast.5195)
  %param.329 = f32[512,8,128]{2,1,0} parameter(308), sharding={devices=[8,1,1]<=[8]}
  %mul.7126 = f32[512,8,128]{2,1,0} multiply(%param.329, %broadcast.5196)
  %add.3364 = f32[512,8,128]{2,1,0} add(%mul.7125, %mul.7126)
  %integer_pow.28 = f32[512,8,128]{2,1,0} multiply(%select_n.2723, %select_n.2723)
  %mul.7127 = f32[512,8,128]{2,1,0} multiply(%integer_pow.28, %broadcast.5197)
  %param.330 = f32[512,8,128]{2,1,0} parameter(599), sharding={devices=[8,1,1]<=[8]}
  %mul.7128 = f32[512,8,128]{2,1,0} multiply(%param.330, %broadcast.5198)
  %add.3365 = f32[512,8,128]{2,1,0} add(%mul.7127, %mul.7128)
  %div.2088 = f32[512,8,128]{2,1,0} divide(%add.3365, %div.2046)
  %sqrt.17 = f32[512,8,128]{2,1,0} sqrt(%div.2088)
  %add.3366 = f32[512,8,128]{2,1,0} add(%sqrt.17, %broadcast.5199)
  %multiply.3203 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3366)
  %div.2089 = f32[512,8,128]{2,1,0} divide(%add.3364, %multiply.3203)
  %mul.7129 = f32[512,8,128]{2,1,0} multiply(%param.18, %broadcast.5195)
  %add.3367 = f32[512,8,128]{2,1,0} add(%div.2089, %mul.7129)
  %mul.7131 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3367)
  %add.3368 = f32[512,8,128]{2,1,0} add(%param.18, %mul.7131)
  %div.2097 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3411, %div.2049)
  %select_n.2724 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3411, %div.2097)
  %mul.7133 = f32[32,128,512]{2,1,0} multiply(%select_n.2724, %broadcast.5200)
  %param.331 = f32[32,128,512]{2,1,0} parameter(309), sharding={devices=[1,1,8]<=[8]}
  %mul.7134 = f32[32,128,512]{2,1,0} multiply(%param.331, %broadcast.5201)
  %add.3369 = f32[32,128,512]{2,1,0} add(%mul.7133, %mul.7134)
  %integer_pow.29 = f32[32,128,512]{2,1,0} multiply(%select_n.2724, %select_n.2724)
  %mul.7135 = f32[32,128,512]{2,1,0} multiply(%integer_pow.29, %broadcast.5202)
  %param.332 = f32[32,128,512]{2,1,0} parameter(600), sharding={devices=[1,1,8]<=[8]}
  %mul.7137 = f32[32,128,512]{2,1,0} multiply(%param.332, %broadcast.5203)
  %add.3370 = f32[32,128,512]{2,1,0} add(%mul.7135, %mul.7137)
  %div.2098 = f32[32,128,512]{2,1,0} divide(%add.3370, %div.2052)
  %sqrt.18 = f32[32,128,512]{2,1,0} sqrt(%div.2098)
  %add.3371 = f32[32,128,512]{2,1,0} add(%sqrt.18, %broadcast.5204)
  %multiply.3204 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3371)
  %div.2099 = f32[32,128,512]{2,1,0} divide(%add.3369, %multiply.3204)
  %mul.7139 = f32[32,128,512]{2,1,0} multiply(%param.20, %broadcast.5200)
  %add.3372 = f32[32,128,512]{2,1,0} add(%div.2099, %mul.7139)
  %mul.7140 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3372)
  %add.3373 = f32[32,128,512]{2,1,0} add(%param.20, %mul.7140)
  %div.2100 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3415, %div.2055)
  %select_n.2725 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3415, %div.2100)
  %mul.7144 = f32[512,32,128]{2,1,0} multiply(%select_n.2725, %broadcast.5205)
  %param.333 = f32[512,32,128]{2,1,0} parameter(310), sharding={devices=[8,1,1]<=[8]}
  %mul.7145 = f32[512,32,128]{2,1,0} multiply(%param.333, %broadcast.5206)
  %add.3374 = f32[512,32,128]{2,1,0} add(%mul.7144, %mul.7145)
  %integer_pow.30 = f32[512,32,128]{2,1,0} multiply(%select_n.2725, %select_n.2725)
  %mul.7146 = f32[512,32,128]{2,1,0} multiply(%integer_pow.30, %broadcast.5207)
  %param.334 = f32[512,32,128]{2,1,0} parameter(601), sharding={devices=[8,1,1]<=[8]}
  %mul.7147 = f32[512,32,128]{2,1,0} multiply(%param.334, %broadcast.5208)
  %add.3375 = f32[512,32,128]{2,1,0} add(%mul.7146, %mul.7147)
  %div.2101 = f32[512,32,128]{2,1,0} divide(%add.3375, %div.2058)
  %sqrt.19 = f32[512,32,128]{2,1,0} sqrt(%div.2101)
  %add.3376 = f32[512,32,128]{2,1,0} add(%sqrt.19, %broadcast.5209)
  %multiply.3205 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3376)
  %div.2102 = f32[512,32,128]{2,1,0} divide(%add.3374, %multiply.3205)
  %mul.7148 = f32[512,32,128]{2,1,0} multiply(%param.17, %broadcast.5205)
  %add.3377 = f32[512,32,128]{2,1,0} add(%div.2102, %mul.7148)
  %mul.7149 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3377)
  %add.3378 = f32[512,32,128]{2,1,0} add(%param.17, %mul.7149)
  %div.2103 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3417, %div.2043)
  %select_n.2726 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3417, %div.2103)
  %mul.7150 = f32[512,8,128]{2,1,0} multiply(%select_n.2726, %broadcast.5195)
  %param.335 = f32[512,8,128]{2,1,0} parameter(311), sharding={devices=[8,1,1]<=[8]}
  %mul.7151 = f32[512,8,128]{2,1,0} multiply(%param.335, %broadcast.5196)
  %add.3379 = f32[512,8,128]{2,1,0} add(%mul.7150, %mul.7151)
  %integer_pow.31 = f32[512,8,128]{2,1,0} multiply(%select_n.2726, %select_n.2726)
  %mul.7152 = f32[512,8,128]{2,1,0} multiply(%integer_pow.31, %broadcast.5197)
  %param.336 = f32[512,8,128]{2,1,0} parameter(602), sharding={devices=[8,1,1]<=[8]}
  %mul.7153 = f32[512,8,128]{2,1,0} multiply(%param.336, %broadcast.5198)
  %add.3380 = f32[512,8,128]{2,1,0} add(%mul.7152, %mul.7153)
  %div.2104 = f32[512,8,128]{2,1,0} divide(%add.3380, %div.2046)
  %sqrt.20 = f32[512,8,128]{2,1,0} sqrt(%div.2104)
  %add.3381 = f32[512,8,128]{2,1,0} add(%sqrt.20, %broadcast.5199)
  %multiply.3206 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3381)
  %div.2105 = f32[512,8,128]{2,1,0} divide(%add.3379, %multiply.3206)
  %mul.7154 = f32[512,8,128]{2,1,0} multiply(%param.19, %broadcast.5195)
  %add.3382 = f32[512,8,128]{2,1,0} add(%div.2105, %mul.7154)
  %mul.7158 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3382)
  %add.3383 = f32[512,8,128]{2,1,0} add(%param.19, %mul.7158)
  %div.2106 = f32[512,14336]{1,0} divide(%convert_element_type.3420, %div.2022)
  %select_n.2727 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3420, %div.2106)
  %mul.7159 = f32[512,14336]{1,0} multiply(%select_n.2727, %broadcast.5185)
  %param.337 = f32[512,14336]{1,0} parameter(312), sharding={devices=[8,1]<=[8]}
  %mul.7160 = f32[512,14336]{1,0} multiply(%param.337, %broadcast.5186)
  %add.3384 = f32[512,14336]{1,0} add(%mul.7159, %mul.7160)
  %integer_pow.32 = f32[512,14336]{1,0} multiply(%select_n.2727, %select_n.2727)
  %mul.7166 = f32[512,14336]{1,0} multiply(%integer_pow.32, %broadcast.5187)
  %param.338 = f32[512,14336]{1,0} parameter(603), sharding={devices=[8,1]<=[8]}
  %mul.7171 = f32[512,14336]{1,0} multiply(%param.338, %broadcast.5188)
  %add.3385 = f32[512,14336]{1,0} add(%mul.7166, %mul.7171)
  %div.2107 = f32[512,14336]{1,0} divide(%add.3385, %div.2025)
  %sqrt.21 = f32[512,14336]{1,0} sqrt(%div.2107)
  %add.3386 = f32[512,14336]{1,0} add(%sqrt.21, %broadcast.5189)
  %multiply.3207 = f32[512,14336]{1,0} multiply(%div.2024, %add.3386)
  %div.2108 = f32[512,14336]{1,0} divide(%add.3384, %multiply.3207)
  %mul.7172 = f32[512,14336]{1,0} multiply(%param.103, %broadcast.5185)
  %add.3387 = f32[512,14336]{1,0} add(%div.2108, %mul.7172)
  %mul.7177 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3387)
  %add.3388 = f32[512,14336]{1,0} add(%param.103, %mul.7177)
  %div.2109 = f32[512,14336]{1,0} divide(%convert_element_type.3421, %div.2022)
  %select_n.2728 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3421, %div.2109)
  %mul.7178 = f32[512,14336]{1,0} multiply(%select_n.2728, %broadcast.5185)
  %param.339 = f32[512,14336]{1,0} parameter(313), sharding={devices=[8,1]<=[8]}
  %mul.7179 = f32[512,14336]{1,0} multiply(%param.339, %broadcast.5186)
  %add.3389 = f32[512,14336]{1,0} add(%mul.7178, %mul.7179)
  %integer_pow.33 = f32[512,14336]{1,0} multiply(%select_n.2728, %select_n.2728)
  %mul.7180 = f32[512,14336]{1,0} multiply(%integer_pow.33, %broadcast.5187)
  %param.340 = f32[512,14336]{1,0} parameter(604), sharding={devices=[8,1]<=[8]}
  %mul.7181 = f32[512,14336]{1,0} multiply(%param.340, %broadcast.5188)
  %add.3390 = f32[512,14336]{1,0} add(%mul.7180, %mul.7181)
  %div.2110 = f32[512,14336]{1,0} divide(%add.3390, %div.2025)
  %sqrt.22 = f32[512,14336]{1,0} sqrt(%div.2110)
  %add.3391 = f32[512,14336]{1,0} add(%sqrt.22, %broadcast.5189)
  %multiply.3208 = f32[512,14336]{1,0} multiply(%div.2024, %add.3391)
  %div.2111 = f32[512,14336]{1,0} divide(%add.3389, %multiply.3208)
  %mul.7182 = f32[512,14336]{1,0} multiply(%param.104, %broadcast.5185)
  %add.3392 = f32[512,14336]{1,0} add(%div.2111, %mul.7182)
  %mul.7183 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3392)
  %add.3393 = f32[512,14336]{1,0} add(%param.104, %mul.7183)
  %div.2112 = f32[14336,512]{1,0} divide(%convert_element_type.3422, %div.2031)
  %select_n.2729 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3422, %div.2112)
  %mul.7184 = f32[14336,512]{1,0} multiply(%select_n.2729, %broadcast.5190)
  %param.341 = f32[14336,512]{1,0} parameter(314), sharding={devices=[1,8]<=[8]}
  %mul.7185 = f32[14336,512]{1,0} multiply(%param.341, %broadcast.5191)
  %add.3394 = f32[14336,512]{1,0} add(%mul.7184, %mul.7185)
  %integer_pow.34 = f32[14336,512]{1,0} multiply(%select_n.2729, %select_n.2729)
  %mul.7186 = f32[14336,512]{1,0} multiply(%integer_pow.34, %broadcast.5192)
  %param.342 = f32[14336,512]{1,0} parameter(605), sharding={devices=[1,8]<=[8]}
  %mul.7187 = f32[14336,512]{1,0} multiply(%param.342, %broadcast.5193)
  %add.3395 = f32[14336,512]{1,0} add(%mul.7186, %mul.7187)
  %div.2113 = f32[14336,512]{1,0} divide(%add.3395, %div.2034)
  %sqrt.23 = f32[14336,512]{1,0} sqrt(%div.2113)
  %add.3396 = f32[14336,512]{1,0} add(%sqrt.23, %broadcast.5194)
  %multiply.3209 = f32[14336,512]{1,0} multiply(%div.2033, %add.3396)
  %div.2114 = f32[14336,512]{1,0} divide(%add.3394, %multiply.3209)
  %mul.7188 = f32[14336,512]{1,0} multiply(%param.105, %broadcast.5190)
  %add.3397 = f32[14336,512]{1,0} add(%div.2114, %mul.7188)
  %mul.7189 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3397)
  %add.3398 = f32[14336,512]{1,0} add(%param.105, %mul.7189)
  %div.2115 = f32[4096]{0} divide(%convert_element_type.3423, %div.2008)
  %select_n.2730 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3423, %div.2115)
  %mul.7190 = f32[4096]{0} multiply(%select_n.2730, %broadcast.5180)
  %param.343 = f32[4096]{0} parameter(315), sharding={replicated}
  %mul.7191 = f32[4096]{0} multiply(%param.343, %broadcast.5181)
  %add.3399 = f32[4096]{0} add(%mul.7190, %mul.7191)
  %integer_pow.35 = f32[4096]{0} multiply(%select_n.2730, %select_n.2730)
  %mul.7192 = f32[4096]{0} multiply(%integer_pow.35, %broadcast.5182)
  %param.344 = f32[4096]{0} parameter(606), sharding={replicated}
  %mul.7193 = f32[4096]{0} multiply(%param.344, %broadcast.5183)
  %add.3401 = f32[4096]{0} add(%mul.7192, %mul.7193)
  %div.2116 = f32[4096]{0} divide(%add.3401, %div.2012)
  %sqrt.24 = f32[4096]{0} sqrt(%div.2116)
  %add.3402 = f32[4096]{0} add(%sqrt.24, %broadcast.5184)
  %multiply.3210 = f32[4096]{0} multiply(%div.2010, %add.3402)
  %div.2117 = f32[4096]{0} divide(%add.3399, %multiply.3210)
  %mul.7195 = f32[4096]{0} multiply(%param.102, %broadcast.5180)
  %add.3403 = f32[4096]{0} add(%div.2117, %mul.7195)
  %mul.7197 = f32[4096]{0} multiply(%mul.1626, %add.3403)
  %add.3404 = f32[4096]{0} add(%param.102, %mul.7197)
  %div.2118 = f32[4096]{0} divide(%convert_element_type.3425, %div.2008)
  %select_n.2731 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3425, %div.2118)
  %mul.7198 = f32[4096]{0} multiply(%select_n.2731, %broadcast.5180)
  %param.345 = f32[4096]{0} parameter(316), sharding={replicated}
  %mul.7199 = f32[4096]{0} multiply(%param.345, %broadcast.5181)
  %add.3405 = f32[4096]{0} add(%mul.7198, %mul.7199)
  %integer_pow.36 = f32[4096]{0} multiply(%select_n.2731, %select_n.2731)
  %mul.7200 = f32[4096]{0} multiply(%integer_pow.36, %broadcast.5182)
  %param.346 = f32[4096]{0} parameter(607), sharding={replicated}
  %mul.7201 = f32[4096]{0} multiply(%param.346, %broadcast.5183)
  %add.3406 = f32[4096]{0} add(%mul.7200, %mul.7201)
  %div.2119 = f32[4096]{0} divide(%add.3406, %div.2012)
  %sqrt.25 = f32[4096]{0} sqrt(%div.2119)
  %add.3407 = f32[4096]{0} add(%sqrt.25, %broadcast.5184)
  %multiply.3211 = f32[4096]{0} multiply(%div.2010, %add.3407)
  %div.2120 = f32[4096]{0} divide(%add.3405, %multiply.3211)
  %mul.7202 = f32[4096]{0} multiply(%param.97, %broadcast.5180)
  %add.3408 = f32[4096]{0} add(%div.2120, %mul.7202)
  %mul.7203 = f32[4096]{0} multiply(%mul.1626, %add.3408)
  %add.3411 = f32[4096]{0} add(%param.97, %mul.7203)
  %div.2121 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3428, %div.2043)
  %select_n.2732 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3428, %div.2121)
  %mul.7204 = f32[512,8,128]{2,1,0} multiply(%select_n.2732, %broadcast.5195)
  %param.347 = f32[512,8,128]{2,1,0} parameter(317), sharding={devices=[8,1,1]<=[8]}
  %mul.7208 = f32[512,8,128]{2,1,0} multiply(%param.347, %broadcast.5196)
  %add.3412 = f32[512,8,128]{2,1,0} add(%mul.7204, %mul.7208)
  %integer_pow.37 = f32[512,8,128]{2,1,0} multiply(%select_n.2732, %select_n.2732)
  %mul.7209 = f32[512,8,128]{2,1,0} multiply(%integer_pow.37, %broadcast.5197)
  %param.348 = f32[512,8,128]{2,1,0} parameter(608), sharding={devices=[8,1,1]<=[8]}
  %mul.7210 = f32[512,8,128]{2,1,0} multiply(%param.348, %broadcast.5198)
  %add.3413 = f32[512,8,128]{2,1,0} add(%mul.7209, %mul.7210)
  %div.2122 = f32[512,8,128]{2,1,0} divide(%add.3413, %div.2046)
  %sqrt.26 = f32[512,8,128]{2,1,0} sqrt(%div.2122)
  %add.3414 = f32[512,8,128]{2,1,0} add(%sqrt.26, %broadcast.5199)
  %multiply.3212 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3414)
  %div.2123 = f32[512,8,128]{2,1,0} divide(%add.3412, %multiply.3212)
  %mul.7211 = f32[512,8,128]{2,1,0} multiply(%param.99, %broadcast.5195)
  %add.3415 = f32[512,8,128]{2,1,0} add(%div.2123, %mul.7211)
  %mul.7212 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3415)
  %add.3416 = f32[512,8,128]{2,1,0} add(%param.99, %mul.7212)
  %div.2124 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3430, %div.2049)
  %select_n.2733 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3430, %div.2124)
  %mul.7213 = f32[32,128,512]{2,1,0} multiply(%select_n.2733, %broadcast.5200)
  %param.349 = f32[32,128,512]{2,1,0} parameter(318), sharding={devices=[1,1,8]<=[8]}
  %mul.7214 = f32[32,128,512]{2,1,0} multiply(%param.349, %broadcast.5201)
  %add.3417 = f32[32,128,512]{2,1,0} add(%mul.7213, %mul.7214)
  %integer_pow.38 = f32[32,128,512]{2,1,0} multiply(%select_n.2733, %select_n.2733)
  %mul.7215 = f32[32,128,512]{2,1,0} multiply(%integer_pow.38, %broadcast.5202)
  %param.350 = f32[32,128,512]{2,1,0} parameter(609), sharding={devices=[1,1,8]<=[8]}
  %mul.7216 = f32[32,128,512]{2,1,0} multiply(%param.350, %broadcast.5203)
  %add.3418 = f32[32,128,512]{2,1,0} add(%mul.7215, %mul.7216)
  %div.2125 = f32[32,128,512]{2,1,0} divide(%add.3418, %div.2052)
  %sqrt.27 = f32[32,128,512]{2,1,0} sqrt(%div.2125)
  %add.3419 = f32[32,128,512]{2,1,0} add(%sqrt.27, %broadcast.5204)
  %multiply.3213 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3419)
  %div.2126 = f32[32,128,512]{2,1,0} divide(%add.3417, %multiply.3213)
  %mul.7217 = f32[32,128,512]{2,1,0} multiply(%param.101, %broadcast.5200)
  %add.3420 = f32[32,128,512]{2,1,0} add(%div.2126, %mul.7217)
  %mul.7218 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3420)
  %add.3421 = f32[32,128,512]{2,1,0} add(%param.101, %mul.7218)
  %div.2127 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3434, %div.2055)
  %select_n.2734 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3434, %div.2127)
  %mul.7222 = f32[512,32,128]{2,1,0} multiply(%select_n.2734, %broadcast.5205)
  %param.351 = f32[512,32,128]{2,1,0} parameter(319), sharding={devices=[8,1,1]<=[8]}
  %mul.7223 = f32[512,32,128]{2,1,0} multiply(%param.351, %broadcast.5206)
  %add.3422 = f32[512,32,128]{2,1,0} add(%mul.7222, %mul.7223)
  %integer_pow.39 = f32[512,32,128]{2,1,0} multiply(%select_n.2734, %select_n.2734)
  %mul.7224 = f32[512,32,128]{2,1,0} multiply(%integer_pow.39, %broadcast.5207)
  %param.352 = f32[512,32,128]{2,1,0} parameter(610), sharding={devices=[8,1,1]<=[8]}
  %mul.7227 = f32[512,32,128]{2,1,0} multiply(%param.352, %broadcast.5208)
  %add.3424 = f32[512,32,128]{2,1,0} add(%mul.7224, %mul.7227)
  %div.2128 = f32[512,32,128]{2,1,0} divide(%add.3424, %div.2058)
  %sqrt.28 = f32[512,32,128]{2,1,0} sqrt(%div.2128)
  %add.3425 = f32[512,32,128]{2,1,0} add(%sqrt.28, %broadcast.5209)
  %multiply.3214 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3425)
  %div.2129 = f32[512,32,128]{2,1,0} divide(%add.3422, %multiply.3214)
  %mul.7228 = f32[512,32,128]{2,1,0} multiply(%param.98, %broadcast.5205)
  %add.3426 = f32[512,32,128]{2,1,0} add(%div.2129, %mul.7228)
  %mul.7229 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3426)
  %add.3427 = f32[512,32,128]{2,1,0} add(%param.98, %mul.7229)
  %div.2130 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3436, %div.2043)
  %select_n.2735 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3436, %div.2130)
  %mul.7230 = f32[512,8,128]{2,1,0} multiply(%select_n.2735, %broadcast.5195)
  %param.353 = f32[512,8,128]{2,1,0} parameter(320), sharding={devices=[8,1,1]<=[8]}
  %mul.7231 = f32[512,8,128]{2,1,0} multiply(%param.353, %broadcast.5196)
  %add.3428 = f32[512,8,128]{2,1,0} add(%mul.7230, %mul.7231)
  %integer_pow.40 = f32[512,8,128]{2,1,0} multiply(%select_n.2735, %select_n.2735)
  %mul.7232 = f32[512,8,128]{2,1,0} multiply(%integer_pow.40, %broadcast.5197)
  %param.354 = f32[512,8,128]{2,1,0} parameter(611), sharding={devices=[8,1,1]<=[8]}
  %mul.7233 = f32[512,8,128]{2,1,0} multiply(%param.354, %broadcast.5198)
  %add.3429 = f32[512,8,128]{2,1,0} add(%mul.7232, %mul.7233)
  %div.2131 = f32[512,8,128]{2,1,0} divide(%add.3429, %div.2046)
  %sqrt.29 = f32[512,8,128]{2,1,0} sqrt(%div.2131)
  %add.3430 = f32[512,8,128]{2,1,0} add(%sqrt.29, %broadcast.5199)
  %multiply.3215 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3430)
  %div.2132 = f32[512,8,128]{2,1,0} divide(%add.3428, %multiply.3215)
  %mul.7234 = f32[512,8,128]{2,1,0} multiply(%param.100, %broadcast.5195)
  %add.3431 = f32[512,8,128]{2,1,0} add(%div.2132, %mul.7234)
  %mul.7235 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3431)
  %add.3432 = f32[512,8,128]{2,1,0} add(%param.100, %mul.7235)
  %div.2133 = f32[512,14336]{1,0} divide(%convert_element_type.3439, %div.2022)
  %select_n.2736 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3439, %div.2133)
  %mul.7236 = f32[512,14336]{1,0} multiply(%select_n.2736, %broadcast.5185)
  %param.355 = f32[512,14336]{1,0} parameter(321), sharding={devices=[8,1]<=[8]}
  %mul.7237 = f32[512,14336]{1,0} multiply(%param.355, %broadcast.5186)
  %add.3433 = f32[512,14336]{1,0} add(%mul.7236, %mul.7237)
  %integer_pow.41 = f32[512,14336]{1,0} multiply(%select_n.2736, %select_n.2736)
  %mul.7238 = f32[512,14336]{1,0} multiply(%integer_pow.41, %broadcast.5187)
  %param.356 = f32[512,14336]{1,0} parameter(612), sharding={devices=[8,1]<=[8]}
  %mul.7239 = f32[512,14336]{1,0} multiply(%param.356, %broadcast.5188)
  %add.3435 = f32[512,14336]{1,0} add(%mul.7238, %mul.7239)
  %div.2134 = f32[512,14336]{1,0} divide(%add.3435, %div.2025)
  %sqrt.30 = f32[512,14336]{1,0} sqrt(%div.2134)
  %add.3436 = f32[512,14336]{1,0} add(%sqrt.30, %broadcast.5189)
  %multiply.3216 = f32[512,14336]{1,0} multiply(%div.2024, %add.3436)
  %div.2135 = f32[512,14336]{1,0} divide(%add.3433, %multiply.3216)
  %mul.7240 = f32[512,14336]{1,0} multiply(%param.112, %broadcast.5185)
  %add.3437 = f32[512,14336]{1,0} add(%div.2135, %mul.7240)
  %mul.7241 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3437)
  %add.3438 = f32[512,14336]{1,0} add(%param.112, %mul.7241)
  %div.2136 = f32[512,14336]{1,0} divide(%convert_element_type.3440, %div.2022)
  %select_n.2737 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3440, %div.2136)
  %mul.7242 = f32[512,14336]{1,0} multiply(%select_n.2737, %broadcast.5185)
  %param.357 = f32[512,14336]{1,0} parameter(322), sharding={devices=[8,1]<=[8]}
  %mul.7243 = f32[512,14336]{1,0} multiply(%param.357, %broadcast.5186)
  %add.3439 = f32[512,14336]{1,0} add(%mul.7242, %mul.7243)
  %integer_pow.42 = f32[512,14336]{1,0} multiply(%select_n.2737, %select_n.2737)
  %mul.7244 = f32[512,14336]{1,0} multiply(%integer_pow.42, %broadcast.5187)
  %param.358 = f32[512,14336]{1,0} parameter(613), sharding={devices=[8,1]<=[8]}
  %mul.7245 = f32[512,14336]{1,0} multiply(%param.358, %broadcast.5188)
  %add.3440 = f32[512,14336]{1,0} add(%mul.7244, %mul.7245)
  %div.2137 = f32[512,14336]{1,0} divide(%add.3440, %div.2025)
  %sqrt.31 = f32[512,14336]{1,0} sqrt(%div.2137)
  %add.3441 = f32[512,14336]{1,0} add(%sqrt.31, %broadcast.5189)
  %multiply.3217 = f32[512,14336]{1,0} multiply(%div.2024, %add.3441)
  %div.2138 = f32[512,14336]{1,0} divide(%add.3439, %multiply.3217)
  %mul.7246 = f32[512,14336]{1,0} multiply(%param.113, %broadcast.5185)
  %add.3442 = f32[512,14336]{1,0} add(%div.2138, %mul.7246)
  %mul.7251 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3442)
  %add.3443 = f32[512,14336]{1,0} add(%param.113, %mul.7251)
  %div.2139 = f32[14336,512]{1,0} divide(%convert_element_type.3441, %div.2031)
  %select_n.2738 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3441, %div.2139)
  %mul.7252 = f32[14336,512]{1,0} multiply(%select_n.2738, %broadcast.5190)
  %param.359 = f32[14336,512]{1,0} parameter(323), sharding={devices=[1,8]<=[8]}
  %mul.7253 = f32[14336,512]{1,0} multiply(%param.359, %broadcast.5191)
  %add.3444 = f32[14336,512]{1,0} add(%mul.7252, %mul.7253)
  %integer_pow.43 = f32[14336,512]{1,0} multiply(%select_n.2738, %select_n.2738)
  %mul.7258 = f32[14336,512]{1,0} multiply(%integer_pow.43, %broadcast.5192)
  %param.360 = f32[14336,512]{1,0} parameter(614), sharding={devices=[1,8]<=[8]}
  %mul.7259 = f32[14336,512]{1,0} multiply(%param.360, %broadcast.5193)
  %add.3446 = f32[14336,512]{1,0} add(%mul.7258, %mul.7259)
  %div.2140 = f32[14336,512]{1,0} divide(%add.3446, %div.2034)
  %sqrt.32 = f32[14336,512]{1,0} sqrt(%div.2140)
  %add.3447 = f32[14336,512]{1,0} add(%sqrt.32, %broadcast.5194)
  %multiply.3218 = f32[14336,512]{1,0} multiply(%div.2033, %add.3447)
  %div.2141 = f32[14336,512]{1,0} divide(%add.3444, %multiply.3218)
  %mul.7260 = f32[14336,512]{1,0} multiply(%param.114, %broadcast.5190)
  %add.3449 = f32[14336,512]{1,0} add(%div.2141, %mul.7260)
  %mul.7261 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3449)
  %add.3450 = f32[14336,512]{1,0} add(%param.114, %mul.7261)
  %div.2142 = f32[4096]{0} divide(%convert_element_type.3443, %div.2008)
  %select_n.2739 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3443, %div.2142)
  %mul.7262 = f32[4096]{0} multiply(%select_n.2739, %broadcast.5180)
  %param.361 = f32[4096]{0} parameter(324), sharding={replicated}
  %mul.7263 = f32[4096]{0} multiply(%param.361, %broadcast.5181)
  %add.3451 = f32[4096]{0} add(%mul.7262, %mul.7263)
  %integer_pow.44 = f32[4096]{0} multiply(%select_n.2739, %select_n.2739)
  %mul.7264 = f32[4096]{0} multiply(%integer_pow.44, %broadcast.5182)
  %param.362 = f32[4096]{0} parameter(615), sharding={replicated}
  %mul.7265 = f32[4096]{0} multiply(%param.362, %broadcast.5183)
  %add.3452 = f32[4096]{0} add(%mul.7264, %mul.7265)
  %div.2143 = f32[4096]{0} divide(%add.3452, %div.2012)
  %sqrt.33 = f32[4096]{0} sqrt(%div.2143)
  %add.3453 = f32[4096]{0} add(%sqrt.33, %broadcast.5184)
  %multiply.3219 = f32[4096]{0} multiply(%div.2010, %add.3453)
  %div.2144 = f32[4096]{0} divide(%add.3451, %multiply.3219)
  %mul.7267 = f32[4096]{0} multiply(%param.111, %broadcast.5180)
  %add.3454 = f32[4096]{0} add(%div.2144, %mul.7267)
  %mul.7268 = f32[4096]{0} multiply(%mul.1626, %add.3454)
  %add.3455 = f32[4096]{0} add(%param.111, %mul.7268)
  %div.2145 = f32[4096]{0} divide(%convert_element_type.3445, %div.2008)
  %select_n.2740 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3445, %div.2145)
  %mul.7269 = f32[4096]{0} multiply(%select_n.2740, %broadcast.5180)
  %param.363 = f32[4096]{0} parameter(325), sharding={replicated}
  %mul.7270 = f32[4096]{0} multiply(%param.363, %broadcast.5181)
  %add.3456 = f32[4096]{0} add(%mul.7269, %mul.7270)
  %integer_pow.45 = f32[4096]{0} multiply(%select_n.2740, %select_n.2740)
  %mul.7271 = f32[4096]{0} multiply(%integer_pow.45, %broadcast.5182)
  %param.364 = f32[4096]{0} parameter(616), sharding={replicated}
  %mul.7272 = f32[4096]{0} multiply(%param.364, %broadcast.5183)
  %add.3457 = f32[4096]{0} add(%mul.7271, %mul.7272)
  %div.2146 = f32[4096]{0} divide(%add.3457, %div.2012)
  %sqrt.34 = f32[4096]{0} sqrt(%div.2146)
  %add.3458 = f32[4096]{0} add(%sqrt.34, %broadcast.5184)
  %multiply.3220 = f32[4096]{0} multiply(%div.2010, %add.3458)
  %div.2147 = f32[4096]{0} divide(%add.3456, %multiply.3220)
  %mul.7273 = f32[4096]{0} multiply(%param.106, %broadcast.5180)
  %add.3459 = f32[4096]{0} add(%div.2147, %mul.7273)
  %mul.7274 = f32[4096]{0} multiply(%mul.1626, %add.3459)
  %add.3460 = f32[4096]{0} add(%param.106, %mul.7274)
  %div.2148 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3447, %div.2043)
  %select_n.2741 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3447, %div.2148)
  %mul.7275 = f32[512,8,128]{2,1,0} multiply(%select_n.2741, %broadcast.5195)
  %param.365 = f32[512,8,128]{2,1,0} parameter(326), sharding={devices=[8,1,1]<=[8]}
  %mul.7276 = f32[512,8,128]{2,1,0} multiply(%param.365, %broadcast.5196)
  %add.3461 = f32[512,8,128]{2,1,0} add(%mul.7275, %mul.7276)
  %integer_pow.46 = f32[512,8,128]{2,1,0} multiply(%select_n.2741, %select_n.2741)
  %mul.7277 = f32[512,8,128]{2,1,0} multiply(%integer_pow.46, %broadcast.5197)
  %param.366 = f32[512,8,128]{2,1,0} parameter(617), sharding={devices=[8,1,1]<=[8]}
  %mul.7278 = f32[512,8,128]{2,1,0} multiply(%param.366, %broadcast.5198)
  %add.3462 = f32[512,8,128]{2,1,0} add(%mul.7277, %mul.7278)
  %div.2149 = f32[512,8,128]{2,1,0} divide(%add.3462, %div.2046)
  %sqrt.35 = f32[512,8,128]{2,1,0} sqrt(%div.2149)
  %add.3463 = f32[512,8,128]{2,1,0} add(%sqrt.35, %broadcast.5199)
  %multiply.3221 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3463)
  %div.2150 = f32[512,8,128]{2,1,0} divide(%add.3461, %multiply.3221)
  %mul.7279 = f32[512,8,128]{2,1,0} multiply(%param.108, %broadcast.5195)
  %add.3464 = f32[512,8,128]{2,1,0} add(%div.2150, %mul.7279)
  %mul.7280 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3464)
  %add.3465 = f32[512,8,128]{2,1,0} add(%param.108, %mul.7280)
  %div.2151 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3451, %div.2049)
  %select_n.2742 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3451, %div.2151)
  %mul.7281 = f32[32,128,512]{2,1,0} multiply(%select_n.2742, %broadcast.5200)
  %param.367 = f32[32,128,512]{2,1,0} parameter(327), sharding={devices=[1,1,8]<=[8]}
  %mul.7282 = f32[32,128,512]{2,1,0} multiply(%param.367, %broadcast.5201)
  %add.3466 = f32[32,128,512]{2,1,0} add(%mul.7281, %mul.7282)
  %integer_pow.47 = f32[32,128,512]{2,1,0} multiply(%select_n.2742, %select_n.2742)
  %mul.7283 = f32[32,128,512]{2,1,0} multiply(%integer_pow.47, %broadcast.5202)
  %param.368 = f32[32,128,512]{2,1,0} parameter(618), sharding={devices=[1,1,8]<=[8]}
  %mul.7284 = f32[32,128,512]{2,1,0} multiply(%param.368, %broadcast.5203)
  %add.3467 = f32[32,128,512]{2,1,0} add(%mul.7283, %mul.7284)
  %div.2152 = f32[32,128,512]{2,1,0} divide(%add.3467, %div.2052)
  %sqrt.36 = f32[32,128,512]{2,1,0} sqrt(%div.2152)
  %add.3468 = f32[32,128,512]{2,1,0} add(%sqrt.36, %broadcast.5204)
  %multiply.3222 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3468)
  %div.2153 = f32[32,128,512]{2,1,0} divide(%add.3466, %multiply.3222)
  %mul.7289 = f32[32,128,512]{2,1,0} multiply(%param.110, %broadcast.5200)
  %add.3469 = f32[32,128,512]{2,1,0} add(%div.2153, %mul.7289)
  %mul.7290 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3469)
  %add.3470 = f32[32,128,512]{2,1,0} add(%param.110, %mul.7290)
  %div.2154 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3453, %div.2055)
  %select_n.2743 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3453, %div.2154)
  %mul.7296 = f32[512,32,128]{2,1,0} multiply(%select_n.2743, %broadcast.5205)
  %param.369 = f32[512,32,128]{2,1,0} parameter(328), sharding={devices=[8,1,1]<=[8]}
  %mul.7297 = f32[512,32,128]{2,1,0} multiply(%param.369, %broadcast.5206)
  %add.3471 = f32[512,32,128]{2,1,0} add(%mul.7296, %mul.7297)
  %integer_pow.48 = f32[512,32,128]{2,1,0} multiply(%select_n.2743, %select_n.2743)
  %mul.7298 = f32[512,32,128]{2,1,0} multiply(%integer_pow.48, %broadcast.5207)
  %param.370 = f32[512,32,128]{2,1,0} parameter(619), sharding={devices=[8,1,1]<=[8]}
  %mul.7299 = f32[512,32,128]{2,1,0} multiply(%param.370, %broadcast.5208)
  %add.3472 = f32[512,32,128]{2,1,0} add(%mul.7298, %mul.7299)
  %div.2155 = f32[512,32,128]{2,1,0} divide(%add.3472, %div.2058)
  %sqrt.37 = f32[512,32,128]{2,1,0} sqrt(%div.2155)
  %add.3473 = f32[512,32,128]{2,1,0} add(%sqrt.37, %broadcast.5209)
  %multiply.3223 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3473)
  %div.2156 = f32[512,32,128]{2,1,0} divide(%add.3471, %multiply.3223)
  %mul.7300 = f32[512,32,128]{2,1,0} multiply(%param.107, %broadcast.5205)
  %add.3474 = f32[512,32,128]{2,1,0} add(%div.2156, %mul.7300)
  %mul.7302 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3474)
  %add.3475 = f32[512,32,128]{2,1,0} add(%param.107, %mul.7302)
  %div.2157 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3456, %div.2043)
  %select_n.2744 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3456, %div.2157)
  %mul.7303 = f32[512,8,128]{2,1,0} multiply(%select_n.2744, %broadcast.5195)
  %param.371 = f32[512,8,128]{2,1,0} parameter(329), sharding={devices=[8,1,1]<=[8]}
  %mul.7304 = f32[512,8,128]{2,1,0} multiply(%param.371, %broadcast.5196)
  %add.3476 = f32[512,8,128]{2,1,0} add(%mul.7303, %mul.7304)
  %integer_pow.49 = f32[512,8,128]{2,1,0} multiply(%select_n.2744, %select_n.2744)
  %mul.7306 = f32[512,8,128]{2,1,0} multiply(%integer_pow.49, %broadcast.5197)
  %param.372 = f32[512,8,128]{2,1,0} parameter(620), sharding={devices=[8,1,1]<=[8]}
  %mul.7307 = f32[512,8,128]{2,1,0} multiply(%param.372, %broadcast.5198)
  %add.3477 = f32[512,8,128]{2,1,0} add(%mul.7306, %mul.7307)
  %div.2158 = f32[512,8,128]{2,1,0} divide(%add.3477, %div.2046)
  %sqrt.38 = f32[512,8,128]{2,1,0} sqrt(%div.2158)
  %add.3478 = f32[512,8,128]{2,1,0} add(%sqrt.38, %broadcast.5199)
  %multiply.3224 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3478)
  %div.2159 = f32[512,8,128]{2,1,0} divide(%add.3476, %multiply.3224)
  %mul.7308 = f32[512,8,128]{2,1,0} multiply(%param.109, %broadcast.5195)
  %add.3479 = f32[512,8,128]{2,1,0} add(%div.2159, %mul.7308)
  %mul.7309 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3479)
  %add.3480 = f32[512,8,128]{2,1,0} add(%param.109, %mul.7309)
  %div.2160 = f32[512,14336]{1,0} divide(%convert_element_type.3460, %div.2022)
  %select_n.2745 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3460, %div.2160)
  %mul.7310 = f32[512,14336]{1,0} multiply(%select_n.2745, %broadcast.5185)
  %param.373 = f32[512,14336]{1,0} parameter(330), sharding={devices=[8,1]<=[8]}
  %mul.7311 = f32[512,14336]{1,0} multiply(%param.373, %broadcast.5186)
  %add.3481 = f32[512,14336]{1,0} add(%mul.7310, %mul.7311)
  %integer_pow.50 = f32[512,14336]{1,0} multiply(%select_n.2745, %select_n.2745)
  %mul.7312 = f32[512,14336]{1,0} multiply(%integer_pow.50, %broadcast.5187)
  %param.374 = f32[512,14336]{1,0} parameter(621), sharding={devices=[8,1]<=[8]}
  %mul.7313 = f32[512,14336]{1,0} multiply(%param.374, %broadcast.5188)
  %add.3482 = f32[512,14336]{1,0} add(%mul.7312, %mul.7313)
  %div.2161 = f32[512,14336]{1,0} divide(%add.3482, %div.2025)
  %sqrt.39 = f32[512,14336]{1,0} sqrt(%div.2161)
  %add.3483 = f32[512,14336]{1,0} add(%sqrt.39, %broadcast.5189)
  %multiply.3225 = f32[512,14336]{1,0} multiply(%div.2024, %add.3483)
  %div.2162 = f32[512,14336]{1,0} divide(%add.3481, %multiply.3225)
  %mul.7314 = f32[512,14336]{1,0} multiply(%param.121, %broadcast.5185)
  %add.3484 = f32[512,14336]{1,0} add(%div.2162, %mul.7314)
  %mul.7315 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3484)
  %add.3487 = f32[512,14336]{1,0} add(%param.121, %mul.7315)
  %div.2163 = f32[512,14336]{1,0} divide(%convert_element_type.3461, %div.2022)
  %select_n.2746 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3461, %div.2163)
  %mul.7316 = f32[512,14336]{1,0} multiply(%select_n.2746, %broadcast.5185)
  %param.375 = f32[512,14336]{1,0} parameter(331), sharding={devices=[8,1]<=[8]}
  %mul.7317 = f32[512,14336]{1,0} multiply(%param.375, %broadcast.5186)
  %add.3488 = f32[512,14336]{1,0} add(%mul.7316, %mul.7317)
  %integer_pow.51 = f32[512,14336]{1,0} multiply(%select_n.2746, %select_n.2746)
  %mul.7318 = f32[512,14336]{1,0} multiply(%integer_pow.51, %broadcast.5187)
  %param.376 = f32[512,14336]{1,0} parameter(622), sharding={devices=[8,1]<=[8]}
  %mul.7319 = f32[512,14336]{1,0} multiply(%param.376, %broadcast.5188)
  %add.3489 = f32[512,14336]{1,0} add(%mul.7318, %mul.7319)
  %div.2164 = f32[512,14336]{1,0} divide(%add.3489, %div.2025)
  %sqrt.40 = f32[512,14336]{1,0} sqrt(%div.2164)
  %add.3490 = f32[512,14336]{1,0} add(%sqrt.40, %broadcast.5189)
  %multiply.3226 = f32[512,14336]{1,0} multiply(%div.2024, %add.3490)
  %div.2165 = f32[512,14336]{1,0} divide(%add.3488, %multiply.3226)
  %mul.7320 = f32[512,14336]{1,0} multiply(%param.122, %broadcast.5185)
  %add.3491 = f32[512,14336]{1,0} add(%div.2165, %mul.7320)
  %mul.7321 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3491)
  %add.3492 = f32[512,14336]{1,0} add(%param.122, %mul.7321)
  %div.2166 = f32[14336,512]{1,0} divide(%convert_element_type.3462, %div.2031)
  %select_n.2747 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3462, %div.2166)
  %mul.7322 = f32[14336,512]{1,0} multiply(%select_n.2747, %broadcast.5190)
  %param.377 = f32[14336,512]{1,0} parameter(332), sharding={devices=[1,8]<=[8]}
  %mul.7326 = f32[14336,512]{1,0} multiply(%param.377, %broadcast.5191)
  %add.3493 = f32[14336,512]{1,0} add(%mul.7322, %mul.7326)
  %integer_pow.52 = f32[14336,512]{1,0} multiply(%select_n.2747, %select_n.2747)
  %mul.7329 = f32[14336,512]{1,0} multiply(%integer_pow.52, %broadcast.5192)
  %param.378 = f32[14336,512]{1,0} parameter(623), sharding={devices=[1,8]<=[8]}
  %mul.7330 = f32[14336,512]{1,0} multiply(%param.378, %broadcast.5193)
  %add.3494 = f32[14336,512]{1,0} add(%mul.7329, %mul.7330)
  %div.2167 = f32[14336,512]{1,0} divide(%add.3494, %div.2034)
  %sqrt.41 = f32[14336,512]{1,0} sqrt(%div.2167)
  %add.3495 = f32[14336,512]{1,0} add(%sqrt.41, %broadcast.5194)
  %multiply.3227 = f32[14336,512]{1,0} multiply(%div.2033, %add.3495)
  %div.2168 = f32[14336,512]{1,0} divide(%add.3493, %multiply.3227)
  %mul.7331 = f32[14336,512]{1,0} multiply(%param.123, %broadcast.5190)
  %add.3496 = f32[14336,512]{1,0} add(%div.2168, %mul.7331)
  %mul.7332 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3496)
  %add.3497 = f32[14336,512]{1,0} add(%param.123, %mul.7332)
  %div.2169 = f32[4096]{0} divide(%convert_element_type.3464, %div.2008)
  %select_n.2748 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3464, %div.2169)
  %mul.7333 = f32[4096]{0} multiply(%select_n.2748, %broadcast.5180)
  %param.379 = f32[4096]{0} parameter(333), sharding={replicated}
  %mul.7334 = f32[4096]{0} multiply(%param.379, %broadcast.5181)
  %add.3498 = f32[4096]{0} add(%mul.7333, %mul.7334)
  %integer_pow.53 = f32[4096]{0} multiply(%select_n.2748, %select_n.2748)
  %mul.7335 = f32[4096]{0} multiply(%integer_pow.53, %broadcast.5182)
  %param.380 = f32[4096]{0} parameter(624), sharding={replicated}
  %mul.7336 = f32[4096]{0} multiply(%param.380, %broadcast.5183)
  %add.3499 = f32[4096]{0} add(%mul.7335, %mul.7336)
  %div.2170 = f32[4096]{0} divide(%add.3499, %div.2012)
  %sqrt.42 = f32[4096]{0} sqrt(%div.2170)
  %add.3500 = f32[4096]{0} add(%sqrt.42, %broadcast.5184)
  %multiply.3228 = f32[4096]{0} multiply(%div.2010, %add.3500)
  %div.2171 = f32[4096]{0} divide(%add.3498, %multiply.3228)
  %mul.7337 = f32[4096]{0} multiply(%param.120, %broadcast.5180)
  %add.3501 = f32[4096]{0} add(%div.2171, %mul.7337)
  %mul.7339 = f32[4096]{0} multiply(%mul.1626, %add.3501)
  %add.3502 = f32[4096]{0} add(%param.120, %mul.7339)
  %div.2172 = f32[4096]{0} divide(%convert_element_type.3466, %div.2008)
  %select_n.2749 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3466, %div.2172)
  %mul.7340 = f32[4096]{0} multiply(%select_n.2749, %broadcast.5180)
  %param.381 = f32[4096]{0} parameter(334), sharding={replicated}
  %mul.7342 = f32[4096]{0} multiply(%param.381, %broadcast.5181)
  %add.3503 = f32[4096]{0} add(%mul.7340, %mul.7342)
  %integer_pow.54 = f32[4096]{0} multiply(%select_n.2749, %select_n.2749)
  %mul.7344 = f32[4096]{0} multiply(%integer_pow.54, %broadcast.5182)
  %param.382 = f32[4096]{0} parameter(625), sharding={replicated}
  %mul.7345 = f32[4096]{0} multiply(%param.382, %broadcast.5183)
  %add.3504 = f32[4096]{0} add(%mul.7344, %mul.7345)
  %div.2173 = f32[4096]{0} divide(%add.3504, %div.2012)
  %sqrt.43 = f32[4096]{0} sqrt(%div.2173)
  %add.3505 = f32[4096]{0} add(%sqrt.43, %broadcast.5184)
  %multiply.3229 = f32[4096]{0} multiply(%div.2010, %add.3505)
  %div.2174 = f32[4096]{0} divide(%add.3503, %multiply.3229)
  %mul.7346 = f32[4096]{0} multiply(%param.115, %broadcast.5180)
  %add.3506 = f32[4096]{0} add(%div.2174, %mul.7346)
  %mul.7347 = f32[4096]{0} multiply(%mul.1626, %add.3506)
  %add.3507 = f32[4096]{0} add(%param.115, %mul.7347)
  %div.2175 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3469, %div.2043)
  %select_n.2750 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3469, %div.2175)
  %mul.7348 = f32[512,8,128]{2,1,0} multiply(%select_n.2750, %broadcast.5195)
  %param.383 = f32[512,8,128]{2,1,0} parameter(335), sharding={devices=[8,1,1]<=[8]}
  %mul.7349 = f32[512,8,128]{2,1,0} multiply(%param.383, %broadcast.5196)
  %add.3508 = f32[512,8,128]{2,1,0} add(%mul.7348, %mul.7349)
  %integer_pow.55 = f32[512,8,128]{2,1,0} multiply(%select_n.2750, %select_n.2750)
  %mul.7350 = f32[512,8,128]{2,1,0} multiply(%integer_pow.55, %broadcast.5197)
  %param.384 = f32[512,8,128]{2,1,0} parameter(626), sharding={devices=[8,1,1]<=[8]}
  %mul.7351 = f32[512,8,128]{2,1,0} multiply(%param.384, %broadcast.5198)
  %add.3509 = f32[512,8,128]{2,1,0} add(%mul.7350, %mul.7351)
  %div.2176 = f32[512,8,128]{2,1,0} divide(%add.3509, %div.2046)
  %sqrt.44 = f32[512,8,128]{2,1,0} sqrt(%div.2176)
  %add.3510 = f32[512,8,128]{2,1,0} add(%sqrt.44, %broadcast.5199)
  %multiply.3230 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3510)
  %div.2177 = f32[512,8,128]{2,1,0} divide(%add.3508, %multiply.3230)
  %mul.7352 = f32[512,8,128]{2,1,0} multiply(%param.117, %broadcast.5195)
  %add.3511 = f32[512,8,128]{2,1,0} add(%div.2177, %mul.7352)
  %mul.7353 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3511)
  %add.3512 = f32[512,8,128]{2,1,0} add(%param.117, %mul.7353)
  %div.2178 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3472, %div.2049)
  %select_n.2751 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3472, %div.2178)
  %mul.7354 = f32[32,128,512]{2,1,0} multiply(%select_n.2751, %broadcast.5200)
  %param.385 = f32[32,128,512]{2,1,0} parameter(336), sharding={devices=[1,1,8]<=[8]}
  %mul.7355 = f32[32,128,512]{2,1,0} multiply(%param.385, %broadcast.5201)
  %add.3513 = f32[32,128,512]{2,1,0} add(%mul.7354, %mul.7355)
  %integer_pow.56 = f32[32,128,512]{2,1,0} multiply(%select_n.2751, %select_n.2751)
  %mul.7356 = f32[32,128,512]{2,1,0} multiply(%integer_pow.56, %broadcast.5202)
  %param.386 = f32[32,128,512]{2,1,0} parameter(627), sharding={devices=[1,1,8]<=[8]}
  %mul.7357 = f32[32,128,512]{2,1,0} multiply(%param.386, %broadcast.5203)
  %add.3514 = f32[32,128,512]{2,1,0} add(%mul.7356, %mul.7357)
  %div.2179 = f32[32,128,512]{2,1,0} divide(%add.3514, %div.2052)
  %sqrt.45 = f32[32,128,512]{2,1,0} sqrt(%div.2179)
  %add.3516 = f32[32,128,512]{2,1,0} add(%sqrt.45, %broadcast.5204)
  %multiply.3231 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3516)
  %div.2180 = f32[32,128,512]{2,1,0} divide(%add.3513, %multiply.3231)
  %mul.7359 = f32[32,128,512]{2,1,0} multiply(%param.119, %broadcast.5200)
  %add.3517 = f32[32,128,512]{2,1,0} add(%div.2180, %mul.7359)
  %mul.7361 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3517)
  %add.3518 = f32[32,128,512]{2,1,0} add(%param.119, %mul.7361)
  %div.2181 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3475, %div.2055)
  %select_n.2752 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3475, %div.2181)
  %mul.7362 = f32[512,32,128]{2,1,0} multiply(%select_n.2752, %broadcast.5205)
  %param.387 = f32[512,32,128]{2,1,0} parameter(337), sharding={devices=[8,1,1]<=[8]}
  %mul.7363 = f32[512,32,128]{2,1,0} multiply(%param.387, %broadcast.5206)
  %add.3519 = f32[512,32,128]{2,1,0} add(%mul.7362, %mul.7363)
  %integer_pow.57 = f32[512,32,128]{2,1,0} multiply(%select_n.2752, %select_n.2752)
  %mul.7364 = f32[512,32,128]{2,1,0} multiply(%integer_pow.57, %broadcast.5207)
  %param.388 = f32[512,32,128]{2,1,0} parameter(628), sharding={devices=[8,1,1]<=[8]}
  %mul.7365 = f32[512,32,128]{2,1,0} multiply(%param.388, %broadcast.5208)
  %add.3520 = f32[512,32,128]{2,1,0} add(%mul.7364, %mul.7365)
  %div.2182 = f32[512,32,128]{2,1,0} divide(%add.3520, %div.2058)
  %sqrt.46 = f32[512,32,128]{2,1,0} sqrt(%div.2182)
  %add.3521 = f32[512,32,128]{2,1,0} add(%sqrt.46, %broadcast.5209)
  %multiply.3232 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3521)
  %div.2183 = f32[512,32,128]{2,1,0} divide(%add.3519, %multiply.3232)
  %mul.7366 = f32[512,32,128]{2,1,0} multiply(%param.116, %broadcast.5205)
  %add.3522 = f32[512,32,128]{2,1,0} add(%div.2183, %mul.7366)
  %mul.7376 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3522)
  %add.3523 = f32[512,32,128]{2,1,0} add(%param.116, %mul.7376)
  %div.2184 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3479, %div.2043)
  %select_n.2753 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3479, %div.2184)
  %mul.7377 = f32[512,8,128]{2,1,0} multiply(%select_n.2753, %broadcast.5195)
  %param.389 = f32[512,8,128]{2,1,0} parameter(338), sharding={devices=[8,1,1]<=[8]}
  %mul.7382 = f32[512,8,128]{2,1,0} multiply(%param.389, %broadcast.5196)
  %add.3525 = f32[512,8,128]{2,1,0} add(%mul.7377, %mul.7382)
  %integer_pow.58 = f32[512,8,128]{2,1,0} multiply(%select_n.2753, %select_n.2753)
  %mul.7386 = f32[512,8,128]{2,1,0} multiply(%integer_pow.58, %broadcast.5197)
  %param.390 = f32[512,8,128]{2,1,0} parameter(629), sharding={devices=[8,1,1]<=[8]}
  %mul.7387 = f32[512,8,128]{2,1,0} multiply(%param.390, %broadcast.5198)
  %add.3526 = f32[512,8,128]{2,1,0} add(%mul.7386, %mul.7387)
  %div.2185 = f32[512,8,128]{2,1,0} divide(%add.3526, %div.2046)
  %sqrt.47 = f32[512,8,128]{2,1,0} sqrt(%div.2185)
  %add.3527 = f32[512,8,128]{2,1,0} add(%sqrt.47, %broadcast.5199)
  %multiply.3233 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3527)
  %div.2187 = f32[512,8,128]{2,1,0} divide(%add.3525, %multiply.3233)
  %mul.7388 = f32[512,8,128]{2,1,0} multiply(%param.118, %broadcast.5195)
  %add.3528 = f32[512,8,128]{2,1,0} add(%div.2187, %mul.7388)
  %mul.7391 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3528)
  %add.3529 = f32[512,8,128]{2,1,0} add(%param.118, %mul.7391)
  %div.2188 = f32[512,14336]{1,0} divide(%convert_element_type.3481, %div.2022)
  %select_n.2754 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3481, %div.2188)
  %mul.7392 = f32[512,14336]{1,0} multiply(%select_n.2754, %broadcast.5185)
  %param.391 = f32[512,14336]{1,0} parameter(339), sharding={devices=[8,1]<=[8]}
  %mul.7393 = f32[512,14336]{1,0} multiply(%param.391, %broadcast.5186)
  %add.3530 = f32[512,14336]{1,0} add(%mul.7392, %mul.7393)
  %integer_pow.59 = f32[512,14336]{1,0} multiply(%select_n.2754, %select_n.2754)
  %mul.7394 = f32[512,14336]{1,0} multiply(%integer_pow.59, %broadcast.5187)
  %param.392 = f32[512,14336]{1,0} parameter(630), sharding={devices=[8,1]<=[8]}
  %mul.7395 = f32[512,14336]{1,0} multiply(%param.392, %broadcast.5188)
  %add.3531 = f32[512,14336]{1,0} add(%mul.7394, %mul.7395)
  %div.2189 = f32[512,14336]{1,0} divide(%add.3531, %div.2025)
  %sqrt.48 = f32[512,14336]{1,0} sqrt(%div.2189)
  %add.3532 = f32[512,14336]{1,0} add(%sqrt.48, %broadcast.5189)
  %multiply.3234 = f32[512,14336]{1,0} multiply(%div.2024, %add.3532)
  %div.2190 = f32[512,14336]{1,0} divide(%add.3530, %multiply.3234)
  %mul.7396 = f32[512,14336]{1,0} multiply(%param.130, %broadcast.5185)
  %add.3533 = f32[512,14336]{1,0} add(%div.2190, %mul.7396)
  %mul.7397 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3533)
  %add.3534 = f32[512,14336]{1,0} add(%param.130, %mul.7397)
  %div.2191 = f32[512,14336]{1,0} divide(%convert_element_type.3482, %div.2022)
  %select_n.2755 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3482, %div.2191)
  %mul.7398 = f32[512,14336]{1,0} multiply(%select_n.2755, %broadcast.5185)
  %param.393 = f32[512,14336]{1,0} parameter(340), sharding={devices=[8,1]<=[8]}
  %mul.7399 = f32[512,14336]{1,0} multiply(%param.393, %broadcast.5186)
  %add.3535 = f32[512,14336]{1,0} add(%mul.7398, %mul.7399)
  %integer_pow.60 = f32[512,14336]{1,0} multiply(%select_n.2755, %select_n.2755)
  %mul.7400 = f32[512,14336]{1,0} multiply(%integer_pow.60, %broadcast.5187)
  %param.394 = f32[512,14336]{1,0} parameter(631), sharding={devices=[8,1]<=[8]}
  %mul.7403 = f32[512,14336]{1,0} multiply(%param.394, %broadcast.5188)
  %add.3536 = f32[512,14336]{1,0} add(%mul.7400, %mul.7403)
  %div.2192 = f32[512,14336]{1,0} divide(%add.3536, %div.2025)
  %sqrt.49 = f32[512,14336]{1,0} sqrt(%div.2192)
  %add.3537 = f32[512,14336]{1,0} add(%sqrt.49, %broadcast.5189)
  %multiply.3235 = f32[512,14336]{1,0} multiply(%div.2024, %add.3537)
  %div.2193 = f32[512,14336]{1,0} divide(%add.3535, %multiply.3235)
  %mul.7404 = f32[512,14336]{1,0} multiply(%param.131, %broadcast.5185)
  %add.3538 = f32[512,14336]{1,0} add(%div.2193, %mul.7404)
  %mul.7405 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3538)
  %add.3539 = f32[512,14336]{1,0} add(%param.131, %mul.7405)
  %div.2194 = f32[14336,512]{1,0} divide(%convert_element_type.3483, %div.2031)
  %select_n.2756 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3483, %div.2194)
  %mul.7406 = f32[14336,512]{1,0} multiply(%select_n.2756, %broadcast.5190)
  %param.395 = f32[14336,512]{1,0} parameter(341), sharding={devices=[1,8]<=[8]}
  %mul.7407 = f32[14336,512]{1,0} multiply(%param.395, %broadcast.5191)
  %add.3540 = f32[14336,512]{1,0} add(%mul.7406, %mul.7407)
  %integer_pow.61 = f32[14336,512]{1,0} multiply(%select_n.2756, %select_n.2756)
  %mul.7408 = f32[14336,512]{1,0} multiply(%integer_pow.61, %broadcast.5192)
  %param.396 = f32[14336,512]{1,0} parameter(632), sharding={devices=[1,8]<=[8]}
  %mul.7409 = f32[14336,512]{1,0} multiply(%param.396, %broadcast.5193)
  %add.3541 = f32[14336,512]{1,0} add(%mul.7408, %mul.7409)
  %div.2195 = f32[14336,512]{1,0} divide(%add.3541, %div.2034)
  %sqrt.50 = f32[14336,512]{1,0} sqrt(%div.2195)
  %add.3542 = f32[14336,512]{1,0} add(%sqrt.50, %broadcast.5194)
  %multiply.3236 = f32[14336,512]{1,0} multiply(%div.2033, %add.3542)
  %div.2196 = f32[14336,512]{1,0} divide(%add.3540, %multiply.3236)
  %mul.7410 = f32[14336,512]{1,0} multiply(%param.132, %broadcast.5190)
  %add.3543 = f32[14336,512]{1,0} add(%div.2196, %mul.7410)
  %mul.7411 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3543)
  %add.3544 = f32[14336,512]{1,0} add(%param.132, %mul.7411)
  %div.2197 = f32[4096]{0} divide(%convert_element_type.3484, %div.2008)
  %select_n.2757 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3484, %div.2197)
  %mul.7412 = f32[4096]{0} multiply(%select_n.2757, %broadcast.5180)
  %param.397 = f32[4096]{0} parameter(342), sharding={replicated}
  %mul.7413 = f32[4096]{0} multiply(%param.397, %broadcast.5181)
  %add.3545 = f32[4096]{0} add(%mul.7412, %mul.7413)
  %integer_pow.62 = f32[4096]{0} multiply(%select_n.2757, %select_n.2757)
  %mul.7414 = f32[4096]{0} multiply(%integer_pow.62, %broadcast.5182)
  %param.398 = f32[4096]{0} parameter(633), sharding={replicated}
  %mul.7415 = f32[4096]{0} multiply(%param.398, %broadcast.5183)
  %add.3546 = f32[4096]{0} add(%mul.7414, %mul.7415)
  %div.2198 = f32[4096]{0} divide(%add.3546, %div.2012)
  %sqrt.51 = f32[4096]{0} sqrt(%div.2198)
  %add.3547 = f32[4096]{0} add(%sqrt.51, %broadcast.5184)
  %multiply.3237 = f32[4096]{0} multiply(%div.2010, %add.3547)
  %div.2199 = f32[4096]{0} divide(%add.3545, %multiply.3237)
  %mul.7416 = f32[4096]{0} multiply(%param.129, %broadcast.5180)
  %add.3548 = f32[4096]{0} add(%div.2199, %mul.7416)
  %mul.7418 = f32[4096]{0} multiply(%mul.1626, %add.3548)
  %add.3550 = f32[4096]{0} add(%param.129, %mul.7418)
  %div.2200 = f32[4096]{0} divide(%convert_element_type.3486, %div.2008)
  %select_n.2758 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3486, %div.2200)
  %mul.7420 = f32[4096]{0} multiply(%select_n.2758, %broadcast.5180)
  %param.399 = f32[4096]{0} parameter(343), sharding={replicated}
  %mul.7421 = f32[4096]{0} multiply(%param.399, %broadcast.5181)
  %add.3551 = f32[4096]{0} add(%mul.7420, %mul.7421)
  %integer_pow.63 = f32[4096]{0} multiply(%select_n.2758, %select_n.2758)
  %mul.7423 = f32[4096]{0} multiply(%integer_pow.63, %broadcast.5182)
  %param.400 = f32[4096]{0} parameter(634), sharding={replicated}
  %mul.7425 = f32[4096]{0} multiply(%param.400, %broadcast.5183)
  %add.3552 = f32[4096]{0} add(%mul.7423, %mul.7425)
  %div.2201 = f32[4096]{0} divide(%add.3552, %div.2012)
  %sqrt.52 = f32[4096]{0} sqrt(%div.2201)
  %add.3553 = f32[4096]{0} add(%sqrt.52, %broadcast.5184)
  %multiply.3238 = f32[4096]{0} multiply(%div.2010, %add.3553)
  %div.2202 = f32[4096]{0} divide(%add.3551, %multiply.3238)
  %mul.7426 = f32[4096]{0} multiply(%param.124, %broadcast.5180)
  %add.3554 = f32[4096]{0} add(%div.2202, %mul.7426)
  %mul.7427 = f32[4096]{0} multiply(%mul.1626, %add.3554)
  %add.3555 = f32[4096]{0} add(%param.124, %mul.7427)
  %div.2203 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3488, %div.2043)
  %select_n.2759 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3488, %div.2203)
  %mul.7428 = f32[512,8,128]{2,1,0} multiply(%select_n.2759, %broadcast.5195)
  %param.401 = f32[512,8,128]{2,1,0} parameter(344), sharding={devices=[8,1,1]<=[8]}
  %mul.7429 = f32[512,8,128]{2,1,0} multiply(%param.401, %broadcast.5196)
  %add.3556 = f32[512,8,128]{2,1,0} add(%mul.7428, %mul.7429)
  %integer_pow.64 = f32[512,8,128]{2,1,0} multiply(%select_n.2759, %select_n.2759)
  %mul.7430 = f32[512,8,128]{2,1,0} multiply(%integer_pow.64, %broadcast.5197)
  %param.402 = f32[512,8,128]{2,1,0} parameter(635), sharding={devices=[8,1,1]<=[8]}
  %mul.7431 = f32[512,8,128]{2,1,0} multiply(%param.402, %broadcast.5198)
  %add.3557 = f32[512,8,128]{2,1,0} add(%mul.7430, %mul.7431)
  %div.2204 = f32[512,8,128]{2,1,0} divide(%add.3557, %div.2046)
  %sqrt.53 = f32[512,8,128]{2,1,0} sqrt(%div.2204)
  %add.3558 = f32[512,8,128]{2,1,0} add(%sqrt.53, %broadcast.5199)
  %multiply.3239 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3558)
  %div.2205 = f32[512,8,128]{2,1,0} divide(%add.3556, %multiply.3239)
  %mul.7432 = f32[512,8,128]{2,1,0} multiply(%param.126, %broadcast.5195)
  %add.3559 = f32[512,8,128]{2,1,0} add(%div.2205, %mul.7432)
  %mul.7436 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3559)
  %add.3560 = f32[512,8,128]{2,1,0} add(%param.126, %mul.7436)
  %div.2206 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3490, %div.2049)
  %select_n.2760 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3490, %div.2206)
  %mul.7437 = f32[32,128,512]{2,1,0} multiply(%select_n.2760, %broadcast.5200)
  %param.403 = f32[32,128,512]{2,1,0} parameter(345), sharding={devices=[1,1,8]<=[8]}
  %mul.7438 = f32[32,128,512]{2,1,0} multiply(%param.403, %broadcast.5201)
  %add.3561 = f32[32,128,512]{2,1,0} add(%mul.7437, %mul.7438)
  %integer_pow.65 = f32[32,128,512]{2,1,0} multiply(%select_n.2760, %select_n.2760)
  %mul.7439 = f32[32,128,512]{2,1,0} multiply(%integer_pow.65, %broadcast.5202)
  %param.404 = f32[32,128,512]{2,1,0} parameter(636), sharding={devices=[1,1,8]<=[8]}
  %mul.7440 = f32[32,128,512]{2,1,0} multiply(%param.404, %broadcast.5203)
  %add.3562 = f32[32,128,512]{2,1,0} add(%mul.7439, %mul.7440)
  %div.2207 = f32[32,128,512]{2,1,0} divide(%add.3562, %div.2052)
  %sqrt.54 = f32[32,128,512]{2,1,0} sqrt(%div.2207)
  %add.3563 = f32[32,128,512]{2,1,0} add(%sqrt.54, %broadcast.5204)
  %multiply.3240 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3563)
  %div.2208 = f32[32,128,512]{2,1,0} divide(%add.3561, %multiply.3240)
  %mul.7441 = f32[32,128,512]{2,1,0} multiply(%param.128, %broadcast.5200)
  %add.3564 = f32[32,128,512]{2,1,0} add(%div.2208, %mul.7441)
  %mul.7442 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3564)
  %add.3565 = f32[32,128,512]{2,1,0} add(%param.128, %mul.7442)
  %div.2209 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3492, %div.2055)
  %select_n.2761 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3492, %div.2209)
  %mul.7452 = f32[512,32,128]{2,1,0} multiply(%select_n.2761, %broadcast.5205)
  %param.405 = f32[512,32,128]{2,1,0} parameter(346), sharding={devices=[8,1,1]<=[8]}
  %mul.7458 = f32[512,32,128]{2,1,0} multiply(%param.405, %broadcast.5206)
  %add.3566 = f32[512,32,128]{2,1,0} add(%mul.7452, %mul.7458)
  %integer_pow.66 = f32[512,32,128]{2,1,0} multiply(%select_n.2761, %select_n.2761)
  %mul.7459 = f32[512,32,128]{2,1,0} multiply(%integer_pow.66, %broadcast.5207)
  %param.406 = f32[512,32,128]{2,1,0} parameter(637), sharding={devices=[8,1,1]<=[8]}
  %mul.7460 = f32[512,32,128]{2,1,0} multiply(%param.406, %broadcast.5208)
  %add.3567 = f32[512,32,128]{2,1,0} add(%mul.7459, %mul.7460)
  %div.2210 = f32[512,32,128]{2,1,0} divide(%add.3567, %div.2058)
  %sqrt.55 = f32[512,32,128]{2,1,0} sqrt(%div.2210)
  %add.3568 = f32[512,32,128]{2,1,0} add(%sqrt.55, %broadcast.5209)
  %multiply.3241 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3568)
  %div.2211 = f32[512,32,128]{2,1,0} divide(%add.3566, %multiply.3241)
  %mul.7461 = f32[512,32,128]{2,1,0} multiply(%param.125, %broadcast.5205)
  %add.3569 = f32[512,32,128]{2,1,0} add(%div.2211, %mul.7461)
  %mul.7462 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3569)
  %add.3570 = f32[512,32,128]{2,1,0} add(%param.125, %mul.7462)
  %div.2212 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3495, %div.2043)
  %select_n.2762 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3495, %div.2212)
  %mul.7463 = f32[512,8,128]{2,1,0} multiply(%select_n.2762, %broadcast.5195)
  %param.407 = f32[512,8,128]{2,1,0} parameter(347), sharding={devices=[8,1,1]<=[8]}
  %mul.7464 = f32[512,8,128]{2,1,0} multiply(%param.407, %broadcast.5196)
  %add.3571 = f32[512,8,128]{2,1,0} add(%mul.7463, %mul.7464)
  %integer_pow.67 = f32[512,8,128]{2,1,0} multiply(%select_n.2762, %select_n.2762)
  %mul.7465 = f32[512,8,128]{2,1,0} multiply(%integer_pow.67, %broadcast.5197)
  %param.408 = f32[512,8,128]{2,1,0} parameter(638), sharding={devices=[8,1,1]<=[8]}
  %mul.7466 = f32[512,8,128]{2,1,0} multiply(%param.408, %broadcast.5198)
  %add.3572 = f32[512,8,128]{2,1,0} add(%mul.7465, %mul.7466)
  %div.2213 = f32[512,8,128]{2,1,0} divide(%add.3572, %div.2046)
  %sqrt.56 = f32[512,8,128]{2,1,0} sqrt(%div.2213)
  %add.3573 = f32[512,8,128]{2,1,0} add(%sqrt.56, %broadcast.5199)
  %multiply.3242 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3573)
  %div.2214 = f32[512,8,128]{2,1,0} divide(%add.3571, %multiply.3242)
  %mul.7467 = f32[512,8,128]{2,1,0} multiply(%param.127, %broadcast.5195)
  %add.3574 = f32[512,8,128]{2,1,0} add(%div.2214, %mul.7467)
  %mul.7468 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3574)
  %add.3575 = f32[512,8,128]{2,1,0} add(%param.127, %mul.7468)
  %div.2215 = f32[512,14336]{1,0} divide(%convert_element_type.3497, %div.2022)
  %select_n.2763 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3497, %div.2215)
  %mul.7469 = f32[512,14336]{1,0} multiply(%select_n.2763, %broadcast.5185)
  %param.409 = f32[512,14336]{1,0} parameter(348), sharding={devices=[8,1]<=[8]}
  %mul.7470 = f32[512,14336]{1,0} multiply(%param.409, %broadcast.5186)
  %add.3576 = f32[512,14336]{1,0} add(%mul.7469, %mul.7470)
  %integer_pow.68 = f32[512,14336]{1,0} multiply(%select_n.2763, %select_n.2763)
  %mul.7471 = f32[512,14336]{1,0} multiply(%integer_pow.68, %broadcast.5187)
  %param.410 = f32[512,14336]{1,0} parameter(639), sharding={devices=[8,1]<=[8]}
  %mul.7472 = f32[512,14336]{1,0} multiply(%param.410, %broadcast.5188)
  %add.3577 = f32[512,14336]{1,0} add(%mul.7471, %mul.7472)
  %div.2216 = f32[512,14336]{1,0} divide(%add.3577, %div.2025)
  %sqrt.57 = f32[512,14336]{1,0} sqrt(%div.2216)
  %add.3578 = f32[512,14336]{1,0} add(%sqrt.57, %broadcast.5189)
  %multiply.3243 = f32[512,14336]{1,0} multiply(%div.2024, %add.3578)
  %div.2217 = f32[512,14336]{1,0} divide(%add.3576, %multiply.3243)
  %mul.7473 = f32[512,14336]{1,0} multiply(%param.139, %broadcast.5185)
  %add.3580 = f32[512,14336]{1,0} add(%div.2217, %mul.7473)
  %mul.7474 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3580)
  %add.3581 = f32[512,14336]{1,0} add(%param.139, %mul.7474)
  %div.2218 = f32[512,14336]{1,0} divide(%convert_element_type.3498, %div.2022)
  %select_n.2764 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3498, %div.2218)
  %mul.7475 = f32[512,14336]{1,0} multiply(%select_n.2764, %broadcast.5185)
  %param.411 = f32[512,14336]{1,0} parameter(349), sharding={devices=[8,1]<=[8]}
  %mul.7476 = f32[512,14336]{1,0} multiply(%param.411, %broadcast.5186)
  %add.3583 = f32[512,14336]{1,0} add(%mul.7475, %mul.7476)
  %integer_pow.69 = f32[512,14336]{1,0} multiply(%select_n.2764, %select_n.2764)
  %mul.7477 = f32[512,14336]{1,0} multiply(%integer_pow.69, %broadcast.5187)
  %param.412 = f32[512,14336]{1,0} parameter(640), sharding={devices=[8,1]<=[8]}
  %mul.7478 = f32[512,14336]{1,0} multiply(%param.412, %broadcast.5188)
  %add.3584 = f32[512,14336]{1,0} add(%mul.7477, %mul.7478)
  %div.2219 = f32[512,14336]{1,0} divide(%add.3584, %div.2025)
  %sqrt.58 = f32[512,14336]{1,0} sqrt(%div.2219)
  %add.3585 = f32[512,14336]{1,0} add(%sqrt.58, %broadcast.5189)
  %multiply.3244 = f32[512,14336]{1,0} multiply(%div.2024, %add.3585)
  %div.2220 = f32[512,14336]{1,0} divide(%add.3583, %multiply.3244)
  %mul.7479 = f32[512,14336]{1,0} multiply(%param.140, %broadcast.5185)
  %add.3586 = f32[512,14336]{1,0} add(%div.2220, %mul.7479)
  %mul.7480 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3586)
  %add.3587 = f32[512,14336]{1,0} add(%param.140, %mul.7480)
  %div.2221 = f32[14336,512]{1,0} divide(%convert_element_type.3499, %div.2031)
  %select_n.2765 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3499, %div.2221)
  %mul.7481 = f32[14336,512]{1,0} multiply(%select_n.2765, %broadcast.5190)
  %param.413 = f32[14336,512]{1,0} parameter(350), sharding={devices=[1,8]<=[8]}
  %mul.7482 = f32[14336,512]{1,0} multiply(%param.413, %broadcast.5191)
  %add.3588 = f32[14336,512]{1,0} add(%mul.7481, %mul.7482)
  %integer_pow.70 = f32[14336,512]{1,0} multiply(%select_n.2765, %select_n.2765)
  %mul.7483 = f32[14336,512]{1,0} multiply(%integer_pow.70, %broadcast.5192)
  %param.414 = f32[14336,512]{1,0} parameter(641), sharding={devices=[1,8]<=[8]}
  %mul.7484 = f32[14336,512]{1,0} multiply(%param.414, %broadcast.5193)
  %add.3589 = f32[14336,512]{1,0} add(%mul.7483, %mul.7484)
  %div.2222 = f32[14336,512]{1,0} divide(%add.3589, %div.2034)
  %sqrt.59 = f32[14336,512]{1,0} sqrt(%div.2222)
  %add.3590 = f32[14336,512]{1,0} add(%sqrt.59, %broadcast.5194)
  %multiply.3245 = f32[14336,512]{1,0} multiply(%div.2033, %add.3590)
  %div.2223 = f32[14336,512]{1,0} divide(%add.3588, %multiply.3245)
  %mul.7485 = f32[14336,512]{1,0} multiply(%param.141, %broadcast.5190)
  %add.3591 = f32[14336,512]{1,0} add(%div.2223, %mul.7485)
  %mul.7486 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3591)
  %add.3593 = f32[14336,512]{1,0} add(%param.141, %mul.7486)
  %div.2225 = f32[4096]{0} divide(%convert_element_type.3500, %div.2008)
  %select_n.2766 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3500, %div.2225)
  %mul.7487 = f32[4096]{0} multiply(%select_n.2766, %broadcast.5180)
  %param.415 = f32[4096]{0} parameter(351), sharding={replicated}
  %mul.7488 = f32[4096]{0} multiply(%param.415, %broadcast.5181)
  %add.3594 = f32[4096]{0} add(%mul.7487, %mul.7488)
  %integer_pow.71 = f32[4096]{0} multiply(%select_n.2766, %select_n.2766)
  %mul.7489 = f32[4096]{0} multiply(%integer_pow.71, %broadcast.5182)
  %param.416 = f32[4096]{0} parameter(642), sharding={replicated}
  %mul.7490 = f32[4096]{0} multiply(%param.416, %broadcast.5183)
  %add.3595 = f32[4096]{0} add(%mul.7489, %mul.7490)
  %div.2226 = f32[4096]{0} divide(%add.3595, %div.2012)
  %sqrt.60 = f32[4096]{0} sqrt(%div.2226)
  %add.3596 = f32[4096]{0} add(%sqrt.60, %broadcast.5184)
  %multiply.3246 = f32[4096]{0} multiply(%div.2010, %add.3596)
  %div.2227 = f32[4096]{0} divide(%add.3594, %multiply.3246)
  %mul.7491 = f32[4096]{0} multiply(%param.138, %broadcast.5180)
  %add.3597 = f32[4096]{0} add(%div.2227, %mul.7491)
  %mul.7492 = f32[4096]{0} multiply(%mul.1626, %add.3597)
  %add.3598 = f32[4096]{0} add(%param.138, %mul.7492)
  %div.2228 = f32[4096]{0} divide(%convert_element_type.3502, %div.2008)
  %select_n.2768 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3502, %div.2228)
  %mul.7493 = f32[4096]{0} multiply(%select_n.2768, %broadcast.5180)
  %param.417 = f32[4096]{0} parameter(352), sharding={replicated}
  %mul.7494 = f32[4096]{0} multiply(%param.417, %broadcast.5181)
  %add.3599 = f32[4096]{0} add(%mul.7493, %mul.7494)
  %integer_pow.72 = f32[4096]{0} multiply(%select_n.2768, %select_n.2768)
  %mul.7495 = f32[4096]{0} multiply(%integer_pow.72, %broadcast.5182)
  %param.418 = f32[4096]{0} parameter(643), sharding={replicated}
  %mul.7496 = f32[4096]{0} multiply(%param.418, %broadcast.5183)
  %add.3600 = f32[4096]{0} add(%mul.7495, %mul.7496)
  %div.2229 = f32[4096]{0} divide(%add.3600, %div.2012)
  %sqrt.61 = f32[4096]{0} sqrt(%div.2229)
  %add.3601 = f32[4096]{0} add(%sqrt.61, %broadcast.5184)
  %multiply.3247 = f32[4096]{0} multiply(%div.2010, %add.3601)
  %div.2230 = f32[4096]{0} divide(%add.3599, %multiply.3247)
  %mul.7497 = f32[4096]{0} multiply(%param.133, %broadcast.5180)
  %add.3602 = f32[4096]{0} add(%div.2230, %mul.7497)
  %mul.7498 = f32[4096]{0} multiply(%mul.1626, %add.3602)
  %add.3603 = f32[4096]{0} add(%param.133, %mul.7498)
  %div.2231 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3504, %div.2043)
  %select_n.2769 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3504, %div.2231)
  %mul.7499 = f32[512,8,128]{2,1,0} multiply(%select_n.2769, %broadcast.5195)
  %param.419 = f32[512,8,128]{2,1,0} parameter(353), sharding={devices=[8,1,1]<=[8]}
  %mul.7500 = f32[512,8,128]{2,1,0} multiply(%param.419, %broadcast.5196)
  %add.3604 = f32[512,8,128]{2,1,0} add(%mul.7499, %mul.7500)
  %integer_pow.73 = f32[512,8,128]{2,1,0} multiply(%select_n.2769, %select_n.2769)
  %mul.7501 = f32[512,8,128]{2,1,0} multiply(%integer_pow.73, %broadcast.5197)
  %param.420 = f32[512,8,128]{2,1,0} parameter(644), sharding={devices=[8,1,1]<=[8]}
  %mul.7502 = f32[512,8,128]{2,1,0} multiply(%param.420, %broadcast.5198)
  %add.3605 = f32[512,8,128]{2,1,0} add(%mul.7501, %mul.7502)
  %div.2232 = f32[512,8,128]{2,1,0} divide(%add.3605, %div.2046)
  %sqrt.62 = f32[512,8,128]{2,1,0} sqrt(%div.2232)
  %add.3606 = f32[512,8,128]{2,1,0} add(%sqrt.62, %broadcast.5199)
  %multiply.3248 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3606)
  %div.2233 = f32[512,8,128]{2,1,0} divide(%add.3604, %multiply.3248)
  %mul.7503 = f32[512,8,128]{2,1,0} multiply(%param.135, %broadcast.5195)
  %add.3607 = f32[512,8,128]{2,1,0} add(%div.2233, %mul.7503)
  %mul.7504 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3607)
  %add.3608 = f32[512,8,128]{2,1,0} add(%param.135, %mul.7504)
  %div.2234 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3507, %div.2049)
  %select_n.2770 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3507, %div.2234)
  %mul.7505 = f32[32,128,512]{2,1,0} multiply(%select_n.2770, %broadcast.5200)
  %param.421 = f32[32,128,512]{2,1,0} parameter(354), sharding={devices=[1,1,8]<=[8]}
  %mul.7506 = f32[32,128,512]{2,1,0} multiply(%param.421, %broadcast.5201)
  %add.3609 = f32[32,128,512]{2,1,0} add(%mul.7505, %mul.7506)
  %integer_pow.74 = f32[32,128,512]{2,1,0} multiply(%select_n.2770, %select_n.2770)
  %mul.7507 = f32[32,128,512]{2,1,0} multiply(%integer_pow.74, %broadcast.5202)
  %param.422 = f32[32,128,512]{2,1,0} parameter(645), sharding={devices=[1,1,8]<=[8]}
  %mul.7508 = f32[32,128,512]{2,1,0} multiply(%param.422, %broadcast.5203)
  %add.3610 = f32[32,128,512]{2,1,0} add(%mul.7507, %mul.7508)
  %div.2235 = f32[32,128,512]{2,1,0} divide(%add.3610, %div.2052)
  %sqrt.63 = f32[32,128,512]{2,1,0} sqrt(%div.2235)
  %add.3611 = f32[32,128,512]{2,1,0} add(%sqrt.63, %broadcast.5204)
  %multiply.3250 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3611)
  %div.2236 = f32[32,128,512]{2,1,0} divide(%add.3609, %multiply.3250)
  %mul.7509 = f32[32,128,512]{2,1,0} multiply(%param.137, %broadcast.5200)
  %add.3612 = f32[32,128,512]{2,1,0} add(%div.2236, %mul.7509)
  %mul.7510 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3612)
  %add.3613 = f32[32,128,512]{2,1,0} add(%param.137, %mul.7510)
  %div.2237 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3510, %div.2055)
  %select_n.2771 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3510, %div.2237)
  %mul.7511 = f32[512,32,128]{2,1,0} multiply(%select_n.2771, %broadcast.5205)
  %param.423 = f32[512,32,128]{2,1,0} parameter(355), sharding={devices=[8,1,1]<=[8]}
  %mul.7512 = f32[512,32,128]{2,1,0} multiply(%param.423, %broadcast.5206)
  %add.3614 = f32[512,32,128]{2,1,0} add(%mul.7511, %mul.7512)
  %integer_pow.75 = f32[512,32,128]{2,1,0} multiply(%select_n.2771, %select_n.2771)
  %mul.7513 = f32[512,32,128]{2,1,0} multiply(%integer_pow.75, %broadcast.5207)
  %param.424 = f32[512,32,128]{2,1,0} parameter(646), sharding={devices=[8,1,1]<=[8]}
  %mul.7514 = f32[512,32,128]{2,1,0} multiply(%param.424, %broadcast.5208)
  %add.3615 = f32[512,32,128]{2,1,0} add(%mul.7513, %mul.7514)
  %div.2238 = f32[512,32,128]{2,1,0} divide(%add.3615, %div.2058)
  %sqrt.64 = f32[512,32,128]{2,1,0} sqrt(%div.2238)
  %add.3616 = f32[512,32,128]{2,1,0} add(%sqrt.64, %broadcast.5209)
  %multiply.3251 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3616)
  %div.2239 = f32[512,32,128]{2,1,0} divide(%add.3614, %multiply.3251)
  %mul.7517 = f32[512,32,128]{2,1,0} multiply(%param.134, %broadcast.5205)
  %add.3617 = f32[512,32,128]{2,1,0} add(%div.2239, %mul.7517)
  %mul.7518 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3617)
  %add.3619 = f32[512,32,128]{2,1,0} add(%param.134, %mul.7518)
  %div.2240 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3514, %div.2043)
  %select_n.2773 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3514, %div.2240)
  %mul.7521 = f32[512,8,128]{2,1,0} multiply(%select_n.2773, %broadcast.5195)
  %param.425 = f32[512,8,128]{2,1,0} parameter(356), sharding={devices=[8,1,1]<=[8]}
  %mul.7522 = f32[512,8,128]{2,1,0} multiply(%param.425, %broadcast.5196)
  %add.3620 = f32[512,8,128]{2,1,0} add(%mul.7521, %mul.7522)
  %integer_pow.76 = f32[512,8,128]{2,1,0} multiply(%select_n.2773, %select_n.2773)
  %mul.7523 = f32[512,8,128]{2,1,0} multiply(%integer_pow.76, %broadcast.5197)
  %param.426 = f32[512,8,128]{2,1,0} parameter(647), sharding={devices=[8,1,1]<=[8]}
  %mul.7524 = f32[512,8,128]{2,1,0} multiply(%param.426, %broadcast.5198)
  %add.3621 = f32[512,8,128]{2,1,0} add(%mul.7523, %mul.7524)
  %div.2241 = f32[512,8,128]{2,1,0} divide(%add.3621, %div.2046)
  %sqrt.65 = f32[512,8,128]{2,1,0} sqrt(%div.2241)
  %add.3622 = f32[512,8,128]{2,1,0} add(%sqrt.65, %broadcast.5199)
  %multiply.3252 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3622)
  %div.2242 = f32[512,8,128]{2,1,0} divide(%add.3620, %multiply.3252)
  %mul.7525 = f32[512,8,128]{2,1,0} multiply(%param.136, %broadcast.5195)
  %add.3623 = f32[512,8,128]{2,1,0} add(%div.2242, %mul.7525)
  %mul.7526 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3623)
  %add.3624 = f32[512,8,128]{2,1,0} add(%param.136, %mul.7526)
  %div.2243 = f32[512,14336]{1,0} divide(%convert_element_type.3517, %div.2022)
  %select_n.2774 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3517, %div.2243)
  %mul.7527 = f32[512,14336]{1,0} multiply(%select_n.2774, %broadcast.5185)
  %param.427 = f32[512,14336]{1,0} parameter(357), sharding={devices=[8,1]<=[8]}
  %mul.7532 = f32[512,14336]{1,0} multiply(%param.427, %broadcast.5186)
  %add.3625 = f32[512,14336]{1,0} add(%mul.7527, %mul.7532)
  %integer_pow.77 = f32[512,14336]{1,0} multiply(%select_n.2774, %select_n.2774)
  %mul.7534 = f32[512,14336]{1,0} multiply(%integer_pow.77, %broadcast.5187)
  %param.428 = f32[512,14336]{1,0} parameter(648), sharding={devices=[8,1]<=[8]}
  %mul.7539 = f32[512,14336]{1,0} multiply(%param.428, %broadcast.5188)
  %add.3626 = f32[512,14336]{1,0} add(%mul.7534, %mul.7539)
  %div.2244 = f32[512,14336]{1,0} divide(%add.3626, %div.2025)
  %sqrt.66 = f32[512,14336]{1,0} sqrt(%div.2244)
  %add.3627 = f32[512,14336]{1,0} add(%sqrt.66, %broadcast.5189)
  %multiply.3253 = f32[512,14336]{1,0} multiply(%div.2024, %add.3627)
  %div.2245 = f32[512,14336]{1,0} divide(%add.3625, %multiply.3253)
  %mul.7540 = f32[512,14336]{1,0} multiply(%param.148, %broadcast.5185)
  %add.3629 = f32[512,14336]{1,0} add(%div.2245, %mul.7540)
  %mul.7541 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3629)
  %add.3631 = f32[512,14336]{1,0} add(%param.148, %mul.7541)
  %div.2246 = f32[512,14336]{1,0} divide(%convert_element_type.3520, %div.2022)
  %select_n.2775 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3520, %div.2246)
  %mul.7542 = f32[512,14336]{1,0} multiply(%select_n.2775, %broadcast.5185)
  %param.429 = f32[512,14336]{1,0} parameter(358), sharding={devices=[8,1]<=[8]}
  %mul.7543 = f32[512,14336]{1,0} multiply(%param.429, %broadcast.5186)
  %add.3632 = f32[512,14336]{1,0} add(%mul.7542, %mul.7543)
  %integer_pow.78 = f32[512,14336]{1,0} multiply(%select_n.2775, %select_n.2775)
  %mul.7544 = f32[512,14336]{1,0} multiply(%integer_pow.78, %broadcast.5187)
  %param.430 = f32[512,14336]{1,0} parameter(649), sharding={devices=[8,1]<=[8]}
  %mul.7545 = f32[512,14336]{1,0} multiply(%param.430, %broadcast.5188)
  %add.3633 = f32[512,14336]{1,0} add(%mul.7544, %mul.7545)
  %div.2247 = f32[512,14336]{1,0} divide(%add.3633, %div.2025)
  %sqrt.67 = f32[512,14336]{1,0} sqrt(%div.2247)
  %add.3634 = f32[512,14336]{1,0} add(%sqrt.67, %broadcast.5189)
  %multiply.3254 = f32[512,14336]{1,0} multiply(%div.2024, %add.3634)
  %div.2248 = f32[512,14336]{1,0} divide(%add.3632, %multiply.3254)
  %mul.7546 = f32[512,14336]{1,0} multiply(%param.149, %broadcast.5185)
  %add.3635 = f32[512,14336]{1,0} add(%div.2248, %mul.7546)
  %mul.7548 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3635)
  %add.3636 = f32[512,14336]{1,0} add(%param.149, %mul.7548)
  %div.2249 = f32[14336,512]{1,0} divide(%convert_element_type.3521, %div.2031)
  %select_n.2776 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3521, %div.2249)
  %mul.7549 = f32[14336,512]{1,0} multiply(%select_n.2776, %broadcast.5190)
  %param.431 = f32[14336,512]{1,0} parameter(359), sharding={devices=[1,8]<=[8]}
  %mul.7550 = f32[14336,512]{1,0} multiply(%param.431, %broadcast.5191)
  %add.3638 = f32[14336,512]{1,0} add(%mul.7549, %mul.7550)
  %integer_pow.79 = f32[14336,512]{1,0} multiply(%select_n.2776, %select_n.2776)
  %mul.7553 = f32[14336,512]{1,0} multiply(%integer_pow.79, %broadcast.5192)
  %param.432 = f32[14336,512]{1,0} parameter(650), sharding={devices=[1,8]<=[8]}
  %mul.7554 = f32[14336,512]{1,0} multiply(%param.432, %broadcast.5193)
  %add.3639 = f32[14336,512]{1,0} add(%mul.7553, %mul.7554)
  %div.2250 = f32[14336,512]{1,0} divide(%add.3639, %div.2034)
  %sqrt.68 = f32[14336,512]{1,0} sqrt(%div.2250)
  %add.3640 = f32[14336,512]{1,0} add(%sqrt.68, %broadcast.5194)
  %multiply.3255 = f32[14336,512]{1,0} multiply(%div.2033, %add.3640)
  %div.2251 = f32[14336,512]{1,0} divide(%add.3638, %multiply.3255)
  %mul.7557 = f32[14336,512]{1,0} multiply(%param.150, %broadcast.5190)
  %add.3641 = f32[14336,512]{1,0} add(%div.2251, %mul.7557)
  %mul.7558 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3641)
  %add.3642 = f32[14336,512]{1,0} add(%param.150, %mul.7558)
  %div.2252 = f32[4096]{0} divide(%convert_element_type.3524, %div.2008)
  %select_n.2777 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3524, %div.2252)
  %mul.7559 = f32[4096]{0} multiply(%select_n.2777, %broadcast.5180)
  %param.433 = f32[4096]{0} parameter(360), sharding={replicated}
  %mul.7560 = f32[4096]{0} multiply(%param.433, %broadcast.5181)
  %add.3643 = f32[4096]{0} add(%mul.7559, %mul.7560)
  %integer_pow.80 = f32[4096]{0} multiply(%select_n.2777, %select_n.2777)
  %mul.7561 = f32[4096]{0} multiply(%integer_pow.80, %broadcast.5182)
  %param.434 = f32[4096]{0} parameter(651), sharding={replicated}
  %mul.7562 = f32[4096]{0} multiply(%param.434, %broadcast.5183)
  %add.3644 = f32[4096]{0} add(%mul.7561, %mul.7562)
  %div.2253 = f32[4096]{0} divide(%add.3644, %div.2012)
  %sqrt.69 = f32[4096]{0} sqrt(%div.2253)
  %add.3645 = f32[4096]{0} add(%sqrt.69, %broadcast.5184)
  %multiply.3256 = f32[4096]{0} multiply(%div.2010, %add.3645)
  %div.2254 = f32[4096]{0} divide(%add.3643, %multiply.3256)
  %mul.7563 = f32[4096]{0} multiply(%param.147, %broadcast.5180)
  %add.3646 = f32[4096]{0} add(%div.2254, %mul.7563)
  %mul.7564 = f32[4096]{0} multiply(%mul.1626, %add.3646)
  %add.3647 = f32[4096]{0} add(%param.147, %mul.7564)
  %div.2255 = f32[4096]{0} divide(%convert_element_type.3528, %div.2008)
  %select_n.2778 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3528, %div.2255)
  %mul.7565 = f32[4096]{0} multiply(%select_n.2778, %broadcast.5180)
  %param.435 = f32[4096]{0} parameter(361), sharding={replicated}
  %mul.7570 = f32[4096]{0} multiply(%param.435, %broadcast.5181)
  %add.3648 = f32[4096]{0} add(%mul.7565, %mul.7570)
  %integer_pow.81 = f32[4096]{0} multiply(%select_n.2778, %select_n.2778)
  %mul.7571 = f32[4096]{0} multiply(%integer_pow.81, %broadcast.5182)
  %param.436 = f32[4096]{0} parameter(652), sharding={replicated}
  %mul.7572 = f32[4096]{0} multiply(%param.436, %broadcast.5183)
  %add.3649 = f32[4096]{0} add(%mul.7571, %mul.7572)
  %div.2256 = f32[4096]{0} divide(%add.3649, %div.2012)
  %sqrt.70 = f32[4096]{0} sqrt(%div.2256)
  %add.3650 = f32[4096]{0} add(%sqrt.70, %broadcast.5184)
  %multiply.3257 = f32[4096]{0} multiply(%div.2010, %add.3650)
  %div.2257 = f32[4096]{0} divide(%add.3648, %multiply.3257)
  %mul.7577 = f32[4096]{0} multiply(%param.142, %broadcast.5180)
  %add.3652 = f32[4096]{0} add(%div.2257, %mul.7577)
  %mul.7578 = f32[4096]{0} multiply(%mul.1626, %add.3652)
  %add.3653 = f32[4096]{0} add(%param.142, %mul.7578)
  %div.2258 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3530, %div.2043)
  %select_n.2779 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3530, %div.2258)
  %mul.7579 = f32[512,8,128]{2,1,0} multiply(%select_n.2779, %broadcast.5195)
  %param.437 = f32[512,8,128]{2,1,0} parameter(362), sharding={devices=[8,1,1]<=[8]}
  %mul.7580 = f32[512,8,128]{2,1,0} multiply(%param.437, %broadcast.5196)
  %add.3654 = f32[512,8,128]{2,1,0} add(%mul.7579, %mul.7580)
  %integer_pow.82 = f32[512,8,128]{2,1,0} multiply(%select_n.2779, %select_n.2779)
  %mul.7581 = f32[512,8,128]{2,1,0} multiply(%integer_pow.82, %broadcast.5197)
  %param.438 = f32[512,8,128]{2,1,0} parameter(653), sharding={devices=[8,1,1]<=[8]}
  %mul.7582 = f32[512,8,128]{2,1,0} multiply(%param.438, %broadcast.5198)
  %add.3655 = f32[512,8,128]{2,1,0} add(%mul.7581, %mul.7582)
  %div.2259 = f32[512,8,128]{2,1,0} divide(%add.3655, %div.2046)
  %sqrt.71 = f32[512,8,128]{2,1,0} sqrt(%div.2259)
  %add.3656 = f32[512,8,128]{2,1,0} add(%sqrt.71, %broadcast.5199)
  %multiply.3258 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3656)
  %div.2260 = f32[512,8,128]{2,1,0} divide(%add.3654, %multiply.3258)
  %mul.7583 = f32[512,8,128]{2,1,0} multiply(%param.144, %broadcast.5195)
  %add.3657 = f32[512,8,128]{2,1,0} add(%div.2260, %mul.7583)
  %mul.7584 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3657)
  %add.3658 = f32[512,8,128]{2,1,0} add(%param.144, %mul.7584)
  %div.2261 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3532, %div.2049)
  %select_n.2780 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3532, %div.2261)
  %mul.7585 = f32[32,128,512]{2,1,0} multiply(%select_n.2780, %broadcast.5200)
  %param.439 = f32[32,128,512]{2,1,0} parameter(363), sharding={devices=[1,1,8]<=[8]}
  %mul.7587 = f32[32,128,512]{2,1,0} multiply(%param.439, %broadcast.5201)
  %add.3659 = f32[32,128,512]{2,1,0} add(%mul.7585, %mul.7587)
  %integer_pow.83 = f32[32,128,512]{2,1,0} multiply(%select_n.2780, %select_n.2780)
  %mul.7589 = f32[32,128,512]{2,1,0} multiply(%integer_pow.83, %broadcast.5202)
  %param.440 = f32[32,128,512]{2,1,0} parameter(654), sharding={devices=[1,1,8]<=[8]}
  %mul.7590 = f32[32,128,512]{2,1,0} multiply(%param.440, %broadcast.5203)
  %add.3660 = f32[32,128,512]{2,1,0} add(%mul.7589, %mul.7590)
  %div.2262 = f32[32,128,512]{2,1,0} divide(%add.3660, %div.2052)
  %sqrt.72 = f32[32,128,512]{2,1,0} sqrt(%div.2262)
  %add.3661 = f32[32,128,512]{2,1,0} add(%sqrt.72, %broadcast.5204)
  %multiply.3259 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3661)
  %div.2263 = f32[32,128,512]{2,1,0} divide(%add.3659, %multiply.3259)
  %mul.7591 = f32[32,128,512]{2,1,0} multiply(%param.146, %broadcast.5200)
  %add.3663 = f32[32,128,512]{2,1,0} add(%div.2263, %mul.7591)
  %mul.7592 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3663)
  %add.3664 = f32[32,128,512]{2,1,0} add(%param.146, %mul.7592)
  %div.2264 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3535, %div.2055)
  %select_n.2781 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3535, %div.2264)
  %mul.7593 = f32[512,32,128]{2,1,0} multiply(%select_n.2781, %broadcast.5205)
  %param.441 = f32[512,32,128]{2,1,0} parameter(364), sharding={devices=[8,1,1]<=[8]}
  %mul.7594 = f32[512,32,128]{2,1,0} multiply(%param.441, %broadcast.5206)
  %add.3665 = f32[512,32,128]{2,1,0} add(%mul.7593, %mul.7594)
  %integer_pow.84 = f32[512,32,128]{2,1,0} multiply(%select_n.2781, %select_n.2781)
  %mul.7595 = f32[512,32,128]{2,1,0} multiply(%integer_pow.84, %broadcast.5207)
  %param.442 = f32[512,32,128]{2,1,0} parameter(655), sharding={devices=[8,1,1]<=[8]}
  %mul.7596 = f32[512,32,128]{2,1,0} multiply(%param.442, %broadcast.5208)
  %add.3666 = f32[512,32,128]{2,1,0} add(%mul.7595, %mul.7596)
  %div.2265 = f32[512,32,128]{2,1,0} divide(%add.3666, %div.2058)
  %sqrt.73 = f32[512,32,128]{2,1,0} sqrt(%div.2265)
  %add.3667 = f32[512,32,128]{2,1,0} add(%sqrt.73, %broadcast.5209)
  %multiply.3260 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3667)
  %div.2266 = f32[512,32,128]{2,1,0} divide(%add.3665, %multiply.3260)
  %mul.7600 = f32[512,32,128]{2,1,0} multiply(%param.143, %broadcast.5205)
  %add.3668 = f32[512,32,128]{2,1,0} add(%div.2266, %mul.7600)
  %mul.7601 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3668)
  %add.3669 = f32[512,32,128]{2,1,0} add(%param.143, %mul.7601)
  %div.2267 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3538, %div.2043)
  %select_n.2782 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3538, %div.2267)
  %mul.7602 = f32[512,8,128]{2,1,0} multiply(%select_n.2782, %broadcast.5195)
  %param.443 = f32[512,8,128]{2,1,0} parameter(365), sharding={devices=[8,1,1]<=[8]}
  %mul.7603 = f32[512,8,128]{2,1,0} multiply(%param.443, %broadcast.5196)
  %add.3670 = f32[512,8,128]{2,1,0} add(%mul.7602, %mul.7603)
  %integer_pow.85 = f32[512,8,128]{2,1,0} multiply(%select_n.2782, %select_n.2782)
  %mul.7604 = f32[512,8,128]{2,1,0} multiply(%integer_pow.85, %broadcast.5197)
  %param.444 = f32[512,8,128]{2,1,0} parameter(656), sharding={devices=[8,1,1]<=[8]}
  %mul.7605 = f32[512,8,128]{2,1,0} multiply(%param.444, %broadcast.5198)
  %add.3671 = f32[512,8,128]{2,1,0} add(%mul.7604, %mul.7605)
  %div.2268 = f32[512,8,128]{2,1,0} divide(%add.3671, %div.2046)
  %sqrt.74 = f32[512,8,128]{2,1,0} sqrt(%div.2268)
  %add.3672 = f32[512,8,128]{2,1,0} add(%sqrt.74, %broadcast.5199)
  %multiply.3261 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3672)
  %div.2270 = f32[512,8,128]{2,1,0} divide(%add.3670, %multiply.3261)
  %mul.7607 = f32[512,8,128]{2,1,0} multiply(%param.145, %broadcast.5195)
  %add.3674 = f32[512,8,128]{2,1,0} add(%div.2270, %mul.7607)
  %mul.7608 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3674)
  %add.3675 = f32[512,8,128]{2,1,0} add(%param.145, %mul.7608)
  %div.2271 = f32[512,14336]{1,0} divide(%convert_element_type.3540, %div.2022)
  %select_n.2783 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3540, %div.2271)
  %mul.7609 = f32[512,14336]{1,0} multiply(%select_n.2783, %broadcast.5185)
  %param.445 = f32[512,14336]{1,0} parameter(366), sharding={devices=[8,1]<=[8]}
  %mul.7610 = f32[512,14336]{1,0} multiply(%param.445, %broadcast.5186)
  %add.3676 = f32[512,14336]{1,0} add(%mul.7609, %mul.7610)
  %integer_pow.86 = f32[512,14336]{1,0} multiply(%select_n.2783, %select_n.2783)
  %mul.7614 = f32[512,14336]{1,0} multiply(%integer_pow.86, %broadcast.5187)
  %param.446 = f32[512,14336]{1,0} parameter(657), sharding={devices=[8,1]<=[8]}
  %mul.7615 = f32[512,14336]{1,0} multiply(%param.446, %broadcast.5188)
  %add.3677 = f32[512,14336]{1,0} add(%mul.7614, %mul.7615)
  %div.2272 = f32[512,14336]{1,0} divide(%add.3677, %div.2025)
  %sqrt.75 = f32[512,14336]{1,0} sqrt(%div.2272)
  %add.3678 = f32[512,14336]{1,0} add(%sqrt.75, %broadcast.5189)
  %multiply.3262 = f32[512,14336]{1,0} multiply(%div.2024, %add.3678)
  %div.2275 = f32[512,14336]{1,0} divide(%add.3676, %multiply.3262)
  %mul.7616 = f32[512,14336]{1,0} multiply(%param.157, %broadcast.5185)
  %add.3679 = f32[512,14336]{1,0} add(%div.2275, %mul.7616)
  %mul.7619 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3679)
  %add.3680 = f32[512,14336]{1,0} add(%param.157, %mul.7619)
  %div.2276 = f32[512,14336]{1,0} divide(%convert_element_type.3541, %div.2022)
  %select_n.2784 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3541, %div.2276)
  %mul.7620 = f32[512,14336]{1,0} multiply(%select_n.2784, %broadcast.5185)
  %param.447 = f32[512,14336]{1,0} parameter(367), sharding={devices=[8,1]<=[8]}
  %mul.7621 = f32[512,14336]{1,0} multiply(%param.447, %broadcast.5186)
  %add.3681 = f32[512,14336]{1,0} add(%mul.7620, %mul.7621)
  %integer_pow.87 = f32[512,14336]{1,0} multiply(%select_n.2784, %select_n.2784)
  %mul.7623 = f32[512,14336]{1,0} multiply(%integer_pow.87, %broadcast.5187)
  %param.448 = f32[512,14336]{1,0} parameter(658), sharding={devices=[8,1]<=[8]}
  %mul.7625 = f32[512,14336]{1,0} multiply(%param.448, %broadcast.5188)
  %add.3682 = f32[512,14336]{1,0} add(%mul.7623, %mul.7625)
  %div.2277 = f32[512,14336]{1,0} divide(%add.3682, %div.2025)
  %sqrt.76 = f32[512,14336]{1,0} sqrt(%div.2277)
  %add.3683 = f32[512,14336]{1,0} add(%sqrt.76, %broadcast.5189)
  %multiply.3263 = f32[512,14336]{1,0} multiply(%div.2024, %add.3683)
  %div.2278 = f32[512,14336]{1,0} divide(%add.3681, %multiply.3263)
  %mul.7626 = f32[512,14336]{1,0} multiply(%param.158, %broadcast.5185)
  %add.3684 = f32[512,14336]{1,0} add(%div.2278, %mul.7626)
  %mul.7627 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3684)
  %add.3685 = f32[512,14336]{1,0} add(%param.158, %mul.7627)
  %div.2280 = f32[14336,512]{1,0} divide(%convert_element_type.3542, %div.2031)
  %select_n.2785 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3542, %div.2280)
  %mul.7628 = f32[14336,512]{1,0} multiply(%select_n.2785, %broadcast.5190)
  %param.449 = f32[14336,512]{1,0} parameter(368), sharding={devices=[1,8]<=[8]}
  %mul.7629 = f32[14336,512]{1,0} multiply(%param.449, %broadcast.5191)
  %add.3686 = f32[14336,512]{1,0} add(%mul.7628, %mul.7629)
  %integer_pow.88 = f32[14336,512]{1,0} multiply(%select_n.2785, %select_n.2785)
  %mul.7631 = f32[14336,512]{1,0} multiply(%integer_pow.88, %broadcast.5192)
  %param.450 = f32[14336,512]{1,0} parameter(659), sharding={devices=[1,8]<=[8]}
  %mul.7632 = f32[14336,512]{1,0} multiply(%param.450, %broadcast.5193)
  %add.3687 = f32[14336,512]{1,0} add(%mul.7631, %mul.7632)
  %div.2282 = f32[14336,512]{1,0} divide(%add.3687, %div.2034)
  %sqrt.77 = f32[14336,512]{1,0} sqrt(%div.2282)
  %add.3688 = f32[14336,512]{1,0} add(%sqrt.77, %broadcast.5194)
  %multiply.3264 = f32[14336,512]{1,0} multiply(%div.2033, %add.3688)
  %div.2283 = f32[14336,512]{1,0} divide(%add.3686, %multiply.3264)
  %mul.7633 = f32[14336,512]{1,0} multiply(%param.159, %broadcast.5190)
  %add.3689 = f32[14336,512]{1,0} add(%div.2283, %mul.7633)
  %mul.7634 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3689)
  %add.3690 = f32[14336,512]{1,0} add(%param.159, %mul.7634)
  %div.2285 = f32[4096]{0} divide(%convert_element_type.3543, %div.2008)
  %select_n.2786 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3543, %div.2285)
  %mul.7635 = f32[4096]{0} multiply(%select_n.2786, %broadcast.5180)
  %param.451 = f32[4096]{0} parameter(369), sharding={replicated}
  %mul.7636 = f32[4096]{0} multiply(%param.451, %broadcast.5181)
  %add.3692 = f32[4096]{0} add(%mul.7635, %mul.7636)
  %integer_pow.89 = f32[4096]{0} multiply(%select_n.2786, %select_n.2786)
  %mul.7637 = f32[4096]{0} multiply(%integer_pow.89, %broadcast.5182)
  %param.452 = f32[4096]{0} parameter(660), sharding={replicated}
  %mul.7638 = f32[4096]{0} multiply(%param.452, %broadcast.5183)
  %add.3693 = f32[4096]{0} add(%mul.7637, %mul.7638)
  %div.2286 = f32[4096]{0} divide(%add.3693, %div.2012)
  %sqrt.78 = f32[4096]{0} sqrt(%div.2286)
  %add.3694 = f32[4096]{0} add(%sqrt.78, %broadcast.5184)
  %multiply.3265 = f32[4096]{0} multiply(%div.2010, %add.3694)
  %div.2288 = f32[4096]{0} divide(%add.3692, %multiply.3265)
  %mul.7639 = f32[4096]{0} multiply(%param.156, %broadcast.5180)
  %add.3695 = f32[4096]{0} add(%div.2288, %mul.7639)
  %mul.7640 = f32[4096]{0} multiply(%mul.1626, %add.3695)
  %add.3696 = f32[4096]{0} add(%param.156, %mul.7640)
  %div.2289 = f32[4096]{0} divide(%convert_element_type.3545, %div.2008)
  %select_n.2787 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3545, %div.2289)
  %mul.7641 = f32[4096]{0} multiply(%select_n.2787, %broadcast.5180)
  %param.453 = f32[4096]{0} parameter(370), sharding={replicated}
  %mul.7642 = f32[4096]{0} multiply(%param.453, %broadcast.5181)
  %add.3697 = f32[4096]{0} add(%mul.7641, %mul.7642)
  %integer_pow.90 = f32[4096]{0} multiply(%select_n.2787, %select_n.2787)
  %mul.7643 = f32[4096]{0} multiply(%integer_pow.90, %broadcast.5182)
  %param.454 = f32[4096]{0} parameter(661), sharding={replicated}
  %mul.7644 = f32[4096]{0} multiply(%param.454, %broadcast.5183)
  %add.3698 = f32[4096]{0} add(%mul.7643, %mul.7644)
  %div.2290 = f32[4096]{0} divide(%add.3698, %div.2012)
  %sqrt.79 = f32[4096]{0} sqrt(%div.2290)
  %add.3699 = f32[4096]{0} add(%sqrt.79, %broadcast.5184)
  %multiply.3266 = f32[4096]{0} multiply(%div.2010, %add.3699)
  %div.2291 = f32[4096]{0} divide(%add.3697, %multiply.3266)
  %mul.7645 = f32[4096]{0} multiply(%param.151, %broadcast.5180)
  %add.3700 = f32[4096]{0} add(%div.2291, %mul.7645)
  %mul.7646 = f32[4096]{0} multiply(%mul.1626, %add.3700)
  %add.3701 = f32[4096]{0} add(%param.151, %mul.7646)
  %div.2293 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3547, %div.2043)
  %select_n.2788 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3547, %div.2293)
  %mul.7647 = f32[512,8,128]{2,1,0} multiply(%select_n.2788, %broadcast.5195)
  %param.455 = f32[512,8,128]{2,1,0} parameter(371), sharding={devices=[8,1,1]<=[8]}
  %mul.7657 = f32[512,8,128]{2,1,0} multiply(%param.455, %broadcast.5196)
  %add.3702 = f32[512,8,128]{2,1,0} add(%mul.7647, %mul.7657)
  %integer_pow.91 = f32[512,8,128]{2,1,0} multiply(%select_n.2788, %select_n.2788)
  %mul.7658 = f32[512,8,128]{2,1,0} multiply(%integer_pow.91, %broadcast.5197)
  %param.456 = f32[512,8,128]{2,1,0} parameter(662), sharding={devices=[8,1,1]<=[8]}
  %mul.7664 = f32[512,8,128]{2,1,0} multiply(%param.456, %broadcast.5198)
  %add.3703 = f32[512,8,128]{2,1,0} add(%mul.7658, %mul.7664)
  %div.2294 = f32[512,8,128]{2,1,0} divide(%add.3703, %div.2046)
  %sqrt.80 = f32[512,8,128]{2,1,0} sqrt(%div.2294)
  %add.3704 = f32[512,8,128]{2,1,0} add(%sqrt.80, %broadcast.5199)
  %multiply.3267 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3704)
  %div.2302 = f32[512,8,128]{2,1,0} divide(%add.3702, %multiply.3267)
  %mul.7665 = f32[512,8,128]{2,1,0} multiply(%param.153, %broadcast.5195)
  %add.3705 = f32[512,8,128]{2,1,0} add(%div.2302, %mul.7665)
  %mul.7666 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3705)
  %add.3706 = f32[512,8,128]{2,1,0} add(%param.153, %mul.7666)
  %div.2303 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3549, %div.2049)
  %select_n.2789 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3549, %div.2303)
  %mul.7667 = f32[32,128,512]{2,1,0} multiply(%select_n.2789, %broadcast.5200)
  %param.457 = f32[32,128,512]{2,1,0} parameter(372), sharding={devices=[1,1,8]<=[8]}
  %mul.7668 = f32[32,128,512]{2,1,0} multiply(%param.457, %broadcast.5201)
  %add.3707 = f32[32,128,512]{2,1,0} add(%mul.7667, %mul.7668)
  %integer_pow.92 = f32[32,128,512]{2,1,0} multiply(%select_n.2789, %select_n.2789)
  %mul.7669 = f32[32,128,512]{2,1,0} multiply(%integer_pow.92, %broadcast.5202)
  %param.458 = f32[32,128,512]{2,1,0} parameter(663), sharding={devices=[1,1,8]<=[8]}
  %mul.7670 = f32[32,128,512]{2,1,0} multiply(%param.458, %broadcast.5203)
  %add.3708 = f32[32,128,512]{2,1,0} add(%mul.7669, %mul.7670)
  %div.2304 = f32[32,128,512]{2,1,0} divide(%add.3708, %div.2052)
  %sqrt.81 = f32[32,128,512]{2,1,0} sqrt(%div.2304)
  %add.3709 = f32[32,128,512]{2,1,0} add(%sqrt.81, %broadcast.5204)
  %multiply.3268 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3709)
  %div.2305 = f32[32,128,512]{2,1,0} divide(%add.3707, %multiply.3268)
  %mul.7671 = f32[32,128,512]{2,1,0} multiply(%param.155, %broadcast.5200)
  %add.3710 = f32[32,128,512]{2,1,0} add(%div.2305, %mul.7671)
  %mul.7672 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3710)
  %add.3711 = f32[32,128,512]{2,1,0} add(%param.155, %mul.7672)
  %div.2306 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3551, %div.2055)
  %select_n.2790 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3551, %div.2306)
  %mul.7673 = f32[512,32,128]{2,1,0} multiply(%select_n.2790, %broadcast.5205)
  %param.459 = f32[512,32,128]{2,1,0} parameter(373), sharding={devices=[8,1,1]<=[8]}
  %mul.7674 = f32[512,32,128]{2,1,0} multiply(%param.459, %broadcast.5206)
  %add.3712 = f32[512,32,128]{2,1,0} add(%mul.7673, %mul.7674)
  %integer_pow.93 = f32[512,32,128]{2,1,0} multiply(%select_n.2790, %select_n.2790)
  %mul.7678 = f32[512,32,128]{2,1,0} multiply(%integer_pow.93, %broadcast.5207)
  %param.460 = f32[512,32,128]{2,1,0} parameter(664), sharding={devices=[8,1,1]<=[8]}
  %mul.7679 = f32[512,32,128]{2,1,0} multiply(%param.460, %broadcast.5208)
  %add.3714 = f32[512,32,128]{2,1,0} add(%mul.7678, %mul.7679)
  %div.2307 = f32[512,32,128]{2,1,0} divide(%add.3714, %div.2058)
  %sqrt.82 = f32[512,32,128]{2,1,0} sqrt(%div.2307)
  %add.3715 = f32[512,32,128]{2,1,0} add(%sqrt.82, %broadcast.5209)
  %multiply.3269 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3715)
  %div.2308 = f32[512,32,128]{2,1,0} divide(%add.3712, %multiply.3269)
  %mul.7680 = f32[512,32,128]{2,1,0} multiply(%param.152, %broadcast.5205)
  %add.3716 = f32[512,32,128]{2,1,0} add(%div.2308, %mul.7680)
  %mul.7683 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3716)
  %add.3717 = f32[512,32,128]{2,1,0} add(%param.152, %mul.7683)
  %div.2309 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3554, %div.2043)
  %select_n.2791 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3554, %div.2309)
  %mul.7684 = f32[512,8,128]{2,1,0} multiply(%select_n.2791, %broadcast.5195)
  %param.461 = f32[512,8,128]{2,1,0} parameter(374), sharding={devices=[8,1,1]<=[8]}
  %mul.7685 = f32[512,8,128]{2,1,0} multiply(%param.461, %broadcast.5196)
  %add.3718 = f32[512,8,128]{2,1,0} add(%mul.7684, %mul.7685)
  %integer_pow.94 = f32[512,8,128]{2,1,0} multiply(%select_n.2791, %select_n.2791)
  %mul.7686 = f32[512,8,128]{2,1,0} multiply(%integer_pow.94, %broadcast.5197)
  %param.462 = f32[512,8,128]{2,1,0} parameter(665), sharding={devices=[8,1,1]<=[8]}
  %mul.7687 = f32[512,8,128]{2,1,0} multiply(%param.462, %broadcast.5198)
  %add.3719 = f32[512,8,128]{2,1,0} add(%mul.7686, %mul.7687)
  %div.2310 = f32[512,8,128]{2,1,0} divide(%add.3719, %div.2046)
  %sqrt.83 = f32[512,8,128]{2,1,0} sqrt(%div.2310)
  %add.3720 = f32[512,8,128]{2,1,0} add(%sqrt.83, %broadcast.5199)
  %multiply.3270 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3720)
  %div.2311 = f32[512,8,128]{2,1,0} divide(%add.3718, %multiply.3270)
  %mul.7688 = f32[512,8,128]{2,1,0} multiply(%param.154, %broadcast.5195)
  %add.3721 = f32[512,8,128]{2,1,0} add(%div.2311, %mul.7688)
  %mul.7689 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3721)
  %add.3722 = f32[512,8,128]{2,1,0} add(%param.154, %mul.7689)
  %div.2312 = f32[512,14336]{1,0} divide(%convert_element_type.3556, %div.2022)
  %select_n.2794 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3556, %div.2312)
  %mul.7690 = f32[512,14336]{1,0} multiply(%select_n.2794, %broadcast.5185)
  %param.463 = f32[512,14336]{1,0} parameter(375), sharding={devices=[8,1]<=[8]}
  %mul.7691 = f32[512,14336]{1,0} multiply(%param.463, %broadcast.5186)
  %add.3723 = f32[512,14336]{1,0} add(%mul.7690, %mul.7691)
  %integer_pow.95 = f32[512,14336]{1,0} multiply(%select_n.2794, %select_n.2794)
  %mul.7692 = f32[512,14336]{1,0} multiply(%integer_pow.95, %broadcast.5187)
  %param.464 = f32[512,14336]{1,0} parameter(666), sharding={devices=[8,1]<=[8]}
  %mul.7693 = f32[512,14336]{1,0} multiply(%param.464, %broadcast.5188)
  %add.3724 = f32[512,14336]{1,0} add(%mul.7692, %mul.7693)
  %div.2313 = f32[512,14336]{1,0} divide(%add.3724, %div.2025)
  %sqrt.84 = f32[512,14336]{1,0} sqrt(%div.2313)
  %add.3725 = f32[512,14336]{1,0} add(%sqrt.84, %broadcast.5189)
  %multiply.3271 = f32[512,14336]{1,0} multiply(%div.2024, %add.3725)
  %div.2314 = f32[512,14336]{1,0} divide(%add.3723, %multiply.3271)
  %mul.7694 = f32[512,14336]{1,0} multiply(%param.166, %broadcast.5185)
  %add.3726 = f32[512,14336]{1,0} add(%div.2314, %mul.7694)
  %mul.7695 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3726)
  %add.3727 = f32[512,14336]{1,0} add(%param.166, %mul.7695)
  %div.2315 = f32[512,14336]{1,0} divide(%convert_element_type.3557, %div.2022)
  %select_n.2795 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3557, %div.2315)
  %mul.7696 = f32[512,14336]{1,0} multiply(%select_n.2795, %broadcast.5185)
  %param.465 = f32[512,14336]{1,0} parameter(376), sharding={devices=[8,1]<=[8]}
  %mul.7697 = f32[512,14336]{1,0} multiply(%param.465, %broadcast.5186)
  %add.3728 = f32[512,14336]{1,0} add(%mul.7696, %mul.7697)
  %integer_pow.96 = f32[512,14336]{1,0} multiply(%select_n.2795, %select_n.2795)
  %mul.7699 = f32[512,14336]{1,0} multiply(%integer_pow.96, %broadcast.5187)
  %param.466 = f32[512,14336]{1,0} parameter(667), sharding={devices=[8,1]<=[8]}
  %mul.7701 = f32[512,14336]{1,0} multiply(%param.466, %broadcast.5188)
  %add.3730 = f32[512,14336]{1,0} add(%mul.7699, %mul.7701)
  %div.2316 = f32[512,14336]{1,0} divide(%add.3730, %div.2025)
  %sqrt.85 = f32[512,14336]{1,0} sqrt(%div.2316)
  %add.3731 = f32[512,14336]{1,0} add(%sqrt.85, %broadcast.5189)
  %multiply.3272 = f32[512,14336]{1,0} multiply(%div.2024, %add.3731)
  %div.2317 = f32[512,14336]{1,0} divide(%add.3728, %multiply.3272)
  %mul.7702 = f32[512,14336]{1,0} multiply(%param.167, %broadcast.5185)
  %add.3732 = f32[512,14336]{1,0} add(%div.2317, %mul.7702)
  %mul.7703 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3732)
  %add.3733 = f32[512,14336]{1,0} add(%param.167, %mul.7703)
  %div.2318 = f32[14336,512]{1,0} divide(%convert_element_type.3558, %div.2031)
  %select_n.2796 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3558, %div.2318)
  %mul.7704 = f32[14336,512]{1,0} multiply(%select_n.2796, %broadcast.5190)
  %param.467 = f32[14336,512]{1,0} parameter(377), sharding={devices=[1,8]<=[8]}
  %mul.7705 = f32[14336,512]{1,0} multiply(%param.467, %broadcast.5191)
  %add.3734 = f32[14336,512]{1,0} add(%mul.7704, %mul.7705)
  %integer_pow.97 = f32[14336,512]{1,0} multiply(%select_n.2796, %select_n.2796)
  %mul.7706 = f32[14336,512]{1,0} multiply(%integer_pow.97, %broadcast.5192)
  %param.468 = f32[14336,512]{1,0} parameter(668), sharding={devices=[1,8]<=[8]}
  %mul.7707 = f32[14336,512]{1,0} multiply(%param.468, %broadcast.5193)
  %add.3735 = f32[14336,512]{1,0} add(%mul.7706, %mul.7707)
  %div.2319 = f32[14336,512]{1,0} divide(%add.3735, %div.2034)
  %sqrt.86 = f32[14336,512]{1,0} sqrt(%div.2319)
  %add.3736 = f32[14336,512]{1,0} add(%sqrt.86, %broadcast.5194)
  %multiply.3273 = f32[14336,512]{1,0} multiply(%div.2033, %add.3736)
  %div.2320 = f32[14336,512]{1,0} divide(%add.3734, %multiply.3273)
  %mul.7708 = f32[14336,512]{1,0} multiply(%param.168, %broadcast.5190)
  %add.3737 = f32[14336,512]{1,0} add(%div.2320, %mul.7708)
  %mul.7709 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3737)
  %add.3738 = f32[14336,512]{1,0} add(%param.168, %mul.7709)
  %div.2321 = f32[4096]{0} divide(%convert_element_type.3559, %div.2008)
  %select_n.2797 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3559, %div.2321)
  %mul.7710 = f32[4096]{0} multiply(%select_n.2797, %broadcast.5180)
  %param.469 = f32[4096]{0} parameter(378), sharding={replicated}
  %mul.7711 = f32[4096]{0} multiply(%param.469, %broadcast.5181)
  %add.3739 = f32[4096]{0} add(%mul.7710, %mul.7711)
  %integer_pow.98 = f32[4096]{0} multiply(%select_n.2797, %select_n.2797)
  %mul.7712 = f32[4096]{0} multiply(%integer_pow.98, %broadcast.5182)
  %param.470 = f32[4096]{0} parameter(669), sharding={replicated}
  %mul.7713 = f32[4096]{0} multiply(%param.470, %broadcast.5183)
  %add.3740 = f32[4096]{0} add(%mul.7712, %mul.7713)
  %div.2322 = f32[4096]{0} divide(%add.3740, %div.2012)
  %sqrt.87 = f32[4096]{0} sqrt(%div.2322)
  %add.3741 = f32[4096]{0} add(%sqrt.87, %broadcast.5184)
  %multiply.3274 = f32[4096]{0} multiply(%div.2010, %add.3741)
  %div.2323 = f32[4096]{0} divide(%add.3739, %multiply.3274)
  %mul.7714 = f32[4096]{0} multiply(%param.165, %broadcast.5180)
  %add.3742 = f32[4096]{0} add(%div.2323, %mul.7714)
  %mul.7715 = f32[4096]{0} multiply(%mul.1626, %add.3742)
  %add.3744 = f32[4096]{0} add(%param.165, %mul.7715)
  %div.2324 = f32[4096]{0} divide(%convert_element_type.3562, %div.2008)
  %select_n.2798 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3562, %div.2324)
  %mul.7716 = f32[4096]{0} multiply(%select_n.2798, %broadcast.5180)
  %param.471 = f32[4096]{0} parameter(379), sharding={replicated}
  %mul.7717 = f32[4096]{0} multiply(%param.471, %broadcast.5181)
  %add.3745 = f32[4096]{0} add(%mul.7716, %mul.7717)
  %integer_pow.99 = f32[4096]{0} multiply(%select_n.2798, %select_n.2798)
  %mul.7718 = f32[4096]{0} multiply(%integer_pow.99, %broadcast.5182)
  %param.472 = f32[4096]{0} parameter(670), sharding={replicated}
  %mul.7719 = f32[4096]{0} multiply(%param.472, %broadcast.5183)
  %add.3746 = f32[4096]{0} add(%mul.7718, %mul.7719)
  %div.2325 = f32[4096]{0} divide(%add.3746, %div.2012)
  %sqrt.88 = f32[4096]{0} sqrt(%div.2325)
  %add.3747 = f32[4096]{0} add(%sqrt.88, %broadcast.5184)
  %multiply.3275 = f32[4096]{0} multiply(%div.2010, %add.3747)
  %div.2326 = f32[4096]{0} divide(%add.3745, %multiply.3275)
  %mul.7720 = f32[4096]{0} multiply(%param.160, %broadcast.5180)
  %add.3748 = f32[4096]{0} add(%div.2326, %mul.7720)
  %mul.7721 = f32[4096]{0} multiply(%mul.1626, %add.3748)
  %add.3749 = f32[4096]{0} add(%param.160, %mul.7721)
  %div.2327 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3564, %div.2043)
  %select_n.2799 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3564, %div.2327)
  %mul.7722 = f32[512,8,128]{2,1,0} multiply(%select_n.2799, %broadcast.5195)
  %param.473 = f32[512,8,128]{2,1,0} parameter(380), sharding={devices=[8,1,1]<=[8]}
  %mul.7723 = f32[512,8,128]{2,1,0} multiply(%param.473, %broadcast.5196)
  %add.3750 = f32[512,8,128]{2,1,0} add(%mul.7722, %mul.7723)
  %integer_pow.100 = f32[512,8,128]{2,1,0} multiply(%select_n.2799, %select_n.2799)
  %mul.7728 = f32[512,8,128]{2,1,0} multiply(%integer_pow.100, %broadcast.5197)
  %param.474 = f32[512,8,128]{2,1,0} parameter(671), sharding={devices=[8,1,1]<=[8]}
  %mul.7733 = f32[512,8,128]{2,1,0} multiply(%param.474, %broadcast.5198)
  %add.3751 = f32[512,8,128]{2,1,0} add(%mul.7728, %mul.7733)
  %div.2328 = f32[512,8,128]{2,1,0} divide(%add.3751, %div.2046)
  %sqrt.89 = f32[512,8,128]{2,1,0} sqrt(%div.2328)
  %add.3752 = f32[512,8,128]{2,1,0} add(%sqrt.89, %broadcast.5199)
  %multiply.3276 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3752)
  %div.2329 = f32[512,8,128]{2,1,0} divide(%add.3750, %multiply.3276)
  %mul.7734 = f32[512,8,128]{2,1,0} multiply(%param.162, %broadcast.5195)
  %add.3753 = f32[512,8,128]{2,1,0} add(%div.2329, %mul.7734)
  %mul.7739 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3753)
  %add.3754 = f32[512,8,128]{2,1,0} add(%param.162, %mul.7739)
  %div.2330 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3566, %div.2049)
  %select_n.2800 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3566, %div.2330)
  %mul.7740 = f32[32,128,512]{2,1,0} multiply(%select_n.2800, %broadcast.5200)
  %param.475 = f32[32,128,512]{2,1,0} parameter(381), sharding={devices=[1,1,8]<=[8]}
  %mul.7741 = f32[32,128,512]{2,1,0} multiply(%param.475, %broadcast.5201)
  %add.3755 = f32[32,128,512]{2,1,0} add(%mul.7740, %mul.7741)
  %integer_pow.101 = f32[32,128,512]{2,1,0} multiply(%select_n.2800, %select_n.2800)
  %mul.7742 = f32[32,128,512]{2,1,0} multiply(%integer_pow.101, %broadcast.5202)
  %param.476 = f32[32,128,512]{2,1,0} parameter(672), sharding={devices=[1,1,8]<=[8]}
  %mul.7745 = f32[32,128,512]{2,1,0} multiply(%param.476, %broadcast.5203)
  %add.3756 = f32[32,128,512]{2,1,0} add(%mul.7742, %mul.7745)
  %div.2331 = f32[32,128,512]{2,1,0} divide(%add.3756, %div.2052)
  %sqrt.90 = f32[32,128,512]{2,1,0} sqrt(%div.2331)
  %add.3757 = f32[32,128,512]{2,1,0} add(%sqrt.90, %broadcast.5204)
  %multiply.3277 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3757)
  %div.2332 = f32[32,128,512]{2,1,0} divide(%add.3755, %multiply.3277)
  %mul.7746 = f32[32,128,512]{2,1,0} multiply(%param.164, %broadcast.5200)
  %add.3758 = f32[32,128,512]{2,1,0} add(%div.2332, %mul.7746)
  %mul.7749 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3758)
  %add.3759 = f32[32,128,512]{2,1,0} add(%param.164, %mul.7749)
  %div.2333 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3568, %div.2055)
  %select_n.2802 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3568, %div.2333)
  %mul.7750 = f32[512,32,128]{2,1,0} multiply(%select_n.2802, %broadcast.5205)
  %param.477 = f32[512,32,128]{2,1,0} parameter(382), sharding={devices=[8,1,1]<=[8]}
  %mul.7751 = f32[512,32,128]{2,1,0} multiply(%param.477, %broadcast.5206)
  %add.3760 = f32[512,32,128]{2,1,0} add(%mul.7750, %mul.7751)
  %integer_pow.102 = f32[512,32,128]{2,1,0} multiply(%select_n.2802, %select_n.2802)
  %mul.7752 = f32[512,32,128]{2,1,0} multiply(%integer_pow.102, %broadcast.5207)
  %param.478 = f32[512,32,128]{2,1,0} parameter(673), sharding={devices=[8,1,1]<=[8]}
  %mul.7753 = f32[512,32,128]{2,1,0} multiply(%param.478, %broadcast.5208)
  %add.3761 = f32[512,32,128]{2,1,0} add(%mul.7752, %mul.7753)
  %div.2334 = f32[512,32,128]{2,1,0} divide(%add.3761, %div.2058)
  %sqrt.91 = f32[512,32,128]{2,1,0} sqrt(%div.2334)
  %add.3762 = f32[512,32,128]{2,1,0} add(%sqrt.91, %broadcast.5209)
  %multiply.3278 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3762)
  %div.2335 = f32[512,32,128]{2,1,0} divide(%add.3760, %multiply.3278)
  %mul.7754 = f32[512,32,128]{2,1,0} multiply(%param.161, %broadcast.5205)
  %add.3763 = f32[512,32,128]{2,1,0} add(%div.2335, %mul.7754)
  %mul.7755 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3763)
  %add.3764 = f32[512,32,128]{2,1,0} add(%param.161, %mul.7755)
  %div.2336 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3571, %div.2043)
  %select_n.2803 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3571, %div.2336)
  %mul.7756 = f32[512,8,128]{2,1,0} multiply(%select_n.2803, %broadcast.5195)
  %param.479 = f32[512,8,128]{2,1,0} parameter(383), sharding={devices=[8,1,1]<=[8]}
  %mul.7758 = f32[512,8,128]{2,1,0} multiply(%param.479, %broadcast.5196)
  %add.3765 = f32[512,8,128]{2,1,0} add(%mul.7756, %mul.7758)
  %integer_pow.103 = f32[512,8,128]{2,1,0} multiply(%select_n.2803, %select_n.2803)
  %mul.7759 = f32[512,8,128]{2,1,0} multiply(%integer_pow.103, %broadcast.5197)
  %param.480 = f32[512,8,128]{2,1,0} parameter(674), sharding={devices=[8,1,1]<=[8]}
  %mul.7760 = f32[512,8,128]{2,1,0} multiply(%param.480, %broadcast.5198)
  %add.3766 = f32[512,8,128]{2,1,0} add(%mul.7759, %mul.7760)
  %div.2337 = f32[512,8,128]{2,1,0} divide(%add.3766, %div.2046)
  %sqrt.92 = f32[512,8,128]{2,1,0} sqrt(%div.2337)
  %add.3768 = f32[512,8,128]{2,1,0} add(%sqrt.92, %broadcast.5199)
  %multiply.3279 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3768)
  %div.2338 = f32[512,8,128]{2,1,0} divide(%add.3765, %multiply.3279)
  %mul.7762 = f32[512,8,128]{2,1,0} multiply(%param.163, %broadcast.5195)
  %add.3769 = f32[512,8,128]{2,1,0} add(%div.2338, %mul.7762)
  %mul.7763 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3769)
  %add.3770 = f32[512,8,128]{2,1,0} add(%param.163, %mul.7763)
  %div.2339 = f32[512,14336]{1,0} divide(%convert_element_type.3573, %div.2022)
  %select_n.2804 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3573, %div.2339)
  %mul.7764 = f32[512,14336]{1,0} multiply(%select_n.2804, %broadcast.5185)
  %param.481 = f32[512,14336]{1,0} parameter(384), sharding={devices=[8,1]<=[8]}
  %mul.7765 = f32[512,14336]{1,0} multiply(%param.481, %broadcast.5186)
  %add.3771 = f32[512,14336]{1,0} add(%mul.7764, %mul.7765)
  %integer_pow.104 = f32[512,14336]{1,0} multiply(%select_n.2804, %select_n.2804)
  %mul.7766 = f32[512,14336]{1,0} multiply(%integer_pow.104, %broadcast.5187)
  %param.482 = f32[512,14336]{1,0} parameter(675), sharding={devices=[8,1]<=[8]}
  %mul.7767 = f32[512,14336]{1,0} multiply(%param.482, %broadcast.5188)
  %add.3772 = f32[512,14336]{1,0} add(%mul.7766, %mul.7767)
  %div.2340 = f32[512,14336]{1,0} divide(%add.3772, %div.2025)
  %sqrt.93 = f32[512,14336]{1,0} sqrt(%div.2340)
  %add.3773 = f32[512,14336]{1,0} add(%sqrt.93, %broadcast.5189)
  %multiply.3280 = f32[512,14336]{1,0} multiply(%div.2024, %add.3773)
  %div.2341 = f32[512,14336]{1,0} divide(%add.3771, %multiply.3280)
  %mul.7768 = f32[512,14336]{1,0} multiply(%param.175, %broadcast.5185)
  %add.3774 = f32[512,14336]{1,0} add(%div.2341, %mul.7768)
  %mul.7769 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3774)
  %add.3775 = f32[512,14336]{1,0} add(%param.175, %mul.7769)
  %div.2342 = f32[512,14336]{1,0} divide(%convert_element_type.3574, %div.2022)
  %select_n.2805 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3574, %div.2342)
  %mul.7770 = f32[512,14336]{1,0} multiply(%select_n.2805, %broadcast.5185)
  %param.483 = f32[512,14336]{1,0} parameter(385), sharding={devices=[8,1]<=[8]}
  %mul.7771 = f32[512,14336]{1,0} multiply(%param.483, %broadcast.5186)
  %add.3776 = f32[512,14336]{1,0} add(%mul.7770, %mul.7771)
  %integer_pow.105 = f32[512,14336]{1,0} multiply(%select_n.2805, %select_n.2805)
  %mul.7772 = f32[512,14336]{1,0} multiply(%integer_pow.105, %broadcast.5187)
  %param.484 = f32[512,14336]{1,0} parameter(676), sharding={devices=[8,1]<=[8]}
  %mul.7773 = f32[512,14336]{1,0} multiply(%param.484, %broadcast.5188)
  %add.3778 = f32[512,14336]{1,0} add(%mul.7772, %mul.7773)
  %div.2343 = f32[512,14336]{1,0} divide(%add.3778, %div.2025)
  %sqrt.94 = f32[512,14336]{1,0} sqrt(%div.2343)
  %add.3779 = f32[512,14336]{1,0} add(%sqrt.94, %broadcast.5189)
  %multiply.3281 = f32[512,14336]{1,0} multiply(%div.2024, %add.3779)
  %div.2344 = f32[512,14336]{1,0} divide(%add.3776, %multiply.3281)
  %mul.7774 = f32[512,14336]{1,0} multiply(%param.176, %broadcast.5185)
  %add.3780 = f32[512,14336]{1,0} add(%div.2344, %mul.7774)
  %mul.7775 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3780)
  %add.3781 = f32[512,14336]{1,0} add(%param.176, %mul.7775)
  %div.2346 = f32[14336,512]{1,0} divide(%convert_element_type.3575, %div.2031)
  %select_n.2806 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3575, %div.2346)
  %mul.7776 = f32[14336,512]{1,0} multiply(%select_n.2806, %broadcast.5190)
  %param.485 = f32[14336,512]{1,0} parameter(386), sharding={devices=[1,8]<=[8]}
  %mul.7777 = f32[14336,512]{1,0} multiply(%param.485, %broadcast.5191)
  %add.3782 = f32[14336,512]{1,0} add(%mul.7776, %mul.7777)
  %integer_pow.106 = f32[14336,512]{1,0} multiply(%select_n.2806, %select_n.2806)
  %mul.7778 = f32[14336,512]{1,0} multiply(%integer_pow.106, %broadcast.5192)
  %param.486 = f32[14336,512]{1,0} parameter(677), sharding={devices=[1,8]<=[8]}
  %mul.7781 = f32[14336,512]{1,0} multiply(%param.486, %broadcast.5193)
  %add.3783 = f32[14336,512]{1,0} add(%mul.7778, %mul.7781)
  %div.2347 = f32[14336,512]{1,0} divide(%add.3783, %div.2034)
  %sqrt.95 = f32[14336,512]{1,0} sqrt(%div.2347)
  %add.3784 = f32[14336,512]{1,0} add(%sqrt.95, %broadcast.5194)
  %multiply.3282 = f32[14336,512]{1,0} multiply(%div.2033, %add.3784)
  %div.2348 = f32[14336,512]{1,0} divide(%add.3782, %multiply.3282)
  %mul.7782 = f32[14336,512]{1,0} multiply(%param.177, %broadcast.5190)
  %add.3785 = f32[14336,512]{1,0} add(%div.2348, %mul.7782)
  %mul.7785 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3785)
  %add.3786 = f32[14336,512]{1,0} add(%param.177, %mul.7785)
  %div.2351 = f32[4096]{0} divide(%convert_element_type.3577, %div.2008)
  %select_n.2807 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3577, %div.2351)
  %mul.7786 = f32[4096]{0} multiply(%select_n.2807, %broadcast.5180)
  %param.487 = f32[4096]{0} parameter(387), sharding={replicated}
  %mul.7787 = f32[4096]{0} multiply(%param.487, %broadcast.5181)
  %add.3787 = f32[4096]{0} add(%mul.7786, %mul.7787)
  %integer_pow.107 = f32[4096]{0} multiply(%select_n.2807, %select_n.2807)
  %mul.7788 = f32[4096]{0} multiply(%integer_pow.107, %broadcast.5182)
  %param.488 = f32[4096]{0} parameter(678), sharding={replicated}
  %mul.7789 = f32[4096]{0} multiply(%param.488, %broadcast.5183)
  %add.3788 = f32[4096]{0} add(%mul.7788, %mul.7789)
  %div.2352 = f32[4096]{0} divide(%add.3788, %div.2012)
  %sqrt.96 = f32[4096]{0} sqrt(%div.2352)
  %add.3789 = f32[4096]{0} add(%sqrt.96, %broadcast.5184)
  %multiply.3283 = f32[4096]{0} multiply(%div.2010, %add.3789)
  %div.2353 = f32[4096]{0} divide(%add.3787, %multiply.3283)
  %mul.7790 = f32[4096]{0} multiply(%param.174, %broadcast.5180)
  %add.3790 = f32[4096]{0} add(%div.2353, %mul.7790)
  %mul.7791 = f32[4096]{0} multiply(%mul.1626, %add.3790)
  %add.3791 = f32[4096]{0} add(%param.174, %mul.7791)
  %div.2354 = f32[4096]{0} divide(%convert_element_type.3581, %div.2008)
  %select_n.2808 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3581, %div.2354)
  %mul.7792 = f32[4096]{0} multiply(%select_n.2808, %broadcast.5180)
  %param.489 = f32[4096]{0} parameter(388), sharding={replicated}
  %mul.7793 = f32[4096]{0} multiply(%param.489, %broadcast.5181)
  %add.3792 = f32[4096]{0} add(%mul.7792, %mul.7793)
  %integer_pow.108 = f32[4096]{0} multiply(%select_n.2808, %select_n.2808)
  %mul.7795 = f32[4096]{0} multiply(%integer_pow.108, %broadcast.5182)
  %param.490 = f32[4096]{0} parameter(679), sharding={replicated}
  %mul.7796 = f32[4096]{0} multiply(%param.490, %broadcast.5183)
  %add.3793 = f32[4096]{0} add(%mul.7795, %mul.7796)
  %div.2356 = f32[4096]{0} divide(%add.3793, %div.2012)
  %sqrt.97 = f32[4096]{0} sqrt(%div.2356)
  %add.3794 = f32[4096]{0} add(%sqrt.97, %broadcast.5184)
  %multiply.3284 = f32[4096]{0} multiply(%div.2010, %add.3794)
  %div.2358 = f32[4096]{0} divide(%add.3792, %multiply.3284)
  %mul.7797 = f32[4096]{0} multiply(%param.169, %broadcast.5180)
  %add.3795 = f32[4096]{0} add(%div.2358, %mul.7797)
  %mul.7798 = f32[4096]{0} multiply(%mul.1626, %add.3795)
  %add.3796 = f32[4096]{0} add(%param.169, %mul.7798)
  %div.2359 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3585, %div.2043)
  %select_n.2810 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3585, %div.2359)
  %mul.7799 = f32[512,8,128]{2,1,0} multiply(%select_n.2810, %broadcast.5195)
  %param.491 = f32[512,8,128]{2,1,0} parameter(389), sharding={devices=[8,1,1]<=[8]}
  %mul.7800 = f32[512,8,128]{2,1,0} multiply(%param.491, %broadcast.5196)
  %add.3797 = f32[512,8,128]{2,1,0} add(%mul.7799, %mul.7800)
  %integer_pow.109 = f32[512,8,128]{2,1,0} multiply(%select_n.2810, %select_n.2810)
  %mul.7801 = f32[512,8,128]{2,1,0} multiply(%integer_pow.109, %broadcast.5197)
  %param.492 = f32[512,8,128]{2,1,0} parameter(680), sharding={devices=[8,1,1]<=[8]}
  %mul.7802 = f32[512,8,128]{2,1,0} multiply(%param.492, %broadcast.5198)
  %add.3798 = f32[512,8,128]{2,1,0} add(%mul.7801, %mul.7802)
  %div.2361 = f32[512,8,128]{2,1,0} divide(%add.3798, %div.2046)
  %sqrt.98 = f32[512,8,128]{2,1,0} sqrt(%div.2361)
  %add.3799 = f32[512,8,128]{2,1,0} add(%sqrt.98, %broadcast.5199)
  %multiply.3285 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3799)
  %div.2362 = f32[512,8,128]{2,1,0} divide(%add.3797, %multiply.3285)
  %mul.7803 = f32[512,8,128]{2,1,0} multiply(%param.171, %broadcast.5195)
  %add.3800 = f32[512,8,128]{2,1,0} add(%div.2362, %mul.7803)
  %mul.7804 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3800)
  %add.3801 = f32[512,8,128]{2,1,0} add(%param.171, %mul.7804)
  %div.2364 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3587, %div.2049)
  %select_n.2811 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3587, %div.2364)
  %mul.7805 = f32[32,128,512]{2,1,0} multiply(%select_n.2811, %broadcast.5200)
  %param.493 = f32[32,128,512]{2,1,0} parameter(390), sharding={devices=[1,1,8]<=[8]}
  %mul.7806 = f32[32,128,512]{2,1,0} multiply(%param.493, %broadcast.5201)
  %add.3802 = f32[32,128,512]{2,1,0} add(%mul.7805, %mul.7806)
  %integer_pow.110 = f32[32,128,512]{2,1,0} multiply(%select_n.2811, %select_n.2811)
  %mul.7807 = f32[32,128,512]{2,1,0} multiply(%integer_pow.110, %broadcast.5202)
  %param.494 = f32[32,128,512]{2,1,0} parameter(681), sharding={devices=[1,1,8]<=[8]}
  %mul.7808 = f32[32,128,512]{2,1,0} multiply(%param.494, %broadcast.5203)
  %add.3803 = f32[32,128,512]{2,1,0} add(%mul.7807, %mul.7808)
  %div.2365 = f32[32,128,512]{2,1,0} divide(%add.3803, %div.2052)
  %sqrt.99 = f32[32,128,512]{2,1,0} sqrt(%div.2365)
  %add.3804 = f32[32,128,512]{2,1,0} add(%sqrt.99, %broadcast.5204)
  %multiply.3286 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3804)
  %div.2366 = f32[32,128,512]{2,1,0} divide(%add.3802, %multiply.3286)
  %mul.7813 = f32[32,128,512]{2,1,0} multiply(%param.173, %broadcast.5200)
  %add.3806 = f32[32,128,512]{2,1,0} add(%div.2366, %mul.7813)
  %mul.7815 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3806)
  %add.3808 = f32[32,128,512]{2,1,0} add(%param.173, %mul.7815)
  %div.2367 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3589, %div.2055)
  %select_n.2812 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3589, %div.2367)
  %mul.7820 = f32[512,32,128]{2,1,0} multiply(%select_n.2812, %broadcast.5205)
  %param.495 = f32[512,32,128]{2,1,0} parameter(391), sharding={devices=[8,1,1]<=[8]}
  %mul.7821 = f32[512,32,128]{2,1,0} multiply(%param.495, %broadcast.5206)
  %add.3809 = f32[512,32,128]{2,1,0} add(%mul.7820, %mul.7821)
  %integer_pow.111 = f32[512,32,128]{2,1,0} multiply(%select_n.2812, %select_n.2812)
  %mul.7822 = f32[512,32,128]{2,1,0} multiply(%integer_pow.111, %broadcast.5207)
  %param.496 = f32[512,32,128]{2,1,0} parameter(682), sharding={devices=[8,1,1]<=[8]}
  %mul.7823 = f32[512,32,128]{2,1,0} multiply(%param.496, %broadcast.5208)
  %add.3810 = f32[512,32,128]{2,1,0} add(%mul.7822, %mul.7823)
  %div.2369 = f32[512,32,128]{2,1,0} divide(%add.3810, %div.2058)
  %sqrt.100 = f32[512,32,128]{2,1,0} sqrt(%div.2369)
  %add.3811 = f32[512,32,128]{2,1,0} add(%sqrt.100, %broadcast.5209)
  %multiply.3287 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3811)
  %div.2370 = f32[512,32,128]{2,1,0} divide(%add.3809, %multiply.3287)
  %mul.7824 = f32[512,32,128]{2,1,0} multiply(%param.170, %broadcast.5205)
  %add.3812 = f32[512,32,128]{2,1,0} add(%div.2370, %mul.7824)
  %mul.7829 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3812)
  %add.3813 = f32[512,32,128]{2,1,0} add(%param.170, %mul.7829)
  %div.2378 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3591, %div.2043)
  %select_n.2813 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3591, %div.2378)
  %mul.7830 = f32[512,8,128]{2,1,0} multiply(%select_n.2813, %broadcast.5195)
  %param.497 = f32[512,8,128]{2,1,0} parameter(392), sharding={devices=[8,1,1]<=[8]}
  %mul.7831 = f32[512,8,128]{2,1,0} multiply(%param.497, %broadcast.5196)
  %add.3814 = f32[512,8,128]{2,1,0} add(%mul.7830, %mul.7831)
  %integer_pow.112 = f32[512,8,128]{2,1,0} multiply(%select_n.2813, %select_n.2813)
  %mul.7832 = f32[512,8,128]{2,1,0} multiply(%integer_pow.112, %broadcast.5197)
  %param.498 = f32[512,8,128]{2,1,0} parameter(683), sharding={devices=[8,1,1]<=[8]}
  %mul.7833 = f32[512,8,128]{2,1,0} multiply(%param.498, %broadcast.5198)
  %add.3815 = f32[512,8,128]{2,1,0} add(%mul.7832, %mul.7833)
  %div.2379 = f32[512,8,128]{2,1,0} divide(%add.3815, %div.2046)
  %sqrt.101 = f32[512,8,128]{2,1,0} sqrt(%div.2379)
  %add.3816 = f32[512,8,128]{2,1,0} add(%sqrt.101, %broadcast.5199)
  %multiply.3288 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3816)
  %div.2380 = f32[512,8,128]{2,1,0} divide(%add.3814, %multiply.3288)
  %mul.7834 = f32[512,8,128]{2,1,0} multiply(%param.172, %broadcast.5195)
  %add.3817 = f32[512,8,128]{2,1,0} add(%div.2380, %mul.7834)
  %mul.7835 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3817)
  %add.3818 = f32[512,8,128]{2,1,0} add(%param.172, %mul.7835)
  %div.2381 = f32[512,14336]{1,0} divide(%convert_element_type.3593, %div.2022)
  %select_n.2814 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3593, %div.2381)
  %mul.7836 = f32[512,14336]{1,0} multiply(%select_n.2814, %broadcast.5185)
  %param.499 = f32[512,14336]{1,0} parameter(393), sharding={devices=[8,1]<=[8]}
  %mul.7837 = f32[512,14336]{1,0} multiply(%param.499, %broadcast.5186)
  %add.3819 = f32[512,14336]{1,0} add(%mul.7836, %mul.7837)
  %integer_pow.113 = f32[512,14336]{1,0} multiply(%select_n.2814, %select_n.2814)
  %mul.7838 = f32[512,14336]{1,0} multiply(%integer_pow.113, %broadcast.5187)
  %param.500 = f32[512,14336]{1,0} parameter(684), sharding={devices=[8,1]<=[8]}
  %mul.7842 = f32[512,14336]{1,0} multiply(%param.500, %broadcast.5188)
  %add.3820 = f32[512,14336]{1,0} add(%mul.7838, %mul.7842)
  %div.2382 = f32[512,14336]{1,0} divide(%add.3820, %div.2025)
  %sqrt.102 = f32[512,14336]{1,0} sqrt(%div.2382)
  %add.3821 = f32[512,14336]{1,0} add(%sqrt.102, %broadcast.5189)
  %multiply.3289 = f32[512,14336]{1,0} multiply(%div.2024, %add.3821)
  %div.2383 = f32[512,14336]{1,0} divide(%add.3819, %multiply.3289)
  %mul.7843 = f32[512,14336]{1,0} multiply(%param.184, %broadcast.5185)
  %add.3822 = f32[512,14336]{1,0} add(%div.2383, %mul.7843)
  %mul.7844 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3822)
  %add.3823 = f32[512,14336]{1,0} add(%param.184, %mul.7844)
  %div.2384 = f32[512,14336]{1,0} divide(%convert_element_type.3594, %div.2022)
  %select_n.2815 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3594, %div.2384)
  %mul.7851 = f32[512,14336]{1,0} multiply(%select_n.2815, %broadcast.5185)
  %param.501 = f32[512,14336]{1,0} parameter(394), sharding={devices=[8,1]<=[8]}
  %mul.7852 = f32[512,14336]{1,0} multiply(%param.501, %broadcast.5186)
  %add.3824 = f32[512,14336]{1,0} add(%mul.7851, %mul.7852)
  %integer_pow.114 = f32[512,14336]{1,0} multiply(%select_n.2815, %select_n.2815)
  %mul.7853 = f32[512,14336]{1,0} multiply(%integer_pow.114, %broadcast.5187)
  %param.502 = f32[512,14336]{1,0} parameter(685), sharding={devices=[8,1]<=[8]}
  %mul.7859 = f32[512,14336]{1,0} multiply(%param.502, %broadcast.5188)
  %add.3825 = f32[512,14336]{1,0} add(%mul.7853, %mul.7859)
  %div.2385 = f32[512,14336]{1,0} divide(%add.3825, %div.2025)
  %sqrt.103 = f32[512,14336]{1,0} sqrt(%div.2385)
  %add.3826 = f32[512,14336]{1,0} add(%sqrt.103, %broadcast.5189)
  %multiply.3290 = f32[512,14336]{1,0} multiply(%div.2024, %add.3826)
  %div.2386 = f32[512,14336]{1,0} divide(%add.3824, %multiply.3290)
  %mul.7860 = f32[512,14336]{1,0} multiply(%param.185, %broadcast.5185)
  %add.3827 = f32[512,14336]{1,0} add(%div.2386, %mul.7860)
  %mul.7861 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3827)
  %add.3828 = f32[512,14336]{1,0} add(%param.185, %mul.7861)
  %div.2387 = f32[14336,512]{1,0} divide(%convert_element_type.3595, %div.2031)
  %select_n.2816 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3595, %div.2387)
  %mul.7862 = f32[14336,512]{1,0} multiply(%select_n.2816, %broadcast.5190)
  %param.503 = f32[14336,512]{1,0} parameter(395), sharding={devices=[1,8]<=[8]}
  %mul.7863 = f32[14336,512]{1,0} multiply(%param.503, %broadcast.5191)
  %add.3829 = f32[14336,512]{1,0} add(%mul.7862, %mul.7863)
  %integer_pow.115 = f32[14336,512]{1,0} multiply(%select_n.2816, %select_n.2816)
  %mul.7864 = f32[14336,512]{1,0} multiply(%integer_pow.115, %broadcast.5192)
  %param.504 = f32[14336,512]{1,0} parameter(686), sharding={devices=[1,8]<=[8]}
  %mul.7865 = f32[14336,512]{1,0} multiply(%param.504, %broadcast.5193)
  %add.3830 = f32[14336,512]{1,0} add(%mul.7864, %mul.7865)
  %div.2388 = f32[14336,512]{1,0} divide(%add.3830, %div.2034)
  %sqrt.104 = f32[14336,512]{1,0} sqrt(%div.2388)
  %add.3831 = f32[14336,512]{1,0} add(%sqrt.104, %broadcast.5194)
  %multiply.3291 = f32[14336,512]{1,0} multiply(%div.2033, %add.3831)
  %div.2389 = f32[14336,512]{1,0} divide(%add.3829, %multiply.3291)
  %mul.7866 = f32[14336,512]{1,0} multiply(%param.186, %broadcast.5190)
  %add.3832 = f32[14336,512]{1,0} add(%div.2389, %mul.7866)
  %mul.7867 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3832)
  %add.3833 = f32[14336,512]{1,0} add(%param.186, %mul.7867)
  %div.2390 = f32[4096]{0} divide(%convert_element_type.3596, %div.2008)
  %select_n.2817 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3596, %div.2390)
  %mul.7868 = f32[4096]{0} multiply(%select_n.2817, %broadcast.5180)
  %param.505 = f32[4096]{0} parameter(396), sharding={replicated}
  %mul.7869 = f32[4096]{0} multiply(%param.505, %broadcast.5181)
  %add.3834 = f32[4096]{0} add(%mul.7868, %mul.7869)
  %integer_pow.116 = f32[4096]{0} multiply(%select_n.2817, %select_n.2817)
  %mul.7870 = f32[4096]{0} multiply(%integer_pow.116, %broadcast.5182)
  %param.506 = f32[4096]{0} parameter(687), sharding={replicated}
  %mul.7871 = f32[4096]{0} multiply(%param.506, %broadcast.5183)
  %add.3835 = f32[4096]{0} add(%mul.7870, %mul.7871)
  %div.2391 = f32[4096]{0} divide(%add.3835, %div.2012)
  %sqrt.105 = f32[4096]{0} sqrt(%div.2391)
  %add.3836 = f32[4096]{0} add(%sqrt.105, %broadcast.5184)
  %multiply.3292 = f32[4096]{0} multiply(%div.2010, %add.3836)
  %div.2392 = f32[4096]{0} divide(%add.3834, %multiply.3292)
  %mul.7872 = f32[4096]{0} multiply(%param.183, %broadcast.5180)
  %add.3837 = f32[4096]{0} add(%div.2392, %mul.7872)
  %mul.7873 = f32[4096]{0} multiply(%mul.1626, %add.3837)
  %add.3838 = f32[4096]{0} add(%param.183, %mul.7873)
  %div.2393 = f32[4096]{0} divide(%convert_element_type.3601, %div.2008)
  %select_n.2818 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3601, %div.2393)
  %mul.7874 = f32[4096]{0} multiply(%select_n.2818, %broadcast.5180)
  %param.507 = f32[4096]{0} parameter(397), sharding={replicated}
  %mul.7875 = f32[4096]{0} multiply(%param.507, %broadcast.5181)
  %add.3839 = f32[4096]{0} add(%mul.7874, %mul.7875)
  %integer_pow.117 = f32[4096]{0} multiply(%select_n.2818, %select_n.2818)
  %mul.7876 = f32[4096]{0} multiply(%integer_pow.117, %broadcast.5182)
  %param.508 = f32[4096]{0} parameter(688), sharding={replicated}
  %mul.7877 = f32[4096]{0} multiply(%param.508, %broadcast.5183)
  %add.3840 = f32[4096]{0} add(%mul.7876, %mul.7877)
  %div.2394 = f32[4096]{0} divide(%add.3840, %div.2012)
  %sqrt.106 = f32[4096]{0} sqrt(%div.2394)
  %add.3841 = f32[4096]{0} add(%sqrt.106, %broadcast.5184)
  %multiply.3293 = f32[4096]{0} multiply(%div.2010, %add.3841)
  %div.2395 = f32[4096]{0} divide(%add.3839, %multiply.3293)
  %mul.7879 = f32[4096]{0} multiply(%param.178, %broadcast.5180)
  %add.3842 = f32[4096]{0} add(%div.2395, %mul.7879)
  %mul.7881 = f32[4096]{0} multiply(%mul.1626, %add.3842)
  %add.3843 = f32[4096]{0} add(%param.178, %mul.7881)
  %div.2396 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3603, %div.2043)
  %select_n.2819 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3603, %div.2396)
  %mul.7882 = f32[512,8,128]{2,1,0} multiply(%select_n.2819, %broadcast.5195)
  %param.509 = f32[512,8,128]{2,1,0} parameter(398), sharding={devices=[8,1,1]<=[8]}
  %mul.7883 = f32[512,8,128]{2,1,0} multiply(%param.509, %broadcast.5196)
  %add.3844 = f32[512,8,128]{2,1,0} add(%mul.7882, %mul.7883)
  %integer_pow.118 = f32[512,8,128]{2,1,0} multiply(%select_n.2819, %select_n.2819)
  %mul.7884 = f32[512,8,128]{2,1,0} multiply(%integer_pow.118, %broadcast.5197)
  %param.510 = f32[512,8,128]{2,1,0} parameter(689), sharding={devices=[8,1,1]<=[8]}
  %mul.7885 = f32[512,8,128]{2,1,0} multiply(%param.510, %broadcast.5198)
  %add.3845 = f32[512,8,128]{2,1,0} add(%mul.7884, %mul.7885)
  %div.2397 = f32[512,8,128]{2,1,0} divide(%add.3845, %div.2046)
  %sqrt.107 = f32[512,8,128]{2,1,0} sqrt(%div.2397)
  %add.3846 = f32[512,8,128]{2,1,0} add(%sqrt.107, %broadcast.5199)
  %multiply.3294 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3846)
  %div.2398 = f32[512,8,128]{2,1,0} divide(%add.3844, %multiply.3294)
  %mul.7886 = f32[512,8,128]{2,1,0} multiply(%param.180, %broadcast.5195)
  %add.3847 = f32[512,8,128]{2,1,0} add(%div.2398, %mul.7886)
  %mul.7888 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3847)
  %add.3848 = f32[512,8,128]{2,1,0} add(%param.180, %mul.7888)
  %div.2399 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3605, %div.2049)
  %select_n.2820 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3605, %div.2399)
  %mul.7892 = f32[32,128,512]{2,1,0} multiply(%select_n.2820, %broadcast.5200)
  %param.511 = f32[32,128,512]{2,1,0} parameter(399), sharding={devices=[1,1,8]<=[8]}
  %mul.7893 = f32[32,128,512]{2,1,0} multiply(%param.511, %broadcast.5201)
  %add.3849 = f32[32,128,512]{2,1,0} add(%mul.7892, %mul.7893)
  %integer_pow.119 = f32[32,128,512]{2,1,0} multiply(%select_n.2820, %select_n.2820)
  %mul.7894 = f32[32,128,512]{2,1,0} multiply(%integer_pow.119, %broadcast.5202)
  %param.512 = f32[32,128,512]{2,1,0} parameter(690), sharding={devices=[1,1,8]<=[8]}
  %mul.7895 = f32[32,128,512]{2,1,0} multiply(%param.512, %broadcast.5203)
  %add.3850 = f32[32,128,512]{2,1,0} add(%mul.7894, %mul.7895)
  %div.2400 = f32[32,128,512]{2,1,0} divide(%add.3850, %div.2052)
  %sqrt.108 = f32[32,128,512]{2,1,0} sqrt(%div.2400)
  %add.3851 = f32[32,128,512]{2,1,0} add(%sqrt.108, %broadcast.5204)
  %multiply.3295 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3851)
  %div.2401 = f32[32,128,512]{2,1,0} divide(%add.3849, %multiply.3295)
  %mul.7896 = f32[32,128,512]{2,1,0} multiply(%param.182, %broadcast.5200)
  %add.3852 = f32[32,128,512]{2,1,0} add(%div.2401, %mul.7896)
  %mul.7897 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3852)
  %add.3853 = f32[32,128,512]{2,1,0} add(%param.182, %mul.7897)
  %div.2402 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3608, %div.2055)
  %select_n.2821 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3608, %div.2402)
  %mul.7898 = f32[512,32,128]{2,1,0} multiply(%select_n.2821, %broadcast.5205)
  %param.513 = f32[512,32,128]{2,1,0} parameter(400), sharding={devices=[8,1,1]<=[8]}
  %mul.7899 = f32[512,32,128]{2,1,0} multiply(%param.513, %broadcast.5206)
  %add.3854 = f32[512,32,128]{2,1,0} add(%mul.7898, %mul.7899)
  %integer_pow.120 = f32[512,32,128]{2,1,0} multiply(%select_n.2821, %select_n.2821)
  %mul.7900 = f32[512,32,128]{2,1,0} multiply(%integer_pow.120, %broadcast.5207)
  %param.514 = f32[512,32,128]{2,1,0} parameter(691), sharding={devices=[8,1,1]<=[8]}
  %mul.7901 = f32[512,32,128]{2,1,0} multiply(%param.514, %broadcast.5208)
  %add.3855 = f32[512,32,128]{2,1,0} add(%mul.7900, %mul.7901)
  %div.2403 = f32[512,32,128]{2,1,0} divide(%add.3855, %div.2058)
  %sqrt.109 = f32[512,32,128]{2,1,0} sqrt(%div.2403)
  %add.3857 = f32[512,32,128]{2,1,0} add(%sqrt.109, %broadcast.5209)
  %multiply.3296 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3857)
  %div.2404 = f32[512,32,128]{2,1,0} divide(%add.3854, %multiply.3296)
  %mul.7902 = f32[512,32,128]{2,1,0} multiply(%param.179, %broadcast.5205)
  %add.3858 = f32[512,32,128]{2,1,0} add(%div.2404, %mul.7902)
  %mul.7906 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3858)
  %add.3859 = f32[512,32,128]{2,1,0} add(%param.179, %mul.7906)
  %div.2405 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3611, %div.2043)
  %select_n.2822 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3611, %div.2405)
  %mul.7907 = f32[512,8,128]{2,1,0} multiply(%select_n.2822, %broadcast.5195)
  %param.515 = f32[512,8,128]{2,1,0} parameter(401), sharding={devices=[8,1,1]<=[8]}
  %mul.7908 = f32[512,8,128]{2,1,0} multiply(%param.515, %broadcast.5196)
  %add.3860 = f32[512,8,128]{2,1,0} add(%mul.7907, %mul.7908)
  %integer_pow.121 = f32[512,8,128]{2,1,0} multiply(%select_n.2822, %select_n.2822)
  %mul.7911 = f32[512,8,128]{2,1,0} multiply(%integer_pow.121, %broadcast.5197)
  %param.516 = f32[512,8,128]{2,1,0} parameter(692), sharding={devices=[8,1,1]<=[8]}
  %mul.7912 = f32[512,8,128]{2,1,0} multiply(%param.516, %broadcast.5198)
  %add.3861 = f32[512,8,128]{2,1,0} add(%mul.7911, %mul.7912)
  %div.2406 = f32[512,8,128]{2,1,0} divide(%add.3861, %div.2046)
  %sqrt.110 = f32[512,8,128]{2,1,0} sqrt(%div.2406)
  %add.3862 = f32[512,8,128]{2,1,0} add(%sqrt.110, %broadcast.5199)
  %multiply.3297 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3862)
  %div.2407 = f32[512,8,128]{2,1,0} divide(%add.3860, %multiply.3297)
  %mul.7913 = f32[512,8,128]{2,1,0} multiply(%param.181, %broadcast.5195)
  %add.3864 = f32[512,8,128]{2,1,0} add(%div.2407, %mul.7913)
  %mul.7914 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3864)
  %add.3866 = f32[512,8,128]{2,1,0} add(%param.181, %mul.7914)
  %div.2408 = f32[512,14336]{1,0} divide(%convert_element_type.3613, %div.2022)
  %select_n.2823 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3613, %div.2408)
  %mul.7915 = f32[512,14336]{1,0} multiply(%select_n.2823, %broadcast.5185)
  %param.517 = f32[512,14336]{1,0} parameter(402), sharding={devices=[8,1]<=[8]}
  %mul.7916 = f32[512,14336]{1,0} multiply(%param.517, %broadcast.5186)
  %add.3867 = f32[512,14336]{1,0} add(%mul.7915, %mul.7916)
  %integer_pow.122 = f32[512,14336]{1,0} multiply(%select_n.2823, %select_n.2823)
  %mul.7917 = f32[512,14336]{1,0} multiply(%integer_pow.122, %broadcast.5187)
  %param.518 = f32[512,14336]{1,0} parameter(693), sharding={devices=[8,1]<=[8]}
  %mul.7918 = f32[512,14336]{1,0} multiply(%param.518, %broadcast.5188)
  %add.3868 = f32[512,14336]{1,0} add(%mul.7917, %mul.7918)
  %div.2409 = f32[512,14336]{1,0} divide(%add.3868, %div.2025)
  %sqrt.111 = f32[512,14336]{1,0} sqrt(%div.2409)
  %add.3869 = f32[512,14336]{1,0} add(%sqrt.111, %broadcast.5189)
  %multiply.3298 = f32[512,14336]{1,0} multiply(%div.2024, %add.3869)
  %div.2410 = f32[512,14336]{1,0} divide(%add.3867, %multiply.3298)
  %mul.7919 = f32[512,14336]{1,0} multiply(%param.31, %broadcast.5185)
  %add.3870 = f32[512,14336]{1,0} add(%div.2410, %mul.7919)
  %mul.7920 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3870)
  %add.3871 = f32[512,14336]{1,0} add(%param.31, %mul.7920)
  %div.2411 = f32[512,14336]{1,0} divide(%convert_element_type.3614, %div.2022)
  %select_n.2824 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3614, %div.2411)
  %mul.7921 = f32[512,14336]{1,0} multiply(%select_n.2824, %broadcast.5185)
  %param.519 = f32[512,14336]{1,0} parameter(403), sharding={devices=[8,1]<=[8]}
  %mul.7922 = f32[512,14336]{1,0} multiply(%param.519, %broadcast.5186)
  %add.3872 = f32[512,14336]{1,0} add(%mul.7921, %mul.7922)
  %integer_pow.123 = f32[512,14336]{1,0} multiply(%select_n.2824, %select_n.2824)
  %mul.7923 = f32[512,14336]{1,0} multiply(%integer_pow.123, %broadcast.5187)
  %param.520 = f32[512,14336]{1,0} parameter(694), sharding={devices=[8,1]<=[8]}
  %mul.7924 = f32[512,14336]{1,0} multiply(%param.520, %broadcast.5188)
  %add.3874 = f32[512,14336]{1,0} add(%mul.7923, %mul.7924)
  %div.2412 = f32[512,14336]{1,0} divide(%add.3874, %div.2025)
  %sqrt.112 = f32[512,14336]{1,0} sqrt(%div.2412)
  %add.3875 = f32[512,14336]{1,0} add(%sqrt.112, %broadcast.5189)
  %multiply.3299 = f32[512,14336]{1,0} multiply(%div.2024, %add.3875)
  %div.2413 = f32[512,14336]{1,0} divide(%add.3872, %multiply.3299)
  %mul.7925 = f32[512,14336]{1,0} multiply(%param.32, %broadcast.5185)
  %add.3876 = f32[512,14336]{1,0} add(%div.2413, %mul.7925)
  %mul.7926 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3876)
  %add.3877 = f32[512,14336]{1,0} add(%param.32, %mul.7926)
  %div.2414 = f32[14336,512]{1,0} divide(%convert_element_type.3616, %div.2031)
  %select_n.2827 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3616, %div.2414)
  %mul.7927 = f32[14336,512]{1,0} multiply(%select_n.2827, %broadcast.5190)
  %param.521 = f32[14336,512]{1,0} parameter(404), sharding={devices=[1,8]<=[8]}
  %mul.7928 = f32[14336,512]{1,0} multiply(%param.521, %broadcast.5191)
  %add.3878 = f32[14336,512]{1,0} add(%mul.7927, %mul.7928)
  %integer_pow.124 = f32[14336,512]{1,0} multiply(%select_n.2827, %select_n.2827)
  %mul.7933 = f32[14336,512]{1,0} multiply(%integer_pow.124, %broadcast.5192)
  %param.522 = f32[14336,512]{1,0} parameter(695), sharding={devices=[1,8]<=[8]}
  %mul.7938 = f32[14336,512]{1,0} multiply(%param.522, %broadcast.5193)
  %add.3880 = f32[14336,512]{1,0} add(%mul.7933, %mul.7938)
  %div.2415 = f32[14336,512]{1,0} divide(%add.3880, %div.2034)
  %sqrt.113 = f32[14336,512]{1,0} sqrt(%div.2415)
  %add.3881 = f32[14336,512]{1,0} add(%sqrt.113, %broadcast.5194)
  %multiply.3300 = f32[14336,512]{1,0} multiply(%div.2033, %add.3881)
  %div.2416 = f32[14336,512]{1,0} divide(%add.3878, %multiply.3300)
  %mul.7939 = f32[14336,512]{1,0} multiply(%param.33, %broadcast.5190)
  %add.3882 = f32[14336,512]{1,0} add(%div.2416, %mul.7939)
  %mul.7944 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3882)
  %add.3883 = f32[14336,512]{1,0} add(%param.33, %mul.7944)
  %div.2417 = f32[4096]{0} divide(%convert_element_type.3617, %div.2008)
  %select_n.2828 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3617, %div.2417)
  %mul.7945 = f32[4096]{0} multiply(%select_n.2828, %broadcast.5180)
  %param.523 = f32[4096]{0} parameter(405), sharding={replicated}
  %mul.7946 = f32[4096]{0} multiply(%param.523, %broadcast.5181)
  %add.3884 = f32[4096]{0} add(%mul.7945, %mul.7946)
  %integer_pow.125 = f32[4096]{0} multiply(%select_n.2828, %select_n.2828)
  %mul.7947 = f32[4096]{0} multiply(%integer_pow.125, %broadcast.5182)
  %param.524 = f32[4096]{0} parameter(696), sharding={replicated}
  %mul.7948 = f32[4096]{0} multiply(%param.524, %broadcast.5183)
  %add.3885 = f32[4096]{0} add(%mul.7947, %mul.7948)
  %div.2418 = f32[4096]{0} divide(%add.3885, %div.2012)
  %sqrt.114 = f32[4096]{0} sqrt(%div.2418)
  %add.3886 = f32[4096]{0} add(%sqrt.114, %broadcast.5184)
  %multiply.3301 = f32[4096]{0} multiply(%div.2010, %add.3886)
  %div.2419 = f32[4096]{0} divide(%add.3884, %multiply.3301)
  %mul.7949 = f32[4096]{0} multiply(%param.30, %broadcast.5180)
  %add.3887 = f32[4096]{0} add(%div.2419, %mul.7949)
  %mul.7950 = f32[4096]{0} multiply(%mul.1626, %add.3887)
  %add.3888 = f32[4096]{0} add(%param.30, %mul.7950)
  %div.2420 = f32[4096]{0} divide(%convert_element_type.3619, %div.2008)
  %select_n.2829 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3619, %div.2420)
  %mul.7951 = f32[4096]{0} multiply(%select_n.2829, %broadcast.5180)
  %param.525 = f32[4096]{0} parameter(406), sharding={replicated}
  %mul.7952 = f32[4096]{0} multiply(%param.525, %broadcast.5181)
  %add.3889 = f32[4096]{0} add(%mul.7951, %mul.7952)
  %integer_pow.126 = f32[4096]{0} multiply(%select_n.2829, %select_n.2829)
  %mul.7953 = f32[4096]{0} multiply(%integer_pow.126, %broadcast.5182)
  %param.526 = f32[4096]{0} parameter(697), sharding={replicated}
  %mul.7954 = f32[4096]{0} multiply(%param.526, %broadcast.5183)
  %add.3891 = f32[4096]{0} add(%mul.7953, %mul.7954)
  %div.2421 = f32[4096]{0} divide(%add.3891, %div.2012)
  %sqrt.115 = f32[4096]{0} sqrt(%div.2421)
  %add.3892 = f32[4096]{0} add(%sqrt.115, %broadcast.5184)
  %multiply.3302 = f32[4096]{0} multiply(%div.2010, %add.3892)
  %div.2422 = f32[4096]{0} divide(%add.3889, %multiply.3302)
  %mul.7955 = f32[4096]{0} multiply(%param.25, %broadcast.5180)
  %add.3893 = f32[4096]{0} add(%div.2422, %mul.7955)
  %mul.7956 = f32[4096]{0} multiply(%mul.1626, %add.3893)
  %add.3894 = f32[4096]{0} add(%param.25, %mul.7956)
  %div.2423 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3622, %div.2043)
  %select_n.2830 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3622, %div.2423)
  %mul.7957 = f32[512,8,128]{2,1,0} multiply(%select_n.2830, %broadcast.5195)
  %param.527 = f32[512,8,128]{2,1,0} parameter(407), sharding={devices=[8,1,1]<=[8]}
  %mul.7958 = f32[512,8,128]{2,1,0} multiply(%param.527, %broadcast.5196)
  %add.3895 = f32[512,8,128]{2,1,0} add(%mul.7957, %mul.7958)
  %integer_pow.127 = f32[512,8,128]{2,1,0} multiply(%select_n.2830, %select_n.2830)
  %mul.7959 = f32[512,8,128]{2,1,0} multiply(%integer_pow.127, %broadcast.5197)
  %param.528 = f32[512,8,128]{2,1,0} parameter(698), sharding={devices=[8,1,1]<=[8]}
  %mul.7960 = f32[512,8,128]{2,1,0} multiply(%param.528, %broadcast.5198)
  %add.3896 = f32[512,8,128]{2,1,0} add(%mul.7959, %mul.7960)
  %div.2424 = f32[512,8,128]{2,1,0} divide(%add.3896, %div.2046)
  %sqrt.116 = f32[512,8,128]{2,1,0} sqrt(%div.2424)
  %add.3897 = f32[512,8,128]{2,1,0} add(%sqrt.116, %broadcast.5199)
  %multiply.3303 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3897)
  %div.2425 = f32[512,8,128]{2,1,0} divide(%add.3895, %multiply.3303)
  %mul.7961 = f32[512,8,128]{2,1,0} multiply(%param.27, %broadcast.5195)
  %add.3898 = f32[512,8,128]{2,1,0} add(%div.2425, %mul.7961)
  %mul.7962 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3898)
  %add.3900 = f32[512,8,128]{2,1,0} add(%param.27, %mul.7962)
  %div.2426 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3625, %div.2049)
  %select_n.2831 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3625, %div.2426)
  %mul.7964 = f32[32,128,512]{2,1,0} multiply(%select_n.2831, %broadcast.5200)
  %param.529 = f32[32,128,512]{2,1,0} parameter(408), sharding={devices=[1,1,8]<=[8]}
  %mul.7965 = f32[32,128,512]{2,1,0} multiply(%param.529, %broadcast.5201)
  %add.3902 = f32[32,128,512]{2,1,0} add(%mul.7964, %mul.7965)
  %integer_pow.128 = f32[32,128,512]{2,1,0} multiply(%select_n.2831, %select_n.2831)
  %mul.7966 = f32[32,128,512]{2,1,0} multiply(%integer_pow.128, %broadcast.5202)
  %param.530 = f32[32,128,512]{2,1,0} parameter(699), sharding={devices=[1,1,8]<=[8]}
  %mul.7967 = f32[32,128,512]{2,1,0} multiply(%param.530, %broadcast.5203)
  %add.3903 = f32[32,128,512]{2,1,0} add(%mul.7966, %mul.7967)
  %div.2427 = f32[32,128,512]{2,1,0} divide(%add.3903, %div.2052)
  %sqrt.117 = f32[32,128,512]{2,1,0} sqrt(%div.2427)
  %add.3904 = f32[32,128,512]{2,1,0} add(%sqrt.117, %broadcast.5204)
  %multiply.3304 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3904)
  %div.2428 = f32[32,128,512]{2,1,0} divide(%add.3902, %multiply.3304)
  %mul.7968 = f32[32,128,512]{2,1,0} multiply(%param.29, %broadcast.5200)
  %add.3905 = f32[32,128,512]{2,1,0} add(%div.2428, %mul.7968)
  %mul.7969 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3905)
  %add.3906 = f32[32,128,512]{2,1,0} add(%param.29, %mul.7969)
  %div.2429 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3627, %div.2055)
  %select_n.2832 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3627, %div.2429)
  %mul.7970 = f32[512,32,128]{2,1,0} multiply(%select_n.2832, %broadcast.5205)
  %param.531 = f32[512,32,128]{2,1,0} parameter(409), sharding={devices=[8,1,1]<=[8]}
  %mul.7973 = f32[512,32,128]{2,1,0} multiply(%param.531, %broadcast.5206)
  %add.3907 = f32[512,32,128]{2,1,0} add(%mul.7970, %mul.7973)
  %integer_pow.129 = f32[512,32,128]{2,1,0} multiply(%select_n.2832, %select_n.2832)
  %mul.7974 = f32[512,32,128]{2,1,0} multiply(%integer_pow.129, %broadcast.5207)
  %param.532 = f32[512,32,128]{2,1,0} parameter(700), sharding={devices=[8,1,1]<=[8]}
  %mul.7977 = f32[512,32,128]{2,1,0} multiply(%param.532, %broadcast.5208)
  %add.3908 = f32[512,32,128]{2,1,0} add(%mul.7974, %mul.7977)
  %div.2430 = f32[512,32,128]{2,1,0} divide(%add.3908, %div.2058)
  %sqrt.118 = f32[512,32,128]{2,1,0} sqrt(%div.2430)
  %add.3909 = f32[512,32,128]{2,1,0} add(%sqrt.118, %broadcast.5209)
  %multiply.3305 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3909)
  %div.2431 = f32[512,32,128]{2,1,0} divide(%add.3907, %multiply.3305)
  %mul.7978 = f32[512,32,128]{2,1,0} multiply(%param.26, %broadcast.5205)
  %add.3910 = f32[512,32,128]{2,1,0} add(%div.2431, %mul.7978)
  %mul.7980 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3910)
  %add.3912 = f32[512,32,128]{2,1,0} add(%param.26, %mul.7980)
  %div.2432 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3630, %div.2043)
  %select_n.2833 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3630, %div.2432)
  %mul.7982 = f32[512,8,128]{2,1,0} multiply(%select_n.2833, %broadcast.5195)
  %param.533 = f32[512,8,128]{2,1,0} parameter(410), sharding={devices=[8,1,1]<=[8]}
  %mul.7983 = f32[512,8,128]{2,1,0} multiply(%param.533, %broadcast.5196)
  %add.3913 = f32[512,8,128]{2,1,0} add(%mul.7982, %mul.7983)
  %integer_pow.130 = f32[512,8,128]{2,1,0} multiply(%select_n.2833, %select_n.2833)
  %mul.7984 = f32[512,8,128]{2,1,0} multiply(%integer_pow.130, %broadcast.5197)
  %param.534 = f32[512,8,128]{2,1,0} parameter(701), sharding={devices=[8,1,1]<=[8]}
  %mul.7986 = f32[512,8,128]{2,1,0} multiply(%param.534, %broadcast.5198)
  %add.3914 = f32[512,8,128]{2,1,0} add(%mul.7984, %mul.7986)
  %div.2433 = f32[512,8,128]{2,1,0} divide(%add.3914, %div.2046)
  %sqrt.119 = f32[512,8,128]{2,1,0} sqrt(%div.2433)
  %add.3915 = f32[512,8,128]{2,1,0} add(%sqrt.119, %broadcast.5199)
  %multiply.3306 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3915)
  %div.2434 = f32[512,8,128]{2,1,0} divide(%add.3913, %multiply.3306)
  %mul.7987 = f32[512,8,128]{2,1,0} multiply(%param.28, %broadcast.5195)
  %add.3916 = f32[512,8,128]{2,1,0} add(%div.2434, %mul.7987)
  %mul.7988 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3916)
  %add.3917 = f32[512,8,128]{2,1,0} add(%param.28, %mul.7988)
  %div.2435 = f32[512,14336]{1,0} divide(%convert_element_type.3632, %div.2022)
  %select_n.2834 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3632, %div.2435)
  %mul.7990 = f32[512,14336]{1,0} multiply(%select_n.2834, %broadcast.5185)
  %param.535 = f32[512,14336]{1,0} parameter(411), sharding={devices=[8,1]<=[8]}
  %mul.7991 = f32[512,14336]{1,0} multiply(%param.535, %broadcast.5186)
  %add.3918 = f32[512,14336]{1,0} add(%mul.7990, %mul.7991)
  %integer_pow.131 = f32[512,14336]{1,0} multiply(%select_n.2834, %select_n.2834)
  %mul.7992 = f32[512,14336]{1,0} multiply(%integer_pow.131, %broadcast.5187)
  %param.536 = f32[512,14336]{1,0} parameter(702), sharding={devices=[8,1]<=[8]}
  %mul.7993 = f32[512,14336]{1,0} multiply(%param.536, %broadcast.5188)
  %add.3919 = f32[512,14336]{1,0} add(%mul.7992, %mul.7993)
  %div.2436 = f32[512,14336]{1,0} divide(%add.3919, %div.2025)
  %sqrt.120 = f32[512,14336]{1,0} sqrt(%div.2436)
  %add.3920 = f32[512,14336]{1,0} add(%sqrt.120, %broadcast.5189)
  %multiply.3307 = f32[512,14336]{1,0} multiply(%div.2024, %add.3920)
  %div.2437 = f32[512,14336]{1,0} divide(%add.3918, %multiply.3307)
  %mul.7994 = f32[512,14336]{1,0} multiply(%param.193, %broadcast.5185)
  %add.3921 = f32[512,14336]{1,0} add(%div.2437, %mul.7994)
  %mul.7995 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3921)
  %add.3922 = f32[512,14336]{1,0} add(%param.193, %mul.7995)
  %div.2438 = f32[512,14336]{1,0} divide(%convert_element_type.3633, %div.2022)
  %select_n.2835 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3633, %div.2438)
  %mul.7996 = f32[512,14336]{1,0} multiply(%select_n.2835, %broadcast.5185)
  %param.537 = f32[512,14336]{1,0} parameter(412), sharding={devices=[8,1]<=[8]}
  %mul.7997 = f32[512,14336]{1,0} multiply(%param.537, %broadcast.5186)
  %add.3923 = f32[512,14336]{1,0} add(%mul.7996, %mul.7997)
  %integer_pow.132 = f32[512,14336]{1,0} multiply(%select_n.2835, %select_n.2835)
  %mul.7998 = f32[512,14336]{1,0} multiply(%integer_pow.132, %broadcast.5187)
  %param.538 = f32[512,14336]{1,0} parameter(703), sharding={devices=[8,1]<=[8]}
  %mul.7999 = f32[512,14336]{1,0} multiply(%param.538, %broadcast.5188)
  %add.3924 = f32[512,14336]{1,0} add(%mul.7998, %mul.7999)
  %div.2439 = f32[512,14336]{1,0} divide(%add.3924, %div.2025)
  %sqrt.121 = f32[512,14336]{1,0} sqrt(%div.2439)
  %add.3925 = f32[512,14336]{1,0} add(%sqrt.121, %broadcast.5189)
  %multiply.3308 = f32[512,14336]{1,0} multiply(%div.2024, %add.3925)
  %div.2440 = f32[512,14336]{1,0} divide(%add.3923, %multiply.3308)
  %mul.8000 = f32[512,14336]{1,0} multiply(%param.194, %broadcast.5185)
  %add.3926 = f32[512,14336]{1,0} add(%div.2440, %mul.8000)
  %mul.8001 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3926)
  %add.3927 = f32[512,14336]{1,0} add(%param.194, %mul.8001)
  %div.2441 = f32[14336,512]{1,0} divide(%convert_element_type.3634, %div.2031)
  %select_n.2836 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3634, %div.2441)
  %mul.8002 = f32[14336,512]{1,0} multiply(%select_n.2836, %broadcast.5190)
  %param.539 = f32[14336,512]{1,0} parameter(413), sharding={devices=[1,8]<=[8]}
  %mul.8003 = f32[14336,512]{1,0} multiply(%param.539, %broadcast.5191)
  %add.3928 = f32[14336,512]{1,0} add(%mul.8002, %mul.8003)
  %integer_pow.133 = f32[14336,512]{1,0} multiply(%select_n.2836, %select_n.2836)
  %mul.8004 = f32[14336,512]{1,0} multiply(%integer_pow.133, %broadcast.5192)
  %param.540 = f32[14336,512]{1,0} parameter(704), sharding={devices=[1,8]<=[8]}
  %mul.8009 = f32[14336,512]{1,0} multiply(%param.540, %broadcast.5193)
  %add.3929 = f32[14336,512]{1,0} add(%mul.8004, %mul.8009)
  %div.2442 = f32[14336,512]{1,0} divide(%add.3929, %div.2034)
  %sqrt.122 = f32[14336,512]{1,0} sqrt(%div.2442)
  %add.3930 = f32[14336,512]{1,0} add(%sqrt.122, %broadcast.5194)
  %multiply.3309 = f32[14336,512]{1,0} multiply(%div.2033, %add.3930)
  %div.2443 = f32[14336,512]{1,0} divide(%add.3928, %multiply.3309)
  %mul.8014 = f32[14336,512]{1,0} multiply(%param.195, %broadcast.5190)
  %add.3931 = f32[14336,512]{1,0} add(%div.2443, %mul.8014)
  %mul.8015 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3931)
  %add.3932 = f32[14336,512]{1,0} add(%param.195, %mul.8015)
  %div.2444 = f32[4096]{0} divide(%convert_element_type.3635, %div.2008)
  %select_n.2837 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3635, %div.2444)
  %mul.8020 = f32[4096]{0} multiply(%select_n.2837, %broadcast.5180)
  %param.541 = f32[4096]{0} parameter(414), sharding={replicated}
  %mul.8021 = f32[4096]{0} multiply(%param.541, %broadcast.5181)
  %add.3933 = f32[4096]{0} add(%mul.8020, %mul.8021)
  %integer_pow.134 = f32[4096]{0} multiply(%select_n.2837, %select_n.2837)
  %mul.8023 = f32[4096]{0} multiply(%integer_pow.134, %broadcast.5182)
  %param.542 = f32[4096]{0} parameter(705), sharding={replicated}
  %mul.8024 = f32[4096]{0} multiply(%param.542, %broadcast.5183)
  %add.3934 = f32[4096]{0} add(%mul.8023, %mul.8024)
  %div.2445 = f32[4096]{0} divide(%add.3934, %div.2012)
  %sqrt.123 = f32[4096]{0} sqrt(%div.2445)
  %add.3935 = f32[4096]{0} add(%sqrt.123, %broadcast.5184)
  %multiply.3310 = f32[4096]{0} multiply(%div.2010, %add.3935)
  %div.2446 = f32[4096]{0} divide(%add.3933, %multiply.3310)
  %mul.8025 = f32[4096]{0} multiply(%param.192, %broadcast.5180)
  %add.3936 = f32[4096]{0} add(%div.2446, %mul.8025)
  %mul.8026 = f32[4096]{0} multiply(%mul.1626, %add.3936)
  %add.3937 = f32[4096]{0} add(%param.192, %mul.8026)
  %div.2447 = f32[4096]{0} divide(%convert_element_type.3639, %div.2008)
  %select_n.2838 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3639, %div.2447)
  %mul.8027 = f32[4096]{0} multiply(%select_n.2838, %broadcast.5180)
  %param.543 = f32[4096]{0} parameter(415), sharding={replicated}
  %mul.8028 = f32[4096]{0} multiply(%param.543, %broadcast.5181)
  %add.3938 = f32[4096]{0} add(%mul.8027, %mul.8028)
  %integer_pow.135 = f32[4096]{0} multiply(%select_n.2838, %select_n.2838)
  %mul.8029 = f32[4096]{0} multiply(%integer_pow.135, %broadcast.5182)
  %param.544 = f32[4096]{0} parameter(706), sharding={replicated}
  %mul.8030 = f32[4096]{0} multiply(%param.544, %broadcast.5183)
  %add.3939 = f32[4096]{0} add(%mul.8029, %mul.8030)
  %div.2448 = f32[4096]{0} divide(%add.3939, %div.2012)
  %sqrt.124 = f32[4096]{0} sqrt(%div.2448)
  %add.3940 = f32[4096]{0} add(%sqrt.124, %broadcast.5184)
  %multiply.3311 = f32[4096]{0} multiply(%div.2010, %add.3940)
  %div.2449 = f32[4096]{0} divide(%add.3938, %multiply.3311)
  %mul.8031 = f32[4096]{0} multiply(%param.187, %broadcast.5180)
  %add.3942 = f32[4096]{0} add(%div.2449, %mul.8031)
  %mul.8032 = f32[4096]{0} multiply(%mul.1626, %add.3942)
  %add.3943 = f32[4096]{0} add(%param.187, %mul.8032)
  %div.2450 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3643, %div.2043)
  %select_n.2839 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3643, %div.2450)
  %mul.8033 = f32[512,8,128]{2,1,0} multiply(%select_n.2839, %broadcast.5195)
  %param.545 = f32[512,8,128]{2,1,0} parameter(416), sharding={devices=[8,1,1]<=[8]}
  %mul.8034 = f32[512,8,128]{2,1,0} multiply(%param.545, %broadcast.5196)
  %add.3944 = f32[512,8,128]{2,1,0} add(%mul.8033, %mul.8034)
  %integer_pow.136 = f32[512,8,128]{2,1,0} multiply(%select_n.2839, %select_n.2839)
  %mul.8035 = f32[512,8,128]{2,1,0} multiply(%integer_pow.136, %broadcast.5197)
  %param.546 = f32[512,8,128]{2,1,0} parameter(707), sharding={devices=[8,1,1]<=[8]}
  %mul.8036 = f32[512,8,128]{2,1,0} multiply(%param.546, %broadcast.5198)
  %add.3945 = f32[512,8,128]{2,1,0} add(%mul.8035, %mul.8036)
  %div.2451 = f32[512,8,128]{2,1,0} divide(%add.3945, %div.2046)
  %sqrt.125 = f32[512,8,128]{2,1,0} sqrt(%div.2451)
  %add.3946 = f32[512,8,128]{2,1,0} add(%sqrt.125, %broadcast.5199)
  %multiply.3312 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3946)
  %div.2452 = f32[512,8,128]{2,1,0} divide(%add.3944, %multiply.3312)
  %mul.8037 = f32[512,8,128]{2,1,0} multiply(%param.189, %broadcast.5195)
  %add.3947 = f32[512,8,128]{2,1,0} add(%div.2452, %mul.8037)
  %mul.8038 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3947)
  %add.3948 = f32[512,8,128]{2,1,0} add(%param.189, %mul.8038)
  %div.2453 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3645, %div.2049)
  %select_n.2840 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3645, %div.2453)
  %mul.8039 = f32[32,128,512]{2,1,0} multiply(%select_n.2840, %broadcast.5200)
  %param.547 = f32[32,128,512]{2,1,0} parameter(417), sharding={devices=[1,1,8]<=[8]}
  %mul.8040 = f32[32,128,512]{2,1,0} multiply(%param.547, %broadcast.5201)
  %add.3949 = f32[32,128,512]{2,1,0} add(%mul.8039, %mul.8040)
  %integer_pow.137 = f32[32,128,512]{2,1,0} multiply(%select_n.2840, %select_n.2840)
  %mul.8041 = f32[32,128,512]{2,1,0} multiply(%integer_pow.137, %broadcast.5202)
  %param.548 = f32[32,128,512]{2,1,0} parameter(708), sharding={devices=[1,1,8]<=[8]}
  %mul.8043 = f32[32,128,512]{2,1,0} multiply(%param.548, %broadcast.5203)
  %add.3950 = f32[32,128,512]{2,1,0} add(%mul.8041, %mul.8043)
  %div.2454 = f32[32,128,512]{2,1,0} divide(%add.3950, %div.2052)
  %sqrt.126 = f32[32,128,512]{2,1,0} sqrt(%div.2454)
  %add.3951 = f32[32,128,512]{2,1,0} add(%sqrt.126, %broadcast.5204)
  %multiply.3314 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3951)
  %div.2455 = f32[32,128,512]{2,1,0} divide(%add.3949, %multiply.3314)
  %mul.8045 = f32[32,128,512]{2,1,0} multiply(%param.191, %broadcast.5200)
  %add.3952 = f32[32,128,512]{2,1,0} add(%div.2455, %mul.8045)
  %mul.8046 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3952)
  %add.3953 = f32[32,128,512]{2,1,0} add(%param.191, %mul.8046)
  %div.2456 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3648, %div.2055)
  %select_n.2842 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3648, %div.2456)
  %mul.8047 = f32[512,32,128]{2,1,0} multiply(%select_n.2842, %broadcast.5205)
  %param.549 = f32[512,32,128]{2,1,0} parameter(418), sharding={devices=[8,1,1]<=[8]}
  %mul.8048 = f32[512,32,128]{2,1,0} multiply(%param.549, %broadcast.5206)
  %add.3954 = f32[512,32,128]{2,1,0} add(%mul.8047, %mul.8048)
  %integer_pow.138 = f32[512,32,128]{2,1,0} multiply(%select_n.2842, %select_n.2842)
  %mul.8049 = f32[512,32,128]{2,1,0} multiply(%integer_pow.138, %broadcast.5207)
  %param.550 = f32[512,32,128]{2,1,0} parameter(709), sharding={devices=[8,1,1]<=[8]}
  %mul.8050 = f32[512,32,128]{2,1,0} multiply(%param.550, %broadcast.5208)
  %add.3955 = f32[512,32,128]{2,1,0} add(%mul.8049, %mul.8050)
  %div.2457 = f32[512,32,128]{2,1,0} divide(%add.3955, %div.2058)
  %sqrt.127 = f32[512,32,128]{2,1,0} sqrt(%div.2457)
  %add.3956 = f32[512,32,128]{2,1,0} add(%sqrt.127, %broadcast.5209)
  %multiply.3315 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.3956)
  %div.2458 = f32[512,32,128]{2,1,0} divide(%add.3954, %multiply.3315)
  %mul.8051 = f32[512,32,128]{2,1,0} multiply(%param.188, %broadcast.5205)
  %add.3957 = f32[512,32,128]{2,1,0} add(%div.2458, %mul.8051)
  %mul.8052 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.3957)
  %add.3958 = f32[512,32,128]{2,1,0} add(%param.188, %mul.8052)
  %div.2459 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3651, %div.2043)
  %select_n.2843 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3651, %div.2459)
  %mul.8056 = f32[512,8,128]{2,1,0} multiply(%select_n.2843, %broadcast.5195)
  %param.551 = f32[512,8,128]{2,1,0} parameter(419), sharding={devices=[8,1,1]<=[8]}
  %mul.8057 = f32[512,8,128]{2,1,0} multiply(%param.551, %broadcast.5196)
  %add.3959 = f32[512,8,128]{2,1,0} add(%mul.8056, %mul.8057)
  %integer_pow.139 = f32[512,8,128]{2,1,0} multiply(%select_n.2843, %select_n.2843)
  %mul.8058 = f32[512,8,128]{2,1,0} multiply(%integer_pow.139, %broadcast.5197)
  %param.552 = f32[512,8,128]{2,1,0} parameter(710), sharding={devices=[8,1,1]<=[8]}
  %mul.8059 = f32[512,8,128]{2,1,0} multiply(%param.552, %broadcast.5198)
  %add.3960 = f32[512,8,128]{2,1,0} add(%mul.8058, %mul.8059)
  %div.2460 = f32[512,8,128]{2,1,0} divide(%add.3960, %div.2046)
  %sqrt.128 = f32[512,8,128]{2,1,0} sqrt(%div.2460)
  %add.3961 = f32[512,8,128]{2,1,0} add(%sqrt.128, %broadcast.5199)
  %multiply.3316 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3961)
  %div.2461 = f32[512,8,128]{2,1,0} divide(%add.3959, %multiply.3316)
  %mul.8060 = f32[512,8,128]{2,1,0} multiply(%param.190, %broadcast.5195)
  %add.3962 = f32[512,8,128]{2,1,0} add(%div.2461, %mul.8060)
  %mul.8061 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3962)
  %add.3963 = f32[512,8,128]{2,1,0} add(%param.190, %mul.8061)
  %div.2462 = f32[512,14336]{1,0} divide(%convert_element_type.3655, %div.2022)
  %select_n.2845 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3655, %div.2462)
  %mul.8062 = f32[512,14336]{1,0} multiply(%select_n.2845, %broadcast.5185)
  %param.553 = f32[512,14336]{1,0} parameter(420), sharding={devices=[8,1]<=[8]}
  %mul.8063 = f32[512,14336]{1,0} multiply(%param.553, %broadcast.5186)
  %add.3964 = f32[512,14336]{1,0} add(%mul.8062, %mul.8063)
  %integer_pow.140 = f32[512,14336]{1,0} multiply(%select_n.2845, %select_n.2845)
  %mul.8064 = f32[512,14336]{1,0} multiply(%integer_pow.140, %broadcast.5187)
  %param.554 = f32[512,14336]{1,0} parameter(711), sharding={devices=[8,1]<=[8]}
  %mul.8065 = f32[512,14336]{1,0} multiply(%param.554, %broadcast.5188)
  %add.3965 = f32[512,14336]{1,0} add(%mul.8064, %mul.8065)
  %div.2463 = f32[512,14336]{1,0} divide(%add.3965, %div.2025)
  %sqrt.129 = f32[512,14336]{1,0} sqrt(%div.2463)
  %add.3966 = f32[512,14336]{1,0} add(%sqrt.129, %broadcast.5189)
  %multiply.3317 = f32[512,14336]{1,0} multiply(%div.2024, %add.3966)
  %div.2464 = f32[512,14336]{1,0} divide(%add.3964, %multiply.3317)
  %mul.8066 = f32[512,14336]{1,0} multiply(%param.202, %broadcast.5185)
  %add.3967 = f32[512,14336]{1,0} add(%div.2464, %mul.8066)
  %mul.8070 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3967)
  %add.3968 = f32[512,14336]{1,0} add(%param.202, %mul.8070)
  %div.2465 = f32[512,14336]{1,0} divide(%convert_element_type.3656, %div.2022)
  %select_n.2846 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3656, %div.2465)
  %mul.8071 = f32[512,14336]{1,0} multiply(%select_n.2846, %broadcast.5185)
  %param.555 = f32[512,14336]{1,0} parameter(421), sharding={devices=[8,1]<=[8]}
  %mul.8072 = f32[512,14336]{1,0} multiply(%param.555, %broadcast.5186)
  %add.3969 = f32[512,14336]{1,0} add(%mul.8071, %mul.8072)
  %integer_pow.141 = f32[512,14336]{1,0} multiply(%select_n.2846, %select_n.2846)
  %mul.8075 = f32[512,14336]{1,0} multiply(%integer_pow.141, %broadcast.5187)
  %param.556 = f32[512,14336]{1,0} parameter(712), sharding={devices=[8,1]<=[8]}
  %mul.8076 = f32[512,14336]{1,0} multiply(%param.556, %broadcast.5188)
  %add.3970 = f32[512,14336]{1,0} add(%mul.8075, %mul.8076)
  %div.2466 = f32[512,14336]{1,0} divide(%add.3970, %div.2025)
  %sqrt.130 = f32[512,14336]{1,0} sqrt(%div.2466)
  %add.3973 = f32[512,14336]{1,0} add(%sqrt.130, %broadcast.5189)
  %multiply.3318 = f32[512,14336]{1,0} multiply(%div.2024, %add.3973)
  %div.2468 = f32[512,14336]{1,0} divide(%add.3969, %multiply.3318)
  %mul.8077 = f32[512,14336]{1,0} multiply(%param.203, %broadcast.5185)
  %add.3974 = f32[512,14336]{1,0} add(%div.2468, %mul.8077)
  %mul.8078 = f32[512,14336]{1,0} multiply(%mul.7008, %add.3974)
  %add.3975 = f32[512,14336]{1,0} add(%param.203, %mul.8078)
  %div.2469 = f32[14336,512]{1,0} divide(%convert_element_type.3657, %div.2031)
  %select_n.2847 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3657, %div.2469)
  %mul.8079 = f32[14336,512]{1,0} multiply(%select_n.2847, %broadcast.5190)
  %param.557 = f32[14336,512]{1,0} parameter(422), sharding={devices=[1,8]<=[8]}
  %mul.8080 = f32[14336,512]{1,0} multiply(%param.557, %broadcast.5191)
  %add.3976 = f32[14336,512]{1,0} add(%mul.8079, %mul.8080)
  %integer_pow.142 = f32[14336,512]{1,0} multiply(%select_n.2847, %select_n.2847)
  %mul.8081 = f32[14336,512]{1,0} multiply(%integer_pow.142, %broadcast.5192)
  %param.558 = f32[14336,512]{1,0} parameter(713), sharding={devices=[1,8]<=[8]}
  %mul.8082 = f32[14336,512]{1,0} multiply(%param.558, %broadcast.5193)
  %add.3977 = f32[14336,512]{1,0} add(%mul.8081, %mul.8082)
  %div.2470 = f32[14336,512]{1,0} divide(%add.3977, %div.2034)
  %sqrt.131 = f32[14336,512]{1,0} sqrt(%div.2470)
  %add.3978 = f32[14336,512]{1,0} add(%sqrt.131, %broadcast.5194)
  %multiply.3319 = f32[14336,512]{1,0} multiply(%div.2033, %add.3978)
  %div.2471 = f32[14336,512]{1,0} divide(%add.3976, %multiply.3319)
  %mul.8083 = f32[14336,512]{1,0} multiply(%param.204, %broadcast.5190)
  %add.3979 = f32[14336,512]{1,0} add(%div.2471, %mul.8083)
  %mul.8084 = f32[14336,512]{1,0} multiply(%mul.7025, %add.3979)
  %add.3980 = f32[14336,512]{1,0} add(%param.204, %mul.8084)
  %div.2472 = f32[4096]{0} divide(%convert_element_type.3658, %div.2008)
  %select_n.2848 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3658, %div.2472)
  %mul.8085 = f32[4096]{0} multiply(%select_n.2848, %broadcast.5180)
  %param.559 = f32[4096]{0} parameter(423), sharding={replicated}
  %mul.8087 = f32[4096]{0} multiply(%param.559, %broadcast.5181)
  %add.3981 = f32[4096]{0} add(%mul.8085, %mul.8087)
  %integer_pow.143 = f32[4096]{0} multiply(%select_n.2848, %select_n.2848)
  %mul.8088 = f32[4096]{0} multiply(%integer_pow.143, %broadcast.5182)
  %param.560 = f32[4096]{0} parameter(714), sharding={replicated}
  %mul.8089 = f32[4096]{0} multiply(%param.560, %broadcast.5183)
  %add.3982 = f32[4096]{0} add(%mul.8088, %mul.8089)
  %div.2473 = f32[4096]{0} divide(%add.3982, %div.2012)
  %sqrt.132 = f32[4096]{0} sqrt(%div.2473)
  %add.3983 = f32[4096]{0} add(%sqrt.132, %broadcast.5184)
  %multiply.3320 = f32[4096]{0} multiply(%div.2010, %add.3983)
  %div.2474 = f32[4096]{0} divide(%add.3981, %multiply.3320)
  %mul.8094 = f32[4096]{0} multiply(%param.201, %broadcast.5180)
  %add.3984 = f32[4096]{0} add(%div.2474, %mul.8094)
  %mul.8095 = f32[4096]{0} multiply(%mul.1626, %add.3984)
  %add.3985 = f32[4096]{0} add(%param.201, %mul.8095)
  %div.2475 = f32[4096]{0} divide(%convert_element_type.3661, %div.2008)
  %select_n.2849 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3661, %div.2475)
  %mul.8096 = f32[4096]{0} multiply(%select_n.2849, %broadcast.5180)
  %param.561 = f32[4096]{0} parameter(424), sharding={replicated}
  %mul.8101 = f32[4096]{0} multiply(%param.561, %broadcast.5181)
  %add.3986 = f32[4096]{0} add(%mul.8096, %mul.8101)
  %integer_pow.144 = f32[4096]{0} multiply(%select_n.2849, %select_n.2849)
  %mul.8102 = f32[4096]{0} multiply(%integer_pow.144, %broadcast.5182)
  %param.562 = f32[4096]{0} parameter(715), sharding={replicated}
  %mul.8103 = f32[4096]{0} multiply(%param.562, %broadcast.5183)
  %add.3987 = f32[4096]{0} add(%mul.8102, %mul.8103)
  %div.2476 = f32[4096]{0} divide(%add.3987, %div.2012)
  %sqrt.133 = f32[4096]{0} sqrt(%div.2476)
  %add.3988 = f32[4096]{0} add(%sqrt.133, %broadcast.5184)
  %multiply.3321 = f32[4096]{0} multiply(%div.2010, %add.3988)
  %div.2477 = f32[4096]{0} divide(%add.3986, %multiply.3321)
  %mul.8104 = f32[4096]{0} multiply(%param.196, %broadcast.5180)
  %add.3989 = f32[4096]{0} add(%div.2477, %mul.8104)
  %mul.8105 = f32[4096]{0} multiply(%mul.1626, %add.3989)
  %add.3990 = f32[4096]{0} add(%param.196, %mul.8105)
  %div.2478 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3663, %div.2043)
  %select_n.2854 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3663, %div.2478)
  %mul.8107 = f32[512,8,128]{2,1,0} multiply(%select_n.2854, %broadcast.5195)
  %param.563 = f32[512,8,128]{2,1,0} parameter(425), sharding={devices=[8,1,1]<=[8]}
  %mul.8110 = f32[512,8,128]{2,1,0} multiply(%param.563, %broadcast.5196)
  %add.3991 = f32[512,8,128]{2,1,0} add(%mul.8107, %mul.8110)
  %integer_pow.145 = f32[512,8,128]{2,1,0} multiply(%select_n.2854, %select_n.2854)
  %mul.8111 = f32[512,8,128]{2,1,0} multiply(%integer_pow.145, %broadcast.5197)
  %param.564 = f32[512,8,128]{2,1,0} parameter(716), sharding={devices=[8,1,1]<=[8]}
  %mul.8112 = f32[512,8,128]{2,1,0} multiply(%param.564, %broadcast.5198)
  %add.3992 = f32[512,8,128]{2,1,0} add(%mul.8111, %mul.8112)
  %div.2479 = f32[512,8,128]{2,1,0} divide(%add.3992, %div.2046)
  %sqrt.134 = f32[512,8,128]{2,1,0} sqrt(%div.2479)
  %add.3993 = f32[512,8,128]{2,1,0} add(%sqrt.134, %broadcast.5199)
  %multiply.3322 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.3993)
  %div.2480 = f32[512,8,128]{2,1,0} divide(%add.3991, %multiply.3322)
  %mul.8113 = f32[512,8,128]{2,1,0} multiply(%param.198, %broadcast.5195)
  %add.3994 = f32[512,8,128]{2,1,0} add(%div.2480, %mul.8113)
  %mul.8114 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.3994)
  %add.3995 = f32[512,8,128]{2,1,0} add(%param.198, %mul.8114)
  %div.2481 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3666, %div.2049)
  %select_n.2855 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3666, %div.2481)
  %mul.8115 = f32[32,128,512]{2,1,0} multiply(%select_n.2855, %broadcast.5200)
  %param.565 = f32[32,128,512]{2,1,0} parameter(426), sharding={devices=[1,1,8]<=[8]}
  %mul.8116 = f32[32,128,512]{2,1,0} multiply(%param.565, %broadcast.5201)
  %add.3996 = f32[32,128,512]{2,1,0} add(%mul.8115, %mul.8116)
  %integer_pow.146 = f32[32,128,512]{2,1,0} multiply(%select_n.2855, %select_n.2855)
  %mul.8120 = f32[32,128,512]{2,1,0} multiply(%integer_pow.146, %broadcast.5202)
  %param.566 = f32[32,128,512]{2,1,0} parameter(717), sharding={devices=[1,1,8]<=[8]}
  %mul.8121 = f32[32,128,512]{2,1,0} multiply(%param.566, %broadcast.5203)
  %add.3997 = f32[32,128,512]{2,1,0} add(%mul.8120, %mul.8121)
  %div.2482 = f32[32,128,512]{2,1,0} divide(%add.3997, %div.2052)
  %sqrt.135 = f32[32,128,512]{2,1,0} sqrt(%div.2482)
  %add.3998 = f32[32,128,512]{2,1,0} add(%sqrt.135, %broadcast.5204)
  %multiply.3323 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.3998)
  %div.2483 = f32[32,128,512]{2,1,0} divide(%add.3996, %multiply.3323)
  %mul.8122 = f32[32,128,512]{2,1,0} multiply(%param.200, %broadcast.5200)
  %add.3999 = f32[32,128,512]{2,1,0} add(%div.2483, %mul.8122)
  %mul.8123 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.3999)
  %add.4000 = f32[32,128,512]{2,1,0} add(%param.200, %mul.8123)
  %div.2484 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3668, %div.2055)
  %select_n.2856 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3668, %div.2484)
  %mul.8124 = f32[512,32,128]{2,1,0} multiply(%select_n.2856, %broadcast.5205)
  %param.567 = f32[512,32,128]{2,1,0} parameter(427), sharding={devices=[8,1,1]<=[8]}
  %mul.8125 = f32[512,32,128]{2,1,0} multiply(%param.567, %broadcast.5206)
  %add.4001 = f32[512,32,128]{2,1,0} add(%mul.8124, %mul.8125)
  %integer_pow.147 = f32[512,32,128]{2,1,0} multiply(%select_n.2856, %select_n.2856)
  %mul.8126 = f32[512,32,128]{2,1,0} multiply(%integer_pow.147, %broadcast.5207)
  %param.568 = f32[512,32,128]{2,1,0} parameter(718), sharding={devices=[8,1,1]<=[8]}
  %mul.8127 = f32[512,32,128]{2,1,0} multiply(%param.568, %broadcast.5208)
  %add.4002 = f32[512,32,128]{2,1,0} add(%mul.8126, %mul.8127)
  %div.2485 = f32[512,32,128]{2,1,0} divide(%add.4002, %div.2058)
  %sqrt.136 = f32[512,32,128]{2,1,0} sqrt(%div.2485)
  %add.4003 = f32[512,32,128]{2,1,0} add(%sqrt.136, %broadcast.5209)
  %multiply.3324 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4003)
  %div.2486 = f32[512,32,128]{2,1,0} divide(%add.4001, %multiply.3324)
  %mul.8134 = f32[512,32,128]{2,1,0} multiply(%param.197, %broadcast.5205)
  %add.4004 = f32[512,32,128]{2,1,0} add(%div.2486, %mul.8134)
  %mul.8139 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4004)
  %add.4006 = f32[512,32,128]{2,1,0} add(%param.197, %mul.8139)
  %div.2487 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3670, %div.2043)
  %select_n.2859 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3670, %div.2487)
  %mul.8140 = f32[512,8,128]{2,1,0} multiply(%select_n.2859, %broadcast.5195)
  %param.569 = f32[512,8,128]{2,1,0} parameter(428), sharding={devices=[8,1,1]<=[8]}
  %mul.8141 = f32[512,8,128]{2,1,0} multiply(%param.569, %broadcast.5196)
  %add.4007 = f32[512,8,128]{2,1,0} add(%mul.8140, %mul.8141)
  %integer_pow.148 = f32[512,8,128]{2,1,0} multiply(%select_n.2859, %select_n.2859)
  %mul.8142 = f32[512,8,128]{2,1,0} multiply(%integer_pow.148, %broadcast.5197)
  %param.570 = f32[512,8,128]{2,1,0} parameter(719), sharding={devices=[8,1,1]<=[8]}
  %mul.8143 = f32[512,8,128]{2,1,0} multiply(%param.570, %broadcast.5198)
  %add.4008 = f32[512,8,128]{2,1,0} add(%mul.8142, %mul.8143)
  %div.2488 = f32[512,8,128]{2,1,0} divide(%add.4008, %div.2046)
  %sqrt.137 = f32[512,8,128]{2,1,0} sqrt(%div.2488)
  %add.4009 = f32[512,8,128]{2,1,0} add(%sqrt.137, %broadcast.5199)
  %multiply.3325 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4009)
  %div.2489 = f32[512,8,128]{2,1,0} divide(%add.4007, %multiply.3325)
  %mul.8144 = f32[512,8,128]{2,1,0} multiply(%param.199, %broadcast.5195)
  %add.4011 = f32[512,8,128]{2,1,0} add(%div.2489, %mul.8144)
  %mul.8145 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4011)
  %add.4012 = f32[512,8,128]{2,1,0} add(%param.199, %mul.8145)
  %div.2490 = f32[512,14336]{1,0} divide(%convert_element_type.3672, %div.2022)
  %select_n.2860 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3672, %div.2490)
  %mul.8146 = f32[512,14336]{1,0} multiply(%select_n.2860, %broadcast.5185)
  %param.571 = f32[512,14336]{1,0} parameter(429), sharding={devices=[8,1]<=[8]}
  %mul.8147 = f32[512,14336]{1,0} multiply(%param.571, %broadcast.5186)
  %add.4013 = f32[512,14336]{1,0} add(%mul.8146, %mul.8147)
  %integer_pow.149 = f32[512,14336]{1,0} multiply(%select_n.2860, %select_n.2860)
  %mul.8148 = f32[512,14336]{1,0} multiply(%integer_pow.149, %broadcast.5187)
  %param.572 = f32[512,14336]{1,0} parameter(720), sharding={devices=[8,1]<=[8]}
  %mul.8149 = f32[512,14336]{1,0} multiply(%param.572, %broadcast.5188)
  %add.4014 = f32[512,14336]{1,0} add(%mul.8148, %mul.8149)
  %div.2491 = f32[512,14336]{1,0} divide(%add.4014, %div.2025)
  %sqrt.138 = f32[512,14336]{1,0} sqrt(%div.2491)
  %add.4015 = f32[512,14336]{1,0} add(%sqrt.138, %broadcast.5189)
  %multiply.3326 = f32[512,14336]{1,0} multiply(%div.2024, %add.4015)
  %div.2492 = f32[512,14336]{1,0} divide(%add.4013, %multiply.3326)
  %mul.8150 = f32[512,14336]{1,0} multiply(%param.211, %broadcast.5185)
  %add.4016 = f32[512,14336]{1,0} add(%div.2492, %mul.8150)
  %mul.8151 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4016)
  %add.4017 = f32[512,14336]{1,0} add(%param.211, %mul.8151)
  %div.2493 = f32[512,14336]{1,0} divide(%convert_element_type.3674, %div.2022)
  %select_n.2861 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3674, %div.2493)
  %mul.8152 = f32[512,14336]{1,0} multiply(%select_n.2861, %broadcast.5185)
  %param.573 = f32[512,14336]{1,0} parameter(430), sharding={devices=[8,1]<=[8]}
  %mul.8153 = f32[512,14336]{1,0} multiply(%param.573, %broadcast.5186)
  %add.4018 = f32[512,14336]{1,0} add(%mul.8152, %mul.8153)
  %integer_pow.150 = f32[512,14336]{1,0} multiply(%select_n.2861, %select_n.2861)
  %mul.8154 = f32[512,14336]{1,0} multiply(%integer_pow.150, %broadcast.5187)
  %param.574 = f32[512,14336]{1,0} parameter(721), sharding={devices=[8,1]<=[8]}
  %mul.8155 = f32[512,14336]{1,0} multiply(%param.574, %broadcast.5188)
  %add.4019 = f32[512,14336]{1,0} add(%mul.8154, %mul.8155)
  %div.2494 = f32[512,14336]{1,0} divide(%add.4019, %div.2025)
  %sqrt.139 = f32[512,14336]{1,0} sqrt(%div.2494)
  %add.4020 = f32[512,14336]{1,0} add(%sqrt.139, %broadcast.5189)
  %multiply.3327 = f32[512,14336]{1,0} multiply(%div.2024, %add.4020)
  %div.2495 = f32[512,14336]{1,0} divide(%add.4018, %multiply.3327)
  %mul.8156 = f32[512,14336]{1,0} multiply(%param.212, %broadcast.5185)
  %add.4021 = f32[512,14336]{1,0} add(%div.2495, %mul.8156)
  %mul.8157 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4021)
  %add.4022 = f32[512,14336]{1,0} add(%param.212, %mul.8157)
  %div.2496 = f32[14336,512]{1,0} divide(%convert_element_type.3675, %div.2031)
  %select_n.2862 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3675, %div.2496)
  %mul.8158 = f32[14336,512]{1,0} multiply(%select_n.2862, %broadcast.5190)
  %param.575 = f32[14336,512]{1,0} parameter(431), sharding={devices=[1,8]<=[8]}
  %mul.8159 = f32[14336,512]{1,0} multiply(%param.575, %broadcast.5191)
  %add.4023 = f32[14336,512]{1,0} add(%mul.8158, %mul.8159)
  %integer_pow.151 = f32[14336,512]{1,0} multiply(%select_n.2862, %select_n.2862)
  %mul.8160 = f32[14336,512]{1,0} multiply(%integer_pow.151, %broadcast.5192)
  %param.576 = f32[14336,512]{1,0} parameter(722), sharding={devices=[1,8]<=[8]}
  %mul.8161 = f32[14336,512]{1,0} multiply(%param.576, %broadcast.5193)
  %add.4024 = f32[14336,512]{1,0} add(%mul.8160, %mul.8161)
  %div.2497 = f32[14336,512]{1,0} divide(%add.4024, %div.2034)
  %sqrt.140 = f32[14336,512]{1,0} sqrt(%div.2497)
  %add.4025 = f32[14336,512]{1,0} add(%sqrt.140, %broadcast.5194)
  %multiply.3328 = f32[14336,512]{1,0} multiply(%div.2033, %add.4025)
  %div.2498 = f32[14336,512]{1,0} divide(%add.4023, %multiply.3328)
  %mul.8162 = f32[14336,512]{1,0} multiply(%param.213, %broadcast.5190)
  %add.4026 = f32[14336,512]{1,0} add(%div.2498, %mul.8162)
  %mul.8163 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4026)
  %add.4027 = f32[14336,512]{1,0} add(%param.213, %mul.8163)
  %div.2499 = f32[4096]{0} divide(%convert_element_type.3676, %div.2008)
  %select_n.2863 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3676, %div.2499)
  %mul.8164 = f32[4096]{0} multiply(%select_n.2863, %broadcast.5180)
  %param.577 = f32[4096]{0} parameter(432), sharding={replicated}
  %mul.8165 = f32[4096]{0} multiply(%param.577, %broadcast.5181)
  %add.4028 = f32[4096]{0} add(%mul.8164, %mul.8165)
  %integer_pow.152 = f32[4096]{0} multiply(%select_n.2863, %select_n.2863)
  %mul.8166 = f32[4096]{0} multiply(%integer_pow.152, %broadcast.5182)
  %param.578 = f32[4096]{0} parameter(723), sharding={replicated}
  %mul.8167 = f32[4096]{0} multiply(%param.578, %broadcast.5183)
  %add.4029 = f32[4096]{0} add(%mul.8166, %mul.8167)
  %div.2500 = f32[4096]{0} divide(%add.4029, %div.2012)
  %sqrt.141 = f32[4096]{0} sqrt(%div.2500)
  %add.4030 = f32[4096]{0} add(%sqrt.141, %broadcast.5184)
  %multiply.3329 = f32[4096]{0} multiply(%div.2010, %add.4030)
  %div.2501 = f32[4096]{0} divide(%add.4028, %multiply.3329)
  %mul.8169 = f32[4096]{0} multiply(%param.210, %broadcast.5180)
  %add.4031 = f32[4096]{0} add(%div.2501, %mul.8169)
  %mul.8170 = f32[4096]{0} multiply(%mul.1626, %add.4031)
  %add.4032 = f32[4096]{0} add(%param.210, %mul.8170)
  %div.2502 = f32[4096]{0} divide(%convert_element_type.3680, %div.2008)
  %select_n.2864 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3680, %div.2502)
  %mul.8171 = f32[4096]{0} multiply(%select_n.2864, %broadcast.5180)
  %param.579 = f32[4096]{0} parameter(433), sharding={replicated}
  %mul.8172 = f32[4096]{0} multiply(%param.579, %broadcast.5181)
  %add.4033 = f32[4096]{0} add(%mul.8171, %mul.8172)
  %integer_pow.153 = f32[4096]{0} multiply(%select_n.2864, %select_n.2864)
  %mul.8173 = f32[4096]{0} multiply(%integer_pow.153, %broadcast.5182)
  %param.580 = f32[4096]{0} parameter(724), sharding={replicated}
  %mul.8174 = f32[4096]{0} multiply(%param.580, %broadcast.5183)
  %add.4034 = f32[4096]{0} add(%mul.8173, %mul.8174)
  %div.2503 = f32[4096]{0} divide(%add.4034, %div.2012)
  %sqrt.142 = f32[4096]{0} sqrt(%div.2503)
  %add.4036 = f32[4096]{0} add(%sqrt.142, %broadcast.5184)
  %multiply.3330 = f32[4096]{0} multiply(%div.2010, %add.4036)
  %div.2504 = f32[4096]{0} divide(%add.4033, %multiply.3330)
  %mul.8175 = f32[4096]{0} multiply(%param.205, %broadcast.5180)
  %add.4037 = f32[4096]{0} add(%div.2504, %mul.8175)
  %mul.8176 = f32[4096]{0} multiply(%mul.1626, %add.4037)
  %add.4038 = f32[4096]{0} add(%param.205, %mul.8176)
  %div.2506 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3684, %div.2043)
  %select_n.2865 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3684, %div.2506)
  %mul.8177 = f32[512,8,128]{2,1,0} multiply(%select_n.2865, %broadcast.5195)
  %param.581 = f32[512,8,128]{2,1,0} parameter(434), sharding={devices=[8,1,1]<=[8]}
  %mul.8178 = f32[512,8,128]{2,1,0} multiply(%param.581, %broadcast.5196)
  %add.4039 = f32[512,8,128]{2,1,0} add(%mul.8177, %mul.8178)
  %integer_pow.154 = f32[512,8,128]{2,1,0} multiply(%select_n.2865, %select_n.2865)
  %mul.8179 = f32[512,8,128]{2,1,0} multiply(%integer_pow.154, %broadcast.5197)
  %param.582 = f32[512,8,128]{2,1,0} parameter(725), sharding={devices=[8,1,1]<=[8]}
  %mul.8180 = f32[512,8,128]{2,1,0} multiply(%param.582, %broadcast.5198)
  %add.4040 = f32[512,8,128]{2,1,0} add(%mul.8179, %mul.8180)
  %div.2507 = f32[512,8,128]{2,1,0} divide(%add.4040, %div.2046)
  %sqrt.143 = f32[512,8,128]{2,1,0} sqrt(%div.2507)
  %add.4041 = f32[512,8,128]{2,1,0} add(%sqrt.143, %broadcast.5199)
  %multiply.3331 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4041)
  %div.2508 = f32[512,8,128]{2,1,0} divide(%add.4039, %multiply.3331)
  %mul.8181 = f32[512,8,128]{2,1,0} multiply(%param.207, %broadcast.5195)
  %add.4042 = f32[512,8,128]{2,1,0} add(%div.2508, %mul.8181)
  %mul.8182 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4042)
  %add.4043 = f32[512,8,128]{2,1,0} add(%param.207, %mul.8182)
  %div.2509 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3688, %div.2049)
  %select_n.2867 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3688, %div.2509)
  %mul.8183 = f32[32,128,512]{2,1,0} multiply(%select_n.2867, %broadcast.5200)
  %param.583 = f32[32,128,512]{2,1,0} parameter(435), sharding={devices=[1,1,8]<=[8]}
  %mul.8185 = f32[32,128,512]{2,1,0} multiply(%param.583, %broadcast.5201)
  %add.4044 = f32[32,128,512]{2,1,0} add(%mul.8183, %mul.8185)
  %integer_pow.155 = f32[32,128,512]{2,1,0} multiply(%select_n.2867, %select_n.2867)
  %mul.8187 = f32[32,128,512]{2,1,0} multiply(%integer_pow.155, %broadcast.5202)
  %param.584 = f32[32,128,512]{2,1,0} parameter(726), sharding={devices=[1,1,8]<=[8]}
  %mul.8188 = f32[32,128,512]{2,1,0} multiply(%param.584, %broadcast.5203)
  %add.4045 = f32[32,128,512]{2,1,0} add(%mul.8187, %mul.8188)
  %div.2510 = f32[32,128,512]{2,1,0} divide(%add.4045, %div.2052)
  %sqrt.144 = f32[32,128,512]{2,1,0} sqrt(%div.2510)
  %add.4046 = f32[32,128,512]{2,1,0} add(%sqrt.144, %broadcast.5204)
  %multiply.3332 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4046)
  %div.2511 = f32[32,128,512]{2,1,0} divide(%add.4044, %multiply.3332)
  %mul.8189 = f32[32,128,512]{2,1,0} multiply(%param.209, %broadcast.5200)
  %add.4047 = f32[32,128,512]{2,1,0} add(%div.2511, %mul.8189)
  %mul.8190 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4047)
  %add.4049 = f32[32,128,512]{2,1,0} add(%param.209, %mul.8190)
  %div.2512 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3690, %div.2055)
  %select_n.2868 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3690, %div.2512)
  %mul.8191 = f32[512,32,128]{2,1,0} multiply(%select_n.2868, %broadcast.5205)
  %param.585 = f32[512,32,128]{2,1,0} parameter(436), sharding={devices=[8,1,1]<=[8]}
  %mul.8192 = f32[512,32,128]{2,1,0} multiply(%param.585, %broadcast.5206)
  %add.4050 = f32[512,32,128]{2,1,0} add(%mul.8191, %mul.8192)
  %integer_pow.156 = f32[512,32,128]{2,1,0} multiply(%select_n.2868, %select_n.2868)
  %mul.8193 = f32[512,32,128]{2,1,0} multiply(%integer_pow.156, %broadcast.5207)
  %param.586 = f32[512,32,128]{2,1,0} parameter(727), sharding={devices=[8,1,1]<=[8]}
  %mul.8194 = f32[512,32,128]{2,1,0} multiply(%param.586, %broadcast.5208)
  %add.4051 = f32[512,32,128]{2,1,0} add(%mul.8193, %mul.8194)
  %div.2513 = f32[512,32,128]{2,1,0} divide(%add.4051, %div.2058)
  %sqrt.145 = f32[512,32,128]{2,1,0} sqrt(%div.2513)
  %add.4052 = f32[512,32,128]{2,1,0} add(%sqrt.145, %broadcast.5209)
  %multiply.3333 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4052)
  %div.2514 = f32[512,32,128]{2,1,0} divide(%add.4050, %multiply.3333)
  %mul.8195 = f32[512,32,128]{2,1,0} multiply(%param.206, %broadcast.5205)
  %add.4053 = f32[512,32,128]{2,1,0} add(%div.2514, %mul.8195)
  %mul.8196 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4053)
  %add.4054 = f32[512,32,128]{2,1,0} add(%param.206, %mul.8196)
  %div.2515 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3693, %div.2043)
  %select_n.2869 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3693, %div.2515)
  %mul.8197 = f32[512,8,128]{2,1,0} multiply(%select_n.2869, %broadcast.5195)
  %param.587 = f32[512,8,128]{2,1,0} parameter(437), sharding={devices=[8,1,1]<=[8]}
  %mul.8198 = f32[512,8,128]{2,1,0} multiply(%param.587, %broadcast.5196)
  %add.4055 = f32[512,8,128]{2,1,0} add(%mul.8197, %mul.8198)
  %integer_pow.157 = f32[512,8,128]{2,1,0} multiply(%select_n.2869, %select_n.2869)
  %mul.8201 = f32[512,8,128]{2,1,0} multiply(%integer_pow.157, %broadcast.5197)
  %param.588 = f32[512,8,128]{2,1,0} parameter(728), sharding={devices=[8,1,1]<=[8]}
  %mul.8202 = f32[512,8,128]{2,1,0} multiply(%param.588, %broadcast.5198)
  %add.4056 = f32[512,8,128]{2,1,0} add(%mul.8201, %mul.8202)
  %div.2516 = f32[512,8,128]{2,1,0} divide(%add.4056, %div.2046)
  %sqrt.146 = f32[512,8,128]{2,1,0} sqrt(%div.2516)
  %add.4057 = f32[512,8,128]{2,1,0} add(%sqrt.146, %broadcast.5199)
  %multiply.3334 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4057)
  %div.2517 = f32[512,8,128]{2,1,0} divide(%add.4055, %multiply.3334)
  %mul.8205 = f32[512,8,128]{2,1,0} multiply(%param.208, %broadcast.5195)
  %add.4058 = f32[512,8,128]{2,1,0} add(%div.2517, %mul.8205)
  %mul.8206 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4058)
  %add.4059 = f32[512,8,128]{2,1,0} add(%param.208, %mul.8206)
  %div.2518 = f32[512,14336]{1,0} divide(%convert_element_type.3695, %div.2022)
  %select_n.2870 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3695, %div.2518)
  %mul.8207 = f32[512,14336]{1,0} multiply(%select_n.2870, %broadcast.5185)
  %param.589 = f32[512,14336]{1,0} parameter(438), sharding={devices=[8,1]<=[8]}
  %mul.8208 = f32[512,14336]{1,0} multiply(%param.589, %broadcast.5186)
  %add.4060 = f32[512,14336]{1,0} add(%mul.8207, %mul.8208)
  %integer_pow.158 = f32[512,14336]{1,0} multiply(%select_n.2870, %select_n.2870)
  %mul.8209 = f32[512,14336]{1,0} multiply(%integer_pow.158, %broadcast.5187)
  %param.590 = f32[512,14336]{1,0} parameter(729), sharding={devices=[8,1]<=[8]}
  %mul.8214 = f32[512,14336]{1,0} multiply(%param.590, %broadcast.5188)
  %add.4061 = f32[512,14336]{1,0} add(%mul.8209, %mul.8214)
  %div.2519 = f32[512,14336]{1,0} divide(%add.4061, %div.2025)
  %sqrt.147 = f32[512,14336]{1,0} sqrt(%div.2519)
  %add.4062 = f32[512,14336]{1,0} add(%sqrt.147, %broadcast.5189)
  %multiply.3335 = f32[512,14336]{1,0} multiply(%div.2024, %add.4062)
  %div.2520 = f32[512,14336]{1,0} divide(%add.4060, %multiply.3335)
  %mul.8219 = f32[512,14336]{1,0} multiply(%param.220, %broadcast.5185)
  %add.4063 = f32[512,14336]{1,0} add(%div.2520, %mul.8219)
  %mul.8220 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4063)
  %add.4064 = f32[512,14336]{1,0} add(%param.220, %mul.8220)
  %div.2521 = f32[512,14336]{1,0} divide(%convert_element_type.3696, %div.2022)
  %select_n.2871 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3696, %div.2521)
  %mul.8225 = f32[512,14336]{1,0} multiply(%select_n.2871, %broadcast.5185)
  %param.591 = f32[512,14336]{1,0} parameter(439), sharding={devices=[8,1]<=[8]}
  %mul.8226 = f32[512,14336]{1,0} multiply(%param.591, %broadcast.5186)
  %add.4065 = f32[512,14336]{1,0} add(%mul.8225, %mul.8226)
  %integer_pow.159 = f32[512,14336]{1,0} multiply(%select_n.2871, %select_n.2871)
  %mul.8227 = f32[512,14336]{1,0} multiply(%integer_pow.159, %broadcast.5187)
  %param.592 = f32[512,14336]{1,0} parameter(730), sharding={devices=[8,1]<=[8]}
  %mul.8228 = f32[512,14336]{1,0} multiply(%param.592, %broadcast.5188)
  %add.4066 = f32[512,14336]{1,0} add(%mul.8227, %mul.8228)
  %div.2522 = f32[512,14336]{1,0} divide(%add.4066, %div.2025)
  %sqrt.148 = f32[512,14336]{1,0} sqrt(%div.2522)
  %add.4067 = f32[512,14336]{1,0} add(%sqrt.148, %broadcast.5189)
  %multiply.3336 = f32[512,14336]{1,0} multiply(%div.2024, %add.4067)
  %div.2523 = f32[512,14336]{1,0} divide(%add.4065, %multiply.3336)
  %mul.8229 = f32[512,14336]{1,0} multiply(%param.221, %broadcast.5185)
  %add.4068 = f32[512,14336]{1,0} add(%div.2523, %mul.8229)
  %mul.8230 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4068)
  %add.4069 = f32[512,14336]{1,0} add(%param.221, %mul.8230)
  %div.2524 = f32[14336,512]{1,0} divide(%convert_element_type.3697, %div.2031)
  %select_n.2872 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3697, %div.2524)
  %mul.8231 = f32[14336,512]{1,0} multiply(%select_n.2872, %broadcast.5190)
  %param.593 = f32[14336,512]{1,0} parameter(440), sharding={devices=[1,8]<=[8]}
  %mul.8232 = f32[14336,512]{1,0} multiply(%param.593, %broadcast.5191)
  %add.4070 = f32[14336,512]{1,0} add(%mul.8231, %mul.8232)
  %integer_pow.160 = f32[14336,512]{1,0} multiply(%select_n.2872, %select_n.2872)
  %mul.8233 = f32[14336,512]{1,0} multiply(%integer_pow.160, %broadcast.5192)
  %param.594 = f32[14336,512]{1,0} parameter(731), sharding={devices=[1,8]<=[8]}
  %mul.8234 = f32[14336,512]{1,0} multiply(%param.594, %broadcast.5193)
  %add.4071 = f32[14336,512]{1,0} add(%mul.8233, %mul.8234)
  %div.2525 = f32[14336,512]{1,0} divide(%add.4071, %div.2034)
  %sqrt.149 = f32[14336,512]{1,0} sqrt(%div.2525)
  %add.4072 = f32[14336,512]{1,0} add(%sqrt.149, %broadcast.5194)
  %multiply.3337 = f32[14336,512]{1,0} multiply(%div.2033, %add.4072)
  %div.2526 = f32[14336,512]{1,0} divide(%add.4070, %multiply.3337)
  %mul.8237 = f32[14336,512]{1,0} multiply(%param.222, %broadcast.5190)
  %add.4073 = f32[14336,512]{1,0} add(%div.2526, %mul.8237)
  %mul.8238 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4073)
  %add.4074 = f32[14336,512]{1,0} add(%param.222, %mul.8238)
  %div.2527 = f32[4096]{0} divide(%convert_element_type.3700, %div.2008)
  %select_n.2873 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3700, %div.2527)
  %mul.8241 = f32[4096]{0} multiply(%select_n.2873, %broadcast.5180)
  %param.595 = f32[4096]{0} parameter(441), sharding={replicated}
  %mul.8242 = f32[4096]{0} multiply(%param.595, %broadcast.5181)
  %add.4075 = f32[4096]{0} add(%mul.8241, %mul.8242)
  %integer_pow.161 = f32[4096]{0} multiply(%select_n.2873, %select_n.2873)
  %mul.8243 = f32[4096]{0} multiply(%integer_pow.161, %broadcast.5182)
  %param.596 = f32[4096]{0} parameter(732), sharding={replicated}
  %mul.8245 = f32[4096]{0} multiply(%param.596, %broadcast.5183)
  %add.4076 = f32[4096]{0} add(%mul.8243, %mul.8245)
  %div.2528 = f32[4096]{0} divide(%add.4076, %div.2012)
  %sqrt.150 = f32[4096]{0} sqrt(%div.2528)
  %add.4077 = f32[4096]{0} add(%sqrt.150, %broadcast.5184)
  %multiply.3338 = f32[4096]{0} multiply(%div.2010, %add.4077)
  %div.2529 = f32[4096]{0} divide(%add.4075, %multiply.3338)
  %mul.8246 = f32[4096]{0} multiply(%param.219, %broadcast.5180)
  %add.4078 = f32[4096]{0} add(%div.2529, %mul.8246)
  %mul.8247 = f32[4096]{0} multiply(%mul.1626, %add.4078)
  %add.4079 = f32[4096]{0} add(%param.219, %mul.8247)
  %div.2530 = f32[4096]{0} divide(%convert_element_type.3703, %div.2008)
  %select_n.2875 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3703, %div.2530)
  %mul.8248 = f32[4096]{0} multiply(%select_n.2875, %broadcast.5180)
  %param.597 = f32[4096]{0} parameter(442), sharding={replicated}
  %mul.8249 = f32[4096]{0} multiply(%param.597, %broadcast.5181)
  %add.4080 = f32[4096]{0} add(%mul.8248, %mul.8249)
  %integer_pow.162 = f32[4096]{0} multiply(%select_n.2875, %select_n.2875)
  %mul.8251 = f32[4096]{0} multiply(%integer_pow.162, %broadcast.5182)
  %param.598 = f32[4096]{0} parameter(733), sharding={replicated}
  %mul.8252 = f32[4096]{0} multiply(%param.598, %broadcast.5183)
  %add.4081 = f32[4096]{0} add(%mul.8251, %mul.8252)
  %div.2531 = f32[4096]{0} divide(%add.4081, %div.2012)
  %sqrt.151 = f32[4096]{0} sqrt(%div.2531)
  %add.4082 = f32[4096]{0} add(%sqrt.151, %broadcast.5184)
  %multiply.3339 = f32[4096]{0} multiply(%div.2010, %add.4082)
  %div.2532 = f32[4096]{0} divide(%add.4080, %multiply.3339)
  %mul.8253 = f32[4096]{0} multiply(%param.214, %broadcast.5180)
  %add.4083 = f32[4096]{0} add(%div.2532, %mul.8253)
  %mul.8254 = f32[4096]{0} multiply(%mul.1626, %add.4083)
  %add.4085 = f32[4096]{0} add(%param.214, %mul.8254)
  %div.2533 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3705, %div.2043)
  %select_n.2876 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3705, %div.2533)
  %mul.8255 = f32[512,8,128]{2,1,0} multiply(%select_n.2876, %broadcast.5195)
  %param.599 = f32[512,8,128]{2,1,0} parameter(443), sharding={devices=[8,1,1]<=[8]}
  %mul.8256 = f32[512,8,128]{2,1,0} multiply(%param.599, %broadcast.5196)
  %add.4087 = f32[512,8,128]{2,1,0} add(%mul.8255, %mul.8256)
  %integer_pow.163 = f32[512,8,128]{2,1,0} multiply(%select_n.2876, %select_n.2876)
  %mul.8257 = f32[512,8,128]{2,1,0} multiply(%integer_pow.163, %broadcast.5197)
  %param.600 = f32[512,8,128]{2,1,0} parameter(734), sharding={devices=[8,1,1]<=[8]}
  %mul.8258 = f32[512,8,128]{2,1,0} multiply(%param.600, %broadcast.5198)
  %add.4088 = f32[512,8,128]{2,1,0} add(%mul.8257, %mul.8258)
  %div.2534 = f32[512,8,128]{2,1,0} divide(%add.4088, %div.2046)
  %sqrt.152 = f32[512,8,128]{2,1,0} sqrt(%div.2534)
  %add.4089 = f32[512,8,128]{2,1,0} add(%sqrt.152, %broadcast.5199)
  %multiply.3340 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4089)
  %div.2535 = f32[512,8,128]{2,1,0} divide(%add.4087, %multiply.3340)
  %mul.8259 = f32[512,8,128]{2,1,0} multiply(%param.216, %broadcast.5195)
  %add.4090 = f32[512,8,128]{2,1,0} add(%div.2535, %mul.8259)
  %mul.8261 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4090)
  %add.4091 = f32[512,8,128]{2,1,0} add(%param.216, %mul.8261)
  %div.2536 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3707, %div.2049)
  %select_n.2877 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3707, %div.2536)
  %mul.8263 = f32[32,128,512]{2,1,0} multiply(%select_n.2877, %broadcast.5200)
  %param.601 = f32[32,128,512]{2,1,0} parameter(444), sharding={devices=[1,1,8]<=[8]}
  %mul.8264 = f32[32,128,512]{2,1,0} multiply(%param.601, %broadcast.5201)
  %add.4092 = f32[32,128,512]{2,1,0} add(%mul.8263, %mul.8264)
  %integer_pow.164 = f32[32,128,512]{2,1,0} multiply(%select_n.2877, %select_n.2877)
  %mul.8265 = f32[32,128,512]{2,1,0} multiply(%integer_pow.164, %broadcast.5202)
  %param.602 = f32[32,128,512]{2,1,0} parameter(735), sharding={devices=[1,1,8]<=[8]}
  %mul.8266 = f32[32,128,512]{2,1,0} multiply(%param.602, %broadcast.5203)
  %add.4094 = f32[32,128,512]{2,1,0} add(%mul.8265, %mul.8266)
  %div.2537 = f32[32,128,512]{2,1,0} divide(%add.4094, %div.2052)
  %sqrt.153 = f32[32,128,512]{2,1,0} sqrt(%div.2537)
  %add.4095 = f32[32,128,512]{2,1,0} add(%sqrt.153, %broadcast.5204)
  %multiply.3341 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4095)
  %div.2538 = f32[32,128,512]{2,1,0} divide(%add.4092, %multiply.3341)
  %mul.8267 = f32[32,128,512]{2,1,0} multiply(%param.218, %broadcast.5200)
  %add.4096 = f32[32,128,512]{2,1,0} add(%div.2538, %mul.8267)
  %mul.8268 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4096)
  %add.4097 = f32[32,128,512]{2,1,0} add(%param.218, %mul.8268)
  %div.2539 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3709, %div.2055)
  %select_n.2878 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3709, %div.2539)
  %mul.8269 = f32[512,32,128]{2,1,0} multiply(%select_n.2878, %broadcast.5205)
  %param.603 = f32[512,32,128]{2,1,0} parameter(445), sharding={devices=[8,1,1]<=[8]}
  %mul.8271 = f32[512,32,128]{2,1,0} multiply(%param.603, %broadcast.5206)
  %add.4098 = f32[512,32,128]{2,1,0} add(%mul.8269, %mul.8271)
  %integer_pow.165 = f32[512,32,128]{2,1,0} multiply(%select_n.2878, %select_n.2878)
  %mul.8273 = f32[512,32,128]{2,1,0} multiply(%integer_pow.165, %broadcast.5207)
  %param.604 = f32[512,32,128]{2,1,0} parameter(736), sharding={devices=[8,1,1]<=[8]}
  %mul.8274 = f32[512,32,128]{2,1,0} multiply(%param.604, %broadcast.5208)
  %add.4099 = f32[512,32,128]{2,1,0} add(%mul.8273, %mul.8274)
  %div.2540 = f32[512,32,128]{2,1,0} divide(%add.4099, %div.2058)
  %sqrt.154 = f32[512,32,128]{2,1,0} sqrt(%div.2540)
  %add.4100 = f32[512,32,128]{2,1,0} add(%sqrt.154, %broadcast.5209)
  %multiply.3342 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4100)
  %div.2541 = f32[512,32,128]{2,1,0} divide(%add.4098, %multiply.3342)
  %mul.8275 = f32[512,32,128]{2,1,0} multiply(%param.215, %broadcast.5205)
  %add.4101 = f32[512,32,128]{2,1,0} add(%div.2541, %mul.8275)
  %mul.8276 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4101)
  %add.4102 = f32[512,32,128]{2,1,0} add(%param.215, %mul.8276)
  %div.2542 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3711, %div.2043)
  %select_n.2879 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3711, %div.2542)
  %mul.8277 = f32[512,8,128]{2,1,0} multiply(%select_n.2879, %broadcast.5195)
  %param.605 = f32[512,8,128]{2,1,0} parameter(446), sharding={devices=[8,1,1]<=[8]}
  %mul.8278 = f32[512,8,128]{2,1,0} multiply(%param.605, %broadcast.5196)
  %add.4103 = f32[512,8,128]{2,1,0} add(%mul.8277, %mul.8278)
  %integer_pow.166 = f32[512,8,128]{2,1,0} multiply(%select_n.2879, %select_n.2879)
  %mul.8279 = f32[512,8,128]{2,1,0} multiply(%integer_pow.166, %broadcast.5197)
  %param.606 = f32[512,8,128]{2,1,0} parameter(737), sharding={devices=[8,1,1]<=[8]}
  %mul.8280 = f32[512,8,128]{2,1,0} multiply(%param.606, %broadcast.5198)
  %add.4104 = f32[512,8,128]{2,1,0} add(%mul.8279, %mul.8280)
  %div.2543 = f32[512,8,128]{2,1,0} divide(%add.4104, %div.2046)
  %sqrt.155 = f32[512,8,128]{2,1,0} sqrt(%div.2543)
  %add.4105 = f32[512,8,128]{2,1,0} add(%sqrt.155, %broadcast.5199)
  %multiply.3343 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4105)
  %div.2544 = f32[512,8,128]{2,1,0} divide(%add.4103, %multiply.3343)
  %mul.8284 = f32[512,8,128]{2,1,0} multiply(%param.217, %broadcast.5195)
  %add.4106 = f32[512,8,128]{2,1,0} add(%div.2544, %mul.8284)
  %mul.8285 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4106)
  %add.4108 = f32[512,8,128]{2,1,0} add(%param.217, %mul.8285)
  %div.2545 = f32[512,14336]{1,0} divide(%convert_element_type.3714, %div.2022)
  %select_n.2880 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3714, %div.2545)
  %mul.8290 = f32[512,14336]{1,0} multiply(%select_n.2880, %broadcast.5185)
  %param.607 = f32[512,14336]{1,0} parameter(447), sharding={devices=[8,1]<=[8]}
  %mul.8303 = f32[512,14336]{1,0} multiply(%param.607, %broadcast.5186)
  %add.4109 = f32[512,14336]{1,0} add(%mul.8290, %mul.8303)
  %integer_pow.167 = f32[512,14336]{1,0} multiply(%select_n.2880, %select_n.2880)
  %mul.8304 = f32[512,14336]{1,0} multiply(%integer_pow.167, %broadcast.5187)
  %param.608 = f32[512,14336]{1,0} parameter(738), sharding={devices=[8,1]<=[8]}
  %mul.8305 = f32[512,14336]{1,0} multiply(%param.608, %broadcast.5188)
  %add.4110 = f32[512,14336]{1,0} add(%mul.8304, %mul.8305)
  %div.2546 = f32[512,14336]{1,0} divide(%add.4110, %div.2025)
  %sqrt.156 = f32[512,14336]{1,0} sqrt(%div.2546)
  %add.4111 = f32[512,14336]{1,0} add(%sqrt.156, %broadcast.5189)
  %multiply.3344 = f32[512,14336]{1,0} multiply(%div.2024, %add.4111)
  %div.2547 = f32[512,14336]{1,0} divide(%add.4109, %multiply.3344)
  %mul.8306 = f32[512,14336]{1,0} multiply(%param.229, %broadcast.5185)
  %add.4112 = f32[512,14336]{1,0} add(%div.2547, %mul.8306)
  %mul.8307 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4112)
  %add.4113 = f32[512,14336]{1,0} add(%param.229, %mul.8307)
  %div.2548 = f32[512,14336]{1,0} divide(%convert_element_type.3715, %div.2022)
  %select_n.2881 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3715, %div.2548)
  %mul.8308 = f32[512,14336]{1,0} multiply(%select_n.2881, %broadcast.5185)
  %param.609 = f32[512,14336]{1,0} parameter(448), sharding={devices=[8,1]<=[8]}
  %mul.8309 = f32[512,14336]{1,0} multiply(%param.609, %broadcast.5186)
  %add.4114 = f32[512,14336]{1,0} add(%mul.8308, %mul.8309)
  %integer_pow.168 = f32[512,14336]{1,0} multiply(%select_n.2881, %select_n.2881)
  %mul.8310 = f32[512,14336]{1,0} multiply(%integer_pow.168, %broadcast.5187)
  %param.610 = f32[512,14336]{1,0} parameter(739), sharding={devices=[8,1]<=[8]}
  %mul.8311 = f32[512,14336]{1,0} multiply(%param.610, %broadcast.5188)
  %add.4115 = f32[512,14336]{1,0} add(%mul.8310, %mul.8311)
  %div.2549 = f32[512,14336]{1,0} divide(%add.4115, %div.2025)
  %sqrt.157 = f32[512,14336]{1,0} sqrt(%div.2549)
  %add.4116 = f32[512,14336]{1,0} add(%sqrt.157, %broadcast.5189)
  %multiply.3345 = f32[512,14336]{1,0} multiply(%div.2024, %add.4116)
  %div.2551 = f32[512,14336]{1,0} divide(%add.4114, %multiply.3345)
  %mul.8312 = f32[512,14336]{1,0} multiply(%param.230, %broadcast.5185)
  %add.4117 = f32[512,14336]{1,0} add(%div.2551, %mul.8312)
  %mul.8313 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4117)
  %add.4119 = f32[512,14336]{1,0} add(%param.230, %mul.8313)
  %div.2552 = f32[14336,512]{1,0} divide(%convert_element_type.3716, %div.2031)
  %select_n.2882 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3716, %div.2552)
  %mul.8315 = f32[14336,512]{1,0} multiply(%select_n.2882, %broadcast.5190)
  %param.611 = f32[14336,512]{1,0} parameter(449), sharding={devices=[1,8]<=[8]}
  %mul.8316 = f32[14336,512]{1,0} multiply(%param.611, %broadcast.5191)
  %add.4120 = f32[14336,512]{1,0} add(%mul.8315, %mul.8316)
  %integer_pow.169 = f32[14336,512]{1,0} multiply(%select_n.2882, %select_n.2882)
  %mul.8317 = f32[14336,512]{1,0} multiply(%integer_pow.169, %broadcast.5192)
  %param.612 = f32[14336,512]{1,0} parameter(740), sharding={devices=[1,8]<=[8]}
  %mul.8318 = f32[14336,512]{1,0} multiply(%param.612, %broadcast.5193)
  %add.4121 = f32[14336,512]{1,0} add(%mul.8317, %mul.8318)
  %div.2553 = f32[14336,512]{1,0} divide(%add.4121, %div.2034)
  %sqrt.158 = f32[14336,512]{1,0} sqrt(%div.2553)
  %add.4122 = f32[14336,512]{1,0} add(%sqrt.158, %broadcast.5194)
  %multiply.3346 = f32[14336,512]{1,0} multiply(%div.2033, %add.4122)
  %div.2556 = f32[14336,512]{1,0} divide(%add.4120, %multiply.3346)
  %mul.8319 = f32[14336,512]{1,0} multiply(%param.231, %broadcast.5190)
  %add.4123 = f32[14336,512]{1,0} add(%div.2556, %mul.8319)
  %mul.8320 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4123)
  %add.4124 = f32[14336,512]{1,0} add(%param.231, %mul.8320)
  %div.2557 = f32[4096]{0} divide(%convert_element_type.3717, %div.2008)
  %select_n.2883 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3717, %div.2557)
  %mul.8321 = f32[4096]{0} multiply(%select_n.2883, %broadcast.5180)
  %param.613 = f32[4096]{0} parameter(450), sharding={replicated}
  %mul.8322 = f32[4096]{0} multiply(%param.613, %broadcast.5181)
  %add.4125 = f32[4096]{0} add(%mul.8321, %mul.8322)
  %integer_pow.170 = f32[4096]{0} multiply(%select_n.2883, %select_n.2883)
  %mul.8323 = f32[4096]{0} multiply(%integer_pow.170, %broadcast.5182)
  %param.614 = f32[4096]{0} parameter(741), sharding={replicated}
  %mul.8324 = f32[4096]{0} multiply(%param.614, %broadcast.5183)
  %add.4126 = f32[4096]{0} add(%mul.8323, %mul.8324)
  %div.2558 = f32[4096]{0} divide(%add.4126, %div.2012)
  %sqrt.159 = f32[4096]{0} sqrt(%div.2558)
  %add.4127 = f32[4096]{0} add(%sqrt.159, %broadcast.5184)
  %multiply.3347 = f32[4096]{0} multiply(%div.2010, %add.4127)
  %div.2559 = f32[4096]{0} divide(%add.4125, %multiply.3347)
  %mul.8325 = f32[4096]{0} multiply(%param.228, %broadcast.5180)
  %add.4128 = f32[4096]{0} add(%div.2559, %mul.8325)
  %mul.8326 = f32[4096]{0} multiply(%mul.1626, %add.4128)
  %add.4130 = f32[4096]{0} add(%param.228, %mul.8326)
  %div.2561 = f32[4096]{0} divide(%convert_element_type.3720, %div.2008)
  %select_n.2884 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3720, %div.2561)
  %mul.8327 = f32[4096]{0} multiply(%select_n.2884, %broadcast.5180)
  %param.615 = f32[4096]{0} parameter(451), sharding={replicated}
  %mul.8328 = f32[4096]{0} multiply(%param.615, %broadcast.5181)
  %add.4131 = f32[4096]{0} add(%mul.8327, %mul.8328)
  %integer_pow.171 = f32[4096]{0} multiply(%select_n.2884, %select_n.2884)
  %mul.8329 = f32[4096]{0} multiply(%integer_pow.171, %broadcast.5182)
  %param.616 = f32[4096]{0} parameter(742), sharding={replicated}
  %mul.8330 = f32[4096]{0} multiply(%param.616, %broadcast.5183)
  %add.4132 = f32[4096]{0} add(%mul.8329, %mul.8330)
  %div.2563 = f32[4096]{0} divide(%add.4132, %div.2012)
  %sqrt.160 = f32[4096]{0} sqrt(%div.2563)
  %add.4133 = f32[4096]{0} add(%sqrt.160, %broadcast.5184)
  %multiply.3348 = f32[4096]{0} multiply(%div.2010, %add.4133)
  %div.2564 = f32[4096]{0} divide(%add.4131, %multiply.3348)
  %mul.8331 = f32[4096]{0} multiply(%param.223, %broadcast.5180)
  %add.4134 = f32[4096]{0} add(%div.2564, %mul.8331)
  %mul.8332 = f32[4096]{0} multiply(%mul.1626, %add.4134)
  %add.4135 = f32[4096]{0} add(%param.223, %mul.8332)
  %div.2566 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3722, %div.2043)
  %select_n.2885 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3722, %div.2566)
  %mul.8333 = f32[512,8,128]{2,1,0} multiply(%select_n.2885, %broadcast.5195)
  %param.617 = f32[512,8,128]{2,1,0} parameter(452), sharding={devices=[8,1,1]<=[8]}
  %mul.8335 = f32[512,8,128]{2,1,0} multiply(%param.617, %broadcast.5196)
  %add.4136 = f32[512,8,128]{2,1,0} add(%mul.8333, %mul.8335)
  %integer_pow.172 = f32[512,8,128]{2,1,0} multiply(%select_n.2885, %select_n.2885)
  %mul.8337 = f32[512,8,128]{2,1,0} multiply(%integer_pow.172, %broadcast.5197)
  %param.618 = f32[512,8,128]{2,1,0} parameter(743), sharding={devices=[8,1,1]<=[8]}
  %mul.8338 = f32[512,8,128]{2,1,0} multiply(%param.618, %broadcast.5198)
  %add.4137 = f32[512,8,128]{2,1,0} add(%mul.8337, %mul.8338)
  %div.2567 = f32[512,8,128]{2,1,0} divide(%add.4137, %div.2046)
  %sqrt.161 = f32[512,8,128]{2,1,0} sqrt(%div.2567)
  %add.4138 = f32[512,8,128]{2,1,0} add(%sqrt.161, %broadcast.5199)
  %multiply.3349 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4138)
  %div.2569 = f32[512,8,128]{2,1,0} divide(%add.4136, %multiply.3349)
  %mul.8339 = f32[512,8,128]{2,1,0} multiply(%param.225, %broadcast.5195)
  %add.4139 = f32[512,8,128]{2,1,0} add(%div.2569, %mul.8339)
  %mul.8340 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4139)
  %add.4140 = f32[512,8,128]{2,1,0} add(%param.225, %mul.8340)
  %div.2570 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3725, %div.2049)
  %select_n.2886 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3725, %div.2570)
  %mul.8341 = f32[32,128,512]{2,1,0} multiply(%select_n.2886, %broadcast.5200)
  %param.619 = f32[32,128,512]{2,1,0} parameter(453), sharding={devices=[1,1,8]<=[8]}
  %mul.8342 = f32[32,128,512]{2,1,0} multiply(%param.619, %broadcast.5201)
  %add.4141 = f32[32,128,512]{2,1,0} add(%mul.8341, %mul.8342)
  %integer_pow.173 = f32[32,128,512]{2,1,0} multiply(%select_n.2886, %select_n.2886)
  %mul.8343 = f32[32,128,512]{2,1,0} multiply(%integer_pow.173, %broadcast.5202)
  %param.620 = f32[32,128,512]{2,1,0} parameter(744), sharding={devices=[1,1,8]<=[8]}
  %mul.8344 = f32[32,128,512]{2,1,0} multiply(%param.620, %broadcast.5203)
  %add.4142 = f32[32,128,512]{2,1,0} add(%mul.8343, %mul.8344)
  %div.2571 = f32[32,128,512]{2,1,0} divide(%add.4142, %div.2052)
  %sqrt.162 = f32[32,128,512]{2,1,0} sqrt(%div.2571)
  %add.4143 = f32[32,128,512]{2,1,0} add(%sqrt.162, %broadcast.5204)
  %multiply.3350 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4143)
  %div.2572 = f32[32,128,512]{2,1,0} divide(%add.4141, %multiply.3350)
  %mul.8348 = f32[32,128,512]{2,1,0} multiply(%param.227, %broadcast.5200)
  %add.4145 = f32[32,128,512]{2,1,0} add(%div.2572, %mul.8348)
  %mul.8349 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4145)
  %add.4146 = f32[32,128,512]{2,1,0} add(%param.227, %mul.8349)
  %div.2574 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3727, %div.2055)
  %select_n.2887 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3727, %div.2574)
  %mul.8350 = f32[512,32,128]{2,1,0} multiply(%select_n.2887, %broadcast.5205)
  %param.621 = f32[512,32,128]{2,1,0} parameter(454), sharding={devices=[8,1,1]<=[8]}
  %mul.8351 = f32[512,32,128]{2,1,0} multiply(%param.621, %broadcast.5206)
  %add.4147 = f32[512,32,128]{2,1,0} add(%mul.8350, %mul.8351)
  %integer_pow.174 = f32[512,32,128]{2,1,0} multiply(%select_n.2887, %select_n.2887)
  %mul.8352 = f32[512,32,128]{2,1,0} multiply(%integer_pow.174, %broadcast.5207)
  %param.622 = f32[512,32,128]{2,1,0} parameter(745), sharding={devices=[8,1,1]<=[8]}
  %mul.8353 = f32[512,32,128]{2,1,0} multiply(%param.622, %broadcast.5208)
  %add.4148 = f32[512,32,128]{2,1,0} add(%mul.8352, %mul.8353)
  %div.2575 = f32[512,32,128]{2,1,0} divide(%add.4148, %div.2058)
  %sqrt.163 = f32[512,32,128]{2,1,0} sqrt(%div.2575)
  %add.4149 = f32[512,32,128]{2,1,0} add(%sqrt.163, %broadcast.5209)
  %multiply.3351 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4149)
  %div.2583 = f32[512,32,128]{2,1,0} divide(%add.4147, %multiply.3351)
  %mul.8354 = f32[512,32,128]{2,1,0} multiply(%param.224, %broadcast.5205)
  %add.4150 = f32[512,32,128]{2,1,0} add(%div.2583, %mul.8354)
  %mul.8355 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4150)
  %add.4151 = f32[512,32,128]{2,1,0} add(%param.224, %mul.8355)
  %div.2584 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3729, %div.2043)
  %select_n.2888 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3729, %div.2584)
  %mul.8356 = f32[512,8,128]{2,1,0} multiply(%select_n.2888, %broadcast.5195)
  %param.623 = f32[512,8,128]{2,1,0} parameter(455), sharding={devices=[8,1,1]<=[8]}
  %mul.8357 = f32[512,8,128]{2,1,0} multiply(%param.623, %broadcast.5196)
  %add.4152 = f32[512,8,128]{2,1,0} add(%mul.8356, %mul.8357)
  %integer_pow.175 = f32[512,8,128]{2,1,0} multiply(%select_n.2888, %select_n.2888)
  %mul.8358 = f32[512,8,128]{2,1,0} multiply(%integer_pow.175, %broadcast.5197)
  %param.624 = f32[512,8,128]{2,1,0} parameter(746), sharding={devices=[8,1,1]<=[8]}
  %mul.8362 = f32[512,8,128]{2,1,0} multiply(%param.624, %broadcast.5198)
  %add.4153 = f32[512,8,128]{2,1,0} add(%mul.8358, %mul.8362)
  %div.2585 = f32[512,8,128]{2,1,0} divide(%add.4153, %div.2046)
  %sqrt.164 = f32[512,8,128]{2,1,0} sqrt(%div.2585)
  %add.4155 = f32[512,8,128]{2,1,0} add(%sqrt.164, %broadcast.5199)
  %multiply.3352 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4155)
  %div.2586 = f32[512,8,128]{2,1,0} divide(%add.4152, %multiply.3352)
  %mul.8363 = f32[512,8,128]{2,1,0} multiply(%param.226, %broadcast.5195)
  %add.4156 = f32[512,8,128]{2,1,0} add(%div.2586, %mul.8363)
  %mul.8364 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4156)
  %add.4157 = f32[512,8,128]{2,1,0} add(%param.226, %mul.8364)
  %div.2587 = f32[512,14336]{1,0} divide(%convert_element_type.3732, %div.2022)
  %select_n.2889 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3732, %div.2587)
  %mul.8367 = f32[512,14336]{1,0} multiply(%select_n.2889, %broadcast.5185)
  %param.625 = f32[512,14336]{1,0} parameter(456), sharding={devices=[8,1]<=[8]}
  %mul.8368 = f32[512,14336]{1,0} multiply(%param.625, %broadcast.5186)
  %add.4158 = f32[512,14336]{1,0} add(%mul.8367, %mul.8368)
  %integer_pow.176 = f32[512,14336]{1,0} multiply(%select_n.2889, %select_n.2889)
  %mul.8369 = f32[512,14336]{1,0} multiply(%integer_pow.176, %broadcast.5187)
  %param.626 = f32[512,14336]{1,0} parameter(747), sharding={devices=[8,1]<=[8]}
  %mul.8370 = f32[512,14336]{1,0} multiply(%param.626, %broadcast.5188)
  %add.4159 = f32[512,14336]{1,0} add(%mul.8369, %mul.8370)
  %div.2588 = f32[512,14336]{1,0} divide(%add.4159, %div.2025)
  %sqrt.165 = f32[512,14336]{1,0} sqrt(%div.2588)
  %add.4160 = f32[512,14336]{1,0} add(%sqrt.165, %broadcast.5189)
  %multiply.3353 = f32[512,14336]{1,0} multiply(%div.2024, %add.4160)
  %div.2589 = f32[512,14336]{1,0} divide(%add.4158, %multiply.3353)
  %mul.8375 = f32[512,14336]{1,0} multiply(%param.238, %broadcast.5185)
  %add.4161 = f32[512,14336]{1,0} add(%div.2589, %mul.8375)
  %mul.8376 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4161)
  %add.4162 = f32[512,14336]{1,0} add(%param.238, %mul.8376)
  %div.2590 = f32[512,14336]{1,0} divide(%convert_element_type.3734, %div.2022)
  %select_n.2890 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3734, %div.2590)
  %mul.8377 = f32[512,14336]{1,0} multiply(%select_n.2890, %broadcast.5185)
  %param.627 = f32[512,14336]{1,0} parameter(457), sharding={devices=[8,1]<=[8]}
  %mul.8382 = f32[512,14336]{1,0} multiply(%param.627, %broadcast.5186)
  %add.4163 = f32[512,14336]{1,0} add(%mul.8377, %mul.8382)
  %integer_pow.177 = f32[512,14336]{1,0} multiply(%select_n.2890, %select_n.2890)
  %mul.8383 = f32[512,14336]{1,0} multiply(%integer_pow.177, %broadcast.5187)
  %param.628 = f32[512,14336]{1,0} parameter(748), sharding={devices=[8,1]<=[8]}
  %mul.8384 = f32[512,14336]{1,0} multiply(%param.628, %broadcast.5188)
  %add.4164 = f32[512,14336]{1,0} add(%mul.8383, %mul.8384)
  %div.2591 = f32[512,14336]{1,0} divide(%add.4164, %div.2025)
  %sqrt.166 = f32[512,14336]{1,0} sqrt(%div.2591)
  %add.4165 = f32[512,14336]{1,0} add(%sqrt.166, %broadcast.5189)
  %multiply.3354 = f32[512,14336]{1,0} multiply(%div.2024, %add.4165)
  %div.2592 = f32[512,14336]{1,0} divide(%add.4163, %multiply.3354)
  %mul.8385 = f32[512,14336]{1,0} multiply(%param.239, %broadcast.5185)
  %add.4166 = f32[512,14336]{1,0} add(%div.2592, %mul.8385)
  %mul.8386 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4166)
  %add.4167 = f32[512,14336]{1,0} add(%param.239, %mul.8386)
  %div.2593 = f32[14336,512]{1,0} divide(%convert_element_type.3735, %div.2031)
  %select_n.2891 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3735, %div.2593)
  %mul.8387 = f32[14336,512]{1,0} multiply(%select_n.2891, %broadcast.5190)
  %param.629 = f32[14336,512]{1,0} parameter(458), sharding={devices=[1,8]<=[8]}
  %mul.8388 = f32[14336,512]{1,0} multiply(%param.629, %broadcast.5191)
  %add.4168 = f32[14336,512]{1,0} add(%mul.8387, %mul.8388)
  %integer_pow.178 = f32[14336,512]{1,0} multiply(%select_n.2891, %select_n.2891)
  %mul.8389 = f32[14336,512]{1,0} multiply(%integer_pow.178, %broadcast.5192)
  %param.630 = f32[14336,512]{1,0} parameter(749), sharding={devices=[1,8]<=[8]}
  %mul.8391 = f32[14336,512]{1,0} multiply(%param.630, %broadcast.5193)
  %add.4170 = f32[14336,512]{1,0} add(%mul.8389, %mul.8391)
  %div.2594 = f32[14336,512]{1,0} divide(%add.4170, %div.2034)
  %sqrt.167 = f32[14336,512]{1,0} sqrt(%div.2594)
  %add.4171 = f32[14336,512]{1,0} add(%sqrt.167, %broadcast.5194)
  %multiply.3355 = f32[14336,512]{1,0} multiply(%div.2033, %add.4171)
  %div.2595 = f32[14336,512]{1,0} divide(%add.4168, %multiply.3355)
  %mul.8392 = f32[14336,512]{1,0} multiply(%param.240, %broadcast.5190)
  %add.4172 = f32[14336,512]{1,0} add(%div.2595, %mul.8392)
  %mul.8393 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4172)
  %add.4173 = f32[14336,512]{1,0} add(%param.240, %mul.8393)
  %div.2596 = f32[4096]{0} divide(%convert_element_type.3736, %div.2008)
  %select_n.2892 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3736, %div.2596)
  %mul.8394 = f32[4096]{0} multiply(%select_n.2892, %broadcast.5180)
  %param.631 = f32[4096]{0} parameter(459), sharding={replicated}
  %mul.8395 = f32[4096]{0} multiply(%param.631, %broadcast.5181)
  %add.4174 = f32[4096]{0} add(%mul.8394, %mul.8395)
  %integer_pow.179 = f32[4096]{0} multiply(%select_n.2892, %select_n.2892)
  %mul.8396 = f32[4096]{0} multiply(%integer_pow.179, %broadcast.5182)
  %param.632 = f32[4096]{0} parameter(750), sharding={replicated}
  %mul.8397 = f32[4096]{0} multiply(%param.632, %broadcast.5183)
  %add.4175 = f32[4096]{0} add(%mul.8396, %mul.8397)
  %div.2597 = f32[4096]{0} divide(%add.4175, %div.2012)
  %sqrt.168 = f32[4096]{0} sqrt(%div.2597)
  %add.4176 = f32[4096]{0} add(%sqrt.168, %broadcast.5184)
  %multiply.3356 = f32[4096]{0} multiply(%div.2010, %add.4176)
  %div.2598 = f32[4096]{0} divide(%add.4174, %multiply.3356)
  %mul.8398 = f32[4096]{0} multiply(%param.237, %broadcast.5180)
  %add.4177 = f32[4096]{0} add(%div.2598, %mul.8398)
  %mul.8399 = f32[4096]{0} multiply(%mul.1626, %add.4177)
  %add.4178 = f32[4096]{0} add(%param.237, %mul.8399)
  %div.2599 = f32[4096]{0} divide(%convert_element_type.3738, %div.2008)
  %select_n.2893 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3738, %div.2599)
  %mul.8400 = f32[4096]{0} multiply(%select_n.2893, %broadcast.5180)
  %param.633 = f32[4096]{0} parameter(460), sharding={replicated}
  %mul.8401 = f32[4096]{0} multiply(%param.633, %broadcast.5181)
  %add.4179 = f32[4096]{0} add(%mul.8400, %mul.8401)
  %integer_pow.180 = f32[4096]{0} multiply(%select_n.2893, %select_n.2893)
  %mul.8402 = f32[4096]{0} multiply(%integer_pow.180, %broadcast.5182)
  %param.634 = f32[4096]{0} parameter(751), sharding={replicated}
  %mul.8403 = f32[4096]{0} multiply(%param.634, %broadcast.5183)
  %add.4181 = f32[4096]{0} add(%mul.8402, %mul.8403)
  %div.2600 = f32[4096]{0} divide(%add.4181, %div.2012)
  %sqrt.169 = f32[4096]{0} sqrt(%div.2600)
  %add.4182 = f32[4096]{0} add(%sqrt.169, %broadcast.5184)
  %multiply.3357 = f32[4096]{0} multiply(%div.2010, %add.4182)
  %div.2601 = f32[4096]{0} divide(%add.4179, %multiply.3357)
  %mul.8404 = f32[4096]{0} multiply(%param.232, %broadcast.5180)
  %add.4183 = f32[4096]{0} add(%div.2601, %mul.8404)
  %mul.8405 = f32[4096]{0} multiply(%mul.1626, %add.4183)
  %add.4184 = f32[4096]{0} add(%param.232, %mul.8405)
  %div.2602 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3741, %div.2043)
  %select_n.2894 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3741, %div.2602)
  %mul.8406 = f32[512,8,128]{2,1,0} multiply(%select_n.2894, %broadcast.5195)
  %param.635 = f32[512,8,128]{2,1,0} parameter(461), sharding={devices=[8,1,1]<=[8]}
  %mul.8407 = f32[512,8,128]{2,1,0} multiply(%param.635, %broadcast.5196)
  %add.4185 = f32[512,8,128]{2,1,0} add(%mul.8406, %mul.8407)
  %integer_pow.181 = f32[512,8,128]{2,1,0} multiply(%select_n.2894, %select_n.2894)
  %mul.8408 = f32[512,8,128]{2,1,0} multiply(%integer_pow.181, %broadcast.5197)
  %param.636 = f32[512,8,128]{2,1,0} parameter(752), sharding={devices=[8,1,1]<=[8]}
  %mul.8413 = f32[512,8,128]{2,1,0} multiply(%param.636, %broadcast.5198)
  %add.4186 = f32[512,8,128]{2,1,0} add(%mul.8408, %mul.8413)
  %div.2603 = f32[512,8,128]{2,1,0} divide(%add.4186, %div.2046)
  %sqrt.170 = f32[512,8,128]{2,1,0} sqrt(%div.2603)
  %add.4187 = f32[512,8,128]{2,1,0} add(%sqrt.170, %broadcast.5199)
  %multiply.3358 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4187)
  %div.2604 = f32[512,8,128]{2,1,0} divide(%add.4185, %multiply.3358)
  %mul.8414 = f32[512,8,128]{2,1,0} multiply(%param.234, %broadcast.5195)
  %add.4188 = f32[512,8,128]{2,1,0} add(%div.2604, %mul.8414)
  %mul.8415 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4188)
  %add.4189 = f32[512,8,128]{2,1,0} add(%param.234, %mul.8415)
  %div.2605 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3743, %div.2049)
  %select_n.2895 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3743, %div.2605)
  %mul.8420 = f32[32,128,512]{2,1,0} multiply(%select_n.2895, %broadcast.5200)
  %param.637 = f32[32,128,512]{2,1,0} parameter(462), sharding={devices=[1,1,8]<=[8]}
  %mul.8421 = f32[32,128,512]{2,1,0} multiply(%param.637, %broadcast.5201)
  %add.4190 = f32[32,128,512]{2,1,0} add(%mul.8420, %mul.8421)
  %integer_pow.182 = f32[32,128,512]{2,1,0} multiply(%select_n.2895, %select_n.2895)
  %mul.8422 = f32[32,128,512]{2,1,0} multiply(%integer_pow.182, %broadcast.5202)
  %param.638 = f32[32,128,512]{2,1,0} parameter(753), sharding={devices=[1,1,8]<=[8]}
  %mul.8423 = f32[32,128,512]{2,1,0} multiply(%param.638, %broadcast.5203)
  %add.4191 = f32[32,128,512]{2,1,0} add(%mul.8422, %mul.8423)
  %div.2606 = f32[32,128,512]{2,1,0} divide(%add.4191, %div.2052)
  %sqrt.171 = f32[32,128,512]{2,1,0} sqrt(%div.2606)
  %add.4193 = f32[32,128,512]{2,1,0} add(%sqrt.171, %broadcast.5204)
  %multiply.3359 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4193)
  %div.2607 = f32[32,128,512]{2,1,0} divide(%add.4190, %multiply.3359)
  %mul.8424 = f32[32,128,512]{2,1,0} multiply(%param.236, %broadcast.5200)
  %add.4194 = f32[32,128,512]{2,1,0} add(%div.2607, %mul.8424)
  %mul.8425 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4194)
  %add.4195 = f32[32,128,512]{2,1,0} add(%param.236, %mul.8425)
  %div.2608 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3746, %div.2055)
  %select_n.2896 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3746, %div.2608)
  %mul.8426 = f32[512,32,128]{2,1,0} multiply(%select_n.2896, %broadcast.5205)
  %param.639 = f32[512,32,128]{2,1,0} parameter(463), sharding={devices=[8,1,1]<=[8]}
  %mul.8429 = f32[512,32,128]{2,1,0} multiply(%param.639, %broadcast.5206)
  %add.4196 = f32[512,32,128]{2,1,0} add(%mul.8426, %mul.8429)
  %integer_pow.183 = f32[512,32,128]{2,1,0} multiply(%select_n.2896, %select_n.2896)
  %mul.8430 = f32[512,32,128]{2,1,0} multiply(%integer_pow.183, %broadcast.5207)
  %param.640 = f32[512,32,128]{2,1,0} parameter(754), sharding={devices=[8,1,1]<=[8]}
  %mul.8433 = f32[512,32,128]{2,1,0} multiply(%param.640, %broadcast.5208)
  %add.4197 = f32[512,32,128]{2,1,0} add(%mul.8430, %mul.8433)
  %div.2609 = f32[512,32,128]{2,1,0} divide(%add.4197, %div.2058)
  %sqrt.172 = f32[512,32,128]{2,1,0} sqrt(%div.2609)
  %add.4198 = f32[512,32,128]{2,1,0} add(%sqrt.172, %broadcast.5209)
  %multiply.3360 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4198)
  %div.2610 = f32[512,32,128]{2,1,0} divide(%add.4196, %multiply.3360)
  %mul.8434 = f32[512,32,128]{2,1,0} multiply(%param.233, %broadcast.5205)
  %add.4200 = f32[512,32,128]{2,1,0} add(%div.2610, %mul.8434)
  %mul.8435 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4200)
  %add.4201 = f32[512,32,128]{2,1,0} add(%param.233, %mul.8435)
  %div.2611 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3752, %div.2043)
  %select_n.2897 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3752, %div.2611)
  %mul.8436 = f32[512,8,128]{2,1,0} multiply(%select_n.2897, %broadcast.5195)
  %param.641 = f32[512,8,128]{2,1,0} parameter(464), sharding={devices=[8,1,1]<=[8]}
  %mul.8437 = f32[512,8,128]{2,1,0} multiply(%param.641, %broadcast.5196)
  %add.4202 = f32[512,8,128]{2,1,0} add(%mul.8436, %mul.8437)
  %integer_pow.184 = f32[512,8,128]{2,1,0} multiply(%select_n.2897, %select_n.2897)
  %mul.8438 = f32[512,8,128]{2,1,0} multiply(%integer_pow.184, %broadcast.5197)
  %param.642 = f32[512,8,128]{2,1,0} parameter(755), sharding={devices=[8,1,1]<=[8]}
  %mul.8439 = f32[512,8,128]{2,1,0} multiply(%param.642, %broadcast.5198)
  %add.4203 = f32[512,8,128]{2,1,0} add(%mul.8438, %mul.8439)
  %div.2612 = f32[512,8,128]{2,1,0} divide(%add.4203, %div.2046)
  %sqrt.173 = f32[512,8,128]{2,1,0} sqrt(%div.2612)
  %add.4204 = f32[512,8,128]{2,1,0} add(%sqrt.173, %broadcast.5199)
  %multiply.3361 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4204)
  %div.2613 = f32[512,8,128]{2,1,0} divide(%add.4202, %multiply.3361)
  %mul.8440 = f32[512,8,128]{2,1,0} multiply(%param.235, %broadcast.5195)
  %add.4205 = f32[512,8,128]{2,1,0} add(%div.2613, %mul.8440)
  %mul.8442 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4205)
  %add.4206 = f32[512,8,128]{2,1,0} add(%param.235, %mul.8442)
  %div.2614 = f32[512,14336]{1,0} divide(%convert_element_type.3754, %div.2022)
  %select_n.2898 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3754, %div.2614)
  %mul.8443 = f32[512,14336]{1,0} multiply(%select_n.2898, %broadcast.5185)
  %param.643 = f32[512,14336]{1,0} parameter(465), sharding={devices=[8,1]<=[8]}
  %mul.8444 = f32[512,14336]{1,0} multiply(%param.643, %broadcast.5186)
  %add.4207 = f32[512,14336]{1,0} add(%mul.8443, %mul.8444)
  %integer_pow.185 = f32[512,14336]{1,0} multiply(%select_n.2898, %select_n.2898)
  %mul.8446 = f32[512,14336]{1,0} multiply(%integer_pow.185, %broadcast.5187)
  %param.644 = f32[512,14336]{1,0} parameter(756), sharding={devices=[8,1]<=[8]}
  %mul.8447 = f32[512,14336]{1,0} multiply(%param.644, %broadcast.5188)
  %add.4208 = f32[512,14336]{1,0} add(%mul.8446, %mul.8447)
  %div.2615 = f32[512,14336]{1,0} divide(%add.4208, %div.2025)
  %sqrt.174 = f32[512,14336]{1,0} sqrt(%div.2615)
  %add.4209 = f32[512,14336]{1,0} add(%sqrt.174, %broadcast.5189)
  %multiply.3362 = f32[512,14336]{1,0} multiply(%div.2024, %add.4209)
  %div.2616 = f32[512,14336]{1,0} divide(%add.4207, %multiply.3362)
  %mul.8448 = f32[512,14336]{1,0} multiply(%param.247, %broadcast.5185)
  %add.4210 = f32[512,14336]{1,0} add(%div.2616, %mul.8448)
  %mul.8450 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4210)
  %add.4211 = f32[512,14336]{1,0} add(%param.247, %mul.8450)
  %div.2617 = f32[512,14336]{1,0} divide(%convert_element_type.3756, %div.2022)
  %select_n.2899 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3756, %div.2617)
  %mul.8451 = f32[512,14336]{1,0} multiply(%select_n.2899, %broadcast.5185)
  %param.645 = f32[512,14336]{1,0} parameter(466), sharding={devices=[8,1]<=[8]}
  %mul.8452 = f32[512,14336]{1,0} multiply(%param.645, %broadcast.5186)
  %add.4212 = f32[512,14336]{1,0} add(%mul.8451, %mul.8452)
  %integer_pow.186 = f32[512,14336]{1,0} multiply(%select_n.2899, %select_n.2899)
  %mul.8453 = f32[512,14336]{1,0} multiply(%integer_pow.186, %broadcast.5187)
  %param.646 = f32[512,14336]{1,0} parameter(757), sharding={devices=[8,1]<=[8]}
  %mul.8454 = f32[512,14336]{1,0} multiply(%param.646, %broadcast.5188)
  %add.4213 = f32[512,14336]{1,0} add(%mul.8453, %mul.8454)
  %div.2618 = f32[512,14336]{1,0} divide(%add.4213, %div.2025)
  %sqrt.175 = f32[512,14336]{1,0} sqrt(%div.2618)
  %add.4214 = f32[512,14336]{1,0} add(%sqrt.175, %broadcast.5189)
  %multiply.3363 = f32[512,14336]{1,0} multiply(%div.2024, %add.4214)
  %div.2619 = f32[512,14336]{1,0} divide(%add.4212, %multiply.3363)
  %mul.8455 = f32[512,14336]{1,0} multiply(%param.248, %broadcast.5185)
  %add.4215 = f32[512,14336]{1,0} add(%div.2619, %mul.8455)
  %mul.8456 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4215)
  %add.4216 = f32[512,14336]{1,0} add(%param.248, %mul.8456)
  %div.2620 = f32[14336,512]{1,0} divide(%convert_element_type.3758, %div.2031)
  %select_n.2900 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3758, %div.2620)
  %mul.8457 = f32[14336,512]{1,0} multiply(%select_n.2900, %broadcast.5190)
  %param.647 = f32[14336,512]{1,0} parameter(467), sharding={devices=[1,8]<=[8]}
  %mul.8458 = f32[14336,512]{1,0} multiply(%param.647, %broadcast.5191)
  %add.4217 = f32[14336,512]{1,0} add(%mul.8457, %mul.8458)
  %integer_pow.187 = f32[14336,512]{1,0} multiply(%select_n.2900, %select_n.2900)
  %mul.8459 = f32[14336,512]{1,0} multiply(%integer_pow.187, %broadcast.5192)
  %param.648 = f32[14336,512]{1,0} parameter(758), sharding={devices=[1,8]<=[8]}
  %mul.8460 = f32[14336,512]{1,0} multiply(%param.648, %broadcast.5193)
  %add.4218 = f32[14336,512]{1,0} add(%mul.8459, %mul.8460)
  %div.2621 = f32[14336,512]{1,0} divide(%add.4218, %div.2034)
  %sqrt.176 = f32[14336,512]{1,0} sqrt(%div.2621)
  %add.4219 = f32[14336,512]{1,0} add(%sqrt.176, %broadcast.5194)
  %multiply.3364 = f32[14336,512]{1,0} multiply(%div.2033, %add.4219)
  %div.2622 = f32[14336,512]{1,0} divide(%add.4217, %multiply.3364)
  %mul.8461 = f32[14336,512]{1,0} multiply(%param.249, %broadcast.5190)
  %add.4220 = f32[14336,512]{1,0} add(%div.2622, %mul.8461)
  %mul.8462 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4220)
  %add.4221 = f32[14336,512]{1,0} add(%param.249, %mul.8462)
  %div.2623 = f32[4096]{0} divide(%convert_element_type.3760, %div.2008)
  %select_n.2903 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3760, %div.2623)
  %mul.8466 = f32[4096]{0} multiply(%select_n.2903, %broadcast.5180)
  %param.649 = f32[4096]{0} parameter(468), sharding={replicated}
  %mul.8469 = f32[4096]{0} multiply(%param.649, %broadcast.5181)
  %add.4222 = f32[4096]{0} add(%mul.8466, %mul.8469)
  %integer_pow.188 = f32[4096]{0} multiply(%select_n.2903, %select_n.2903)
  %mul.8470 = f32[4096]{0} multiply(%integer_pow.188, %broadcast.5182)
  %param.650 = f32[4096]{0} parameter(759), sharding={replicated}
  %mul.8471 = f32[4096]{0} multiply(%param.650, %broadcast.5183)
  %add.4223 = f32[4096]{0} add(%mul.8470, %mul.8471)
  %div.2624 = f32[4096]{0} divide(%add.4223, %div.2012)
  %sqrt.177 = f32[4096]{0} sqrt(%div.2624)
  %add.4224 = f32[4096]{0} add(%sqrt.177, %broadcast.5184)
  %multiply.3365 = f32[4096]{0} multiply(%div.2010, %add.4224)
  %div.2625 = f32[4096]{0} divide(%add.4222, %multiply.3365)
  %mul.8472 = f32[4096]{0} multiply(%param.246, %broadcast.5180)
  %add.4225 = f32[4096]{0} add(%div.2625, %mul.8472)
  %mul.8473 = f32[4096]{0} multiply(%mul.1626, %add.4225)
  %add.4226 = f32[4096]{0} add(%param.246, %mul.8473)
  %div.2627 = f32[4096]{0} divide(%convert_element_type.3763, %div.2008)
  %select_n.2904 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3763, %div.2627)
  %mul.8474 = f32[4096]{0} multiply(%select_n.2904, %broadcast.5180)
  %param.651 = f32[4096]{0} parameter(469), sharding={replicated}
  %mul.8475 = f32[4096]{0} multiply(%param.651, %broadcast.5181)
  %add.4227 = f32[4096]{0} add(%mul.8474, %mul.8475)
  %integer_pow.189 = f32[4096]{0} multiply(%select_n.2904, %select_n.2904)
  %mul.8476 = f32[4096]{0} multiply(%integer_pow.189, %broadcast.5182)
  %param.652 = f32[4096]{0} parameter(760), sharding={replicated}
  %mul.8477 = f32[4096]{0} multiply(%param.652, %broadcast.5183)
  %add.4228 = f32[4096]{0} add(%mul.8476, %mul.8477)
  %div.2628 = f32[4096]{0} divide(%add.4228, %div.2012)
  %sqrt.178 = f32[4096]{0} sqrt(%div.2628)
  %add.4229 = f32[4096]{0} add(%sqrt.178, %broadcast.5184)
  %multiply.3366 = f32[4096]{0} multiply(%div.2010, %add.4229)
  %div.2629 = f32[4096]{0} divide(%add.4227, %multiply.3366)
  %mul.8479 = f32[4096]{0} multiply(%param.241, %broadcast.5180)
  %add.4230 = f32[4096]{0} add(%div.2629, %mul.8479)
  %mul.8480 = f32[4096]{0} multiply(%mul.1626, %add.4230)
  %add.4231 = f32[4096]{0} add(%param.241, %mul.8480)
  %div.2632 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3766, %div.2043)
  %select_n.2905 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3766, %div.2632)
  %mul.8481 = f32[512,8,128]{2,1,0} multiply(%select_n.2905, %broadcast.5195)
  %param.653 = f32[512,8,128]{2,1,0} parameter(470), sharding={devices=[8,1,1]<=[8]}
  %mul.8482 = f32[512,8,128]{2,1,0} multiply(%param.653, %broadcast.5196)
  %add.4232 = f32[512,8,128]{2,1,0} add(%mul.8481, %mul.8482)
  %integer_pow.190 = f32[512,8,128]{2,1,0} multiply(%select_n.2905, %select_n.2905)
  %mul.8483 = f32[512,8,128]{2,1,0} multiply(%integer_pow.190, %broadcast.5197)
  %param.654 = f32[512,8,128]{2,1,0} parameter(761), sharding={devices=[8,1,1]<=[8]}
  %mul.8484 = f32[512,8,128]{2,1,0} multiply(%param.654, %broadcast.5198)
  %add.4234 = f32[512,8,128]{2,1,0} add(%mul.8483, %mul.8484)
  %div.2633 = f32[512,8,128]{2,1,0} divide(%add.4234, %div.2046)
  %sqrt.179 = f32[512,8,128]{2,1,0} sqrt(%div.2633)
  %add.4235 = f32[512,8,128]{2,1,0} add(%sqrt.179, %broadcast.5199)
  %multiply.3367 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4235)
  %div.2634 = f32[512,8,128]{2,1,0} divide(%add.4232, %multiply.3367)
  %mul.8485 = f32[512,8,128]{2,1,0} multiply(%param.243, %broadcast.5195)
  %add.4236 = f32[512,8,128]{2,1,0} add(%div.2634, %mul.8485)
  %mul.8486 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4236)
  %add.4237 = f32[512,8,128]{2,1,0} add(%param.243, %mul.8486)
  %div.2635 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3768, %div.2049)
  %select_n.2907 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3768, %div.2635)
  %mul.8487 = f32[32,128,512]{2,1,0} multiply(%select_n.2907, %broadcast.5200)
  %param.655 = f32[32,128,512]{2,1,0} parameter(471), sharding={devices=[1,1,8]<=[8]}
  %mul.8488 = f32[32,128,512]{2,1,0} multiply(%param.655, %broadcast.5201)
  %add.4238 = f32[32,128,512]{2,1,0} add(%mul.8487, %mul.8488)
  %integer_pow.191 = f32[32,128,512]{2,1,0} multiply(%select_n.2907, %select_n.2907)
  %mul.8489 = f32[32,128,512]{2,1,0} multiply(%integer_pow.191, %broadcast.5202)
  %param.656 = f32[32,128,512]{2,1,0} parameter(762), sharding={devices=[1,1,8]<=[8]}
  %mul.8490 = f32[32,128,512]{2,1,0} multiply(%param.656, %broadcast.5203)
  %add.4239 = f32[32,128,512]{2,1,0} add(%mul.8489, %mul.8490)
  %div.2637 = f32[32,128,512]{2,1,0} divide(%add.4239, %div.2052)
  %sqrt.180 = f32[32,128,512]{2,1,0} sqrt(%div.2637)
  %add.4240 = f32[32,128,512]{2,1,0} add(%sqrt.180, %broadcast.5204)
  %multiply.3368 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4240)
  %div.2639 = f32[32,128,512]{2,1,0} divide(%add.4238, %multiply.3368)
  %mul.8495 = f32[32,128,512]{2,1,0} multiply(%param.245, %broadcast.5200)
  %add.4241 = f32[32,128,512]{2,1,0} add(%div.2639, %mul.8495)
  %mul.8501 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4241)
  %add.4242 = f32[32,128,512]{2,1,0} add(%param.245, %mul.8501)
  %div.2640 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3770, %div.2055)
  %select_n.2908 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3770, %div.2640)
  %mul.8506 = f32[512,32,128]{2,1,0} multiply(%select_n.2908, %broadcast.5205)
  %param.657 = f32[512,32,128]{2,1,0} parameter(472), sharding={devices=[8,1,1]<=[8]}
  %mul.8507 = f32[512,32,128]{2,1,0} multiply(%param.657, %broadcast.5206)
  %add.4243 = f32[512,32,128]{2,1,0} add(%mul.8506, %mul.8507)
  %integer_pow.192 = f32[512,32,128]{2,1,0} multiply(%select_n.2908, %select_n.2908)
  %mul.8508 = f32[512,32,128]{2,1,0} multiply(%integer_pow.192, %broadcast.5207)
  %param.658 = f32[512,32,128]{2,1,0} parameter(763), sharding={devices=[8,1,1]<=[8]}
  %mul.8512 = f32[512,32,128]{2,1,0} multiply(%param.658, %broadcast.5208)
  %add.4244 = f32[512,32,128]{2,1,0} add(%mul.8508, %mul.8512)
  %div.2642 = f32[512,32,128]{2,1,0} divide(%add.4244, %div.2058)
  %sqrt.181 = f32[512,32,128]{2,1,0} sqrt(%div.2642)
  %add.4245 = f32[512,32,128]{2,1,0} add(%sqrt.181, %broadcast.5209)
  %multiply.3369 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4245)
  %div.2643 = f32[512,32,128]{2,1,0} divide(%add.4243, %multiply.3369)
  %mul.8513 = f32[512,32,128]{2,1,0} multiply(%param.242, %broadcast.5205)
  %add.4246 = f32[512,32,128]{2,1,0} add(%div.2643, %mul.8513)
  %mul.8514 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4246)
  %add.4247 = f32[512,32,128]{2,1,0} add(%param.242, %mul.8514)
  %div.2645 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3772, %div.2043)
  %select_n.2909 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3772, %div.2645)
  %mul.8515 = f32[512,8,128]{2,1,0} multiply(%select_n.2909, %broadcast.5195)
  %param.659 = f32[512,8,128]{2,1,0} parameter(473), sharding={devices=[8,1,1]<=[8]}
  %mul.8516 = f32[512,8,128]{2,1,0} multiply(%param.659, %broadcast.5196)
  %add.4248 = f32[512,8,128]{2,1,0} add(%mul.8515, %mul.8516)
  %integer_pow.193 = f32[512,8,128]{2,1,0} multiply(%select_n.2909, %select_n.2909)
  %mul.8517 = f32[512,8,128]{2,1,0} multiply(%integer_pow.193, %broadcast.5197)
  %param.660 = f32[512,8,128]{2,1,0} parameter(764), sharding={devices=[8,1,1]<=[8]}
  %mul.8518 = f32[512,8,128]{2,1,0} multiply(%param.660, %broadcast.5198)
  %add.4249 = f32[512,8,128]{2,1,0} add(%mul.8517, %mul.8518)
  %div.2646 = f32[512,8,128]{2,1,0} divide(%add.4249, %div.2046)
  %sqrt.182 = f32[512,8,128]{2,1,0} sqrt(%div.2646)
  %add.4250 = f32[512,8,128]{2,1,0} add(%sqrt.182, %broadcast.5199)
  %multiply.3370 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4250)
  %div.2647 = f32[512,8,128]{2,1,0} divide(%add.4248, %multiply.3370)
  %mul.8519 = f32[512,8,128]{2,1,0} multiply(%param.244, %broadcast.5195)
  %add.4251 = f32[512,8,128]{2,1,0} add(%div.2647, %mul.8519)
  %mul.8520 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4251)
  %add.4252 = f32[512,8,128]{2,1,0} add(%param.244, %mul.8520)
  %div.2648 = f32[512,14336]{1,0} divide(%convert_element_type.3774, %div.2022)
  %select_n.2910 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3774, %div.2648)
  %mul.8521 = f32[512,14336]{1,0} multiply(%select_n.2910, %broadcast.5185)
  %param.661 = f32[512,14336]{1,0} parameter(474), sharding={devices=[8,1]<=[8]}
  %mul.8522 = f32[512,14336]{1,0} multiply(%param.661, %broadcast.5186)
  %add.4254 = f32[512,14336]{1,0} add(%mul.8521, %mul.8522)
  %integer_pow.194 = f32[512,14336]{1,0} multiply(%select_n.2910, %select_n.2910)
  %mul.8526 = f32[512,14336]{1,0} multiply(%integer_pow.194, %broadcast.5187)
  %param.662 = f32[512,14336]{1,0} parameter(765), sharding={devices=[8,1]<=[8]}
  %mul.8527 = f32[512,14336]{1,0} multiply(%param.662, %broadcast.5188)
  %add.4255 = f32[512,14336]{1,0} add(%mul.8526, %mul.8527)
  %div.2650 = f32[512,14336]{1,0} divide(%add.4255, %div.2025)
  %sqrt.183 = f32[512,14336]{1,0} sqrt(%div.2650)
  %add.4256 = f32[512,14336]{1,0} add(%sqrt.183, %broadcast.5189)
  %multiply.3371 = f32[512,14336]{1,0} multiply(%div.2024, %add.4256)
  %div.2651 = f32[512,14336]{1,0} divide(%add.4254, %multiply.3371)
  %mul.8528 = f32[512,14336]{1,0} multiply(%param.256, %broadcast.5185)
  %add.4257 = f32[512,14336]{1,0} add(%div.2651, %mul.8528)
  %mul.8531 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4257)
  %add.4258 = f32[512,14336]{1,0} add(%param.256, %mul.8531)
  %div.2659 = f32[512,14336]{1,0} divide(%convert_element_type.3776, %div.2022)
  %select_n.2911 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3776, %div.2659)
  %mul.8532 = f32[512,14336]{1,0} multiply(%select_n.2911, %broadcast.5185)
  %param.663 = f32[512,14336]{1,0} parameter(475), sharding={devices=[8,1]<=[8]}
  %mul.8533 = f32[512,14336]{1,0} multiply(%param.663, %broadcast.5186)
  %add.4259 = f32[512,14336]{1,0} add(%mul.8532, %mul.8533)
  %integer_pow.195 = f32[512,14336]{1,0} multiply(%select_n.2911, %select_n.2911)
  %mul.8534 = f32[512,14336]{1,0} multiply(%integer_pow.195, %broadcast.5187)
  %param.664 = f32[512,14336]{1,0} parameter(766), sharding={devices=[8,1]<=[8]}
  %mul.8535 = f32[512,14336]{1,0} multiply(%param.664, %broadcast.5188)
  %add.4260 = f32[512,14336]{1,0} add(%mul.8534, %mul.8535)
  %div.2660 = f32[512,14336]{1,0} divide(%add.4260, %div.2025)
  %sqrt.184 = f32[512,14336]{1,0} sqrt(%div.2660)
  %add.4261 = f32[512,14336]{1,0} add(%sqrt.184, %broadcast.5189)
  %multiply.3372 = f32[512,14336]{1,0} multiply(%div.2024, %add.4261)
  %div.2661 = f32[512,14336]{1,0} divide(%add.4259, %multiply.3372)
  %mul.8536 = f32[512,14336]{1,0} multiply(%param.257, %broadcast.5185)
  %add.4262 = f32[512,14336]{1,0} add(%div.2661, %mul.8536)
  %mul.8537 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4262)
  %add.4264 = f32[512,14336]{1,0} add(%param.257, %mul.8537)
  %div.2662 = f32[14336,512]{1,0} divide(%convert_element_type.3777, %div.2031)
  %select_n.2912 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3777, %div.2662)
  %mul.8538 = f32[14336,512]{1,0} multiply(%select_n.2912, %broadcast.5190)
  %param.665 = f32[14336,512]{1,0} parameter(476), sharding={devices=[1,8]<=[8]}
  %mul.8539 = f32[14336,512]{1,0} multiply(%param.665, %broadcast.5191)
  %add.4265 = f32[14336,512]{1,0} add(%mul.8538, %mul.8539)
  %integer_pow.196 = f32[14336,512]{1,0} multiply(%select_n.2912, %select_n.2912)
  %mul.8540 = f32[14336,512]{1,0} multiply(%integer_pow.196, %broadcast.5192)
  %param.666 = f32[14336,512]{1,0} parameter(767), sharding={devices=[1,8]<=[8]}
  %mul.8544 = f32[14336,512]{1,0} multiply(%param.666, %broadcast.5193)
  %add.4266 = f32[14336,512]{1,0} add(%mul.8540, %mul.8544)
  %div.2663 = f32[14336,512]{1,0} divide(%add.4266, %div.2034)
  %sqrt.185 = f32[14336,512]{1,0} sqrt(%div.2663)
  %add.4267 = f32[14336,512]{1,0} add(%sqrt.185, %broadcast.5194)
  %multiply.3373 = f32[14336,512]{1,0} multiply(%div.2033, %add.4267)
  %div.2664 = f32[14336,512]{1,0} divide(%add.4265, %multiply.3373)
  %mul.8545 = f32[14336,512]{1,0} multiply(%param.258, %broadcast.5190)
  %add.4268 = f32[14336,512]{1,0} add(%div.2664, %mul.8545)
  %mul.8546 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4268)
  %add.4269 = f32[14336,512]{1,0} add(%param.258, %mul.8546)
  %div.2665 = f32[4096]{0} divide(%convert_element_type.3778, %div.2008)
  %select_n.2913 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3778, %div.2665)
  %mul.8547 = f32[4096]{0} multiply(%select_n.2913, %broadcast.5180)
  %param.667 = f32[4096]{0} parameter(477), sharding={replicated}
  %mul.8548 = f32[4096]{0} multiply(%param.667, %broadcast.5181)
  %add.4270 = f32[4096]{0} add(%mul.8547, %mul.8548)
  %integer_pow.197 = f32[4096]{0} multiply(%select_n.2913, %select_n.2913)
  %mul.8549 = f32[4096]{0} multiply(%integer_pow.197, %broadcast.5182)
  %param.668 = f32[4096]{0} parameter(768), sharding={replicated}
  %mul.8550 = f32[4096]{0} multiply(%param.668, %broadcast.5183)
  %add.4271 = f32[4096]{0} add(%mul.8549, %mul.8550)
  %div.2666 = f32[4096]{0} divide(%add.4271, %div.2012)
  %sqrt.186 = f32[4096]{0} sqrt(%div.2666)
  %add.4272 = f32[4096]{0} add(%sqrt.186, %broadcast.5184)
  %multiply.3374 = f32[4096]{0} multiply(%div.2010, %add.4272)
  %div.2667 = f32[4096]{0} divide(%add.4270, %multiply.3374)
  %mul.8551 = f32[4096]{0} multiply(%param.255, %broadcast.5180)
  %add.4273 = f32[4096]{0} add(%div.2667, %mul.8551)
  %mul.8552 = f32[4096]{0} multiply(%mul.1626, %add.4273)
  %add.4274 = f32[4096]{0} add(%param.255, %mul.8552)
  %div.2668 = f32[4096]{0} divide(%convert_element_type.3780, %div.2008)
  %select_n.2914 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3780, %div.2668)
  %mul.8553 = f32[4096]{0} multiply(%select_n.2914, %broadcast.5180)
  %param.669 = f32[4096]{0} parameter(478), sharding={replicated}
  %mul.8554 = f32[4096]{0} multiply(%param.669, %broadcast.5181)
  %add.4275 = f32[4096]{0} add(%mul.8553, %mul.8554)
  %integer_pow.198 = f32[4096]{0} multiply(%select_n.2914, %select_n.2914)
  %mul.8555 = f32[4096]{0} multiply(%integer_pow.198, %broadcast.5182)
  %param.670 = f32[4096]{0} parameter(769), sharding={replicated}
  %mul.8556 = f32[4096]{0} multiply(%param.670, %broadcast.5183)
  %add.4276 = f32[4096]{0} add(%mul.8555, %mul.8556)
  %div.2669 = f32[4096]{0} divide(%add.4276, %div.2012)
  %sqrt.187 = f32[4096]{0} sqrt(%div.2669)
  %add.4277 = f32[4096]{0} add(%sqrt.187, %broadcast.5184)
  %multiply.3375 = f32[4096]{0} multiply(%div.2010, %add.4277)
  %div.2670 = f32[4096]{0} divide(%add.4275, %multiply.3375)
  %mul.8557 = f32[4096]{0} multiply(%param.250, %broadcast.5180)
  %add.4278 = f32[4096]{0} add(%div.2670, %mul.8557)
  %mul.8558 = f32[4096]{0} multiply(%mul.1626, %add.4278)
  %add.4279 = f32[4096]{0} add(%param.250, %mul.8558)
  %div.2671 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3782, %div.2043)
  %select_n.2915 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3782, %div.2671)
  %mul.8559 = f32[512,8,128]{2,1,0} multiply(%select_n.2915, %broadcast.5195)
  %param.671 = f32[512,8,128]{2,1,0} parameter(479), sharding={devices=[8,1,1]<=[8]}
  %mul.8560 = f32[512,8,128]{2,1,0} multiply(%param.671, %broadcast.5196)
  %add.4280 = f32[512,8,128]{2,1,0} add(%mul.8559, %mul.8560)
  %integer_pow.199 = f32[512,8,128]{2,1,0} multiply(%select_n.2915, %select_n.2915)
  %mul.8561 = f32[512,8,128]{2,1,0} multiply(%integer_pow.199, %broadcast.5197)
  %param.672 = f32[512,8,128]{2,1,0} parameter(770), sharding={devices=[8,1,1]<=[8]}
  %mul.8563 = f32[512,8,128]{2,1,0} multiply(%param.672, %broadcast.5198)
  %add.4281 = f32[512,8,128]{2,1,0} add(%mul.8561, %mul.8563)
  %div.2672 = f32[512,8,128]{2,1,0} divide(%add.4281, %div.2046)
  %sqrt.188 = f32[512,8,128]{2,1,0} sqrt(%div.2672)
  %add.4282 = f32[512,8,128]{2,1,0} add(%sqrt.188, %broadcast.5199)
  %multiply.3376 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4282)
  %div.2673 = f32[512,8,128]{2,1,0} divide(%add.4280, %multiply.3376)
  %mul.8565 = f32[512,8,128]{2,1,0} multiply(%param.252, %broadcast.5195)
  %add.4283 = f32[512,8,128]{2,1,0} add(%div.2673, %mul.8565)
  %mul.8566 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4283)
  %add.4284 = f32[512,8,128]{2,1,0} add(%param.252, %mul.8566)
  %div.2674 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3784, %div.2049)
  %select_n.2916 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3784, %div.2674)
  %mul.8571 = f32[32,128,512]{2,1,0} multiply(%select_n.2916, %broadcast.5200)
  %param.673 = f32[32,128,512]{2,1,0} parameter(480), sharding={devices=[1,1,8]<=[8]}
  %mul.8576 = f32[32,128,512]{2,1,0} multiply(%param.673, %broadcast.5201)
  %add.4285 = f32[32,128,512]{2,1,0} add(%mul.8571, %mul.8576)
  %integer_pow.200 = f32[32,128,512]{2,1,0} multiply(%select_n.2916, %select_n.2916)
  %mul.8577 = f32[32,128,512]{2,1,0} multiply(%integer_pow.200, %broadcast.5202)
  %param.674 = f32[32,128,512]{2,1,0} parameter(771), sharding={devices=[1,1,8]<=[8]}
  %mul.8582 = f32[32,128,512]{2,1,0} multiply(%param.674, %broadcast.5203)
  %add.4286 = f32[32,128,512]{2,1,0} add(%mul.8577, %mul.8582)
  %div.2675 = f32[32,128,512]{2,1,0} divide(%add.4286, %div.2052)
  %sqrt.189 = f32[32,128,512]{2,1,0} sqrt(%div.2675)
  %add.4287 = f32[32,128,512]{2,1,0} add(%sqrt.189, %broadcast.5204)
  %multiply.3377 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4287)
  %div.2676 = f32[32,128,512]{2,1,0} divide(%add.4285, %multiply.3377)
  %mul.8583 = f32[32,128,512]{2,1,0} multiply(%param.254, %broadcast.5200)
  %add.4288 = f32[32,128,512]{2,1,0} add(%div.2676, %mul.8583)
  %mul.8584 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4288)
  %add.4289 = f32[32,128,512]{2,1,0} add(%param.254, %mul.8584)
  %div.2677 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3786, %div.2055)
  %select_n.2917 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3786, %div.2677)
  %mul.8585 = f32[512,32,128]{2,1,0} multiply(%select_n.2917, %broadcast.5205)
  %param.675 = f32[512,32,128]{2,1,0} parameter(481), sharding={devices=[8,1,1]<=[8]}
  %mul.8586 = f32[512,32,128]{2,1,0} multiply(%param.675, %broadcast.5206)
  %add.4290 = f32[512,32,128]{2,1,0} add(%mul.8585, %mul.8586)
  %integer_pow.201 = f32[512,32,128]{2,1,0} multiply(%select_n.2917, %select_n.2917)
  %mul.8590 = f32[512,32,128]{2,1,0} multiply(%integer_pow.201, %broadcast.5207)
  %param.676 = f32[512,32,128]{2,1,0} parameter(772), sharding={devices=[8,1,1]<=[8]}
  %mul.8591 = f32[512,32,128]{2,1,0} multiply(%param.676, %broadcast.5208)
  %add.4292 = f32[512,32,128]{2,1,0} add(%mul.8590, %mul.8591)
  %div.2678 = f32[512,32,128]{2,1,0} divide(%add.4292, %div.2058)
  %sqrt.190 = f32[512,32,128]{2,1,0} sqrt(%div.2678)
  %add.4293 = f32[512,32,128]{2,1,0} add(%sqrt.190, %broadcast.5209)
  %multiply.3378 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4293)
  %div.2679 = f32[512,32,128]{2,1,0} divide(%add.4290, %multiply.3378)
  %mul.8592 = f32[512,32,128]{2,1,0} multiply(%param.251, %broadcast.5205)
  %add.4294 = f32[512,32,128]{2,1,0} add(%div.2679, %mul.8592)
  %mul.8595 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4294)
  %add.4295 = f32[512,32,128]{2,1,0} add(%param.251, %mul.8595)
  %div.2680 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3788, %div.2043)
  %select_n.2918 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3788, %div.2680)
  %mul.8596 = f32[512,8,128]{2,1,0} multiply(%select_n.2918, %broadcast.5195)
  %param.677 = f32[512,8,128]{2,1,0} parameter(482), sharding={devices=[8,1,1]<=[8]}
  %mul.8597 = f32[512,8,128]{2,1,0} multiply(%param.677, %broadcast.5196)
  %add.4296 = f32[512,8,128]{2,1,0} add(%mul.8596, %mul.8597)
  %integer_pow.202 = f32[512,8,128]{2,1,0} multiply(%select_n.2918, %select_n.2918)
  %mul.8598 = f32[512,8,128]{2,1,0} multiply(%integer_pow.202, %broadcast.5197)
  %param.678 = f32[512,8,128]{2,1,0} parameter(773), sharding={devices=[8,1,1]<=[8]}
  %mul.8599 = f32[512,8,128]{2,1,0} multiply(%param.678, %broadcast.5198)
  %add.4297 = f32[512,8,128]{2,1,0} add(%mul.8598, %mul.8599)
  %div.2681 = f32[512,8,128]{2,1,0} divide(%add.4297, %div.2046)
  %sqrt.191 = f32[512,8,128]{2,1,0} sqrt(%div.2681)
  %add.4298 = f32[512,8,128]{2,1,0} add(%sqrt.191, %broadcast.5199)
  %multiply.3379 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4298)
  %div.2682 = f32[512,8,128]{2,1,0} divide(%add.4296, %multiply.3379)
  %mul.8600 = f32[512,8,128]{2,1,0} multiply(%param.253, %broadcast.5195)
  %add.4299 = f32[512,8,128]{2,1,0} add(%div.2682, %mul.8600)
  %mul.8601 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4299)
  %add.4300 = f32[512,8,128]{2,1,0} add(%param.253, %mul.8601)
  %div.2683 = f32[512,14336]{1,0} divide(%convert_element_type.3791, %div.2022)
  %select_n.2919 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3791, %div.2683)
  %mul.8602 = f32[512,14336]{1,0} multiply(%select_n.2919, %broadcast.5185)
  %param.679 = f32[512,14336]{1,0} parameter(483), sharding={devices=[8,1]<=[8]}
  %mul.8603 = f32[512,14336]{1,0} multiply(%param.679, %broadcast.5186)
  %add.4301 = f32[512,14336]{1,0} add(%mul.8602, %mul.8603)
  %integer_pow.203 = f32[512,14336]{1,0} multiply(%select_n.2919, %select_n.2919)
  %mul.8604 = f32[512,14336]{1,0} multiply(%integer_pow.203, %broadcast.5187)
  %param.680 = f32[512,14336]{1,0} parameter(774), sharding={devices=[8,1]<=[8]}
  %mul.8605 = f32[512,14336]{1,0} multiply(%param.680, %broadcast.5188)
  %add.4302 = f32[512,14336]{1,0} add(%mul.8604, %mul.8605)
  %div.2684 = f32[512,14336]{1,0} divide(%add.4302, %div.2025)
  %sqrt.192 = f32[512,14336]{1,0} sqrt(%div.2684)
  %add.4303 = f32[512,14336]{1,0} add(%sqrt.192, %broadcast.5189)
  %multiply.3380 = f32[512,14336]{1,0} multiply(%div.2024, %add.4303)
  %div.2685 = f32[512,14336]{1,0} divide(%add.4301, %multiply.3380)
  %mul.8606 = f32[512,14336]{1,0} multiply(%param.265, %broadcast.5185)
  %add.4304 = f32[512,14336]{1,0} add(%div.2685, %mul.8606)
  %mul.8607 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4304)
  %add.4305 = f32[512,14336]{1,0} add(%param.265, %mul.8607)
  %div.2686 = f32[512,14336]{1,0} divide(%convert_element_type.3792, %div.2022)
  %select_n.2920 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3792, %div.2686)
  %mul.8608 = f32[512,14336]{1,0} multiply(%select_n.2920, %broadcast.5185)
  %param.681 = f32[512,14336]{1,0} parameter(484), sharding={devices=[8,1]<=[8]}
  %mul.8609 = f32[512,14336]{1,0} multiply(%param.681, %broadcast.5186)
  %add.4306 = f32[512,14336]{1,0} add(%mul.8608, %mul.8609)
  %integer_pow.204 = f32[512,14336]{1,0} multiply(%select_n.2920, %select_n.2920)
  %mul.8610 = f32[512,14336]{1,0} multiply(%integer_pow.204, %broadcast.5187)
  %param.682 = f32[512,14336]{1,0} parameter(775), sharding={devices=[8,1]<=[8]}
  %mul.8611 = f32[512,14336]{1,0} multiply(%param.682, %broadcast.5188)
  %add.4307 = f32[512,14336]{1,0} add(%mul.8610, %mul.8611)
  %div.2687 = f32[512,14336]{1,0} divide(%add.4307, %div.2025)
  %sqrt.193 = f32[512,14336]{1,0} sqrt(%div.2687)
  %add.4308 = f32[512,14336]{1,0} add(%sqrt.193, %broadcast.5189)
  %multiply.3381 = f32[512,14336]{1,0} multiply(%div.2024, %add.4308)
  %div.2688 = f32[512,14336]{1,0} divide(%add.4306, %multiply.3381)
  %mul.8612 = f32[512,14336]{1,0} multiply(%param.266, %broadcast.5185)
  %add.4309 = f32[512,14336]{1,0} add(%div.2688, %mul.8612)
  %mul.8613 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4309)
  %add.4310 = f32[512,14336]{1,0} add(%param.266, %mul.8613)
  %div.2689 = f32[14336,512]{1,0} divide(%convert_element_type.3793, %div.2031)
  %select_n.2921 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3793, %div.2689)
  %mul.8614 = f32[14336,512]{1,0} multiply(%select_n.2921, %broadcast.5190)
  %param.683 = f32[14336,512]{1,0} parameter(485), sharding={devices=[1,8]<=[8]}
  %mul.8615 = f32[14336,512]{1,0} multiply(%param.683, %broadcast.5191)
  %add.4311 = f32[14336,512]{1,0} add(%mul.8614, %mul.8615)
  %integer_pow.205 = f32[14336,512]{1,0} multiply(%select_n.2921, %select_n.2921)
  %mul.8616 = f32[14336,512]{1,0} multiply(%integer_pow.205, %broadcast.5192)
  %param.684 = f32[14336,512]{1,0} parameter(776), sharding={devices=[1,8]<=[8]}
  %mul.8617 = f32[14336,512]{1,0} multiply(%param.684, %broadcast.5193)
  %add.4313 = f32[14336,512]{1,0} add(%mul.8616, %mul.8617)
  %div.2690 = f32[14336,512]{1,0} divide(%add.4313, %div.2034)
  %sqrt.194 = f32[14336,512]{1,0} sqrt(%div.2690)
  %add.4314 = f32[14336,512]{1,0} add(%sqrt.194, %broadcast.5194)
  %multiply.3382 = f32[14336,512]{1,0} multiply(%div.2033, %add.4314)
  %div.2691 = f32[14336,512]{1,0} divide(%add.4311, %multiply.3382)
  %mul.8618 = f32[14336,512]{1,0} multiply(%param.267, %broadcast.5190)
  %add.4315 = f32[14336,512]{1,0} add(%div.2691, %mul.8618)
  %mul.8619 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4315)
  %add.4316 = f32[14336,512]{1,0} add(%param.267, %mul.8619)
  %div.2692 = f32[4096]{0} divide(%convert_element_type.3795, %div.2008)
  %select_n.2922 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3795, %div.2692)
  %mul.8620 = f32[4096]{0} multiply(%select_n.2922, %broadcast.5180)
  %param.685 = f32[4096]{0} parameter(486), sharding={replicated}
  %mul.8621 = f32[4096]{0} multiply(%param.685, %broadcast.5181)
  %add.4317 = f32[4096]{0} add(%mul.8620, %mul.8621)
  %integer_pow.206 = f32[4096]{0} multiply(%select_n.2922, %select_n.2922)
  %mul.8622 = f32[4096]{0} multiply(%integer_pow.206, %broadcast.5182)
  %param.686 = f32[4096]{0} parameter(777), sharding={replicated}
  %mul.8623 = f32[4096]{0} multiply(%param.686, %broadcast.5183)
  %add.4318 = f32[4096]{0} add(%mul.8622, %mul.8623)
  %div.2693 = f32[4096]{0} divide(%add.4318, %div.2012)
  %sqrt.195 = f32[4096]{0} sqrt(%div.2693)
  %add.4319 = f32[4096]{0} add(%sqrt.195, %broadcast.5184)
  %multiply.3383 = f32[4096]{0} multiply(%div.2010, %add.4319)
  %div.2694 = f32[4096]{0} divide(%add.4317, %multiply.3383)
  %mul.8624 = f32[4096]{0} multiply(%param.264, %broadcast.5180)
  %add.4320 = f32[4096]{0} add(%div.2694, %mul.8624)
  %mul.8625 = f32[4096]{0} multiply(%mul.1626, %add.4320)
  %add.4322 = f32[4096]{0} add(%param.264, %mul.8625)
  %div.2695 = f32[4096]{0} divide(%convert_element_type.3798, %div.2008)
  %select_n.2923 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3798, %div.2695)
  %mul.8626 = f32[4096]{0} multiply(%select_n.2923, %broadcast.5180)
  %param.687 = f32[4096]{0} parameter(487), sharding={replicated}
  %mul.8627 = f32[4096]{0} multiply(%param.687, %broadcast.5181)
  %add.4323 = f32[4096]{0} add(%mul.8626, %mul.8627)
  %integer_pow.207 = f32[4096]{0} multiply(%select_n.2923, %select_n.2923)
  %mul.8628 = f32[4096]{0} multiply(%integer_pow.207, %broadcast.5182)
  %param.688 = f32[4096]{0} parameter(778), sharding={replicated}
  %mul.8629 = f32[4096]{0} multiply(%param.688, %broadcast.5183)
  %add.4324 = f32[4096]{0} add(%mul.8628, %mul.8629)
  %div.2696 = f32[4096]{0} divide(%add.4324, %div.2012)
  %sqrt.196 = f32[4096]{0} sqrt(%div.2696)
  %add.4325 = f32[4096]{0} add(%sqrt.196, %broadcast.5184)
  %multiply.3384 = f32[4096]{0} multiply(%div.2010, %add.4325)
  %div.2697 = f32[4096]{0} divide(%add.4323, %multiply.3384)
  %mul.8630 = f32[4096]{0} multiply(%param.259, %broadcast.5180)
  %add.4326 = f32[4096]{0} add(%div.2697, %mul.8630)
  %mul.8631 = f32[4096]{0} multiply(%mul.1626, %add.4326)
  %add.4327 = f32[4096]{0} add(%param.259, %mul.8631)
  %div.2698 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3801, %div.2043)
  %select_n.2924 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3801, %div.2698)
  %mul.8632 = f32[512,8,128]{2,1,0} multiply(%select_n.2924, %broadcast.5195)
  %param.689 = f32[512,8,128]{2,1,0} parameter(488), sharding={devices=[8,1,1]<=[8]}
  %mul.8633 = f32[512,8,128]{2,1,0} multiply(%param.689, %broadcast.5196)
  %add.4328 = f32[512,8,128]{2,1,0} add(%mul.8632, %mul.8633)
  %integer_pow.208 = f32[512,8,128]{2,1,0} multiply(%select_n.2924, %select_n.2924)
  %mul.8634 = f32[512,8,128]{2,1,0} multiply(%integer_pow.208, %broadcast.5197)
  %param.690 = f32[512,8,128]{2,1,0} parameter(779), sharding={devices=[8,1,1]<=[8]}
  %mul.8635 = f32[512,8,128]{2,1,0} multiply(%param.690, %broadcast.5198)
  %add.4330 = f32[512,8,128]{2,1,0} add(%mul.8634, %mul.8635)
  %div.2699 = f32[512,8,128]{2,1,0} divide(%add.4330, %div.2046)
  %sqrt.197 = f32[512,8,128]{2,1,0} sqrt(%div.2699)
  %add.4331 = f32[512,8,128]{2,1,0} add(%sqrt.197, %broadcast.5199)
  %multiply.3385 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4331)
  %div.2700 = f32[512,8,128]{2,1,0} divide(%add.4328, %multiply.3385)
  %mul.8636 = f32[512,8,128]{2,1,0} multiply(%param.261, %broadcast.5195)
  %add.4332 = f32[512,8,128]{2,1,0} add(%div.2700, %mul.8636)
  %mul.8637 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4332)
  %add.4333 = f32[512,8,128]{2,1,0} add(%param.261, %mul.8637)
  %div.2701 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3803, %div.2049)
  %select_n.2925 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3803, %div.2701)
  %mul.8638 = f32[32,128,512]{2,1,0} multiply(%select_n.2925, %broadcast.5200)
  %param.691 = f32[32,128,512]{2,1,0} parameter(489), sharding={devices=[1,1,8]<=[8]}
  %mul.8639 = f32[32,128,512]{2,1,0} multiply(%param.691, %broadcast.5201)
  %add.4334 = f32[32,128,512]{2,1,0} add(%mul.8638, %mul.8639)
  %integer_pow.209 = f32[32,128,512]{2,1,0} multiply(%select_n.2925, %select_n.2925)
  %mul.8640 = f32[32,128,512]{2,1,0} multiply(%integer_pow.209, %broadcast.5202)
  %param.692 = f32[32,128,512]{2,1,0} parameter(780), sharding={devices=[1,1,8]<=[8]}
  %mul.8641 = f32[32,128,512]{2,1,0} multiply(%param.692, %broadcast.5203)
  %add.4336 = f32[32,128,512]{2,1,0} add(%mul.8640, %mul.8641)
  %div.2702 = f32[32,128,512]{2,1,0} divide(%add.4336, %div.2052)
  %sqrt.198 = f32[32,128,512]{2,1,0} sqrt(%div.2702)
  %add.4337 = f32[32,128,512]{2,1,0} add(%sqrt.198, %broadcast.5204)
  %multiply.3386 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4337)
  %div.2703 = f32[32,128,512]{2,1,0} divide(%add.4334, %multiply.3386)
  %mul.8642 = f32[32,128,512]{2,1,0} multiply(%param.263, %broadcast.5200)
  %add.4338 = f32[32,128,512]{2,1,0} add(%div.2703, %mul.8642)
  %mul.8643 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4338)
  %add.4339 = f32[32,128,512]{2,1,0} add(%param.263, %mul.8643)
  %div.2704 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3807, %div.2055)
  %select_n.2930 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3807, %div.2704)
  %mul.8644 = f32[512,32,128]{2,1,0} multiply(%select_n.2930, %broadcast.5205)
  %param.693 = f32[512,32,128]{2,1,0} parameter(490), sharding={devices=[8,1,1]<=[8]}
  %mul.8645 = f32[512,32,128]{2,1,0} multiply(%param.693, %broadcast.5206)
  %add.4340 = f32[512,32,128]{2,1,0} add(%mul.8644, %mul.8645)
  %integer_pow.210 = f32[512,32,128]{2,1,0} multiply(%select_n.2930, %select_n.2930)
  %mul.8646 = f32[512,32,128]{2,1,0} multiply(%integer_pow.210, %broadcast.5207)
  %param.694 = f32[512,32,128]{2,1,0} parameter(781), sharding={devices=[8,1,1]<=[8]}
  %mul.8647 = f32[512,32,128]{2,1,0} multiply(%param.694, %broadcast.5208)
  %add.4341 = f32[512,32,128]{2,1,0} add(%mul.8646, %mul.8647)
  %div.2705 = f32[512,32,128]{2,1,0} divide(%add.4341, %div.2058)
  %sqrt.199 = f32[512,32,128]{2,1,0} sqrt(%div.2705)
  %add.4342 = f32[512,32,128]{2,1,0} add(%sqrt.199, %broadcast.5209)
  %multiply.3387 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4342)
  %div.2706 = f32[512,32,128]{2,1,0} divide(%add.4340, %multiply.3387)
  %mul.8648 = f32[512,32,128]{2,1,0} multiply(%param.260, %broadcast.5205)
  %add.4343 = f32[512,32,128]{2,1,0} add(%div.2706, %mul.8648)
  %mul.8649 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4343)
  %add.4344 = f32[512,32,128]{2,1,0} add(%param.260, %mul.8649)
  %div.2707 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3811, %div.2043)
  %select_n.2931 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3811, %div.2707)
  %mul.8650 = f32[512,8,128]{2,1,0} multiply(%select_n.2931, %broadcast.5195)
  %param.695 = f32[512,8,128]{2,1,0} parameter(491), sharding={devices=[8,1,1]<=[8]}
  %mul.8651 = f32[512,8,128]{2,1,0} multiply(%param.695, %broadcast.5196)
  %add.4345 = f32[512,8,128]{2,1,0} add(%mul.8650, %mul.8651)
  %integer_pow.211 = f32[512,8,128]{2,1,0} multiply(%select_n.2931, %select_n.2931)
  %mul.8657 = f32[512,8,128]{2,1,0} multiply(%integer_pow.211, %broadcast.5197)
  %param.696 = f32[512,8,128]{2,1,0} parameter(782), sharding={devices=[8,1,1]<=[8]}
  %mul.8658 = f32[512,8,128]{2,1,0} multiply(%param.696, %broadcast.5198)
  %add.4347 = f32[512,8,128]{2,1,0} add(%mul.8657, %mul.8658)
  %div.2708 = f32[512,8,128]{2,1,0} divide(%add.4347, %div.2046)
  %sqrt.200 = f32[512,8,128]{2,1,0} sqrt(%div.2708)
  %add.4348 = f32[512,8,128]{2,1,0} add(%sqrt.200, %broadcast.5199)
  %multiply.3388 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4348)
  %div.2709 = f32[512,8,128]{2,1,0} divide(%add.4345, %multiply.3388)
  %mul.8663 = f32[512,8,128]{2,1,0} multiply(%param.262, %broadcast.5195)
  %add.4349 = f32[512,8,128]{2,1,0} add(%div.2709, %mul.8663)
  %mul.8664 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4349)
  %add.4350 = f32[512,8,128]{2,1,0} add(%param.262, %mul.8664)
  %div.2710 = f32[512,14336]{1,0} divide(%convert_element_type.3813, %div.2022)
  %select_n.2932 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3813, %div.2710)
  %mul.8665 = f32[512,14336]{1,0} multiply(%select_n.2932, %broadcast.5185)
  %param.697 = f32[512,14336]{1,0} parameter(492), sharding={devices=[8,1]<=[8]}
  %mul.8666 = f32[512,14336]{1,0} multiply(%param.697, %broadcast.5186)
  %add.4351 = f32[512,14336]{1,0} add(%mul.8665, %mul.8666)
  %integer_pow.212 = f32[512,14336]{1,0} multiply(%select_n.2932, %select_n.2932)
  %mul.8667 = f32[512,14336]{1,0} multiply(%integer_pow.212, %broadcast.5187)
  %param.698 = f32[512,14336]{1,0} parameter(783), sharding={devices=[8,1]<=[8]}
  %mul.8668 = f32[512,14336]{1,0} multiply(%param.698, %broadcast.5188)
  %add.4352 = f32[512,14336]{1,0} add(%mul.8667, %mul.8668)
  %div.2711 = f32[512,14336]{1,0} divide(%add.4352, %div.2025)
  %sqrt.201 = f32[512,14336]{1,0} sqrt(%div.2711)
  %add.4353 = f32[512,14336]{1,0} add(%sqrt.201, %broadcast.5189)
  %multiply.3389 = f32[512,14336]{1,0} multiply(%div.2024, %add.4353)
  %div.2712 = f32[512,14336]{1,0} divide(%add.4351, %multiply.3389)
  %mul.8670 = f32[512,14336]{1,0} multiply(%param.274, %broadcast.5185)
  %add.4354 = f32[512,14336]{1,0} add(%div.2712, %mul.8670)
  %mul.8672 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4354)
  %add.4355 = f32[512,14336]{1,0} add(%param.274, %mul.8672)
  %div.2713 = f32[512,14336]{1,0} divide(%convert_element_type.3814, %div.2022)
  %select_n.2933 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3814, %div.2713)
  %mul.8674 = f32[512,14336]{1,0} multiply(%select_n.2933, %broadcast.5185)
  %param.699 = f32[512,14336]{1,0} parameter(493), sharding={devices=[8,1]<=[8]}
  %mul.8675 = f32[512,14336]{1,0} multiply(%param.699, %broadcast.5186)
  %add.4356 = f32[512,14336]{1,0} add(%mul.8674, %mul.8675)
  %integer_pow.213 = f32[512,14336]{1,0} multiply(%select_n.2933, %select_n.2933)
  %mul.8676 = f32[512,14336]{1,0} multiply(%integer_pow.213, %broadcast.5187)
  %param.700 = f32[512,14336]{1,0} parameter(784), sharding={devices=[8,1]<=[8]}
  %mul.8677 = f32[512,14336]{1,0} multiply(%param.700, %broadcast.5188)
  %add.4358 = f32[512,14336]{1,0} add(%mul.8676, %mul.8677)
  %div.2714 = f32[512,14336]{1,0} divide(%add.4358, %div.2025)
  %sqrt.202 = f32[512,14336]{1,0} sqrt(%div.2714)
  %add.4359 = f32[512,14336]{1,0} add(%sqrt.202, %broadcast.5189)
  %multiply.3390 = f32[512,14336]{1,0} multiply(%div.2024, %add.4359)
  %div.2715 = f32[512,14336]{1,0} divide(%add.4356, %multiply.3390)
  %mul.8678 = f32[512,14336]{1,0} multiply(%param.275, %broadcast.5185)
  %add.4360 = f32[512,14336]{1,0} add(%div.2715, %mul.8678)
  %mul.8679 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4360)
  %add.4361 = f32[512,14336]{1,0} add(%param.275, %mul.8679)
  %div.2716 = f32[14336,512]{1,0} divide(%convert_element_type.3815, %div.2031)
  %select_n.2934 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3815, %div.2716)
  %mul.8680 = f32[14336,512]{1,0} multiply(%select_n.2934, %broadcast.5190)
  %param.701 = f32[14336,512]{1,0} parameter(494), sharding={devices=[1,8]<=[8]}
  %mul.8681 = f32[14336,512]{1,0} multiply(%param.701, %broadcast.5191)
  %add.4362 = f32[14336,512]{1,0} add(%mul.8680, %mul.8681)
  %integer_pow.214 = f32[14336,512]{1,0} multiply(%select_n.2934, %select_n.2934)
  %mul.8682 = f32[14336,512]{1,0} multiply(%integer_pow.214, %broadcast.5192)
  %param.702 = f32[14336,512]{1,0} parameter(785), sharding={devices=[1,8]<=[8]}
  %mul.8683 = f32[14336,512]{1,0} multiply(%param.702, %broadcast.5193)
  %add.4363 = f32[14336,512]{1,0} add(%mul.8682, %mul.8683)
  %div.2717 = f32[14336,512]{1,0} divide(%add.4363, %div.2034)
  %sqrt.203 = f32[14336,512]{1,0} sqrt(%div.2717)
  %add.4364 = f32[14336,512]{1,0} add(%sqrt.203, %broadcast.5194)
  %multiply.3391 = f32[14336,512]{1,0} multiply(%div.2033, %add.4364)
  %div.2718 = f32[14336,512]{1,0} divide(%add.4362, %multiply.3391)
  %mul.8684 = f32[14336,512]{1,0} multiply(%param.276, %broadcast.5190)
  %add.4365 = f32[14336,512]{1,0} add(%div.2718, %mul.8684)
  %mul.8685 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4365)
  %add.4366 = f32[14336,512]{1,0} add(%param.276, %mul.8685)
  %div.2719 = f32[4096]{0} divide(%convert_element_type.3816, %div.2008)
  %select_n.2935 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3816, %div.2719)
  %mul.8686 = f32[4096]{0} multiply(%select_n.2935, %broadcast.5180)
  %param.703 = f32[4096]{0} parameter(495), sharding={replicated}
  %mul.8687 = f32[4096]{0} multiply(%param.703, %broadcast.5181)
  %add.4368 = f32[4096]{0} add(%mul.8686, %mul.8687)
  %integer_pow.215 = f32[4096]{0} multiply(%select_n.2935, %select_n.2935)
  %mul.8688 = f32[4096]{0} multiply(%integer_pow.215, %broadcast.5182)
  %param.704 = f32[4096]{0} parameter(786), sharding={replicated}
  %mul.8689 = f32[4096]{0} multiply(%param.704, %broadcast.5183)
  %add.4369 = f32[4096]{0} add(%mul.8688, %mul.8689)
  %div.2720 = f32[4096]{0} divide(%add.4369, %div.2012)
  %sqrt.204 = f32[4096]{0} sqrt(%div.2720)
  %add.4370 = f32[4096]{0} add(%sqrt.204, %broadcast.5184)
  %multiply.3392 = f32[4096]{0} multiply(%div.2010, %add.4370)
  %div.2721 = f32[4096]{0} divide(%add.4368, %multiply.3392)
  %mul.8694 = f32[4096]{0} multiply(%param.273, %broadcast.5180)
  %add.4371 = f32[4096]{0} add(%div.2721, %mul.8694)
  %mul.8701 = f32[4096]{0} multiply(%mul.1626, %add.4371)
  %add.4372 = f32[4096]{0} add(%param.273, %mul.8701)
  %div.2722 = f32[4096]{0} divide(%convert_element_type.3818, %div.2008)
  %select_n.2936 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3818, %div.2722)
  %mul.8702 = f32[4096]{0} multiply(%select_n.2936, %broadcast.5180)
  %param.705 = f32[4096]{0} parameter(496), sharding={replicated}
  %mul.8703 = f32[4096]{0} multiply(%param.705, %broadcast.5181)
  %add.4373 = f32[4096]{0} add(%mul.8702, %mul.8703)
  %integer_pow.216 = f32[4096]{0} multiply(%select_n.2936, %select_n.2936)
  %mul.8704 = f32[4096]{0} multiply(%integer_pow.216, %broadcast.5182)
  %param.706 = f32[4096]{0} parameter(787), sharding={replicated}
  %mul.8705 = f32[4096]{0} multiply(%param.706, %broadcast.5183)
  %add.4374 = f32[4096]{0} add(%mul.8704, %mul.8705)
  %div.2723 = f32[4096]{0} divide(%add.4374, %div.2012)
  %sqrt.205 = f32[4096]{0} sqrt(%div.2723)
  %add.4375 = f32[4096]{0} add(%sqrt.205, %broadcast.5184)
  %multiply.3393 = f32[4096]{0} multiply(%div.2010, %add.4375)
  %div.2724 = f32[4096]{0} divide(%add.4373, %multiply.3393)
  %mul.8707 = f32[4096]{0} multiply(%param.268, %broadcast.5180)
  %add.4376 = f32[4096]{0} add(%div.2724, %mul.8707)
  %mul.8708 = f32[4096]{0} multiply(%mul.1626, %add.4376)
  %add.4377 = f32[4096]{0} add(%param.268, %mul.8708)
  %div.2725 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3820, %div.2043)
  %select_n.2937 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3820, %div.2725)
  %mul.8709 = f32[512,8,128]{2,1,0} multiply(%select_n.2937, %broadcast.5195)
  %param.707 = f32[512,8,128]{2,1,0} parameter(497), sharding={devices=[8,1,1]<=[8]}
  %mul.8710 = f32[512,8,128]{2,1,0} multiply(%param.707, %broadcast.5196)
  %add.4378 = f32[512,8,128]{2,1,0} add(%mul.8709, %mul.8710)
  %integer_pow.217 = f32[512,8,128]{2,1,0} multiply(%select_n.2937, %select_n.2937)
  %mul.8711 = f32[512,8,128]{2,1,0} multiply(%integer_pow.217, %broadcast.5197)
  %param.708 = f32[512,8,128]{2,1,0} parameter(788), sharding={devices=[8,1,1]<=[8]}
  %mul.8712 = f32[512,8,128]{2,1,0} multiply(%param.708, %broadcast.5198)
  %add.4379 = f32[512,8,128]{2,1,0} add(%mul.8711, %mul.8712)
  %div.2726 = f32[512,8,128]{2,1,0} divide(%add.4379, %div.2046)
  %sqrt.206 = f32[512,8,128]{2,1,0} sqrt(%div.2726)
  %add.4380 = f32[512,8,128]{2,1,0} add(%sqrt.206, %broadcast.5199)
  %multiply.3394 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4380)
  %div.2727 = f32[512,8,128]{2,1,0} divide(%add.4378, %multiply.3394)
  %mul.8713 = f32[512,8,128]{2,1,0} multiply(%param.270, %broadcast.5195)
  %add.4381 = f32[512,8,128]{2,1,0} add(%div.2727, %mul.8713)
  %mul.8714 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4381)
  %add.4382 = f32[512,8,128]{2,1,0} add(%param.270, %mul.8714)
  %div.2729 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3822, %div.2049)
  %select_n.2938 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3822, %div.2729)
  %mul.8715 = f32[32,128,512]{2,1,0} multiply(%select_n.2938, %broadcast.5200)
  %param.709 = f32[32,128,512]{2,1,0} parameter(498), sharding={devices=[1,1,8]<=[8]}
  %mul.8716 = f32[32,128,512]{2,1,0} multiply(%param.709, %broadcast.5201)
  %add.4383 = f32[32,128,512]{2,1,0} add(%mul.8715, %mul.8716)
  %integer_pow.218 = f32[32,128,512]{2,1,0} multiply(%select_n.2938, %select_n.2938)
  %mul.8717 = f32[32,128,512]{2,1,0} multiply(%integer_pow.218, %broadcast.5202)
  %param.710 = f32[32,128,512]{2,1,0} parameter(789), sharding={devices=[1,1,8]<=[8]}
  %mul.8718 = f32[32,128,512]{2,1,0} multiply(%param.710, %broadcast.5203)
  %add.4384 = f32[32,128,512]{2,1,0} add(%mul.8717, %mul.8718)
  %div.2730 = f32[32,128,512]{2,1,0} divide(%add.4384, %div.2052)
  %sqrt.207 = f32[32,128,512]{2,1,0} sqrt(%div.2730)
  %add.4385 = f32[32,128,512]{2,1,0} add(%sqrt.207, %broadcast.5204)
  %multiply.3395 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4385)
  %div.2731 = f32[32,128,512]{2,1,0} divide(%add.4383, %multiply.3395)
  %mul.8719 = f32[32,128,512]{2,1,0} multiply(%param.272, %broadcast.5200)
  %add.4386 = f32[32,128,512]{2,1,0} add(%div.2731, %mul.8719)
  %mul.8720 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4386)
  %add.4387 = f32[32,128,512]{2,1,0} add(%param.272, %mul.8720)
  %div.2732 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3824, %div.2055)
  %select_n.2939 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3824, %div.2732)
  %mul.8721 = f32[512,32,128]{2,1,0} multiply(%select_n.2939, %broadcast.5205)
  %param.711 = f32[512,32,128]{2,1,0} parameter(499), sharding={devices=[8,1,1]<=[8]}
  %mul.8722 = f32[512,32,128]{2,1,0} multiply(%param.711, %broadcast.5206)
  %add.4388 = f32[512,32,128]{2,1,0} add(%mul.8721, %mul.8722)
  %integer_pow.219 = f32[512,32,128]{2,1,0} multiply(%select_n.2939, %select_n.2939)
  %mul.8723 = f32[512,32,128]{2,1,0} multiply(%integer_pow.219, %broadcast.5207)
  %param.712 = f32[512,32,128]{2,1,0} parameter(790), sharding={devices=[8,1,1]<=[8]}
  %mul.8724 = f32[512,32,128]{2,1,0} multiply(%param.712, %broadcast.5208)
  %add.4389 = f32[512,32,128]{2,1,0} add(%mul.8723, %mul.8724)
  %div.2733 = f32[512,32,128]{2,1,0} divide(%add.4389, %div.2058)
  %sqrt.208 = f32[512,32,128]{2,1,0} sqrt(%div.2733)
  %add.4390 = f32[512,32,128]{2,1,0} add(%sqrt.208, %broadcast.5209)
  %multiply.3396 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4390)
  %div.2734 = f32[512,32,128]{2,1,0} divide(%add.4388, %multiply.3396)
  %mul.8725 = f32[512,32,128]{2,1,0} multiply(%param.269, %broadcast.5205)
  %add.4391 = f32[512,32,128]{2,1,0} add(%div.2734, %mul.8725)
  %mul.8727 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4391)
  %add.4392 = f32[512,32,128]{2,1,0} add(%param.269, %mul.8727)
  %div.2735 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3827, %div.2043)
  %select_n.2940 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3827, %div.2735)
  %mul.8729 = f32[512,8,128]{2,1,0} multiply(%select_n.2940, %broadcast.5195)
  %param.713 = f32[512,8,128]{2,1,0} parameter(500), sharding={devices=[8,1,1]<=[8]}
  %mul.8731 = f32[512,8,128]{2,1,0} multiply(%param.713, %broadcast.5196)
  %add.4393 = f32[512,8,128]{2,1,0} add(%mul.8729, %mul.8731)
  %integer_pow.220 = f32[512,8,128]{2,1,0} multiply(%select_n.2940, %select_n.2940)
  %mul.8732 = f32[512,8,128]{2,1,0} multiply(%integer_pow.220, %broadcast.5197)
  %param.714 = f32[512,8,128]{2,1,0} parameter(791), sharding={devices=[8,1,1]<=[8]}
  %mul.8733 = f32[512,8,128]{2,1,0} multiply(%param.714, %broadcast.5198)
  %add.4394 = f32[512,8,128]{2,1,0} add(%mul.8732, %mul.8733)
  %div.2736 = f32[512,8,128]{2,1,0} divide(%add.4394, %div.2046)
  %sqrt.209 = f32[512,8,128]{2,1,0} sqrt(%div.2736)
  %add.4395 = f32[512,8,128]{2,1,0} add(%sqrt.209, %broadcast.5199)
  %multiply.3397 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4395)
  %div.2737 = f32[512,8,128]{2,1,0} divide(%add.4393, %multiply.3397)
  %mul.8734 = f32[512,8,128]{2,1,0} multiply(%param.271, %broadcast.5195)
  %add.4396 = f32[512,8,128]{2,1,0} add(%div.2737, %mul.8734)
  %mul.8735 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4396)
  %add.4398 = f32[512,8,128]{2,1,0} add(%param.271, %mul.8735)
  %div.2738 = f32[512,14336]{1,0} divide(%convert_element_type.3829, %div.2022)
  %select_n.2941 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3829, %div.2738)
  %mul.8736 = f32[512,14336]{1,0} multiply(%select_n.2941, %broadcast.5185)
  %param.715 = f32[512,14336]{1,0} parameter(501), sharding={devices=[8,1]<=[8]}
  %mul.8740 = f32[512,14336]{1,0} multiply(%param.715, %broadcast.5186)
  %add.4399 = f32[512,14336]{1,0} add(%mul.8736, %mul.8740)
  %integer_pow.221 = f32[512,14336]{1,0} multiply(%select_n.2941, %select_n.2941)
  %mul.8741 = f32[512,14336]{1,0} multiply(%integer_pow.221, %broadcast.5187)
  %param.716 = f32[512,14336]{1,0} parameter(792), sharding={devices=[8,1]<=[8]}
  %mul.8742 = f32[512,14336]{1,0} multiply(%param.716, %broadcast.5188)
  %add.4400 = f32[512,14336]{1,0} add(%mul.8741, %mul.8742)
  %div.2739 = f32[512,14336]{1,0} divide(%add.4400, %div.2025)
  %sqrt.210 = f32[512,14336]{1,0} sqrt(%div.2739)
  %add.4401 = f32[512,14336]{1,0} add(%sqrt.210, %broadcast.5189)
  %multiply.3398 = f32[512,14336]{1,0} multiply(%div.2024, %add.4401)
  %div.2740 = f32[512,14336]{1,0} divide(%add.4399, %multiply.3398)
  %mul.8743 = f32[512,14336]{1,0} multiply(%param.40, %broadcast.5185)
  %add.4402 = f32[512,14336]{1,0} add(%div.2740, %mul.8743)
  %mul.8744 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4402)
  %add.4403 = f32[512,14336]{1,0} add(%param.40, %mul.8744)
  %div.2741 = f32[512,14336]{1,0} divide(%convert_element_type.3830, %div.2022)
  %select_n.2942 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3830, %div.2741)
  %mul.8745 = f32[512,14336]{1,0} multiply(%select_n.2942, %broadcast.5185)
  %param.717 = f32[512,14336]{1,0} parameter(502), sharding={devices=[8,1]<=[8]}
  %mul.8747 = f32[512,14336]{1,0} multiply(%param.717, %broadcast.5186)
  %add.4404 = f32[512,14336]{1,0} add(%mul.8745, %mul.8747)
  %integer_pow.222 = f32[512,14336]{1,0} multiply(%select_n.2942, %select_n.2942)
  %mul.8749 = f32[512,14336]{1,0} multiply(%integer_pow.222, %broadcast.5187)
  %param.718 = f32[512,14336]{1,0} parameter(793), sharding={devices=[8,1]<=[8]}
  %mul.8750 = f32[512,14336]{1,0} multiply(%param.718, %broadcast.5188)
  %add.4405 = f32[512,14336]{1,0} add(%mul.8749, %mul.8750)
  %div.2742 = f32[512,14336]{1,0} divide(%add.4405, %div.2025)
  %sqrt.211 = f32[512,14336]{1,0} sqrt(%div.2742)
  %add.4406 = f32[512,14336]{1,0} add(%sqrt.211, %broadcast.5189)
  %multiply.3399 = f32[512,14336]{1,0} multiply(%div.2024, %add.4406)
  %div.2743 = f32[512,14336]{1,0} divide(%add.4404, %multiply.3399)
  %mul.8754 = f32[512,14336]{1,0} multiply(%param.41, %broadcast.5185)
  %add.4407 = f32[512,14336]{1,0} add(%div.2743, %mul.8754)
  %mul.8755 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4407)
  %add.4408 = f32[512,14336]{1,0} add(%param.41, %mul.8755)
  %div.2744 = f32[14336,512]{1,0} divide(%convert_element_type.3831, %div.2031)
  %select_n.2943 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3831, %div.2744)
  %mul.8756 = f32[14336,512]{1,0} multiply(%select_n.2943, %broadcast.5190)
  %param.719 = f32[14336,512]{1,0} parameter(503), sharding={devices=[1,8]<=[8]}
  %mul.8759 = f32[14336,512]{1,0} multiply(%param.719, %broadcast.5191)
  %add.4409 = f32[14336,512]{1,0} add(%mul.8756, %mul.8759)
  %integer_pow.223 = f32[14336,512]{1,0} multiply(%select_n.2943, %select_n.2943)
  %mul.8760 = f32[14336,512]{1,0} multiply(%integer_pow.223, %broadcast.5192)
  %param.720 = f32[14336,512]{1,0} parameter(794), sharding={devices=[1,8]<=[8]}
  %mul.8761 = f32[14336,512]{1,0} multiply(%param.720, %broadcast.5193)
  %add.4410 = f32[14336,512]{1,0} add(%mul.8760, %mul.8761)
  %div.2745 = f32[14336,512]{1,0} divide(%add.4410, %div.2034)
  %sqrt.212 = f32[14336,512]{1,0} sqrt(%div.2745)
  %add.4411 = f32[14336,512]{1,0} add(%sqrt.212, %broadcast.5194)
  %multiply.3400 = f32[14336,512]{1,0} multiply(%div.2033, %add.4411)
  %div.2747 = f32[14336,512]{1,0} divide(%add.4409, %multiply.3400)
  %mul.8762 = f32[14336,512]{1,0} multiply(%param.42, %broadcast.5190)
  %add.4412 = f32[14336,512]{1,0} add(%div.2747, %mul.8762)
  %mul.8763 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4412)
  %add.4413 = f32[14336,512]{1,0} add(%param.42, %mul.8763)
  %div.2749 = f32[4096]{0} divide(%convert_element_type.3832, %div.2008)
  %select_n.2944 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3832, %div.2749)
  %mul.8764 = f32[4096]{0} multiply(%select_n.2944, %broadcast.5180)
  %param.721 = f32[4096]{0} parameter(504), sharding={replicated}
  %mul.8765 = f32[4096]{0} multiply(%param.721, %broadcast.5181)
  %add.4414 = f32[4096]{0} add(%mul.8764, %mul.8765)
  %integer_pow.224 = f32[4096]{0} multiply(%select_n.2944, %select_n.2944)
  %mul.8766 = f32[4096]{0} multiply(%integer_pow.224, %broadcast.5182)
  %param.722 = f32[4096]{0} parameter(795), sharding={replicated}
  %mul.8767 = f32[4096]{0} multiply(%param.722, %broadcast.5183)
  %add.4415 = f32[4096]{0} add(%mul.8766, %mul.8767)
  %div.2750 = f32[4096]{0} divide(%add.4415, %div.2012)
  %sqrt.213 = f32[4096]{0} sqrt(%div.2750)
  %add.4416 = f32[4096]{0} add(%sqrt.213, %broadcast.5184)
  %multiply.3401 = f32[4096]{0} multiply(%div.2010, %add.4416)
  %div.2751 = f32[4096]{0} divide(%add.4414, %multiply.3401)
  %mul.8768 = f32[4096]{0} multiply(%param.39, %broadcast.5180)
  %add.4417 = f32[4096]{0} add(%div.2751, %mul.8768)
  %mul.8769 = f32[4096]{0} multiply(%mul.1626, %add.4417)
  %add.4418 = f32[4096]{0} add(%param.39, %mul.8769)
  %div.2752 = f32[4096]{0} divide(%convert_element_type.3836, %div.2008)
  %select_n.2945 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3836, %div.2752)
  %mul.8771 = f32[4096]{0} multiply(%select_n.2945, %broadcast.5180)
  %param.723 = f32[4096]{0} parameter(505), sharding={replicated}
  %mul.8776 = f32[4096]{0} multiply(%param.723, %broadcast.5181)
  %add.4419 = f32[4096]{0} add(%mul.8771, %mul.8776)
  %integer_pow.225 = f32[4096]{0} multiply(%select_n.2945, %select_n.2945)
  %mul.8781 = f32[4096]{0} multiply(%integer_pow.225, %broadcast.5182)
  %param.724 = f32[4096]{0} parameter(796), sharding={replicated}
  %mul.8782 = f32[4096]{0} multiply(%param.724, %broadcast.5183)
  %add.4420 = f32[4096]{0} add(%mul.8781, %mul.8782)
  %div.2753 = f32[4096]{0} divide(%add.4420, %div.2012)
  %sqrt.214 = f32[4096]{0} sqrt(%div.2753)
  %add.4421 = f32[4096]{0} add(%sqrt.214, %broadcast.5184)
  %multiply.3402 = f32[4096]{0} multiply(%div.2010, %add.4421)
  %div.2754 = f32[4096]{0} divide(%add.4419, %multiply.3402)
  %mul.8787 = f32[4096]{0} multiply(%param.34, %broadcast.5180)
  %add.4422 = f32[4096]{0} add(%div.2754, %mul.8787)
  %mul.8788 = f32[4096]{0} multiply(%mul.1626, %add.4422)
  %add.4423 = f32[4096]{0} add(%param.34, %mul.8788)
  %div.2755 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3838, %div.2043)
  %select_n.2946 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3838, %div.2755)
  %mul.8789 = f32[512,8,128]{2,1,0} multiply(%select_n.2946, %broadcast.5195)
  %param.725 = f32[512,8,128]{2,1,0} parameter(506), sharding={devices=[8,1,1]<=[8]}
  %mul.8791 = f32[512,8,128]{2,1,0} multiply(%param.725, %broadcast.5196)
  %add.4424 = f32[512,8,128]{2,1,0} add(%mul.8789, %mul.8791)
  %integer_pow.226 = f32[512,8,128]{2,1,0} multiply(%select_n.2946, %select_n.2946)
  %mul.8793 = f32[512,8,128]{2,1,0} multiply(%integer_pow.226, %broadcast.5197)
  %param.726 = f32[512,8,128]{2,1,0} parameter(797), sharding={devices=[8,1,1]<=[8]}
  %mul.8794 = f32[512,8,128]{2,1,0} multiply(%param.726, %broadcast.5198)
  %add.4426 = f32[512,8,128]{2,1,0} add(%mul.8793, %mul.8794)
  %div.2756 = f32[512,8,128]{2,1,0} divide(%add.4426, %div.2046)
  %sqrt.215 = f32[512,8,128]{2,1,0} sqrt(%div.2756)
  %add.4428 = f32[512,8,128]{2,1,0} add(%sqrt.215, %broadcast.5199)
  %multiply.3403 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4428)
  %div.2757 = f32[512,8,128]{2,1,0} divide(%add.4424, %multiply.3403)
  %mul.8795 = f32[512,8,128]{2,1,0} multiply(%param.36, %broadcast.5195)
  %add.4429 = f32[512,8,128]{2,1,0} add(%div.2757, %mul.8795)
  %mul.8796 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4429)
  %add.4430 = f32[512,8,128]{2,1,0} add(%param.36, %mul.8796)
  %div.2759 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3840, %div.2049)
  %select_n.2947 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3840, %div.2759)
  %mul.8797 = f32[32,128,512]{2,1,0} multiply(%select_n.2947, %broadcast.5200)
  %param.727 = f32[32,128,512]{2,1,0} parameter(507), sharding={devices=[1,1,8]<=[8]}
  %mul.8798 = f32[32,128,512]{2,1,0} multiply(%param.727, %broadcast.5201)
  %add.4431 = f32[32,128,512]{2,1,0} add(%mul.8797, %mul.8798)
  %integer_pow.227 = f32[32,128,512]{2,1,0} multiply(%select_n.2947, %select_n.2947)
  %mul.8799 = f32[32,128,512]{2,1,0} multiply(%integer_pow.227, %broadcast.5202)
  %param.728 = f32[32,128,512]{2,1,0} parameter(798), sharding={devices=[1,1,8]<=[8]}
  %mul.8800 = f32[32,128,512]{2,1,0} multiply(%param.728, %broadcast.5203)
  %add.4432 = f32[32,128,512]{2,1,0} add(%mul.8799, %mul.8800)
  %div.2760 = f32[32,128,512]{2,1,0} divide(%add.4432, %div.2052)
  %sqrt.216 = f32[32,128,512]{2,1,0} sqrt(%div.2760)
  %add.4433 = f32[32,128,512]{2,1,0} add(%sqrt.216, %broadcast.5204)
  %multiply.3404 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4433)
  %div.2761 = f32[32,128,512]{2,1,0} divide(%add.4431, %multiply.3404)
  %mul.8804 = f32[32,128,512]{2,1,0} multiply(%param.38, %broadcast.5200)
  %add.4434 = f32[32,128,512]{2,1,0} add(%div.2761, %mul.8804)
  %mul.8805 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4434)
  %add.4436 = f32[32,128,512]{2,1,0} add(%param.38, %mul.8805)
  %div.2763 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3843, %div.2055)
  %select_n.2948 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3843, %div.2763)
  %mul.8807 = f32[512,32,128]{2,1,0} multiply(%select_n.2948, %broadcast.5205)
  %param.729 = f32[512,32,128]{2,1,0} parameter(508), sharding={devices=[8,1,1]<=[8]}
  %mul.8808 = f32[512,32,128]{2,1,0} multiply(%param.729, %broadcast.5206)
  %add.4437 = f32[512,32,128]{2,1,0} add(%mul.8807, %mul.8808)
  %integer_pow.228 = f32[512,32,128]{2,1,0} multiply(%select_n.2948, %select_n.2948)
  %mul.8809 = f32[512,32,128]{2,1,0} multiply(%integer_pow.228, %broadcast.5207)
  %param.730 = f32[512,32,128]{2,1,0} parameter(799), sharding={devices=[8,1,1]<=[8]}
  %mul.8810 = f32[512,32,128]{2,1,0} multiply(%param.730, %broadcast.5208)
  %add.4438 = f32[512,32,128]{2,1,0} add(%mul.8809, %mul.8810)
  %div.2764 = f32[512,32,128]{2,1,0} divide(%add.4438, %div.2058)
  %sqrt.217 = f32[512,32,128]{2,1,0} sqrt(%div.2764)
  %add.4439 = f32[512,32,128]{2,1,0} add(%sqrt.217, %broadcast.5209)
  %multiply.3405 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4439)
  %div.2765 = f32[512,32,128]{2,1,0} divide(%add.4437, %multiply.3405)
  %mul.8811 = f32[512,32,128]{2,1,0} multiply(%param.35, %broadcast.5205)
  %add.4440 = f32[512,32,128]{2,1,0} add(%div.2765, %mul.8811)
  %mul.8812 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4440)
  %add.4441 = f32[512,32,128]{2,1,0} add(%param.35, %mul.8812)
  %div.2766 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3845, %div.2043)
  %select_n.2949 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3845, %div.2766)
  %mul.8813 = f32[512,8,128]{2,1,0} multiply(%select_n.2949, %broadcast.5195)
  %param.731 = f32[512,8,128]{2,1,0} parameter(509), sharding={devices=[8,1,1]<=[8]}
  %mul.8814 = f32[512,8,128]{2,1,0} multiply(%param.731, %broadcast.5196)
  %add.4442 = f32[512,8,128]{2,1,0} add(%mul.8813, %mul.8814)
  %integer_pow.229 = f32[512,8,128]{2,1,0} multiply(%select_n.2949, %select_n.2949)
  %mul.8818 = f32[512,8,128]{2,1,0} multiply(%integer_pow.229, %broadcast.5197)
  %param.732 = f32[512,8,128]{2,1,0} parameter(800), sharding={devices=[8,1,1]<=[8]}
  %mul.8819 = f32[512,8,128]{2,1,0} multiply(%param.732, %broadcast.5198)
  %add.4443 = f32[512,8,128]{2,1,0} add(%mul.8818, %mul.8819)
  %div.2767 = f32[512,8,128]{2,1,0} divide(%add.4443, %div.2046)
  %sqrt.218 = f32[512,8,128]{2,1,0} sqrt(%div.2767)
  %add.4444 = f32[512,8,128]{2,1,0} add(%sqrt.218, %broadcast.5199)
  %multiply.3406 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4444)
  %div.2768 = f32[512,8,128]{2,1,0} divide(%add.4442, %multiply.3406)
  %mul.8820 = f32[512,8,128]{2,1,0} multiply(%param.37, %broadcast.5195)
  %add.4445 = f32[512,8,128]{2,1,0} add(%div.2768, %mul.8820)
  %mul.8823 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4445)
  %add.4446 = f32[512,8,128]{2,1,0} add(%param.37, %mul.8823)
  %div.2769 = f32[512,14336]{1,0} divide(%convert_element_type.3847, %div.2022)
  %select_n.2950 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3847, %div.2769)
  %mul.8825 = f32[512,14336]{1,0} multiply(%select_n.2950, %broadcast.5185)
  %param.733 = f32[512,14336]{1,0} parameter(510), sharding={devices=[8,1]<=[8]}
  %mul.8826 = f32[512,14336]{1,0} multiply(%param.733, %broadcast.5186)
  %add.4447 = f32[512,14336]{1,0} add(%mul.8825, %mul.8826)
  %integer_pow.230 = f32[512,14336]{1,0} multiply(%select_n.2950, %select_n.2950)
  %mul.8827 = f32[512,14336]{1,0} multiply(%integer_pow.230, %broadcast.5187)
  %param.734 = f32[512,14336]{1,0} parameter(801), sharding={devices=[8,1]<=[8]}
  %mul.8828 = f32[512,14336]{1,0} multiply(%param.734, %broadcast.5188)
  %add.4448 = f32[512,14336]{1,0} add(%mul.8827, %mul.8828)
  %div.2770 = f32[512,14336]{1,0} divide(%add.4448, %div.2025)
  %sqrt.219 = f32[512,14336]{1,0} sqrt(%div.2770)
  %add.4449 = f32[512,14336]{1,0} add(%sqrt.219, %broadcast.5189)
  %multiply.3407 = f32[512,14336]{1,0} multiply(%div.2024, %add.4449)
  %div.2771 = f32[512,14336]{1,0} divide(%add.4447, %multiply.3407)
  %mul.8829 = f32[512,14336]{1,0} multiply(%param.283, %broadcast.5185)
  %add.4450 = f32[512,14336]{1,0} add(%div.2771, %mul.8829)
  %mul.8830 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4450)
  %add.4451 = f32[512,14336]{1,0} add(%param.283, %mul.8830)
  %div.2772 = f32[512,14336]{1,0} divide(%convert_element_type.3848, %div.2022)
  %select_n.2951 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3848, %div.2772)
  %mul.8831 = f32[512,14336]{1,0} multiply(%select_n.2951, %broadcast.5185)
  %param.735 = f32[512,14336]{1,0} parameter(511), sharding={devices=[8,1]<=[8]}
  %mul.8832 = f32[512,14336]{1,0} multiply(%param.735, %broadcast.5186)
  %add.4452 = f32[512,14336]{1,0} add(%mul.8831, %mul.8832)
  %integer_pow.231 = f32[512,14336]{1,0} multiply(%select_n.2951, %select_n.2951)
  %mul.8833 = f32[512,14336]{1,0} multiply(%integer_pow.231, %broadcast.5187)
  %param.736 = f32[512,14336]{1,0} parameter(802), sharding={devices=[8,1]<=[8]}
  %mul.8834 = f32[512,14336]{1,0} multiply(%param.736, %broadcast.5188)
  %add.4453 = f32[512,14336]{1,0} add(%mul.8833, %mul.8834)
  %div.2773 = f32[512,14336]{1,0} divide(%add.4453, %div.2025)
  %sqrt.220 = f32[512,14336]{1,0} sqrt(%div.2773)
  %add.4454 = f32[512,14336]{1,0} add(%sqrt.220, %broadcast.5189)
  %multiply.3408 = f32[512,14336]{1,0} multiply(%div.2024, %add.4454)
  %div.2774 = f32[512,14336]{1,0} divide(%add.4452, %multiply.3408)
  %mul.8835 = f32[512,14336]{1,0} multiply(%param.284, %broadcast.5185)
  %add.4455 = f32[512,14336]{1,0} add(%div.2774, %mul.8835)
  %mul.8836 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4455)
  %add.4456 = f32[512,14336]{1,0} add(%param.284, %mul.8836)
  %div.2775 = f32[14336,512]{1,0} divide(%convert_element_type.3849, %div.2031)
  %select_n.2952 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3849, %div.2775)
  %mul.8837 = f32[14336,512]{1,0} multiply(%select_n.2952, %broadcast.5190)
  %param.737 = f32[14336,512]{1,0} parameter(512), sharding={devices=[1,8]<=[8]}
  %mul.8838 = f32[14336,512]{1,0} multiply(%param.737, %broadcast.5191)
  %add.4457 = f32[14336,512]{1,0} add(%mul.8837, %mul.8838)
  %integer_pow.232 = f32[14336,512]{1,0} multiply(%select_n.2952, %select_n.2952)
  %mul.8839 = f32[14336,512]{1,0} multiply(%integer_pow.232, %broadcast.5192)
  %param.738 = f32[14336,512]{1,0} parameter(803), sharding={devices=[1,8]<=[8]}
  %mul.8840 = f32[14336,512]{1,0} multiply(%param.738, %broadcast.5193)
  %add.4458 = f32[14336,512]{1,0} add(%mul.8839, %mul.8840)
  %div.2776 = f32[14336,512]{1,0} divide(%add.4458, %div.2034)
  %sqrt.221 = f32[14336,512]{1,0} sqrt(%div.2776)
  %add.4459 = f32[14336,512]{1,0} add(%sqrt.221, %broadcast.5194)
  %multiply.3409 = f32[14336,512]{1,0} multiply(%div.2033, %add.4459)
  %div.2777 = f32[14336,512]{1,0} divide(%add.4457, %multiply.3409)
  %mul.8841 = f32[14336,512]{1,0} multiply(%param.285, %broadcast.5190)
  %add.4460 = f32[14336,512]{1,0} add(%div.2777, %mul.8841)
  %mul.8842 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4460)
  %add.4462 = f32[14336,512]{1,0} add(%param.285, %mul.8842)
  %div.2779 = f32[4096]{0} divide(%convert_element_type.3850, %div.2008)
  %select_n.2953 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3850, %div.2779)
  %mul.8843 = f32[4096]{0} multiply(%select_n.2953, %broadcast.5180)
  %param.739 = f32[4096]{0} parameter(513), sharding={replicated}
  %mul.8844 = f32[4096]{0} multiply(%param.739, %broadcast.5181)
  %add.4463 = f32[4096]{0} add(%mul.8843, %mul.8844)
  %integer_pow.233 = f32[4096]{0} multiply(%select_n.2953, %select_n.2953)
  %mul.8845 = f32[4096]{0} multiply(%integer_pow.233, %broadcast.5182)
  %param.740 = f32[4096]{0} parameter(804), sharding={replicated}
  %mul.8846 = f32[4096]{0} multiply(%param.740, %broadcast.5183)
  %add.4464 = f32[4096]{0} add(%mul.8845, %mul.8846)
  %div.2780 = f32[4096]{0} divide(%add.4464, %div.2012)
  %sqrt.222 = f32[4096]{0} sqrt(%div.2780)
  %add.4465 = f32[4096]{0} add(%sqrt.222, %broadcast.5184)
  %multiply.3410 = f32[4096]{0} multiply(%div.2010, %add.4465)
  %div.2781 = f32[4096]{0} divide(%add.4463, %multiply.3410)
  %mul.8847 = f32[4096]{0} multiply(%param.282, %broadcast.5180)
  %add.4466 = f32[4096]{0} add(%div.2781, %mul.8847)
  %mul.8852 = f32[4096]{0} multiply(%mul.1626, %add.4466)
  %add.4467 = f32[4096]{0} add(%param.282, %mul.8852)
  %div.2782 = f32[4096]{0} divide(%convert_element_type.3853, %div.2008)
  %select_n.2954 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3853, %div.2782)
  %mul.8857 = f32[4096]{0} multiply(%select_n.2954, %broadcast.5180)
  %param.741 = f32[4096]{0} parameter(514), sharding={replicated}
  %mul.8858 = f32[4096]{0} multiply(%param.741, %broadcast.5181)
  %add.4468 = f32[4096]{0} add(%mul.8857, %mul.8858)
  %integer_pow.234 = f32[4096]{0} multiply(%select_n.2954, %select_n.2954)
  %mul.8863 = f32[4096]{0} multiply(%integer_pow.234, %broadcast.5182)
  %param.742 = f32[4096]{0} parameter(805), sharding={replicated}
  %mul.8864 = f32[4096]{0} multiply(%param.742, %broadcast.5183)
  %add.4469 = f32[4096]{0} add(%mul.8863, %mul.8864)
  %div.2784 = f32[4096]{0} divide(%add.4469, %div.2012)
  %sqrt.223 = f32[4096]{0} sqrt(%div.2784)
  %add.4470 = f32[4096]{0} add(%sqrt.223, %broadcast.5184)
  %multiply.3411 = f32[4096]{0} multiply(%div.2010, %add.4470)
  %div.2785 = f32[4096]{0} divide(%add.4468, %multiply.3411)
  %mul.8865 = f32[4096]{0} multiply(%param.277, %broadcast.5180)
  %add.4471 = f32[4096]{0} add(%div.2785, %mul.8865)
  %mul.8866 = f32[4096]{0} multiply(%mul.1626, %add.4471)
  %add.4472 = f32[4096]{0} add(%param.277, %mul.8866)
  %div.2787 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3855, %div.2043)
  %select_n.2955 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3855, %div.2787)
  %mul.8867 = f32[512,8,128]{2,1,0} multiply(%select_n.2955, %broadcast.5195)
  %param.743 = f32[512,8,128]{2,1,0} parameter(515), sharding={devices=[8,1,1]<=[8]}
  %mul.8868 = f32[512,8,128]{2,1,0} multiply(%param.743, %broadcast.5196)
  %add.4474 = f32[512,8,128]{2,1,0} add(%mul.8867, %mul.8868)
  %integer_pow.235 = f32[512,8,128]{2,1,0} multiply(%select_n.2955, %select_n.2955)
  %mul.8869 = f32[512,8,128]{2,1,0} multiply(%integer_pow.235, %broadcast.5197)
  %param.744 = f32[512,8,128]{2,1,0} parameter(806), sharding={devices=[8,1,1]<=[8]}
  %mul.8870 = f32[512,8,128]{2,1,0} multiply(%param.744, %broadcast.5198)
  %add.4475 = f32[512,8,128]{2,1,0} add(%mul.8869, %mul.8870)
  %div.2789 = f32[512,8,128]{2,1,0} divide(%add.4475, %div.2046)
  %sqrt.224 = f32[512,8,128]{2,1,0} sqrt(%div.2789)
  %add.4476 = f32[512,8,128]{2,1,0} add(%sqrt.224, %broadcast.5199)
  %multiply.3412 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4476)
  %div.2790 = f32[512,8,128]{2,1,0} divide(%add.4474, %multiply.3412)
  %mul.8871 = f32[512,8,128]{2,1,0} multiply(%param.279, %broadcast.5195)
  %add.4477 = f32[512,8,128]{2,1,0} add(%div.2790, %mul.8871)
  %mul.8872 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4477)
  %add.4478 = f32[512,8,128]{2,1,0} add(%param.279, %mul.8872)
  %div.2792 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3858, %div.2049)
  %select_n.2956 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3858, %div.2792)
  %mul.8873 = f32[32,128,512]{2,1,0} multiply(%select_n.2956, %broadcast.5200)
  %param.745 = f32[32,128,512]{2,1,0} parameter(516), sharding={devices=[1,1,8]<=[8]}
  %mul.8874 = f32[32,128,512]{2,1,0} multiply(%param.745, %broadcast.5201)
  %add.4479 = f32[32,128,512]{2,1,0} add(%mul.8873, %mul.8874)
  %integer_pow.236 = f32[32,128,512]{2,1,0} multiply(%select_n.2956, %select_n.2956)
  %mul.8875 = f32[32,128,512]{2,1,0} multiply(%integer_pow.236, %broadcast.5202)
  %param.746 = f32[32,128,512]{2,1,0} parameter(807), sharding={devices=[1,1,8]<=[8]}
  %mul.8876 = f32[32,128,512]{2,1,0} multiply(%param.746, %broadcast.5203)
  %add.4480 = f32[32,128,512]{2,1,0} add(%mul.8875, %mul.8876)
  %div.2793 = f32[32,128,512]{2,1,0} divide(%add.4480, %div.2052)
  %sqrt.225 = f32[32,128,512]{2,1,0} sqrt(%div.2793)
  %add.4481 = f32[32,128,512]{2,1,0} add(%sqrt.225, %broadcast.5204)
  %multiply.3413 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4481)
  %div.2797 = f32[32,128,512]{2,1,0} divide(%add.4479, %multiply.3413)
  %mul.8877 = f32[32,128,512]{2,1,0} multiply(%param.281, %broadcast.5200)
  %add.4482 = f32[32,128,512]{2,1,0} add(%div.2797, %mul.8877)
  %mul.8878 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4482)
  %add.4483 = f32[32,128,512]{2,1,0} add(%param.281, %mul.8878)
  %div.2798 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3861, %div.2055)
  %select_n.2957 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3861, %div.2798)
  %mul.8879 = f32[512,32,128]{2,1,0} multiply(%select_n.2957, %broadcast.5205)
  %param.747 = f32[512,32,128]{2,1,0} parameter(517), sharding={devices=[8,1,1]<=[8]}
  %mul.8880 = f32[512,32,128]{2,1,0} multiply(%param.747, %broadcast.5206)
  %add.4484 = f32[512,32,128]{2,1,0} add(%mul.8879, %mul.8880)
  %integer_pow.237 = f32[512,32,128]{2,1,0} multiply(%select_n.2957, %select_n.2957)
  %mul.8881 = f32[512,32,128]{2,1,0} multiply(%integer_pow.237, %broadcast.5207)
  %param.748 = f32[512,32,128]{2,1,0} parameter(808), sharding={devices=[8,1,1]<=[8]}
  %mul.8882 = f32[512,32,128]{2,1,0} multiply(%param.748, %broadcast.5208)
  %add.4485 = f32[512,32,128]{2,1,0} add(%mul.8881, %mul.8882)
  %div.2799 = f32[512,32,128]{2,1,0} divide(%add.4485, %div.2058)
  %sqrt.226 = f32[512,32,128]{2,1,0} sqrt(%div.2799)
  %add.4486 = f32[512,32,128]{2,1,0} add(%sqrt.226, %broadcast.5209)
  %multiply.3414 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4486)
  %div.2800 = f32[512,32,128]{2,1,0} divide(%add.4484, %multiply.3414)
  %mul.8885 = f32[512,32,128]{2,1,0} multiply(%param.278, %broadcast.5205)
  %add.4487 = f32[512,32,128]{2,1,0} add(%div.2800, %mul.8885)
  %mul.8886 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4487)
  %add.4488 = f32[512,32,128]{2,1,0} add(%param.278, %mul.8886)
  %div.2801 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3863, %div.2043)
  %select_n.2958 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3863, %div.2801)
  %mul.8889 = f32[512,8,128]{2,1,0} multiply(%select_n.2958, %broadcast.5195)
  %param.749 = f32[512,8,128]{2,1,0} parameter(518), sharding={devices=[8,1,1]<=[8]}
  %mul.8890 = f32[512,8,128]{2,1,0} multiply(%param.749, %broadcast.5196)
  %add.4489 = f32[512,8,128]{2,1,0} add(%mul.8889, %mul.8890)
  %integer_pow.238 = f32[512,8,128]{2,1,0} multiply(%select_n.2958, %select_n.2958)
  %mul.8891 = f32[512,8,128]{2,1,0} multiply(%integer_pow.238, %broadcast.5197)
  %param.750 = f32[512,8,128]{2,1,0} parameter(809), sharding={devices=[8,1,1]<=[8]}
  %mul.8892 = f32[512,8,128]{2,1,0} multiply(%param.750, %broadcast.5198)
  %add.4490 = f32[512,8,128]{2,1,0} add(%mul.8891, %mul.8892)
  %div.2802 = f32[512,8,128]{2,1,0} divide(%add.4490, %div.2046)
  %sqrt.227 = f32[512,8,128]{2,1,0} sqrt(%div.2802)
  %add.4492 = f32[512,8,128]{2,1,0} add(%sqrt.227, %broadcast.5199)
  %multiply.3415 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4492)
  %div.2803 = f32[512,8,128]{2,1,0} divide(%add.4489, %multiply.3415)
  %mul.8893 = f32[512,8,128]{2,1,0} multiply(%param.280, %broadcast.5195)
  %add.4493 = f32[512,8,128]{2,1,0} add(%div.2803, %mul.8893)
  %mul.8894 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4493)
  %add.4494 = f32[512,8,128]{2,1,0} add(%param.280, %mul.8894)
  %div.2804 = f32[512,14336]{1,0} divide(%convert_element_type.3866, %div.2022)
  %select_n.2959 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3866, %div.2804)
  %mul.8895 = f32[512,14336]{1,0} multiply(%select_n.2959, %broadcast.5185)
  %param.751 = f32[512,14336]{1,0} parameter(519), sharding={devices=[8,1]<=[8]}
  %mul.8896 = f32[512,14336]{1,0} multiply(%param.751, %broadcast.5186)
  %add.4495 = f32[512,14336]{1,0} add(%mul.8895, %mul.8896)
  %integer_pow.239 = f32[512,14336]{1,0} multiply(%select_n.2959, %select_n.2959)
  %mul.8898 = f32[512,14336]{1,0} multiply(%integer_pow.239, %broadcast.5187)
  %param.752 = f32[512,14336]{1,0} parameter(810), sharding={devices=[8,1]<=[8]}
  %mul.8899 = f32[512,14336]{1,0} multiply(%param.752, %broadcast.5188)
  %add.4496 = f32[512,14336]{1,0} add(%mul.8898, %mul.8899)
  %div.2805 = f32[512,14336]{1,0} divide(%add.4496, %div.2025)
  %sqrt.228 = f32[512,14336]{1,0} sqrt(%div.2805)
  %add.4497 = f32[512,14336]{1,0} add(%sqrt.228, %broadcast.5189)
  %multiply.3416 = f32[512,14336]{1,0} multiply(%div.2024, %add.4497)
  %div.2806 = f32[512,14336]{1,0} divide(%add.4495, %multiply.3416)
  %mul.8900 = f32[512,14336]{1,0} multiply(%param.292, %broadcast.5185)
  %add.4498 = f32[512,14336]{1,0} add(%div.2806, %mul.8900)
  %mul.8902 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4498)
  %add.4499 = f32[512,14336]{1,0} add(%param.292, %mul.8902)
  %div.2807 = f32[512,14336]{1,0} divide(%convert_element_type.3867, %div.2022)
  %select_n.2960 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3867, %div.2807)
  %mul.8903 = f32[512,14336]{1,0} multiply(%select_n.2960, %broadcast.5185)
  %param.753 = f32[512,14336]{1,0} parameter(520), sharding={devices=[8,1]<=[8]}
  %mul.8904 = f32[512,14336]{1,0} multiply(%param.753, %broadcast.5186)
  %add.4500 = f32[512,14336]{1,0} add(%mul.8903, %mul.8904)
  %integer_pow.240 = f32[512,14336]{1,0} multiply(%select_n.2960, %select_n.2960)
  %mul.8905 = f32[512,14336]{1,0} multiply(%integer_pow.240, %broadcast.5187)
  %param.754 = f32[512,14336]{1,0} parameter(811), sharding={devices=[8,1]<=[8]}
  %mul.8906 = f32[512,14336]{1,0} multiply(%param.754, %broadcast.5188)
  %add.4501 = f32[512,14336]{1,0} add(%mul.8905, %mul.8906)
  %div.2808 = f32[512,14336]{1,0} divide(%add.4501, %div.2025)
  %sqrt.229 = f32[512,14336]{1,0} sqrt(%div.2808)
  %add.4502 = f32[512,14336]{1,0} add(%sqrt.229, %broadcast.5189)
  %multiply.3417 = f32[512,14336]{1,0} multiply(%div.2024, %add.4502)
  %div.2809 = f32[512,14336]{1,0} divide(%add.4500, %multiply.3417)
  %mul.8907 = f32[512,14336]{1,0} multiply(%param.293, %broadcast.5185)
  %add.4503 = f32[512,14336]{1,0} add(%div.2809, %mul.8907)
  %mul.8908 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4503)
  %add.4504 = f32[512,14336]{1,0} add(%param.293, %mul.8908)
  %div.2810 = f32[14336,512]{1,0} divide(%convert_element_type.3868, %div.2031)
  %select_n.2961 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3868, %div.2810)
  %mul.8909 = f32[14336,512]{1,0} multiply(%select_n.2961, %broadcast.5190)
  %param.755 = f32[14336,512]{1,0} parameter(521), sharding={devices=[1,8]<=[8]}
  %mul.8910 = f32[14336,512]{1,0} multiply(%param.755, %broadcast.5191)
  %add.4505 = f32[14336,512]{1,0} add(%mul.8909, %mul.8910)
  %integer_pow.241 = f32[14336,512]{1,0} multiply(%select_n.2961, %select_n.2961)
  %mul.8911 = f32[14336,512]{1,0} multiply(%integer_pow.241, %broadcast.5192)
  %param.756 = f32[14336,512]{1,0} parameter(812), sharding={devices=[1,8]<=[8]}
  %mul.8912 = f32[14336,512]{1,0} multiply(%param.756, %broadcast.5193)
  %add.4506 = f32[14336,512]{1,0} add(%mul.8911, %mul.8912)
  %div.2811 = f32[14336,512]{1,0} divide(%add.4506, %div.2034)
  %sqrt.230 = f32[14336,512]{1,0} sqrt(%div.2811)
  %add.4507 = f32[14336,512]{1,0} add(%sqrt.230, %broadcast.5194)
  %multiply.3418 = f32[14336,512]{1,0} multiply(%div.2033, %add.4507)
  %div.2812 = f32[14336,512]{1,0} divide(%add.4505, %multiply.3418)
  %mul.8913 = f32[14336,512]{1,0} multiply(%param.294, %broadcast.5190)
  %add.4508 = f32[14336,512]{1,0} add(%div.2812, %mul.8913)
  %mul.8914 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4508)
  %add.4509 = f32[14336,512]{1,0} add(%param.294, %mul.8914)
  %div.2813 = f32[4096]{0} divide(%convert_element_type.3871, %div.2008)
  %select_n.2962 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3871, %div.2813)
  %mul.8915 = f32[4096]{0} multiply(%select_n.2962, %broadcast.5180)
  %param.757 = f32[4096]{0} parameter(522), sharding={replicated}
  %mul.8916 = f32[4096]{0} multiply(%param.757, %broadcast.5181)
  %add.4510 = f32[4096]{0} add(%mul.8915, %mul.8916)
  %integer_pow.242 = f32[4096]{0} multiply(%select_n.2962, %select_n.2962)
  %mul.8917 = f32[4096]{0} multiply(%integer_pow.242, %broadcast.5182)
  %param.758 = f32[4096]{0} parameter(813), sharding={replicated}
  %mul.8918 = f32[4096]{0} multiply(%param.758, %broadcast.5183)
  %add.4511 = f32[4096]{0} add(%mul.8917, %mul.8918)
  %div.2814 = f32[4096]{0} divide(%add.4511, %div.2012)
  %sqrt.231 = f32[4096]{0} sqrt(%div.2814)
  %add.4512 = f32[4096]{0} add(%sqrt.231, %broadcast.5184)
  %multiply.3419 = f32[4096]{0} multiply(%div.2010, %add.4512)
  %div.2815 = f32[4096]{0} divide(%add.4510, %multiply.3419)
  %mul.8921 = f32[4096]{0} multiply(%param.291, %broadcast.5180)
  %add.4513 = f32[4096]{0} add(%div.2815, %mul.8921)
  %mul.8922 = f32[4096]{0} multiply(%mul.1626, %add.4513)
  %add.4514 = f32[4096]{0} add(%param.291, %mul.8922)
  %div.2816 = f32[4096]{0} divide(%convert_element_type.3873, %div.2008)
  %select_n.2963 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3873, %div.2816)
  %mul.8925 = f32[4096]{0} multiply(%select_n.2963, %broadcast.5180)
  %param.759 = f32[4096]{0} parameter(523), sharding={replicated}
  %mul.8926 = f32[4096]{0} multiply(%param.759, %broadcast.5181)
  %add.4515 = f32[4096]{0} add(%mul.8925, %mul.8926)
  %integer_pow.243 = f32[4096]{0} multiply(%select_n.2963, %select_n.2963)
  %mul.8927 = f32[4096]{0} multiply(%integer_pow.243, %broadcast.5182)
  %param.760 = f32[4096]{0} parameter(814), sharding={replicated}
  %mul.8928 = f32[4096]{0} multiply(%param.760, %broadcast.5183)
  %add.4516 = f32[4096]{0} add(%mul.8927, %mul.8928)
  %div.2817 = f32[4096]{0} divide(%add.4516, %div.2012)
  %sqrt.232 = f32[4096]{0} sqrt(%div.2817)
  %add.4517 = f32[4096]{0} add(%sqrt.232, %broadcast.5184)
  %multiply.3420 = f32[4096]{0} multiply(%div.2010, %add.4517)
  %div.2818 = f32[4096]{0} divide(%add.4515, %multiply.3420)
  %mul.8929 = f32[4096]{0} multiply(%param.286, %broadcast.5180)
  %add.4518 = f32[4096]{0} add(%div.2818, %mul.8929)
  %mul.8930 = f32[4096]{0} multiply(%mul.1626, %add.4518)
  %add.4519 = f32[4096]{0} add(%param.286, %mul.8930)
  %div.2819 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3876, %div.2043)
  %select_n.2964 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3876, %div.2819)
  %mul.8931 = f32[512,8,128]{2,1,0} multiply(%select_n.2964, %broadcast.5195)
  %param.761 = f32[512,8,128]{2,1,0} parameter(524), sharding={devices=[8,1,1]<=[8]}
  %mul.8932 = f32[512,8,128]{2,1,0} multiply(%param.761, %broadcast.5196)
  %add.4520 = f32[512,8,128]{2,1,0} add(%mul.8931, %mul.8932)
  %integer_pow.244 = f32[512,8,128]{2,1,0} multiply(%select_n.2964, %select_n.2964)
  %mul.8937 = f32[512,8,128]{2,1,0} multiply(%integer_pow.244, %broadcast.5197)
  %param.762 = f32[512,8,128]{2,1,0} parameter(815), sharding={devices=[8,1,1]<=[8]}
  %mul.8938 = f32[512,8,128]{2,1,0} multiply(%param.762, %broadcast.5198)
  %add.4521 = f32[512,8,128]{2,1,0} add(%mul.8937, %mul.8938)
  %div.2820 = f32[512,8,128]{2,1,0} divide(%add.4521, %div.2046)
  %sqrt.233 = f32[512,8,128]{2,1,0} sqrt(%div.2820)
  %add.4522 = f32[512,8,128]{2,1,0} add(%sqrt.233, %broadcast.5199)
  %multiply.3421 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4522)
  %div.2821 = f32[512,8,128]{2,1,0} divide(%add.4520, %multiply.3421)
  %mul.8939 = f32[512,8,128]{2,1,0} multiply(%param.288, %broadcast.5195)
  %add.4523 = f32[512,8,128]{2,1,0} add(%div.2821, %mul.8939)
  %mul.8944 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4523)
  %add.4524 = f32[512,8,128]{2,1,0} add(%param.288, %mul.8944)
  %div.2822 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3878, %div.2049)
  %select_n.2965 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3878, %div.2822)
  %mul.8945 = f32[32,128,512]{2,1,0} multiply(%select_n.2965, %broadcast.5200)
  %param.763 = f32[32,128,512]{2,1,0} parameter(525), sharding={devices=[1,1,8]<=[8]}
  %mul.8946 = f32[32,128,512]{2,1,0} multiply(%param.763, %broadcast.5201)
  %add.4525 = f32[32,128,512]{2,1,0} add(%mul.8945, %mul.8946)
  %integer_pow.245 = f32[32,128,512]{2,1,0} multiply(%select_n.2965, %select_n.2965)
  %mul.8947 = f32[32,128,512]{2,1,0} multiply(%integer_pow.245, %broadcast.5202)
  %param.764 = f32[32,128,512]{2,1,0} parameter(816), sharding={devices=[1,1,8]<=[8]}
  %mul.8948 = f32[32,128,512]{2,1,0} multiply(%param.764, %broadcast.5203)
  %add.4526 = f32[32,128,512]{2,1,0} add(%mul.8947, %mul.8948)
  %div.2823 = f32[32,128,512]{2,1,0} divide(%add.4526, %div.2052)
  %sqrt.234 = f32[32,128,512]{2,1,0} sqrt(%div.2823)
  %add.4527 = f32[32,128,512]{2,1,0} add(%sqrt.234, %broadcast.5204)
  %multiply.3422 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4527)
  %div.2824 = f32[32,128,512]{2,1,0} divide(%add.4525, %multiply.3422)
  %mul.8949 = f32[32,128,512]{2,1,0} multiply(%param.290, %broadcast.5200)
  %add.4528 = f32[32,128,512]{2,1,0} add(%div.2824, %mul.8949)
  %mul.8950 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4528)
  %add.4529 = f32[32,128,512]{2,1,0} add(%param.290, %mul.8950)
  %div.2825 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3883, %div.2055)
  %select_n.2966 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3883, %div.2825)
  %mul.8951 = f32[512,32,128]{2,1,0} multiply(%select_n.2966, %broadcast.5205)
  %param.765 = f32[512,32,128]{2,1,0} parameter(526), sharding={devices=[8,1,1]<=[8]}
  %mul.8953 = f32[512,32,128]{2,1,0} multiply(%param.765, %broadcast.5206)
  %add.4530 = f32[512,32,128]{2,1,0} add(%mul.8951, %mul.8953)
  %integer_pow.246 = f32[512,32,128]{2,1,0} multiply(%select_n.2966, %select_n.2966)
  %mul.8955 = f32[512,32,128]{2,1,0} multiply(%integer_pow.246, %broadcast.5207)
  %param.766 = f32[512,32,128]{2,1,0} parameter(817), sharding={devices=[8,1,1]<=[8]}
  %mul.8957 = f32[512,32,128]{2,1,0} multiply(%param.766, %broadcast.5208)
  %add.4531 = f32[512,32,128]{2,1,0} add(%mul.8955, %mul.8957)
  %div.2826 = f32[512,32,128]{2,1,0} divide(%add.4531, %div.2058)
  %sqrt.235 = f32[512,32,128]{2,1,0} sqrt(%div.2826)
  %add.4532 = f32[512,32,128]{2,1,0} add(%sqrt.235, %broadcast.5209)
  %multiply.3423 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4532)
  %div.2827 = f32[512,32,128]{2,1,0} divide(%add.4530, %multiply.3423)
  %mul.8958 = f32[512,32,128]{2,1,0} multiply(%param.287, %broadcast.5205)
  %add.4533 = f32[512,32,128]{2,1,0} add(%div.2827, %mul.8958)
  %mul.8959 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4533)
  %add.4535 = f32[512,32,128]{2,1,0} add(%param.287, %mul.8959)
  %div.2828 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3885, %div.2043)
  %select_n.2967 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3885, %div.2828)
  %mul.8960 = f32[512,8,128]{2,1,0} multiply(%select_n.2967, %broadcast.5195)
  %param.767 = f32[512,8,128]{2,1,0} parameter(527), sharding={devices=[8,1,1]<=[8]}
  %mul.8961 = f32[512,8,128]{2,1,0} multiply(%param.767, %broadcast.5196)
  %add.4536 = f32[512,8,128]{2,1,0} add(%mul.8960, %mul.8961)
  %integer_pow.247 = f32[512,8,128]{2,1,0} multiply(%select_n.2967, %select_n.2967)
  %mul.8962 = f32[512,8,128]{2,1,0} multiply(%integer_pow.247, %broadcast.5197)
  %param.768 = f32[512,8,128]{2,1,0} parameter(818), sharding={devices=[8,1,1]<=[8]}
  %mul.8963 = f32[512,8,128]{2,1,0} multiply(%param.768, %broadcast.5198)
  %add.4537 = f32[512,8,128]{2,1,0} add(%mul.8962, %mul.8963)
  %div.2829 = f32[512,8,128]{2,1,0} divide(%add.4537, %div.2046)
  %sqrt.236 = f32[512,8,128]{2,1,0} sqrt(%div.2829)
  %add.4538 = f32[512,8,128]{2,1,0} add(%sqrt.236, %broadcast.5199)
  %multiply.3424 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4538)
  %div.2832 = f32[512,8,128]{2,1,0} divide(%add.4536, %multiply.3424)
  %mul.8964 = f32[512,8,128]{2,1,0} multiply(%param.289, %broadcast.5195)
  %add.4539 = f32[512,8,128]{2,1,0} add(%div.2832, %mul.8964)
  %mul.8968 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4539)
  %add.4541 = f32[512,8,128]{2,1,0} add(%param.289, %mul.8968)
  %div.2833 = f32[512,14336]{1,0} divide(%convert_element_type.3888, %div.2022)
  %select_n.2968 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3888, %div.2833)
  %mul.8969 = f32[512,14336]{1,0} multiply(%select_n.2968, %broadcast.5185)
  %param.769 = f32[512,14336]{1,0} parameter(528), sharding={devices=[8,1]<=[8]}
  %mul.8970 = f32[512,14336]{1,0} multiply(%param.769, %broadcast.5186)
  %add.4542 = f32[512,14336]{1,0} add(%mul.8969, %mul.8970)
  %integer_pow.248 = f32[512,14336]{1,0} multiply(%select_n.2968, %select_n.2968)
  %mul.8975 = f32[512,14336]{1,0} multiply(%integer_pow.248, %broadcast.5187)
  %param.770 = f32[512,14336]{1,0} parameter(819), sharding={devices=[8,1]<=[8]}
  %mul.8976 = f32[512,14336]{1,0} multiply(%param.770, %broadcast.5188)
  %add.4543 = f32[512,14336]{1,0} add(%mul.8975, %mul.8976)
  %div.2837 = f32[512,14336]{1,0} divide(%add.4543, %div.2025)
  %sqrt.237 = f32[512,14336]{1,0} sqrt(%div.2837)
  %add.4544 = f32[512,14336]{1,0} add(%sqrt.237, %broadcast.5189)
  %multiply.3425 = f32[512,14336]{1,0} multiply(%div.2024, %add.4544)
  %div.2839 = f32[512,14336]{1,0} divide(%add.4542, %multiply.3425)
  %mul.8977 = f32[512,14336]{1,0} multiply(%param.49, %broadcast.5185)
  %add.4545 = f32[512,14336]{1,0} add(%div.2839, %mul.8977)
  %mul.8982 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4545)
  %add.4546 = f32[512,14336]{1,0} add(%param.49, %mul.8982)
  %div.2840 = f32[512,14336]{1,0} divide(%convert_element_type.3889, %div.2022)
  %select_n.2969 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3889, %div.2840)
  %mul.8983 = f32[512,14336]{1,0} multiply(%select_n.2969, %broadcast.5185)
  %param.771 = f32[512,14336]{1,0} parameter(529), sharding={devices=[8,1]<=[8]}
  %mul.8984 = f32[512,14336]{1,0} multiply(%param.771, %broadcast.5186)
  %add.4547 = f32[512,14336]{1,0} add(%mul.8983, %mul.8984)
  %integer_pow.249 = f32[512,14336]{1,0} multiply(%select_n.2969, %select_n.2969)
  %mul.8987 = f32[512,14336]{1,0} multiply(%integer_pow.249, %broadcast.5187)
  %param.772 = f32[512,14336]{1,0} parameter(820), sharding={devices=[8,1]<=[8]}
  %mul.8988 = f32[512,14336]{1,0} multiply(%param.772, %broadcast.5188)
  %add.4548 = f32[512,14336]{1,0} add(%mul.8987, %mul.8988)
  %div.2842 = f32[512,14336]{1,0} divide(%add.4548, %div.2025)
  %sqrt.238 = f32[512,14336]{1,0} sqrt(%div.2842)
  %add.4550 = f32[512,14336]{1,0} add(%sqrt.238, %broadcast.5189)
  %multiply.3426 = f32[512,14336]{1,0} multiply(%div.2024, %add.4550)
  %div.2844 = f32[512,14336]{1,0} divide(%add.4547, %multiply.3426)
  %mul.8989 = f32[512,14336]{1,0} multiply(%param.50, %broadcast.5185)
  %add.4551 = f32[512,14336]{1,0} add(%div.2844, %mul.8989)
  %mul.8990 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4551)
  %add.4552 = f32[512,14336]{1,0} add(%param.50, %mul.8990)
  %div.2845 = f32[14336,512]{1,0} divide(%convert_element_type.3890, %div.2031)
  %select_n.2970 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3890, %div.2845)
  %mul.8991 = f32[14336,512]{1,0} multiply(%select_n.2970, %broadcast.5190)
  %param.773 = f32[14336,512]{1,0} parameter(530), sharding={devices=[1,8]<=[8]}
  %mul.8992 = f32[14336,512]{1,0} multiply(%param.773, %broadcast.5191)
  %add.4553 = f32[14336,512]{1,0} add(%mul.8991, %mul.8992)
  %integer_pow.250 = f32[14336,512]{1,0} multiply(%select_n.2970, %select_n.2970)
  %mul.8993 = f32[14336,512]{1,0} multiply(%integer_pow.250, %broadcast.5192)
  %param.774 = f32[14336,512]{1,0} parameter(821), sharding={devices=[1,8]<=[8]}
  %mul.8994 = f32[14336,512]{1,0} multiply(%param.774, %broadcast.5193)
  %add.4554 = f32[14336,512]{1,0} add(%mul.8993, %mul.8994)
  %div.2847 = f32[14336,512]{1,0} divide(%add.4554, %div.2034)
  %sqrt.239 = f32[14336,512]{1,0} sqrt(%div.2847)
  %add.4555 = f32[14336,512]{1,0} add(%sqrt.239, %broadcast.5194)
  %multiply.3427 = f32[14336,512]{1,0} multiply(%div.2033, %add.4555)
  %div.2851 = f32[14336,512]{1,0} divide(%add.4553, %multiply.3427)
  %mul.8995 = f32[14336,512]{1,0} multiply(%param.51, %broadcast.5190)
  %add.4556 = f32[14336,512]{1,0} add(%div.2851, %mul.8995)
  %mul.8996 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4556)
  %add.4557 = f32[14336,512]{1,0} add(%param.51, %mul.8996)
  %div.2852 = f32[4096]{0} divide(%convert_element_type.3892, %div.2008)
  %select_n.2971 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3892, %div.2852)
  %mul.8997 = f32[4096]{0} multiply(%select_n.2971, %broadcast.5180)
  %param.775 = f32[4096]{0} parameter(531), sharding={replicated}
  %mul.8999 = f32[4096]{0} multiply(%param.775, %broadcast.5181)
  %add.4558 = f32[4096]{0} add(%mul.8997, %mul.8999)
  %integer_pow.251 = f32[4096]{0} multiply(%select_n.2971, %select_n.2971)
  %mul.9000 = f32[4096]{0} multiply(%integer_pow.251, %broadcast.5182)
  %param.776 = f32[4096]{0} parameter(822), sharding={replicated}
  %mul.9001 = f32[4096]{0} multiply(%param.776, %broadcast.5183)
  %add.4559 = f32[4096]{0} add(%mul.9000, %mul.9001)
  %div.2855 = f32[4096]{0} divide(%add.4559, %div.2012)
  %sqrt.240 = f32[4096]{0} sqrt(%div.2855)
  %add.4560 = f32[4096]{0} add(%sqrt.240, %broadcast.5184)
  %multiply.3428 = f32[4096]{0} multiply(%div.2010, %add.4560)
  %div.2864 = f32[4096]{0} divide(%add.4558, %multiply.3428)
  %mul.9002 = f32[4096]{0} multiply(%param.48, %broadcast.5180)
  %add.4561 = f32[4096]{0} add(%div.2864, %mul.9002)
  %mul.9003 = f32[4096]{0} multiply(%mul.1626, %add.4561)
  %add.4562 = f32[4096]{0} add(%param.48, %mul.9003)
  %div.2865 = f32[4096]{0} divide(%convert_element_type.3895, %div.2008)
  %select_n.2972 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3895, %div.2865)
  %mul.9004 = f32[4096]{0} multiply(%select_n.2972, %broadcast.5180)
  %param.777 = f32[4096]{0} parameter(532), sharding={replicated}
  %mul.9005 = f32[4096]{0} multiply(%param.777, %broadcast.5181)
  %add.4564 = f32[4096]{0} add(%mul.9004, %mul.9005)
  %integer_pow.252 = f32[4096]{0} multiply(%select_n.2972, %select_n.2972)
  %mul.9006 = f32[4096]{0} multiply(%integer_pow.252, %broadcast.5182)
  %param.778 = f32[4096]{0} parameter(823), sharding={replicated}
  %mul.9007 = f32[4096]{0} multiply(%param.778, %broadcast.5183)
  %add.4565 = f32[4096]{0} add(%mul.9006, %mul.9007)
  %div.2866 = f32[4096]{0} divide(%add.4565, %div.2012)
  %sqrt.241 = f32[4096]{0} sqrt(%div.2866)
  %add.4566 = f32[4096]{0} add(%sqrt.241, %broadcast.5184)
  %multiply.3429 = f32[4096]{0} multiply(%div.2010, %add.4566)
  %div.2867 = f32[4096]{0} divide(%add.4564, %multiply.3429)
  %mul.9008 = f32[4096]{0} multiply(%param.43, %broadcast.5180)
  %add.4567 = f32[4096]{0} add(%div.2867, %mul.9008)
  %mul.9009 = f32[4096]{0} multiply(%mul.1626, %add.4567)
  %add.4568 = f32[4096]{0} add(%param.43, %mul.9009)
  %div.2868 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3898, %div.2043)
  %select_n.2973 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3898, %div.2868)
  %mul.9010 = f32[512,8,128]{2,1,0} multiply(%select_n.2973, %broadcast.5195)
  %param.779 = f32[512,8,128]{2,1,0} parameter(533), sharding={devices=[8,1,1]<=[8]}
  %mul.9012 = f32[512,8,128]{2,1,0} multiply(%param.779, %broadcast.5196)
  %add.4569 = f32[512,8,128]{2,1,0} add(%mul.9010, %mul.9012)
  %integer_pow.253 = f32[512,8,128]{2,1,0} multiply(%select_n.2973, %select_n.2973)
  %mul.9013 = f32[512,8,128]{2,1,0} multiply(%integer_pow.253, %broadcast.5197)
  %param.780 = f32[512,8,128]{2,1,0} parameter(824), sharding={devices=[8,1,1]<=[8]}
  %mul.9014 = f32[512,8,128]{2,1,0} multiply(%param.780, %broadcast.5198)
  %add.4570 = f32[512,8,128]{2,1,0} add(%mul.9013, %mul.9014)
  %div.2869 = f32[512,8,128]{2,1,0} divide(%add.4570, %div.2046)
  %sqrt.242 = f32[512,8,128]{2,1,0} sqrt(%div.2869)
  %add.4571 = f32[512,8,128]{2,1,0} add(%sqrt.242, %broadcast.5199)
  %multiply.3430 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4571)
  %div.2870 = f32[512,8,128]{2,1,0} divide(%add.4569, %multiply.3430)
  %mul.9015 = f32[512,8,128]{2,1,0} multiply(%param.45, %broadcast.5195)
  %add.4573 = f32[512,8,128]{2,1,0} add(%div.2870, %mul.9015)
  %mul.9016 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4573)
  %add.4575 = f32[512,8,128]{2,1,0} add(%param.45, %mul.9016)
  %div.2871 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3900, %div.2049)
  %select_n.2974 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3900, %div.2871)
  %mul.9017 = f32[32,128,512]{2,1,0} multiply(%select_n.2974, %broadcast.5200)
  %param.781 = f32[32,128,512]{2,1,0} parameter(534), sharding={devices=[1,1,8]<=[8]}
  %mul.9019 = f32[32,128,512]{2,1,0} multiply(%param.781, %broadcast.5201)
  %add.4576 = f32[32,128,512]{2,1,0} add(%mul.9017, %mul.9019)
  %integer_pow.254 = f32[32,128,512]{2,1,0} multiply(%select_n.2974, %select_n.2974)
  %mul.9021 = f32[32,128,512]{2,1,0} multiply(%integer_pow.254, %broadcast.5202)
  %param.782 = f32[32,128,512]{2,1,0} parameter(825), sharding={devices=[1,1,8]<=[8]}
  %mul.9022 = f32[32,128,512]{2,1,0} multiply(%param.782, %broadcast.5203)
  %add.4577 = f32[32,128,512]{2,1,0} add(%mul.9021, %mul.9022)
  %div.2872 = f32[32,128,512]{2,1,0} divide(%add.4577, %div.2052)
  %sqrt.243 = f32[32,128,512]{2,1,0} sqrt(%div.2872)
  %add.4578 = f32[32,128,512]{2,1,0} add(%sqrt.243, %broadcast.5204)
  %multiply.3431 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4578)
  %div.2873 = f32[32,128,512]{2,1,0} divide(%add.4576, %multiply.3431)
  %mul.9023 = f32[32,128,512]{2,1,0} multiply(%param.47, %broadcast.5200)
  %add.4579 = f32[32,128,512]{2,1,0} add(%div.2873, %mul.9023)
  %mul.9024 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4579)
  %add.4580 = f32[32,128,512]{2,1,0} add(%param.47, %mul.9024)
  %div.2874 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3903, %div.2055)
  %select_n.2975 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3903, %div.2874)
  %mul.9025 = f32[512,32,128]{2,1,0} multiply(%select_n.2975, %broadcast.5205)
  %param.783 = f32[512,32,128]{2,1,0} parameter(535), sharding={devices=[8,1,1]<=[8]}
  %mul.9026 = f32[512,32,128]{2,1,0} multiply(%param.783, %broadcast.5206)
  %add.4581 = f32[512,32,128]{2,1,0} add(%mul.9025, %mul.9026)
  %integer_pow.255 = f32[512,32,128]{2,1,0} multiply(%select_n.2975, %select_n.2975)
  %mul.9028 = f32[512,32,128]{2,1,0} multiply(%integer_pow.255, %broadcast.5207)
  %param.784 = f32[512,32,128]{2,1,0} parameter(826), sharding={devices=[8,1,1]<=[8]}
  %mul.9032 = f32[512,32,128]{2,1,0} multiply(%param.784, %broadcast.5208)
  %add.4582 = f32[512,32,128]{2,1,0} add(%mul.9028, %mul.9032)
  %div.2875 = f32[512,32,128]{2,1,0} divide(%add.4582, %div.2058)
  %sqrt.244 = f32[512,32,128]{2,1,0} sqrt(%div.2875)
  %add.4583 = f32[512,32,128]{2,1,0} add(%sqrt.244, %broadcast.5209)
  %multiply.3432 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4583)
  %div.2876 = f32[512,32,128]{2,1,0} divide(%add.4581, %multiply.3432)
  %mul.9033 = f32[512,32,128]{2,1,0} multiply(%param.44, %broadcast.5205)
  %add.4584 = f32[512,32,128]{2,1,0} add(%div.2876, %mul.9033)
  %mul.9034 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4584)
  %add.4586 = f32[512,32,128]{2,1,0} add(%param.44, %mul.9034)
  %div.2877 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3907, %div.2043)
  %select_n.2976 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3907, %div.2877)
  %mul.9035 = f32[512,8,128]{2,1,0} multiply(%select_n.2976, %broadcast.5195)
  %param.785 = f32[512,8,128]{2,1,0} parameter(536), sharding={devices=[8,1,1]<=[8]}
  %mul.9036 = f32[512,8,128]{2,1,0} multiply(%param.785, %broadcast.5196)
  %add.4587 = f32[512,8,128]{2,1,0} add(%mul.9035, %mul.9036)
  %integer_pow.256 = f32[512,8,128]{2,1,0} multiply(%select_n.2976, %select_n.2976)
  %mul.9037 = f32[512,8,128]{2,1,0} multiply(%integer_pow.256, %broadcast.5197)
  %param.786 = f32[512,8,128]{2,1,0} parameter(827), sharding={devices=[8,1,1]<=[8]}
  %mul.9038 = f32[512,8,128]{2,1,0} multiply(%param.786, %broadcast.5198)
  %add.4588 = f32[512,8,128]{2,1,0} add(%mul.9037, %mul.9038)
  %div.2878 = f32[512,8,128]{2,1,0} divide(%add.4588, %div.2046)
  %sqrt.245 = f32[512,8,128]{2,1,0} sqrt(%div.2878)
  %add.4589 = f32[512,8,128]{2,1,0} add(%sqrt.245, %broadcast.5199)
  %multiply.3433 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4589)
  %div.2879 = f32[512,8,128]{2,1,0} divide(%add.4587, %multiply.3433)
  %mul.9039 = f32[512,8,128]{2,1,0} multiply(%param.46, %broadcast.5195)
  %add.4590 = f32[512,8,128]{2,1,0} add(%div.2879, %mul.9039)
  %mul.9040 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4590)
  %add.4591 = f32[512,8,128]{2,1,0} add(%param.46, %mul.9040)
  %div.2880 = f32[512,14336]{1,0} divide(%convert_element_type.3909, %div.2022)
  %select_n.2977 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3909, %div.2880)
  %mul.9041 = f32[512,14336]{1,0} multiply(%select_n.2977, %broadcast.5185)
  %param.787 = f32[512,14336]{1,0} parameter(537), sharding={devices=[8,1]<=[8]}
  %mul.9042 = f32[512,14336]{1,0} multiply(%param.787, %broadcast.5186)
  %add.4592 = f32[512,14336]{1,0} add(%mul.9041, %mul.9042)
  %integer_pow.257 = f32[512,14336]{1,0} multiply(%select_n.2977, %select_n.2977)
  %mul.9046 = f32[512,14336]{1,0} multiply(%integer_pow.257, %broadcast.5187)
  %param.788 = f32[512,14336]{1,0} parameter(828), sharding={devices=[8,1]<=[8]}
  %mul.9047 = f32[512,14336]{1,0} multiply(%param.788, %broadcast.5188)
  %add.4593 = f32[512,14336]{1,0} add(%mul.9046, %mul.9047)
  %div.2881 = f32[512,14336]{1,0} divide(%add.4593, %div.2025)
  %sqrt.246 = f32[512,14336]{1,0} sqrt(%div.2881)
  %add.4594 = f32[512,14336]{1,0} add(%sqrt.246, %broadcast.5189)
  %multiply.3434 = f32[512,14336]{1,0} multiply(%div.2024, %add.4594)
  %div.2882 = f32[512,14336]{1,0} divide(%add.4592, %multiply.3434)
  %mul.9048 = f32[512,14336]{1,0} multiply(%param.58, %broadcast.5185)
  %add.4595 = f32[512,14336]{1,0} add(%div.2882, %mul.9048)
  %mul.9051 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4595)
  %add.4596 = f32[512,14336]{1,0} add(%param.58, %mul.9051)
  %div.2883 = f32[512,14336]{1,0} divide(%convert_element_type.3910, %div.2022)
  %select_n.2978 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3910, %div.2883)
  %mul.9052 = f32[512,14336]{1,0} multiply(%select_n.2978, %broadcast.5185)
  %param.789 = f32[512,14336]{1,0} parameter(538), sharding={devices=[8,1]<=[8]}
  %mul.9057 = f32[512,14336]{1,0} multiply(%param.789, %broadcast.5186)
  %add.4597 = f32[512,14336]{1,0} add(%mul.9052, %mul.9057)
  %integer_pow.258 = f32[512,14336]{1,0} multiply(%select_n.2978, %select_n.2978)
  %mul.9062 = f32[512,14336]{1,0} multiply(%integer_pow.258, %broadcast.5187)
  %param.790 = f32[512,14336]{1,0} parameter(829), sharding={devices=[8,1]<=[8]}
  %mul.9063 = f32[512,14336]{1,0} multiply(%param.790, %broadcast.5188)
  %add.4598 = f32[512,14336]{1,0} add(%mul.9062, %mul.9063)
  %div.2884 = f32[512,14336]{1,0} divide(%add.4598, %div.2025)
  %sqrt.247 = f32[512,14336]{1,0} sqrt(%div.2884)
  %add.4599 = f32[512,14336]{1,0} add(%sqrt.247, %broadcast.5189)
  %multiply.3435 = f32[512,14336]{1,0} multiply(%div.2024, %add.4599)
  %div.2885 = f32[512,14336]{1,0} divide(%add.4597, %multiply.3435)
  %mul.9068 = f32[512,14336]{1,0} multiply(%param.59, %broadcast.5185)
  %add.4600 = f32[512,14336]{1,0} add(%div.2885, %mul.9068)
  %mul.9069 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4600)
  %add.4601 = f32[512,14336]{1,0} add(%param.59, %mul.9069)
  %div.2886 = f32[14336,512]{1,0} divide(%convert_element_type.3912, %div.2031)
  %select_n.2979 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3912, %div.2886)
  %mul.9070 = f32[14336,512]{1,0} multiply(%select_n.2979, %broadcast.5190)
  %param.791 = f32[14336,512]{1,0} parameter(539), sharding={devices=[1,8]<=[8]}
  %mul.9071 = f32[14336,512]{1,0} multiply(%param.791, %broadcast.5191)
  %add.4602 = f32[14336,512]{1,0} add(%mul.9070, %mul.9071)
  %integer_pow.259 = f32[14336,512]{1,0} multiply(%select_n.2979, %select_n.2979)
  %mul.9072 = f32[14336,512]{1,0} multiply(%integer_pow.259, %broadcast.5192)
  %param.792 = f32[14336,512]{1,0} parameter(830), sharding={devices=[1,8]<=[8]}
  %mul.9073 = f32[14336,512]{1,0} multiply(%param.792, %broadcast.5193)
  %add.4603 = f32[14336,512]{1,0} add(%mul.9072, %mul.9073)
  %div.2887 = f32[14336,512]{1,0} divide(%add.4603, %div.2034)
  %sqrt.248 = f32[14336,512]{1,0} sqrt(%div.2887)
  %add.4604 = f32[14336,512]{1,0} add(%sqrt.248, %broadcast.5194)
  %multiply.3436 = f32[14336,512]{1,0} multiply(%div.2033, %add.4604)
  %div.2888 = f32[14336,512]{1,0} divide(%add.4602, %multiply.3436)
  %mul.9074 = f32[14336,512]{1,0} multiply(%param.60, %broadcast.5190)
  %add.4605 = f32[14336,512]{1,0} add(%div.2888, %mul.9074)
  %mul.9075 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4605)
  %add.4606 = f32[14336,512]{1,0} add(%param.60, %mul.9075)
  %div.2889 = f32[4096]{0} divide(%convert_element_type.3913, %div.2008)
  %select_n.2980 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3913, %div.2889)
  %mul.9076 = f32[4096]{0} multiply(%select_n.2980, %broadcast.5180)
  %param.793 = f32[4096]{0} parameter(540), sharding={replicated}
  %mul.9077 = f32[4096]{0} multiply(%param.793, %broadcast.5181)
  %add.4607 = f32[4096]{0} add(%mul.9076, %mul.9077)
  %integer_pow.260 = f32[4096]{0} multiply(%select_n.2980, %select_n.2980)
  %mul.9078 = f32[4096]{0} multiply(%integer_pow.260, %broadcast.5182)
  %param.794 = f32[4096]{0} parameter(831), sharding={replicated}
  %mul.9079 = f32[4096]{0} multiply(%param.794, %broadcast.5183)
  %add.4608 = f32[4096]{0} add(%mul.9078, %mul.9079)
  %div.2890 = f32[4096]{0} divide(%add.4608, %div.2012)
  %sqrt.249 = f32[4096]{0} sqrt(%div.2890)
  %add.4609 = f32[4096]{0} add(%sqrt.249, %broadcast.5184)
  %multiply.3437 = f32[4096]{0} multiply(%div.2010, %add.4609)
  %div.2891 = f32[4096]{0} divide(%add.4607, %multiply.3437)
  %mul.9080 = f32[4096]{0} multiply(%param.57, %broadcast.5180)
  %add.4611 = f32[4096]{0} add(%div.2891, %mul.9080)
  %mul.9081 = f32[4096]{0} multiply(%mul.1626, %add.4611)
  %add.4612 = f32[4096]{0} add(%param.57, %mul.9081)
  %div.2892 = f32[4096]{0} divide(%convert_element_type.3920, %div.2008)
  %select_n.2981 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3920, %div.2892)
  %mul.9082 = f32[4096]{0} multiply(%select_n.2981, %broadcast.5180)
  %param.795 = f32[4096]{0} parameter(541), sharding={replicated}
  %mul.9083 = f32[4096]{0} multiply(%param.795, %broadcast.5181)
  %add.4613 = f32[4096]{0} add(%mul.9082, %mul.9083)
  %integer_pow.261 = f32[4096]{0} multiply(%select_n.2981, %select_n.2981)
  %mul.9084 = f32[4096]{0} multiply(%integer_pow.261, %broadcast.5182)
  %param.796 = f32[4096]{0} parameter(832), sharding={replicated}
  %mul.9085 = f32[4096]{0} multiply(%param.796, %broadcast.5183)
  %add.4614 = f32[4096]{0} add(%mul.9084, %mul.9085)
  %div.2893 = f32[4096]{0} divide(%add.4614, %div.2012)
  %sqrt.250 = f32[4096]{0} sqrt(%div.2893)
  %add.4615 = f32[4096]{0} add(%sqrt.250, %broadcast.5184)
  %multiply.3438 = f32[4096]{0} multiply(%div.2010, %add.4615)
  %div.2894 = f32[4096]{0} divide(%add.4613, %multiply.3438)
  %mul.9086 = f32[4096]{0} multiply(%param.52, %broadcast.5180)
  %add.4616 = f32[4096]{0} add(%div.2894, %mul.9086)
  %mul.9088 = f32[4096]{0} multiply(%mul.1626, %add.4616)
  %add.4617 = f32[4096]{0} add(%param.52, %mul.9088)
  %div.2895 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3922, %div.2043)
  %select_n.2982 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3922, %div.2895)
  %mul.9089 = f32[512,8,128]{2,1,0} multiply(%select_n.2982, %broadcast.5195)
  %param.797 = f32[512,8,128]{2,1,0} parameter(542), sharding={devices=[8,1,1]<=[8]}
  %mul.9090 = f32[512,8,128]{2,1,0} multiply(%param.797, %broadcast.5196)
  %add.4618 = f32[512,8,128]{2,1,0} add(%mul.9089, %mul.9090)
  %integer_pow.262 = f32[512,8,128]{2,1,0} multiply(%select_n.2982, %select_n.2982)
  %mul.9091 = f32[512,8,128]{2,1,0} multiply(%integer_pow.262, %broadcast.5197)
  %param.798 = f32[512,8,128]{2,1,0} parameter(833), sharding={devices=[8,1,1]<=[8]}
  %mul.9092 = f32[512,8,128]{2,1,0} multiply(%param.798, %broadcast.5198)
  %add.4619 = f32[512,8,128]{2,1,0} add(%mul.9091, %mul.9092)
  %div.2896 = f32[512,8,128]{2,1,0} divide(%add.4619, %div.2046)
  %sqrt.251 = f32[512,8,128]{2,1,0} sqrt(%div.2896)
  %add.4620 = f32[512,8,128]{2,1,0} add(%sqrt.251, %broadcast.5199)
  %multiply.3439 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4620)
  %div.2897 = f32[512,8,128]{2,1,0} divide(%add.4618, %multiply.3439)
  %mul.9093 = f32[512,8,128]{2,1,0} multiply(%param.54, %broadcast.5195)
  %add.4621 = f32[512,8,128]{2,1,0} add(%div.2897, %mul.9093)
  %mul.9094 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4621)
  %add.4622 = f32[512,8,128]{2,1,0} add(%param.54, %mul.9094)
  %div.2898 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3924, %div.2049)
  %select_n.2983 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3924, %div.2898)
  %mul.9095 = f32[32,128,512]{2,1,0} multiply(%select_n.2983, %broadcast.5200)
  %param.799 = f32[32,128,512]{2,1,0} parameter(543), sharding={devices=[1,1,8]<=[8]}
  %mul.9096 = f32[32,128,512]{2,1,0} multiply(%param.799, %broadcast.5201)
  %add.4623 = f32[32,128,512]{2,1,0} add(%mul.9095, %mul.9096)
  %integer_pow.263 = f32[32,128,512]{2,1,0} multiply(%select_n.2983, %select_n.2983)
  %mul.9097 = f32[32,128,512]{2,1,0} multiply(%integer_pow.263, %broadcast.5202)
  %param.800 = f32[32,128,512]{2,1,0} parameter(834), sharding={devices=[1,1,8]<=[8]}
  %mul.9098 = f32[32,128,512]{2,1,0} multiply(%param.800, %broadcast.5203)
  %add.4624 = f32[32,128,512]{2,1,0} add(%mul.9097, %mul.9098)
  %div.2899 = f32[32,128,512]{2,1,0} divide(%add.4624, %div.2052)
  %sqrt.252 = f32[32,128,512]{2,1,0} sqrt(%div.2899)
  %add.4626 = f32[32,128,512]{2,1,0} add(%sqrt.252, %broadcast.5204)
  %multiply.3440 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4626)
  %div.2900 = f32[32,128,512]{2,1,0} divide(%add.4623, %multiply.3440)
  %mul.9099 = f32[32,128,512]{2,1,0} multiply(%param.56, %broadcast.5200)
  %add.4627 = f32[32,128,512]{2,1,0} add(%div.2900, %mul.9099)
  %mul.9100 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4627)
  %add.4628 = f32[32,128,512]{2,1,0} add(%param.56, %mul.9100)
  %div.2901 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3928, %div.2055)
  %select_n.2984 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3928, %div.2901)
  %mul.9101 = f32[512,32,128]{2,1,0} multiply(%select_n.2984, %broadcast.5205)
  %param.801 = f32[512,32,128]{2,1,0} parameter(544), sharding={devices=[8,1,1]<=[8]}
  %mul.9102 = f32[512,32,128]{2,1,0} multiply(%param.801, %broadcast.5206)
  %add.4629 = f32[512,32,128]{2,1,0} add(%mul.9101, %mul.9102)
  %integer_pow.264 = f32[512,32,128]{2,1,0} multiply(%select_n.2984, %select_n.2984)
  %mul.9104 = f32[512,32,128]{2,1,0} multiply(%integer_pow.264, %broadcast.5207)
  %param.802 = f32[512,32,128]{2,1,0} parameter(835), sharding={devices=[8,1,1]<=[8]}
  %mul.9106 = f32[512,32,128]{2,1,0} multiply(%param.802, %broadcast.5208)
  %add.4630 = f32[512,32,128]{2,1,0} add(%mul.9104, %mul.9106)
  %div.2902 = f32[512,32,128]{2,1,0} divide(%add.4630, %div.2058)
  %sqrt.253 = f32[512,32,128]{2,1,0} sqrt(%div.2902)
  %add.4631 = f32[512,32,128]{2,1,0} add(%sqrt.253, %broadcast.5209)
  %multiply.3441 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4631)
  %div.2903 = f32[512,32,128]{2,1,0} divide(%add.4629, %multiply.3441)
  %mul.9107 = f32[512,32,128]{2,1,0} multiply(%param.53, %broadcast.5205)
  %add.4632 = f32[512,32,128]{2,1,0} add(%div.2903, %mul.9107)
  %mul.9108 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4632)
  %add.4633 = f32[512,32,128]{2,1,0} add(%param.53, %mul.9108)
  %div.2904 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3932, %div.2043)
  %select_n.2985 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3932, %div.2904)
  %mul.9109 = f32[512,8,128]{2,1,0} multiply(%select_n.2985, %broadcast.5195)
  %param.803 = f32[512,8,128]{2,1,0} parameter(545), sharding={devices=[8,1,1]<=[8]}
  %mul.9110 = f32[512,8,128]{2,1,0} multiply(%param.803, %broadcast.5196)
  %add.4634 = f32[512,8,128]{2,1,0} add(%mul.9109, %mul.9110)
  %integer_pow.265 = f32[512,8,128]{2,1,0} multiply(%select_n.2985, %select_n.2985)
  %mul.9113 = f32[512,8,128]{2,1,0} multiply(%integer_pow.265, %broadcast.5197)
  %param.804 = f32[512,8,128]{2,1,0} parameter(836), sharding={devices=[8,1,1]<=[8]}
  %mul.9114 = f32[512,8,128]{2,1,0} multiply(%param.804, %broadcast.5198)
  %add.4635 = f32[512,8,128]{2,1,0} add(%mul.9113, %mul.9114)
  %div.2905 = f32[512,8,128]{2,1,0} divide(%add.4635, %div.2046)
  %sqrt.254 = f32[512,8,128]{2,1,0} sqrt(%div.2905)
  %add.4636 = f32[512,8,128]{2,1,0} add(%sqrt.254, %broadcast.5199)
  %multiply.3442 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4636)
  %div.2906 = f32[512,8,128]{2,1,0} divide(%add.4634, %multiply.3442)
  %mul.9117 = f32[512,8,128]{2,1,0} multiply(%param.55, %broadcast.5195)
  %add.4637 = f32[512,8,128]{2,1,0} add(%div.2906, %mul.9117)
  %mul.9118 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4637)
  %add.4638 = f32[512,8,128]{2,1,0} add(%param.55, %mul.9118)
  %div.2908 = f32[512,14336]{1,0} divide(%convert_element_type.3935, %div.2022)
  %select_n.2986 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3935, %div.2908)
  %mul.9119 = f32[512,14336]{1,0} multiply(%select_n.2986, %broadcast.5185)
  %param.805 = f32[512,14336]{1,0} parameter(546), sharding={devices=[8,1]<=[8]}
  %mul.9120 = f32[512,14336]{1,0} multiply(%param.805, %broadcast.5186)
  %add.4639 = f32[512,14336]{1,0} add(%mul.9119, %mul.9120)
  %integer_pow.266 = f32[512,14336]{1,0} multiply(%select_n.2986, %select_n.2986)
  %mul.9121 = f32[512,14336]{1,0} multiply(%integer_pow.266, %broadcast.5187)
  %param.806 = f32[512,14336]{1,0} parameter(837), sharding={devices=[8,1]<=[8]}
  %mul.9122 = f32[512,14336]{1,0} multiply(%param.806, %broadcast.5188)
  %add.4640 = f32[512,14336]{1,0} add(%mul.9121, %mul.9122)
  %div.2909 = f32[512,14336]{1,0} divide(%add.4640, %div.2025)
  %sqrt.255 = f32[512,14336]{1,0} sqrt(%div.2909)
  %add.4641 = f32[512,14336]{1,0} add(%sqrt.255, %broadcast.5189)
  %multiply.3443 = f32[512,14336]{1,0} multiply(%div.2024, %add.4641)
  %div.2910 = f32[512,14336]{1,0} divide(%add.4639, %multiply.3443)
  %mul.9123 = f32[512,14336]{1,0} multiply(%param.67, %broadcast.5185)
  %add.4642 = f32[512,14336]{1,0} add(%div.2910, %mul.9123)
  %mul.9124 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4642)
  %add.4643 = f32[512,14336]{1,0} add(%param.67, %mul.9124)
  %div.2913 = f32[512,14336]{1,0} divide(%convert_element_type.3936, %div.2022)
  %select_n.2987 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3936, %div.2913)
  %mul.9126 = f32[512,14336]{1,0} multiply(%select_n.2987, %broadcast.5185)
  %param.807 = f32[512,14336]{1,0} parameter(547), sharding={devices=[8,1]<=[8]}
  %mul.9127 = f32[512,14336]{1,0} multiply(%param.807, %broadcast.5186)
  %add.4644 = f32[512,14336]{1,0} add(%mul.9126, %mul.9127)
  %integer_pow.267 = f32[512,14336]{1,0} multiply(%select_n.2987, %select_n.2987)
  %mul.9128 = f32[512,14336]{1,0} multiply(%integer_pow.267, %broadcast.5187)
  %param.808 = f32[512,14336]{1,0} parameter(838), sharding={devices=[8,1]<=[8]}
  %mul.9133 = f32[512,14336]{1,0} multiply(%param.808, %broadcast.5188)
  %add.4645 = f32[512,14336]{1,0} add(%mul.9128, %mul.9133)
  %div.2914 = f32[512,14336]{1,0} divide(%add.4645, %div.2025)
  %sqrt.256 = f32[512,14336]{1,0} sqrt(%div.2914)
  %add.4646 = f32[512,14336]{1,0} add(%sqrt.256, %broadcast.5189)
  %multiply.3444 = f32[512,14336]{1,0} multiply(%div.2024, %add.4646)
  %div.2915 = f32[512,14336]{1,0} divide(%add.4644, %multiply.3444)
  %mul.9138 = f32[512,14336]{1,0} multiply(%param.68, %broadcast.5185)
  %add.4647 = f32[512,14336]{1,0} add(%div.2915, %mul.9138)
  %mul.9139 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4647)
  %add.4649 = f32[512,14336]{1,0} add(%param.68, %mul.9139)
  %div.2916 = f32[14336,512]{1,0} divide(%convert_element_type.3937, %div.2031)
  %select_n.2988 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3937, %div.2916)
  %mul.9144 = f32[14336,512]{1,0} multiply(%select_n.2988, %broadcast.5190)
  %param.809 = f32[14336,512]{1,0} parameter(548), sharding={devices=[1,8]<=[8]}
  %mul.9145 = f32[14336,512]{1,0} multiply(%param.809, %broadcast.5191)
  %add.4650 = f32[14336,512]{1,0} add(%mul.9144, %mul.9145)
  %integer_pow.268 = f32[14336,512]{1,0} multiply(%select_n.2988, %select_n.2988)
  %mul.9146 = f32[14336,512]{1,0} multiply(%integer_pow.268, %broadcast.5192)
  %param.810 = f32[14336,512]{1,0} parameter(839), sharding={devices=[1,8]<=[8]}
  %mul.9149 = f32[14336,512]{1,0} multiply(%param.810, %broadcast.5193)
  %add.4651 = f32[14336,512]{1,0} add(%mul.9146, %mul.9149)
  %div.2918 = f32[14336,512]{1,0} divide(%add.4651, %div.2034)
  %sqrt.257 = f32[14336,512]{1,0} sqrt(%div.2918)
  %add.4652 = f32[14336,512]{1,0} add(%sqrt.257, %broadcast.5194)
  %multiply.3445 = f32[14336,512]{1,0} multiply(%div.2033, %add.4652)
  %div.2920 = f32[14336,512]{1,0} divide(%add.4650, %multiply.3445)
  %mul.9150 = f32[14336,512]{1,0} multiply(%param.69, %broadcast.5190)
  %add.4653 = f32[14336,512]{1,0} add(%div.2920, %mul.9150)
  %mul.9153 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4653)
  %add.4654 = f32[14336,512]{1,0} add(%param.69, %mul.9153)
  %div.2921 = f32[4096]{0} divide(%convert_element_type.3938, %div.2008)
  %select_n.2989 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3938, %div.2921)
  %mul.9154 = f32[4096]{0} multiply(%select_n.2989, %broadcast.5180)
  %param.811 = f32[4096]{0} parameter(549), sharding={replicated}
  %mul.9155 = f32[4096]{0} multiply(%param.811, %broadcast.5181)
  %add.4656 = f32[4096]{0} add(%mul.9154, %mul.9155)
  %integer_pow.269 = f32[4096]{0} multiply(%select_n.2989, %select_n.2989)
  %mul.9156 = f32[4096]{0} multiply(%integer_pow.269, %broadcast.5182)
  %param.812 = f32[4096]{0} parameter(840), sharding={replicated}
  %mul.9157 = f32[4096]{0} multiply(%param.812, %broadcast.5183)
  %add.4657 = f32[4096]{0} add(%mul.9156, %mul.9157)
  %div.2923 = f32[4096]{0} divide(%add.4657, %div.2012)
  %sqrt.258 = f32[4096]{0} sqrt(%div.2923)
  %add.4658 = f32[4096]{0} add(%sqrt.258, %broadcast.5184)
  %multiply.3446 = f32[4096]{0} multiply(%div.2010, %add.4658)
  %div.2924 = f32[4096]{0} divide(%add.4656, %multiply.3446)
  %mul.9158 = f32[4096]{0} multiply(%param.66, %broadcast.5180)
  %add.4659 = f32[4096]{0} add(%div.2924, %mul.9158)
  %mul.9159 = f32[4096]{0} multiply(%mul.1626, %add.4659)
  %add.4660 = f32[4096]{0} add(%param.66, %mul.9159)
  %div.2926 = f32[4096]{0} divide(%convert_element_type.3940, %div.2008)
  %select_n.2990 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3940, %div.2926)
  %mul.9160 = f32[4096]{0} multiply(%select_n.2990, %broadcast.5180)
  %param.813 = f32[4096]{0} parameter(550), sharding={replicated}
  %mul.9161 = f32[4096]{0} multiply(%param.813, %broadcast.5181)
  %add.4661 = f32[4096]{0} add(%mul.9160, %mul.9161)
  %integer_pow.270 = f32[4096]{0} multiply(%select_n.2990, %select_n.2990)
  %mul.9163 = f32[4096]{0} multiply(%integer_pow.270, %broadcast.5182)
  %param.814 = f32[4096]{0} parameter(841), sharding={replicated}
  %mul.9164 = f32[4096]{0} multiply(%param.814, %broadcast.5183)
  %add.4662 = f32[4096]{0} add(%mul.9163, %mul.9164)
  %div.2927 = f32[4096]{0} divide(%add.4662, %div.2012)
  %sqrt.259 = f32[4096]{0} sqrt(%div.2927)
  %add.4663 = f32[4096]{0} add(%sqrt.259, %broadcast.5184)
  %multiply.3447 = f32[4096]{0} multiply(%div.2010, %add.4663)
  %div.2928 = f32[4096]{0} divide(%add.4661, %multiply.3447)
  %mul.9165 = f32[4096]{0} multiply(%param.61, %broadcast.5180)
  %add.4664 = f32[4096]{0} add(%div.2928, %mul.9165)
  %mul.9166 = f32[4096]{0} multiply(%mul.1626, %add.4664)
  %add.4665 = f32[4096]{0} add(%param.61, %mul.9166)
  %div.2929 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3942, %div.2043)
  %select_n.2991 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3942, %div.2929)
  %mul.9167 = f32[512,8,128]{2,1,0} multiply(%select_n.2991, %broadcast.5195)
  %param.815 = f32[512,8,128]{2,1,0} parameter(551), sharding={devices=[8,1,1]<=[8]}
  %mul.9168 = f32[512,8,128]{2,1,0} multiply(%param.815, %broadcast.5196)
  %add.4666 = f32[512,8,128]{2,1,0} add(%mul.9167, %mul.9168)
  %integer_pow.271 = f32[512,8,128]{2,1,0} multiply(%select_n.2991, %select_n.2991)
  %mul.9169 = f32[512,8,128]{2,1,0} multiply(%integer_pow.271, %broadcast.5197)
  %param.816 = f32[512,8,128]{2,1,0} parameter(842), sharding={devices=[8,1,1]<=[8]}
  %mul.9170 = f32[512,8,128]{2,1,0} multiply(%param.816, %broadcast.5198)
  %add.4667 = f32[512,8,128]{2,1,0} add(%mul.9169, %mul.9170)
  %div.2931 = f32[512,8,128]{2,1,0} divide(%add.4667, %div.2046)
  %sqrt.260 = f32[512,8,128]{2,1,0} sqrt(%div.2931)
  %add.4668 = f32[512,8,128]{2,1,0} add(%sqrt.260, %broadcast.5199)
  %multiply.3448 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4668)
  %div.2932 = f32[512,8,128]{2,1,0} divide(%add.4666, %multiply.3448)
  %mul.9171 = f32[512,8,128]{2,1,0} multiply(%param.63, %broadcast.5195)
  %add.4669 = f32[512,8,128]{2,1,0} add(%div.2932, %mul.9171)
  %mul.9172 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4669)
  %add.4670 = f32[512,8,128]{2,1,0} add(%param.63, %mul.9172)
  %div.2940 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3944, %div.2049)
  %select_n.2992 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3944, %div.2940)
  %mul.9173 = f32[32,128,512]{2,1,0} multiply(%select_n.2992, %broadcast.5200)
  %param.817 = f32[32,128,512]{2,1,0} parameter(552), sharding={devices=[1,1,8]<=[8]}
  %mul.9174 = f32[32,128,512]{2,1,0} multiply(%param.817, %broadcast.5201)
  %add.4671 = f32[32,128,512]{2,1,0} add(%mul.9173, %mul.9174)
  %integer_pow.272 = f32[32,128,512]{2,1,0} multiply(%select_n.2992, %select_n.2992)
  %mul.9175 = f32[32,128,512]{2,1,0} multiply(%integer_pow.272, %broadcast.5202)
  %param.818 = f32[32,128,512]{2,1,0} parameter(843), sharding={devices=[1,1,8]<=[8]}
  %mul.9176 = f32[32,128,512]{2,1,0} multiply(%param.818, %broadcast.5203)
  %add.4672 = f32[32,128,512]{2,1,0} add(%mul.9175, %mul.9176)
  %div.2941 = f32[32,128,512]{2,1,0} divide(%add.4672, %div.2052)
  %sqrt.261 = f32[32,128,512]{2,1,0} sqrt(%div.2941)
  %add.4673 = f32[32,128,512]{2,1,0} add(%sqrt.261, %broadcast.5204)
  %multiply.3449 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4673)
  %div.2942 = f32[32,128,512]{2,1,0} divide(%add.4671, %multiply.3449)
  %mul.9177 = f32[32,128,512]{2,1,0} multiply(%param.65, %broadcast.5200)
  %add.4674 = f32[32,128,512]{2,1,0} add(%div.2942, %mul.9177)
  %mul.9178 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4674)
  %add.4675 = f32[32,128,512]{2,1,0} add(%param.65, %mul.9178)
  %div.2943 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3946, %div.2055)
  %select_n.2993 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3946, %div.2943)
  %mul.9179 = f32[512,32,128]{2,1,0} multiply(%select_n.2993, %broadcast.5205)
  %param.819 = f32[512,32,128]{2,1,0} parameter(553), sharding={devices=[8,1,1]<=[8]}
  %mul.9180 = f32[512,32,128]{2,1,0} multiply(%param.819, %broadcast.5206)
  %add.4676 = f32[512,32,128]{2,1,0} add(%mul.9179, %mul.9180)
  %integer_pow.273 = f32[512,32,128]{2,1,0} multiply(%select_n.2993, %select_n.2993)
  %mul.9181 = f32[512,32,128]{2,1,0} multiply(%integer_pow.273, %broadcast.5207)
  %param.820 = f32[512,32,128]{2,1,0} parameter(844), sharding={devices=[8,1,1]<=[8]}
  %mul.9183 = f32[512,32,128]{2,1,0} multiply(%param.820, %broadcast.5208)
  %add.4677 = f32[512,32,128]{2,1,0} add(%mul.9181, %mul.9183)
  %div.2944 = f32[512,32,128]{2,1,0} divide(%add.4677, %div.2058)
  %sqrt.262 = f32[512,32,128]{2,1,0} sqrt(%div.2944)
  %add.4678 = f32[512,32,128]{2,1,0} add(%sqrt.262, %broadcast.5209)
  %multiply.3450 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4678)
  %div.2945 = f32[512,32,128]{2,1,0} divide(%add.4676, %multiply.3450)
  %mul.9185 = f32[512,32,128]{2,1,0} multiply(%param.62, %broadcast.5205)
  %add.4679 = f32[512,32,128]{2,1,0} add(%div.2945, %mul.9185)
  %mul.9186 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4679)
  %add.4680 = f32[512,32,128]{2,1,0} add(%param.62, %mul.9186)
  %div.2946 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3948, %div.2043)
  %select_n.2994 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3948, %div.2946)
  %mul.9187 = f32[512,8,128]{2,1,0} multiply(%select_n.2994, %broadcast.5195)
  %param.821 = f32[512,8,128]{2,1,0} parameter(554), sharding={devices=[8,1,1]<=[8]}
  %mul.9188 = f32[512,8,128]{2,1,0} multiply(%param.821, %broadcast.5196)
  %add.4681 = f32[512,8,128]{2,1,0} add(%mul.9187, %mul.9188)
  %integer_pow.274 = f32[512,8,128]{2,1,0} multiply(%select_n.2994, %select_n.2994)
  %mul.9189 = f32[512,8,128]{2,1,0} multiply(%integer_pow.274, %broadcast.5197)
  %param.822 = f32[512,8,128]{2,1,0} parameter(845), sharding={devices=[8,1,1]<=[8]}
  %mul.9190 = f32[512,8,128]{2,1,0} multiply(%param.822, %broadcast.5198)
  %add.4682 = f32[512,8,128]{2,1,0} add(%mul.9189, %mul.9190)
  %div.2947 = f32[512,8,128]{2,1,0} divide(%add.4682, %div.2046)
  %sqrt.263 = f32[512,8,128]{2,1,0} sqrt(%div.2947)
  %add.4683 = f32[512,8,128]{2,1,0} add(%sqrt.263, %broadcast.5199)
  %multiply.3451 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4683)
  %div.2948 = f32[512,8,128]{2,1,0} divide(%add.4681, %multiply.3451)
  %mul.9191 = f32[512,8,128]{2,1,0} multiply(%param.64, %broadcast.5195)
  %add.4684 = f32[512,8,128]{2,1,0} add(%div.2948, %mul.9191)
  %mul.9192 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4684)
  %add.4685 = f32[512,8,128]{2,1,0} add(%param.64, %mul.9192)
  %div.2949 = f32[512,14336]{1,0} divide(%convert_element_type.3950, %div.2022)
  %select_n.2995 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3950, %div.2949)
  %mul.9196 = f32[512,14336]{1,0} multiply(%select_n.2995, %broadcast.5185)
  %param.823 = f32[512,14336]{1,0} parameter(555), sharding={devices=[8,1]<=[8]}
  %mul.9197 = f32[512,14336]{1,0} multiply(%param.823, %broadcast.5186)
  %add.4686 = f32[512,14336]{1,0} add(%mul.9196, %mul.9197)
  %integer_pow.275 = f32[512,14336]{1,0} multiply(%select_n.2995, %select_n.2995)
  %mul.9198 = f32[512,14336]{1,0} multiply(%integer_pow.275, %broadcast.5187)
  %param.824 = f32[512,14336]{1,0} parameter(846), sharding={devices=[8,1]<=[8]}
  %mul.9199 = f32[512,14336]{1,0} multiply(%param.824, %broadcast.5188)
  %add.4687 = f32[512,14336]{1,0} add(%mul.9198, %mul.9199)
  %div.2951 = f32[512,14336]{1,0} divide(%add.4687, %div.2025)
  %sqrt.264 = f32[512,14336]{1,0} sqrt(%div.2951)
  %add.4688 = f32[512,14336]{1,0} add(%sqrt.264, %broadcast.5189)
  %multiply.3452 = f32[512,14336]{1,0} multiply(%div.2024, %add.4688)
  %div.2952 = f32[512,14336]{1,0} divide(%add.4686, %multiply.3452)
  %mul.9200 = f32[512,14336]{1,0} multiply(%param.76, %broadcast.5185)
  %add.4690 = f32[512,14336]{1,0} add(%div.2952, %mul.9200)
  %mul.9201 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4690)
  %add.4691 = f32[512,14336]{1,0} add(%param.76, %mul.9201)
  %div.2953 = f32[512,14336]{1,0} divide(%convert_element_type.3951, %div.2022)
  %select_n.2996 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3951, %div.2953)
  %mul.9202 = f32[512,14336]{1,0} multiply(%select_n.2996, %broadcast.5185)
  %param.825 = f32[512,14336]{1,0} parameter(556), sharding={devices=[8,1]<=[8]}
  %mul.9203 = f32[512,14336]{1,0} multiply(%param.825, %broadcast.5186)
  %add.4692 = f32[512,14336]{1,0} add(%mul.9202, %mul.9203)
  %integer_pow.276 = f32[512,14336]{1,0} multiply(%select_n.2996, %select_n.2996)
  %mul.9204 = f32[512,14336]{1,0} multiply(%integer_pow.276, %broadcast.5187)
  %param.826 = f32[512,14336]{1,0} parameter(847), sharding={devices=[8,1]<=[8]}
  %mul.9205 = f32[512,14336]{1,0} multiply(%param.826, %broadcast.5188)
  %add.4693 = f32[512,14336]{1,0} add(%mul.9204, %mul.9205)
  %div.2954 = f32[512,14336]{1,0} divide(%add.4693, %div.2025)
  %sqrt.265 = f32[512,14336]{1,0} sqrt(%div.2954)
  %add.4694 = f32[512,14336]{1,0} add(%sqrt.265, %broadcast.5189)
  %multiply.3453 = f32[512,14336]{1,0} multiply(%div.2024, %add.4694)
  %div.2955 = f32[512,14336]{1,0} divide(%add.4692, %multiply.3453)
  %mul.9206 = f32[512,14336]{1,0} multiply(%param.77, %broadcast.5185)
  %add.4695 = f32[512,14336]{1,0} add(%div.2955, %mul.9206)
  %mul.9210 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4695)
  %add.4696 = f32[512,14336]{1,0} add(%param.77, %mul.9210)
  %div.2956 = f32[14336,512]{1,0} divide(%convert_element_type.3952, %div.2031)
  %select_n.2997 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3952, %div.2956)
  %mul.9211 = f32[14336,512]{1,0} multiply(%select_n.2997, %broadcast.5190)
  %param.827 = f32[14336,512]{1,0} parameter(557), sharding={devices=[1,8]<=[8]}
  %mul.9212 = f32[14336,512]{1,0} multiply(%param.827, %broadcast.5191)
  %add.4697 = f32[14336,512]{1,0} add(%mul.9211, %mul.9212)
  %integer_pow.277 = f32[14336,512]{1,0} multiply(%select_n.2997, %select_n.2997)
  %mul.9218 = f32[14336,512]{1,0} multiply(%integer_pow.277, %broadcast.5192)
  %param.828 = f32[14336,512]{1,0} parameter(848), sharding={devices=[1,8]<=[8]}
  %mul.9219 = f32[14336,512]{1,0} multiply(%param.828, %broadcast.5193)
  %add.4698 = f32[14336,512]{1,0} add(%mul.9218, %mul.9219)
  %div.2957 = f32[14336,512]{1,0} divide(%add.4698, %div.2034)
  %sqrt.266 = f32[14336,512]{1,0} sqrt(%div.2957)
  %add.4699 = f32[14336,512]{1,0} add(%sqrt.266, %broadcast.5194)
  %multiply.3454 = f32[14336,512]{1,0} multiply(%div.2033, %add.4699)
  %div.2958 = f32[14336,512]{1,0} divide(%add.4697, %multiply.3454)
  %mul.9220 = f32[14336,512]{1,0} multiply(%param.78, %broadcast.5190)
  %add.4700 = f32[14336,512]{1,0} add(%div.2958, %mul.9220)
  %mul.9225 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4700)
  %add.4701 = f32[14336,512]{1,0} add(%param.78, %mul.9225)
  %div.2959 = f32[4096]{0} divide(%convert_element_type.3953, %div.2008)
  %select_n.2998 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3953, %div.2959)
  %mul.9227 = f32[4096]{0} multiply(%select_n.2998, %broadcast.5180)
  %param.829 = f32[4096]{0} parameter(558), sharding={replicated}
  %mul.9228 = f32[4096]{0} multiply(%param.829, %broadcast.5181)
  %add.4702 = f32[4096]{0} add(%mul.9227, %mul.9228)
  %integer_pow.278 = f32[4096]{0} multiply(%select_n.2998, %select_n.2998)
  %mul.9229 = f32[4096]{0} multiply(%integer_pow.278, %broadcast.5182)
  %param.830 = f32[4096]{0} parameter(849), sharding={replicated}
  %mul.9230 = f32[4096]{0} multiply(%param.830, %broadcast.5183)
  %add.4703 = f32[4096]{0} add(%mul.9229, %mul.9230)
  %div.2960 = f32[4096]{0} divide(%add.4703, %div.2012)
  %sqrt.267 = f32[4096]{0} sqrt(%div.2960)
  %add.4704 = f32[4096]{0} add(%sqrt.267, %broadcast.5184)
  %multiply.3455 = f32[4096]{0} multiply(%div.2010, %add.4704)
  %div.2961 = f32[4096]{0} divide(%add.4702, %multiply.3455)
  %mul.9231 = f32[4096]{0} multiply(%param.75, %broadcast.5180)
  %add.4705 = f32[4096]{0} add(%div.2961, %mul.9231)
  %mul.9232 = f32[4096]{0} multiply(%mul.1626, %add.4705)
  %add.4707 = f32[4096]{0} add(%param.75, %mul.9232)
  %div.2962 = f32[4096]{0} divide(%convert_element_type.3956, %div.2008)
  %select_n.2999 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3956, %div.2962)
  %mul.9234 = f32[4096]{0} multiply(%select_n.2999, %broadcast.5180)
  %param.831 = f32[4096]{0} parameter(559), sharding={replicated}
  %mul.9235 = f32[4096]{0} multiply(%param.831, %broadcast.5181)
  %add.4708 = f32[4096]{0} add(%mul.9234, %mul.9235)
  %integer_pow.279 = f32[4096]{0} multiply(%select_n.2999, %select_n.2999)
  %mul.9236 = f32[4096]{0} multiply(%integer_pow.279, %broadcast.5182)
  %param.832 = f32[4096]{0} parameter(850), sharding={replicated}
  %mul.9237 = f32[4096]{0} multiply(%param.832, %broadcast.5183)
  %add.4709 = f32[4096]{0} add(%mul.9236, %mul.9237)
  %div.2963 = f32[4096]{0} divide(%add.4709, %div.2012)
  %sqrt.268 = f32[4096]{0} sqrt(%div.2963)
  %add.4710 = f32[4096]{0} add(%sqrt.268, %broadcast.5184)
  %multiply.3456 = f32[4096]{0} multiply(%div.2010, %add.4710)
  %div.2964 = f32[4096]{0} divide(%add.4708, %multiply.3456)
  %mul.9238 = f32[4096]{0} multiply(%param.70, %broadcast.5180)
  %add.4711 = f32[4096]{0} add(%div.2964, %mul.9238)
  %mul.9239 = f32[4096]{0} multiply(%mul.1626, %add.4711)
  %add.4712 = f32[4096]{0} add(%param.70, %mul.9239)
  %div.2965 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3958, %div.2043)
  %select_n.3000 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3958, %div.2965)
  %mul.9240 = f32[512,8,128]{2,1,0} multiply(%select_n.3000, %broadcast.5195)
  %param.833 = f32[512,8,128]{2,1,0} parameter(560), sharding={devices=[8,1,1]<=[8]}
  %mul.9241 = f32[512,8,128]{2,1,0} multiply(%param.833, %broadcast.5196)
  %add.4713 = f32[512,8,128]{2,1,0} add(%mul.9240, %mul.9241)
  %integer_pow.280 = f32[512,8,128]{2,1,0} multiply(%select_n.3000, %select_n.3000)
  %mul.9242 = f32[512,8,128]{2,1,0} multiply(%integer_pow.280, %broadcast.5197)
  %param.834 = f32[512,8,128]{2,1,0} parameter(851), sharding={devices=[8,1,1]<=[8]}
  %mul.9243 = f32[512,8,128]{2,1,0} multiply(%param.834, %broadcast.5198)
  %add.4714 = f32[512,8,128]{2,1,0} add(%mul.9242, %mul.9243)
  %div.2966 = f32[512,8,128]{2,1,0} divide(%add.4714, %div.2046)
  %sqrt.269 = f32[512,8,128]{2,1,0} sqrt(%div.2966)
  %add.4715 = f32[512,8,128]{2,1,0} add(%sqrt.269, %broadcast.5199)
  %multiply.3457 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4715)
  %div.2967 = f32[512,8,128]{2,1,0} divide(%add.4713, %multiply.3457)
  %mul.9244 = f32[512,8,128]{2,1,0} multiply(%param.72, %broadcast.5195)
  %add.4717 = f32[512,8,128]{2,1,0} add(%div.2967, %mul.9244)
  %mul.9245 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4717)
  %add.4718 = f32[512,8,128]{2,1,0} add(%param.72, %mul.9245)
  %div.2969 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3960, %div.2049)
  %select_n.3001 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3960, %div.2969)
  %mul.9247 = f32[32,128,512]{2,1,0} multiply(%select_n.3001, %broadcast.5200)
  %param.835 = f32[32,128,512]{2,1,0} parameter(561), sharding={devices=[1,1,8]<=[8]}
  %mul.9249 = f32[32,128,512]{2,1,0} multiply(%param.835, %broadcast.5201)
  %add.4720 = f32[32,128,512]{2,1,0} add(%mul.9247, %mul.9249)
  %integer_pow.281 = f32[32,128,512]{2,1,0} multiply(%select_n.3001, %select_n.3001)
  %mul.9250 = f32[32,128,512]{2,1,0} multiply(%integer_pow.281, %broadcast.5202)
  %param.836 = f32[32,128,512]{2,1,0} parameter(852), sharding={devices=[1,1,8]<=[8]}
  %mul.9251 = f32[32,128,512]{2,1,0} multiply(%param.836, %broadcast.5203)
  %add.4721 = f32[32,128,512]{2,1,0} add(%mul.9250, %mul.9251)
  %div.2970 = f32[32,128,512]{2,1,0} divide(%add.4721, %div.2052)
  %sqrt.270 = f32[32,128,512]{2,1,0} sqrt(%div.2970)
  %add.4722 = f32[32,128,512]{2,1,0} add(%sqrt.270, %broadcast.5204)
  %multiply.3458 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4722)
  %div.2971 = f32[32,128,512]{2,1,0} divide(%add.4720, %multiply.3458)
  %mul.9256 = f32[32,128,512]{2,1,0} multiply(%param.74, %broadcast.5200)
  %add.4723 = f32[32,128,512]{2,1,0} add(%div.2971, %mul.9256)
  %mul.9263 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4723)
  %add.4724 = f32[32,128,512]{2,1,0} add(%param.74, %mul.9263)
  %div.2972 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3965, %div.2055)
  %select_n.3002 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3965, %div.2972)
  %mul.9264 = f32[512,32,128]{2,1,0} multiply(%select_n.3002, %broadcast.5205)
  %param.837 = f32[512,32,128]{2,1,0} parameter(562), sharding={devices=[8,1,1]<=[8]}
  %mul.9265 = f32[512,32,128]{2,1,0} multiply(%param.837, %broadcast.5206)
  %add.4725 = f32[512,32,128]{2,1,0} add(%mul.9264, %mul.9265)
  %integer_pow.282 = f32[512,32,128]{2,1,0} multiply(%select_n.3002, %select_n.3002)
  %mul.9266 = f32[512,32,128]{2,1,0} multiply(%integer_pow.282, %broadcast.5207)
  %param.838 = f32[512,32,128]{2,1,0} parameter(853), sharding={devices=[8,1,1]<=[8]}
  %mul.9267 = f32[512,32,128]{2,1,0} multiply(%param.838, %broadcast.5208)
  %add.4726 = f32[512,32,128]{2,1,0} add(%mul.9266, %mul.9267)
  %div.2973 = f32[512,32,128]{2,1,0} divide(%add.4726, %div.2058)
  %sqrt.271 = f32[512,32,128]{2,1,0} sqrt(%div.2973)
  %add.4727 = f32[512,32,128]{2,1,0} add(%sqrt.271, %broadcast.5209)
  %multiply.3459 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4727)
  %div.2974 = f32[512,32,128]{2,1,0} divide(%add.4725, %multiply.3459)
  %mul.9268 = f32[512,32,128]{2,1,0} multiply(%param.71, %broadcast.5205)
  %add.4728 = f32[512,32,128]{2,1,0} add(%div.2974, %mul.9268)
  %mul.9269 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4728)
  %add.4729 = f32[512,32,128]{2,1,0} add(%param.71, %mul.9269)
  %div.2975 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3967, %div.2043)
  %select_n.3003 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3967, %div.2975)
  %mul.9270 = f32[512,8,128]{2,1,0} multiply(%select_n.3003, %broadcast.5195)
  %param.839 = f32[512,8,128]{2,1,0} parameter(563), sharding={devices=[8,1,1]<=[8]}
  %mul.9274 = f32[512,8,128]{2,1,0} multiply(%param.839, %broadcast.5196)
  %add.4730 = f32[512,8,128]{2,1,0} add(%mul.9270, %mul.9274)
  %integer_pow.283 = f32[512,8,128]{2,1,0} multiply(%select_n.3003, %select_n.3003)
  %mul.9275 = f32[512,8,128]{2,1,0} multiply(%integer_pow.283, %broadcast.5197)
  %param.840 = f32[512,8,128]{2,1,0} parameter(854), sharding={devices=[8,1,1]<=[8]}
  %mul.9276 = f32[512,8,128]{2,1,0} multiply(%param.840, %broadcast.5198)
  %add.4731 = f32[512,8,128]{2,1,0} add(%mul.9275, %mul.9276)
  %div.2976 = f32[512,8,128]{2,1,0} divide(%add.4731, %div.2046)
  %sqrt.272 = f32[512,8,128]{2,1,0} sqrt(%div.2976)
  %add.4732 = f32[512,8,128]{2,1,0} add(%sqrt.272, %broadcast.5199)
  %multiply.3460 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4732)
  %div.2977 = f32[512,8,128]{2,1,0} divide(%add.4730, %multiply.3460)
  %mul.9279 = f32[512,8,128]{2,1,0} multiply(%param.73, %broadcast.5195)
  %add.4733 = f32[512,8,128]{2,1,0} add(%div.2977, %mul.9279)
  %mul.9280 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4733)
  %add.4734 = f32[512,8,128]{2,1,0} add(%param.73, %mul.9280)
  %div.2978 = f32[512,14336]{1,0} divide(%convert_element_type.3970, %div.2022)
  %select_n.3004 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3970, %div.2978)
  %mul.9281 = f32[512,14336]{1,0} multiply(%select_n.3004, %broadcast.5185)
  %param.841 = f32[512,14336]{1,0} parameter(564), sharding={devices=[8,1]<=[8]}
  %mul.9282 = f32[512,14336]{1,0} multiply(%param.841, %broadcast.5186)
  %add.4735 = f32[512,14336]{1,0} add(%mul.9281, %mul.9282)
  %integer_pow.284 = f32[512,14336]{1,0} multiply(%select_n.3004, %select_n.3004)
  %mul.9283 = f32[512,14336]{1,0} multiply(%integer_pow.284, %broadcast.5187)
  %param.842 = f32[512,14336]{1,0} parameter(855), sharding={devices=[8,1]<=[8]}
  %mul.9284 = f32[512,14336]{1,0} multiply(%param.842, %broadcast.5188)
  %add.4736 = f32[512,14336]{1,0} add(%mul.9283, %mul.9284)
  %div.2979 = f32[512,14336]{1,0} divide(%add.4736, %div.2025)
  %sqrt.273 = f32[512,14336]{1,0} sqrt(%div.2979)
  %add.4737 = f32[512,14336]{1,0} add(%sqrt.273, %broadcast.5189)
  %multiply.3461 = f32[512,14336]{1,0} multiply(%div.2024, %add.4737)
  %div.2980 = f32[512,14336]{1,0} divide(%add.4735, %multiply.3461)
  %mul.9285 = f32[512,14336]{1,0} multiply(%param.85, %broadcast.5185)
  %add.4738 = f32[512,14336]{1,0} add(%div.2980, %mul.9285)
  %mul.9286 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4738)
  %add.4739 = f32[512,14336]{1,0} add(%param.85, %mul.9286)
  %div.2981 = f32[512,14336]{1,0} divide(%convert_element_type.3971, %div.2022)
  %select_n.3005 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3971, %div.2981)
  %mul.9287 = f32[512,14336]{1,0} multiply(%select_n.3005, %broadcast.5185)
  %param.843 = f32[512,14336]{1,0} parameter(565), sharding={devices=[8,1]<=[8]}
  %mul.9288 = f32[512,14336]{1,0} multiply(%param.843, %broadcast.5186)
  %add.4740 = f32[512,14336]{1,0} add(%mul.9287, %mul.9288)
  %integer_pow.285 = f32[512,14336]{1,0} multiply(%select_n.3005, %select_n.3005)
  %mul.9289 = f32[512,14336]{1,0} multiply(%integer_pow.285, %broadcast.5187)
  %param.844 = f32[512,14336]{1,0} parameter(856), sharding={devices=[8,1]<=[8]}
  %mul.9290 = f32[512,14336]{1,0} multiply(%param.844, %broadcast.5188)
  %add.4741 = f32[512,14336]{1,0} add(%mul.9289, %mul.9290)
  %div.2982 = f32[512,14336]{1,0} divide(%add.4741, %div.2025)
  %sqrt.274 = f32[512,14336]{1,0} sqrt(%div.2982)
  %add.4743 = f32[512,14336]{1,0} add(%sqrt.274, %broadcast.5189)
  %multiply.3462 = f32[512,14336]{1,0} multiply(%div.2024, %add.4743)
  %div.2983 = f32[512,14336]{1,0} divide(%add.4740, %multiply.3462)
  %mul.9291 = f32[512,14336]{1,0} multiply(%param.86, %broadcast.5185)
  %add.4744 = f32[512,14336]{1,0} add(%div.2983, %mul.9291)
  %mul.9293 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4744)
  %add.4745 = f32[512,14336]{1,0} add(%param.86, %mul.9293)
  %div.2984 = f32[14336,512]{1,0} divide(%convert_element_type.3973, %div.2031)
  %select_n.3006 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3973, %div.2984)
  %mul.9294 = f32[14336,512]{1,0} multiply(%select_n.3006, %broadcast.5190)
  %param.845 = f32[14336,512]{1,0} parameter(566), sharding={devices=[1,8]<=[8]}
  %mul.9295 = f32[14336,512]{1,0} multiply(%param.845, %broadcast.5191)
  %add.4746 = f32[14336,512]{1,0} add(%mul.9294, %mul.9295)
  %integer_pow.286 = f32[14336,512]{1,0} multiply(%select_n.3006, %select_n.3006)
  %mul.9296 = f32[14336,512]{1,0} multiply(%integer_pow.286, %broadcast.5192)
  %param.846 = f32[14336,512]{1,0} parameter(857), sharding={devices=[1,8]<=[8]}
  %mul.9297 = f32[14336,512]{1,0} multiply(%param.846, %broadcast.5193)
  %add.4747 = f32[14336,512]{1,0} add(%mul.9296, %mul.9297)
  %div.2985 = f32[14336,512]{1,0} divide(%add.4747, %div.2034)
  %sqrt.275 = f32[14336,512]{1,0} sqrt(%div.2985)
  %add.4748 = f32[14336,512]{1,0} add(%sqrt.275, %broadcast.5194)
  %multiply.3463 = f32[14336,512]{1,0} multiply(%div.2033, %add.4748)
  %div.2986 = f32[14336,512]{1,0} divide(%add.4746, %multiply.3463)
  %mul.9298 = f32[14336,512]{1,0} multiply(%param.87, %broadcast.5190)
  %add.4749 = f32[14336,512]{1,0} add(%div.2986, %mul.9298)
  %mul.9299 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4749)
  %add.4750 = f32[14336,512]{1,0} add(%param.87, %mul.9299)
  %div.2987 = f32[4096]{0} divide(%convert_element_type.3974, %div.2008)
  %select_n.3007 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3974, %div.2987)
  %mul.9300 = f32[4096]{0} multiply(%select_n.3007, %broadcast.5180)
  %param.847 = f32[4096]{0} parameter(567), sharding={replicated}
  %mul.9301 = f32[4096]{0} multiply(%param.847, %broadcast.5181)
  %add.4751 = f32[4096]{0} add(%mul.9300, %mul.9301)
  %integer_pow.287 = f32[4096]{0} multiply(%select_n.3007, %select_n.3007)
  %mul.9302 = f32[4096]{0} multiply(%integer_pow.287, %broadcast.5182)
  %param.848 = f32[4096]{0} parameter(858), sharding={replicated}
  %mul.9303 = f32[4096]{0} multiply(%param.848, %broadcast.5183)
  %add.4752 = f32[4096]{0} add(%mul.9302, %mul.9303)
  %div.2989 = f32[4096]{0} divide(%add.4752, %div.2012)
  %sqrt.276 = f32[4096]{0} sqrt(%div.2989)
  %add.4753 = f32[4096]{0} add(%sqrt.276, %broadcast.5184)
  %multiply.3464 = f32[4096]{0} multiply(%div.2010, %add.4753)
  %div.2990 = f32[4096]{0} divide(%add.4751, %multiply.3464)
  %mul.9304 = f32[4096]{0} multiply(%param.84, %broadcast.5180)
  %add.4755 = f32[4096]{0} add(%div.2990, %mul.9304)
  %mul.9305 = f32[4096]{0} multiply(%mul.1626, %add.4755)
  %add.4756 = f32[4096]{0} add(%param.84, %mul.9305)
  %div.2991 = f32[4096]{0} divide(%convert_element_type.3977, %div.2008)
  %select_n.3008 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3977, %div.2991)
  %mul.9306 = f32[4096]{0} multiply(%select_n.3008, %broadcast.5180)
  %param.849 = f32[4096]{0} parameter(568), sharding={replicated}
  %mul.9307 = f32[4096]{0} multiply(%param.849, %broadcast.5181)
  %add.4757 = f32[4096]{0} add(%mul.9306, %mul.9307)
  %integer_pow.288 = f32[4096]{0} multiply(%select_n.3008, %select_n.3008)
  %mul.9309 = f32[4096]{0} multiply(%integer_pow.288, %broadcast.5182)
  %param.850 = f32[4096]{0} parameter(859), sharding={replicated}
  %mul.9311 = f32[4096]{0} multiply(%param.850, %broadcast.5183)
  %add.4758 = f32[4096]{0} add(%mul.9309, %mul.9311)
  %div.2992 = f32[4096]{0} divide(%add.4758, %div.2012)
  %sqrt.277 = f32[4096]{0} sqrt(%div.2992)
  %add.4759 = f32[4096]{0} add(%sqrt.277, %broadcast.5184)
  %multiply.3465 = f32[4096]{0} multiply(%div.2010, %add.4759)
  %div.2993 = f32[4096]{0} divide(%add.4757, %multiply.3465)
  %mul.9312 = f32[4096]{0} multiply(%param.79, %broadcast.5180)
  %add.4760 = f32[4096]{0} add(%div.2993, %mul.9312)
  %mul.9313 = f32[4096]{0} multiply(%mul.1626, %add.4760)
  %add.4761 = f32[4096]{0} add(%param.79, %mul.9313)
  %div.2994 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3982, %div.2043)
  %select_n.3009 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3982, %div.2994)
  %mul.9314 = f32[512,8,128]{2,1,0} multiply(%select_n.3009, %broadcast.5195)
  %param.851 = f32[512,8,128]{2,1,0} parameter(569), sharding={devices=[8,1,1]<=[8]}
  %mul.9315 = f32[512,8,128]{2,1,0} multiply(%param.851, %broadcast.5196)
  %add.4762 = f32[512,8,128]{2,1,0} add(%mul.9314, %mul.9315)
  %integer_pow.289 = f32[512,8,128]{2,1,0} multiply(%select_n.3009, %select_n.3009)
  %mul.9316 = f32[512,8,128]{2,1,0} multiply(%integer_pow.289, %broadcast.5197)
  %param.852 = f32[512,8,128]{2,1,0} parameter(860), sharding={devices=[8,1,1]<=[8]}
  %mul.9317 = f32[512,8,128]{2,1,0} multiply(%param.852, %broadcast.5198)
  %add.4763 = f32[512,8,128]{2,1,0} add(%mul.9316, %mul.9317)
  %div.2995 = f32[512,8,128]{2,1,0} divide(%add.4763, %div.2046)
  %sqrt.278 = f32[512,8,128]{2,1,0} sqrt(%div.2995)
  %add.4764 = f32[512,8,128]{2,1,0} add(%sqrt.278, %broadcast.5199)
  %multiply.3466 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4764)
  %div.2996 = f32[512,8,128]{2,1,0} divide(%add.4762, %multiply.3466)
  %mul.9318 = f32[512,8,128]{2,1,0} multiply(%param.81, %broadcast.5195)
  %add.4765 = f32[512,8,128]{2,1,0} add(%div.2996, %mul.9318)
  %mul.9319 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4765)
  %add.4766 = f32[512,8,128]{2,1,0} add(%param.81, %mul.9319)
  %div.2997 = f32[32,128,512]{1,0,2} divide(%convert_element_type.3985, %div.2049)
  %select_n.3010 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.3985, %div.2997)
  %mul.9320 = f32[32,128,512]{2,1,0} multiply(%select_n.3010, %broadcast.5200)
  %param.853 = f32[32,128,512]{2,1,0} parameter(570), sharding={devices=[1,1,8]<=[8]}
  %mul.9321 = f32[32,128,512]{2,1,0} multiply(%param.853, %broadcast.5201)
  %add.4767 = f32[32,128,512]{2,1,0} add(%mul.9320, %mul.9321)
  %integer_pow.290 = f32[32,128,512]{2,1,0} multiply(%select_n.3010, %select_n.3010)
  %mul.9322 = f32[32,128,512]{2,1,0} multiply(%integer_pow.290, %broadcast.5202)
  %param.854 = f32[32,128,512]{2,1,0} parameter(861), sharding={devices=[1,1,8]<=[8]}
  %mul.9323 = f32[32,128,512]{2,1,0} multiply(%param.854, %broadcast.5203)
  %add.4769 = f32[32,128,512]{2,1,0} add(%mul.9322, %mul.9323)
  %div.2998 = f32[32,128,512]{2,1,0} divide(%add.4769, %div.2052)
  %sqrt.279 = f32[32,128,512]{2,1,0} sqrt(%div.2998)
  %add.4770 = f32[32,128,512]{2,1,0} add(%sqrt.279, %broadcast.5204)
  %multiply.3467 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4770)
  %div.2999 = f32[32,128,512]{2,1,0} divide(%add.4767, %multiply.3467)
  %mul.9324 = f32[32,128,512]{2,1,0} multiply(%param.83, %broadcast.5200)
  %add.4771 = f32[32,128,512]{2,1,0} add(%div.2999, %mul.9324)
  %mul.9325 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4771)
  %add.4772 = f32[32,128,512]{2,1,0} add(%param.83, %mul.9325)
  %div.3000 = f32[512,32,128]{0,2,1} divide(%convert_element_type.3987, %div.2055)
  %select_n.3011 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.3987, %div.3000)
  %mul.9326 = f32[512,32,128]{2,1,0} multiply(%select_n.3011, %broadcast.5205)
  %param.855 = f32[512,32,128]{2,1,0} parameter(571), sharding={devices=[8,1,1]<=[8]}
  %mul.9327 = f32[512,32,128]{2,1,0} multiply(%param.855, %broadcast.5206)
  %add.4773 = f32[512,32,128]{2,1,0} add(%mul.9326, %mul.9327)
  %integer_pow.291 = f32[512,32,128]{2,1,0} multiply(%select_n.3011, %select_n.3011)
  %mul.9328 = f32[512,32,128]{2,1,0} multiply(%integer_pow.291, %broadcast.5207)
  %param.856 = f32[512,32,128]{2,1,0} parameter(862), sharding={devices=[8,1,1]<=[8]}
  %mul.9329 = f32[512,32,128]{2,1,0} multiply(%param.856, %broadcast.5208)
  %add.4774 = f32[512,32,128]{2,1,0} add(%mul.9328, %mul.9329)
  %div.3001 = f32[512,32,128]{2,1,0} divide(%add.4774, %div.2058)
  %sqrt.280 = f32[512,32,128]{2,1,0} sqrt(%div.3001)
  %add.4775 = f32[512,32,128]{2,1,0} add(%sqrt.280, %broadcast.5209)
  %multiply.3468 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4775)
  %div.3002 = f32[512,32,128]{2,1,0} divide(%add.4773, %multiply.3468)
  %mul.9330 = f32[512,32,128]{2,1,0} multiply(%param.80, %broadcast.5205)
  %add.4776 = f32[512,32,128]{2,1,0} add(%div.3002, %mul.9330)
  %mul.9331 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4776)
  %add.4778 = f32[512,32,128]{2,1,0} add(%param.80, %mul.9331)
  %div.3003 = f32[512,8,128]{0,2,1} divide(%convert_element_type.3989, %div.2043)
  %select_n.3012 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.3989, %div.3003)
  %mul.9332 = f32[512,8,128]{2,1,0} multiply(%select_n.3012, %broadcast.5195)
  %param.857 = f32[512,8,128]{2,1,0} parameter(572), sharding={devices=[8,1,1]<=[8]}
  %mul.9333 = f32[512,8,128]{2,1,0} multiply(%param.857, %broadcast.5196)
  %add.4779 = f32[512,8,128]{2,1,0} add(%mul.9332, %mul.9333)
  %integer_pow.292 = f32[512,8,128]{2,1,0} multiply(%select_n.3012, %select_n.3012)
  %mul.9338 = f32[512,8,128]{2,1,0} multiply(%integer_pow.292, %broadcast.5197)
  %param.858 = f32[512,8,128]{2,1,0} parameter(863), sharding={devices=[8,1,1]<=[8]}
  %mul.9349 = f32[512,8,128]{2,1,0} multiply(%param.858, %broadcast.5198)
  %add.4780 = f32[512,8,128]{2,1,0} add(%mul.9338, %mul.9349)
  %div.3005 = f32[512,8,128]{2,1,0} divide(%add.4780, %div.2046)
  %sqrt.281 = f32[512,8,128]{2,1,0} sqrt(%div.3005)
  %add.4781 = f32[512,8,128]{2,1,0} add(%sqrt.281, %broadcast.5199)
  %multiply.3469 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4781)
  %div.3006 = f32[512,8,128]{2,1,0} divide(%add.4779, %multiply.3469)
  %mul.9350 = f32[512,8,128]{2,1,0} multiply(%param.82, %broadcast.5195)
  %add.4782 = f32[512,8,128]{2,1,0} add(%div.3006, %mul.9350)
  %mul.9351 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4782)
  %add.4783 = f32[512,8,128]{2,1,0} add(%param.82, %mul.9351)
  %div.3007 = f32[512,14336]{1,0} divide(%convert_element_type.3992, %div.2022)
  %select_n.3013 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3992, %div.3007)
  %mul.9352 = f32[512,14336]{1,0} multiply(%select_n.3013, %broadcast.5185)
  %param.859 = f32[512,14336]{1,0} parameter(573), sharding={devices=[8,1]<=[8]}
  %mul.9354 = f32[512,14336]{1,0} multiply(%param.859, %broadcast.5186)
  %add.4784 = f32[512,14336]{1,0} add(%mul.9352, %mul.9354)
  %integer_pow.293 = f32[512,14336]{1,0} multiply(%select_n.3013, %select_n.3013)
  %mul.9355 = f32[512,14336]{1,0} multiply(%integer_pow.293, %broadcast.5187)
  %param.860 = f32[512,14336]{1,0} parameter(864), sharding={devices=[8,1]<=[8]}
  %mul.9356 = f32[512,14336]{1,0} multiply(%param.860, %broadcast.5188)
  %add.4785 = f32[512,14336]{1,0} add(%mul.9355, %mul.9356)
  %div.3009 = f32[512,14336]{1,0} divide(%add.4785, %div.2025)
  %sqrt.282 = f32[512,14336]{1,0} sqrt(%div.3009)
  %add.4786 = f32[512,14336]{1,0} add(%sqrt.282, %broadcast.5189)
  %multiply.3470 = f32[512,14336]{1,0} multiply(%div.2024, %add.4786)
  %div.3010 = f32[512,14336]{1,0} divide(%add.4784, %multiply.3470)
  %mul.9358 = f32[512,14336]{1,0} multiply(%param.94, %broadcast.5185)
  %add.4787 = f32[512,14336]{1,0} add(%div.3010, %mul.9358)
  %mul.9359 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4787)
  %add.4788 = f32[512,14336]{1,0} add(%param.94, %mul.9359)
  %div.3011 = f32[512,14336]{1,0} divide(%convert_element_type.3995, %div.2022)
  %select_n.3014 = f32[512,14336]{1,0} select(%select_n.2703, %convert_element_type.3995, %div.3011)
  %mul.9360 = f32[512,14336]{1,0} multiply(%select_n.3014, %broadcast.5185)
  %param.861 = f32[512,14336]{1,0} parameter(574), sharding={devices=[8,1]<=[8]}
  %mul.9361 = f32[512,14336]{1,0} multiply(%param.861, %broadcast.5186)
  %add.4789 = f32[512,14336]{1,0} add(%mul.9360, %mul.9361)
  %integer_pow.294 = f32[512,14336]{1,0} multiply(%select_n.3014, %select_n.3014)
  %mul.9362 = f32[512,14336]{1,0} multiply(%integer_pow.294, %broadcast.5187)
  %param.862 = f32[512,14336]{1,0} parameter(865), sharding={devices=[8,1]<=[8]}
  %mul.9363 = f32[512,14336]{1,0} multiply(%param.862, %broadcast.5188)
  %add.4790 = f32[512,14336]{1,0} add(%mul.9362, %mul.9363)
  %div.3013 = f32[512,14336]{1,0} divide(%add.4790, %div.2025)
  %sqrt.283 = f32[512,14336]{1,0} sqrt(%div.3013)
  %add.4792 = f32[512,14336]{1,0} add(%sqrt.283, %broadcast.5189)
  %multiply.3471 = f32[512,14336]{1,0} multiply(%div.2024, %add.4792)
  %div.3014 = f32[512,14336]{1,0} divide(%add.4789, %multiply.3471)
  %mul.9364 = f32[512,14336]{1,0} multiply(%param.95, %broadcast.5185)
  %add.4793 = f32[512,14336]{1,0} add(%div.3014, %mul.9364)
  %mul.9365 = f32[512,14336]{1,0} multiply(%mul.7008, %add.4793)
  %add.4794 = f32[512,14336]{1,0} add(%param.95, %mul.9365)
  %div.3015 = f32[14336,512]{1,0} divide(%convert_element_type.3996, %div.2031)
  %select_n.3016 = f32[14336,512]{1,0} select(%select_n.2707, %convert_element_type.3996, %div.3015)
  %mul.9366 = f32[14336,512]{1,0} multiply(%select_n.3016, %broadcast.5190)
  %param.863 = f32[14336,512]{1,0} parameter(575), sharding={devices=[1,8]<=[8]}
  %mul.9367 = f32[14336,512]{1,0} multiply(%param.863, %broadcast.5191)
  %add.4795 = f32[14336,512]{1,0} add(%mul.9366, %mul.9367)
  %integer_pow.295 = f32[14336,512]{1,0} multiply(%select_n.3016, %select_n.3016)
  %mul.9369 = f32[14336,512]{1,0} multiply(%integer_pow.295, %broadcast.5192)
  %param.864 = f32[14336,512]{1,0} parameter(866), sharding={devices=[1,8]<=[8]}
  %mul.9370 = f32[14336,512]{1,0} multiply(%param.864, %broadcast.5193)
  %add.4796 = f32[14336,512]{1,0} add(%mul.9369, %mul.9370)
  %div.3016 = f32[14336,512]{1,0} divide(%add.4796, %div.2034)
  %sqrt.284 = f32[14336,512]{1,0} sqrt(%div.3016)
  %add.4797 = f32[14336,512]{1,0} add(%sqrt.284, %broadcast.5194)
  %multiply.3472 = f32[14336,512]{1,0} multiply(%div.2033, %add.4797)
  %div.3017 = f32[14336,512]{1,0} divide(%add.4795, %multiply.3472)
  %mul.9371 = f32[14336,512]{1,0} multiply(%param.96, %broadcast.5190)
  %add.4798 = f32[14336,512]{1,0} add(%div.3017, %mul.9371)
  %mul.9372 = f32[14336,512]{1,0} multiply(%mul.7025, %add.4798)
  %add.4799 = f32[14336,512]{1,0} add(%param.96, %mul.9372)
  %div.3018 = f32[4096]{0} divide(%convert_element_type.3997, %div.2008)
  %select_n.3017 = f32[4096]{0} select(%select_n.2700, %convert_element_type.3997, %div.3018)
  %mul.9373 = f32[4096]{0} multiply(%select_n.3017, %broadcast.5180)
  %param.865 = f32[4096]{0} parameter(576), sharding={replicated}
  %mul.9374 = f32[4096]{0} multiply(%param.865, %broadcast.5181)
  %add.4800 = f32[4096]{0} add(%mul.9373, %mul.9374)
  %integer_pow.296 = f32[4096]{0} multiply(%select_n.3017, %select_n.3017)
  %mul.9377 = f32[4096]{0} multiply(%integer_pow.296, %broadcast.5182)
  %param.866 = f32[4096]{0} parameter(867), sharding={replicated}
  %mul.9378 = f32[4096]{0} multiply(%param.866, %broadcast.5183)
  %add.4801 = f32[4096]{0} add(%mul.9377, %mul.9378)
  %div.3019 = f32[4096]{0} divide(%add.4801, %div.2012)
  %sqrt.285 = f32[4096]{0} sqrt(%div.3019)
  %add.4803 = f32[4096]{0} add(%sqrt.285, %broadcast.5184)
  %multiply.3473 = f32[4096]{0} multiply(%div.2010, %add.4803)
  %div.3020 = f32[4096]{0} divide(%add.4800, %multiply.3473)
  %mul.9381 = f32[4096]{0} multiply(%param.93, %broadcast.5180)
  %add.4804 = f32[4096]{0} add(%div.3020, %mul.9381)
  %mul.9382 = f32[4096]{0} multiply(%mul.1626, %add.4804)
  %add.4805 = f32[4096]{0} add(%param.93, %mul.9382)
  %div.3021 = f32[4096]{0} divide(%convert_element_type.4000, %div.2008)
  %select_n.3019 = f32[4096]{0} select(%select_n.2700, %convert_element_type.4000, %div.3021)
  %mul.9383 = f32[4096]{0} multiply(%select_n.3019, %broadcast.5180)
  %param.867 = f32[4096]{0} parameter(577), sharding={replicated}
  %mul.9385 = f32[4096]{0} multiply(%param.867, %broadcast.5181)
  %add.4806 = f32[4096]{0} add(%mul.9383, %mul.9385)
  %integer_pow.297 = f32[4096]{0} multiply(%select_n.3019, %select_n.3019)
  %mul.9387 = f32[4096]{0} multiply(%integer_pow.297, %broadcast.5182)
  %param.868 = f32[4096]{0} parameter(868), sharding={replicated}
  %mul.9388 = f32[4096]{0} multiply(%param.868, %broadcast.5183)
  %add.4807 = f32[4096]{0} add(%mul.9387, %mul.9388)
  %div.3023 = f32[4096]{0} divide(%add.4807, %div.2012)
  %sqrt.286 = f32[4096]{0} sqrt(%div.3023)
  %add.4808 = f32[4096]{0} add(%sqrt.286, %broadcast.5184)
  %multiply.3474 = f32[4096]{0} multiply(%div.2010, %add.4808)
  %div.3025 = f32[4096]{0} divide(%add.4806, %multiply.3474)
  %mul.9389 = f32[4096]{0} multiply(%param.88, %broadcast.5180)
  %add.4809 = f32[4096]{0} add(%div.3025, %mul.9389)
  %mul.9391 = f32[4096]{0} multiply(%mul.1626, %add.4809)
  %add.4810 = f32[4096]{0} add(%param.88, %mul.9391)
  %div.3026 = f32[512,8,128]{0,2,1} divide(%convert_element_type.4002, %div.2043)
  %select_n.3020 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.4002, %div.3026)
  %mul.9392 = f32[512,8,128]{2,1,0} multiply(%select_n.3020, %broadcast.5195)
  %param.869 = f32[512,8,128]{2,1,0} parameter(578), sharding={devices=[8,1,1]<=[8]}
  %mul.9393 = f32[512,8,128]{2,1,0} multiply(%param.869, %broadcast.5196)
  %add.4811 = f32[512,8,128]{2,1,0} add(%mul.9392, %mul.9393)
  %integer_pow.298 = f32[512,8,128]{2,1,0} multiply(%select_n.3020, %select_n.3020)
  %mul.9394 = f32[512,8,128]{2,1,0} multiply(%integer_pow.298, %broadcast.5197)
  %param.870 = f32[512,8,128]{2,1,0} parameter(869), sharding={devices=[8,1,1]<=[8]}
  %mul.9395 = f32[512,8,128]{2,1,0} multiply(%param.870, %broadcast.5198)
  %add.4812 = f32[512,8,128]{2,1,0} add(%mul.9394, %mul.9395)
  %div.3028 = f32[512,8,128]{2,1,0} divide(%add.4812, %div.2046)
  %sqrt.287 = f32[512,8,128]{2,1,0} sqrt(%div.3028)
  %add.4814 = f32[512,8,128]{2,1,0} add(%sqrt.287, %broadcast.5199)
  %multiply.3475 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4814)
  %div.3031 = f32[512,8,128]{2,1,0} divide(%add.4811, %multiply.3475)
  %mul.9396 = f32[512,8,128]{2,1,0} multiply(%param.90, %broadcast.5195)
  %add.4816 = f32[512,8,128]{2,1,0} add(%div.3031, %mul.9396)
  %mul.9397 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4816)
  %add.4817 = f32[512,8,128]{2,1,0} add(%param.90, %mul.9397)
  %div.3032 = f32[32,128,512]{1,0,2} divide(%convert_element_type.4005, %div.2049)
  %select_n.3021 = f32[32,128,512]{2,1,0} select(%select_n.2713, %convert_element_type.4005, %div.3032)
  %mul.9398 = f32[32,128,512]{2,1,0} multiply(%select_n.3021, %broadcast.5200)
  %param.871 = f32[32,128,512]{2,1,0} parameter(579), sharding={devices=[1,1,8]<=[8]}
  %mul.9399 = f32[32,128,512]{2,1,0} multiply(%param.871, %broadcast.5201)
  %add.4818 = f32[32,128,512]{2,1,0} add(%mul.9398, %mul.9399)
  %integer_pow.299 = f32[32,128,512]{2,1,0} multiply(%select_n.3021, %select_n.3021)
  %mul.9400 = f32[32,128,512]{2,1,0} multiply(%integer_pow.299, %broadcast.5202)
  %param.872 = f32[32,128,512]{2,1,0} parameter(870), sharding={devices=[1,1,8]<=[8]}
  %mul.9401 = f32[32,128,512]{2,1,0} multiply(%param.872, %broadcast.5203)
  %add.4819 = f32[32,128,512]{2,1,0} add(%mul.9400, %mul.9401)
  %div.3036 = f32[32,128,512]{2,1,0} divide(%add.4819, %div.2052)
  %sqrt.288 = f32[32,128,512]{2,1,0} sqrt(%div.3036)
  %add.4820 = f32[32,128,512]{2,1,0} add(%sqrt.288, %broadcast.5204)
  %multiply.3476 = f32[32,128,512]{2,1,0} multiply(%div.2051, %add.4820)
  %div.3037 = f32[32,128,512]{2,1,0} divide(%add.4818, %multiply.3476)
  %mul.9402 = f32[32,128,512]{2,1,0} multiply(%param.92, %broadcast.5200)
  %add.4821 = f32[32,128,512]{2,1,0} add(%div.3037, %mul.9402)
  %mul.9403 = f32[32,128,512]{2,1,0} multiply(%mul.7052, %add.4821)
  %add.4822 = f32[32,128,512]{2,1,0} add(%param.92, %mul.9403)
  %div.3038 = f32[512,32,128]{0,2,1} divide(%convert_element_type.4007, %div.2055)
  %select_n.3022 = f32[512,32,128]{2,1,0} select(%select_n.2715, %convert_element_type.4007, %div.3038)
  %mul.9404 = f32[512,32,128]{2,1,0} multiply(%select_n.3022, %broadcast.5205)
  %param.873 = f32[512,32,128]{2,1,0} parameter(580), sharding={devices=[8,1,1]<=[8]}
  %mul.9405 = f32[512,32,128]{2,1,0} multiply(%param.873, %broadcast.5206)
  %add.4823 = f32[512,32,128]{2,1,0} add(%mul.9404, %mul.9405)
  %integer_pow.300 = f32[512,32,128]{2,1,0} multiply(%select_n.3022, %select_n.3022)
  %mul.9406 = f32[512,32,128]{2,1,0} multiply(%integer_pow.300, %broadcast.5207)
  %param.874 = f32[512,32,128]{2,1,0} parameter(871), sharding={devices=[8,1,1]<=[8]}
  %mul.9407 = f32[512,32,128]{2,1,0} multiply(%param.874, %broadcast.5208)
  %add.4824 = f32[512,32,128]{2,1,0} add(%mul.9406, %mul.9407)
  %div.3039 = f32[512,32,128]{2,1,0} divide(%add.4824, %div.2058)
  %sqrt.289 = f32[512,32,128]{2,1,0} sqrt(%div.3039)
  %add.4825 = f32[512,32,128]{2,1,0} add(%sqrt.289, %broadcast.5209)
  %multiply.3478 = f32[512,32,128]{2,1,0} multiply(%div.2057, %add.4825)
  %div.3040 = f32[512,32,128]{2,1,0} divide(%add.4823, %multiply.3478)
  %mul.9408 = f32[512,32,128]{2,1,0} multiply(%param.89, %broadcast.5205)
  %add.4826 = f32[512,32,128]{2,1,0} add(%div.3040, %mul.9408)
  %mul.9409 = f32[512,32,128]{2,1,0} multiply(%mul.7061, %add.4826)
  %add.4827 = f32[512,32,128]{2,1,0} add(%param.89, %mul.9409)
  %div.3041 = f32[512,8,128]{0,2,1} divide(%convert_element_type.4009, %div.2043)
  %select_n.3023 = f32[512,8,128]{2,1,0} select(%select_n.2711, %convert_element_type.4009, %div.3041)
  %mul.9414 = f32[512,8,128]{2,1,0} multiply(%select_n.3023, %broadcast.5195)
  %param.875 = f32[512,8,128]{2,1,0} parameter(581), sharding={devices=[8,1,1]<=[8]}
  %mul.9419 = f32[512,8,128]{2,1,0} multiply(%param.875, %broadcast.5196)
  %add.4828 = f32[512,8,128]{2,1,0} add(%mul.9414, %mul.9419)
  %integer_pow.301 = f32[512,8,128]{2,1,0} multiply(%select_n.3023, %select_n.3023)
  %mul.9420 = f32[512,8,128]{2,1,0} multiply(%integer_pow.301, %broadcast.5197)
  %param.876 = f32[512,8,128]{2,1,0} parameter(872), sharding={devices=[8,1,1]<=[8]}
  %mul.9425 = f32[512,8,128]{2,1,0} multiply(%param.876, %broadcast.5198)
  %add.4829 = f32[512,8,128]{2,1,0} add(%mul.9420, %mul.9425)
  %div.3042 = f32[512,8,128]{2,1,0} divide(%add.4829, %div.2046)
  %sqrt.290 = f32[512,8,128]{2,1,0} sqrt(%div.3042)
  %add.4830 = f32[512,8,128]{2,1,0} add(%sqrt.290, %broadcast.5199)
  %multiply.3479 = f32[512,8,128]{2,1,0} multiply(%div.2045, %add.4830)
  %div.3043 = f32[512,8,128]{2,1,0} divide(%add.4828, %multiply.3479)
  %mul.9426 = f32[512,8,128]{2,1,0} multiply(%param.91, %broadcast.5195)
  %add.4831 = f32[512,8,128]{2,1,0} add(%div.3043, %mul.9426)
  %mul.9427 = f32[512,8,128]{2,1,0} multiply(%mul.7045, %add.4831)
  %add.4832 = f32[512,8,128]{2,1,0} add(%param.91, %mul.9427)
  %mul.9428 = f32[512,128256]{1,0} broadcast(%mul.1625), dimensions={}
  %select_n.3024 = pred[512,128256]{1,0} broadcast(%lt.1048), dimensions={}
  %div.3044 = f32[512,128256]{1,0} broadcast(%sqrt.1), dimensions={}
  %div.3045 = f32[512,128256]{1,0} divide(%convert_element_type.4010, %div.3044)
  %select_n.3025 = f32[512,128256]{1,0} select(%select_n.3024, %convert_element_type.4010, %div.3045)
  %broadcast.5210 = f32[512,128256]{1,0} broadcast(%constant.13810), dimensions={}
  %mul.9429 = f32[512,128256]{1,0} multiply(%select_n.3025, %broadcast.5210)
  %param.877 = f32[512,128256]{1,0} parameter(582), sharding={devices=[8,1]<=[8]}
  %mul.9430 = f32[512,128256]{1,0} broadcast(%constant.13811), dimensions={}
  %mul.9431 = f32[512,128256]{1,0} multiply(%param.877, %mul.9430)
  %add.4833 = f32[512,128256]{1,0} add(%mul.9429, %mul.9431)
  %div.3046 = f32[512,128256]{1,0} broadcast(%sub.357), dimensions={}
  %integer_pow.302 = f32[512,128256]{1,0} multiply(%select_n.3025, %select_n.3025)
  %mul.9432 = f32[512,128256]{1,0} broadcast(%constant.13813), dimensions={}
  %mul.9433 = f32[512,128256]{1,0} multiply(%integer_pow.302, %mul.9432)
  %param.878 = f32[512,128256]{1,0} parameter(873), sharding={devices=[8,1]<=[8]}
  %mul.9434 = f32[512,128256]{1,0} broadcast(%constant.13814), dimensions={}
  %mul.9438 = f32[512,128256]{1,0} multiply(%param.878, %mul.9434)
  %add.4834 = f32[512,128256]{1,0} add(%mul.9433, %mul.9438)
  %div.3047 = f32[512,128256]{1,0} broadcast(%sub.358), dimensions={}
  %div.3048 = f32[512,128256]{1,0} divide(%add.4834, %div.3047)
  %sqrt.291 = f32[512,128256]{1,0} sqrt(%div.3048)
  %add.4835 = f32[512,128256]{1,0} broadcast(%constant.5660), dimensions={}
  %add.4836 = f32[512,128256]{1,0} add(%sqrt.291, %add.4835)
  %multiply.3480 = f32[512,128256]{1,0} multiply(%div.3046, %add.4836)
  %div.3049 = f32[512,128256]{1,0} divide(%add.4833, %multiply.3480)
  %mul.9439 = f32[512,128256]{1,0} multiply(%param.296, %broadcast.5210)
  %add.4837 = f32[512,128256]{1,0} add(%div.3049, %mul.9439)
  %mul.9440 = f32[512,128256]{1,0} multiply(%mul.9428, %add.4837)
  %add.4838 = f32[512,128256]{1,0} add(%param.296, %mul.9440)
  %mul.9443 = f32[128256,512]{1,0} broadcast(%mul.1625), dimensions={}
  %select_n.3026 = pred[128256,512]{1,0} broadcast(%lt.1048), dimensions={}
  %div.3050 = f32[128256,512]{1,0} broadcast(%sqrt.1), dimensions={}
  %div.3051 = f32[128256,512]{1,0} divide(%convert_element_type.4014, %div.3050)
  %select_n.3027 = f32[128256,512]{1,0} select(%select_n.3026, %convert_element_type.4014, %div.3051)
  %broadcast.5211 = f32[128256,512]{1,0} broadcast(%constant.13810), dimensions={}
  %mul.9444 = f32[128256,512]{1,0} multiply(%select_n.3027, %broadcast.5211)
  %param.879 = f32[128256,512]{1,0} parameter(583), sharding={devices=[1,8]<=[8]}
  %mul.9445 = f32[128256,512]{1,0} broadcast(%constant.13811), dimensions={}
  %mul.9446 = f32[128256,512]{1,0} multiply(%param.879, %mul.9445)
  %add.4839 = f32[128256,512]{1,0} add(%mul.9444, %mul.9446)
  %div.3052 = f32[128256,512]{1,0} broadcast(%sub.357), dimensions={}
  %integer_pow.303 = f32[128256,512]{1,0} multiply(%select_n.3027, %select_n.3027)
  %mul.9447 = f32[128256,512]{1,0} broadcast(%constant.13813), dimensions={}
  %mul.9448 = f32[128256,512]{1,0} multiply(%integer_pow.303, %mul.9447)
  %param.880 = f32[128256,512]{1,0} parameter(874), sharding={devices=[1,8]<=[8]}
  %mul.9449 = f32[128256,512]{1,0} broadcast(%constant.13814), dimensions={}
  %mul.9450 = f32[128256,512]{1,0} multiply(%param.880, %mul.9449)
  %add.4840 = f32[128256,512]{1,0} add(%mul.9448, %mul.9450)
  %div.3053 = f32[128256,512]{1,0} broadcast(%sub.358), dimensions={}
  %div.3054 = f32[128256,512]{1,0} divide(%add.4840, %div.3053)
  %sqrt.292 = f32[128256,512]{1,0} sqrt(%div.3054)
  %add.4841 = f32[128256,512]{1,0} broadcast(%constant.5660), dimensions={}
  %add.4842 = f32[128256,512]{1,0} add(%sqrt.292, %add.4841)
  %multiply.3481 = f32[128256,512]{1,0} multiply(%div.3052, %add.4842)
  %div.3055 = f32[128256,512]{1,0} divide(%add.4839, %multiply.3481)
  %mul.9451 = f32[128256,512]{1,0} multiply(%param.4, %broadcast.5211)
  %add.4843 = f32[128256,512]{1,0} add(%div.3055, %mul.9451)
  %mul.9452 = f32[128256,512]{1,0} multiply(%mul.9443, %add.4843)
  %add.4844 = f32[128256,512]{1,0} add(%param.4, %mul.9452)
  %lt.1050 = pred[] compare(%param.2, %constant.13812), direction=LT
  %add.4845 = s32[] add(%param.2, %constant.2871)
  %select_n.3028 = s32[] select(%lt.1050, %add.4845, %constant.13812)
  %reduce.873 = f32[] reduce(%integer_pow.13, %constant.2882), dimensions={0}, to_apply=%region_745.30657
  %reduce.874 = f32[] reduce(%integer_pow.14, %constant.2882), dimensions={0,1}, to_apply=%region_746.30663
  %all-reduce.518 = f32[] all-reduce(%reduce.874), channel_id=969, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_746.30663.clone
  %add.4846 = f32[] add(%reduce.873, %all-reduce.518)
  %reduce.875 = f32[] reduce(%integer_pow.15, %constant.2882), dimensions={0,1}, to_apply=%region_747.30670
  %all-reduce.519 = f32[] all-reduce(%reduce.875), channel_id=970, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_747.30670.clone
  %add.4847 = f32[] add(%add.4846, %all-reduce.519)
  %reduce.876 = f32[] reduce(%integer_pow.16, %constant.2882), dimensions={0,1}, to_apply=%region_748.30677
  %all-reduce.520 = f32[] all-reduce(%reduce.876), channel_id=971, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_748.30677.clone
  %add.4848 = f32[] add(%add.4847, %all-reduce.520)
  %reduce.877 = f32[] reduce(%integer_pow.17, %constant.2882), dimensions={0}, to_apply=%region_749.30684
  %add.4849 = f32[] add(%add.4848, %reduce.877)
  %reduce.878 = f32[] reduce(%integer_pow.18, %constant.2882), dimensions={0}, to_apply=%region_750.30691
  %add.4850 = f32[] add(%add.4849, %reduce.878)
  %reduce.879 = f32[] reduce(%integer_pow.19, %constant.2882), dimensions={0,1,2}, to_apply=%region_751.30698
  %all-reduce.521 = f32[] all-reduce(%reduce.879), channel_id=972, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_751.30698.clone
  %add.4851 = f32[] add(%add.4850, %all-reduce.521)
  %reduce.880 = f32[] reduce(%integer_pow.20, %constant.2882), dimensions={0,1,2}, to_apply=%region_752.30705
  %all-reduce.522 = f32[] all-reduce(%reduce.880), channel_id=973, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_752.30705.clone
  %add.4852 = f32[] add(%add.4851, %all-reduce.522)
  %reduce.881 = f32[] reduce(%integer_pow.21, %constant.2882), dimensions={0,1,2}, to_apply=%region_753.30712
  %all-reduce.523 = f32[] all-reduce(%reduce.881), channel_id=974, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_753.30712.clone
  %add.4854 = f32[] add(%add.4852, %all-reduce.523)
  %reduce.882 = f32[] reduce(%integer_pow.22, %constant.2882), dimensions={0,1,2}, to_apply=%region_754.30719
  %all-reduce.524 = f32[] all-reduce(%reduce.882), channel_id=975, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_754.30719.clone
  %add.4855 = f32[] add(%add.4854, %all-reduce.524)
  %reduce.883 = f32[] reduce(%integer_pow.23, %constant.2882), dimensions={0,1}, to_apply=%region_755.30726
  %all-reduce.525 = f32[] all-reduce(%reduce.883), channel_id=976, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_755.30726.clone
  %add.4856 = f32[] add(%add.4855, %all-reduce.525)
  %reduce.884 = f32[] reduce(%integer_pow.24, %constant.2882), dimensions={0,1}, to_apply=%region_756.30733
  %all-reduce.526 = f32[] all-reduce(%reduce.884), channel_id=977, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_756.30733.clone
  %add.4857 = f32[] add(%add.4856, %all-reduce.526)
  %reduce.885 = f32[] reduce(%integer_pow.25, %constant.2882), dimensions={0,1}, to_apply=%region_757.30740
  %all-reduce.527 = f32[] all-reduce(%reduce.885), channel_id=978, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_757.30740.clone
  %add.4858 = f32[] add(%add.4857, %all-reduce.527)
  %reduce.886 = f32[] reduce(%integer_pow.26, %constant.2882), dimensions={0}, to_apply=%region_758.30747
  %add.4859 = f32[] add(%add.4858, %reduce.886)
  %reduce.887 = f32[] reduce(%integer_pow.27, %constant.2882), dimensions={0}, to_apply=%region_759.30754
  %add.4860 = f32[] add(%add.4859, %reduce.887)
  %reduce.888 = f32[] reduce(%integer_pow.28, %constant.2882), dimensions={0,1,2}, to_apply=%region_760.30761
  %all-reduce.528 = f32[] all-reduce(%reduce.888), channel_id=979, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_760.30761.clone
  %add.4861 = f32[] add(%add.4860, %all-reduce.528)
  %reduce.889 = f32[] reduce(%integer_pow.29, %constant.2882), dimensions={0,1,2}, to_apply=%region_761.30768
  %all-reduce.529 = f32[] all-reduce(%reduce.889), channel_id=980, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_761.30768.clone
  %add.4862 = f32[] add(%add.4861, %all-reduce.529)
  %reduce.890 = f32[] reduce(%integer_pow.30, %constant.2882), dimensions={0,1,2}, to_apply=%region_762.30775
  %all-reduce.530 = f32[] all-reduce(%reduce.890), channel_id=981, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_762.30775.clone
  %add.4863 = f32[] add(%add.4862, %all-reduce.530)
  %reduce.891 = f32[] reduce(%integer_pow.31, %constant.2882), dimensions={0,1,2}, to_apply=%region_763.30782
  %all-reduce.531 = f32[] all-reduce(%reduce.891), channel_id=982, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_763.30782.clone
  %add.4864 = f32[] add(%add.4863, %all-reduce.531)
  %reduce.892 = f32[] reduce(%integer_pow.32, %constant.2882), dimensions={0,1}, to_apply=%region_764.30789
  %all-reduce.532 = f32[] all-reduce(%reduce.892), channel_id=983, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_764.30789.clone
  %add.4865 = f32[] add(%add.4864, %all-reduce.532)
  %reduce.893 = f32[] reduce(%integer_pow.33, %constant.2882), dimensions={0,1}, to_apply=%region_765.30796
  %all-reduce.533 = f32[] all-reduce(%reduce.893), channel_id=984, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_765.30796.clone
  %add.4866 = f32[] add(%add.4865, %all-reduce.533)
  %reduce.894 = f32[] reduce(%integer_pow.34, %constant.2882), dimensions={0,1}, to_apply=%region_766.30803
  %all-reduce.534 = f32[] all-reduce(%reduce.894), channel_id=985, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_766.30803.clone
  %add.4867 = f32[] add(%add.4866, %all-reduce.534)
  %reduce.895 = f32[] reduce(%integer_pow.35, %constant.2882), dimensions={0}, to_apply=%region_767.30810
  %add.4868 = f32[] add(%add.4867, %reduce.895)
  %reduce.896 = f32[] reduce(%integer_pow.36, %constant.2882), dimensions={0}, to_apply=%region_768.30817
  %add.4869 = f32[] add(%add.4868, %reduce.896)
  %reduce.897 = f32[] reduce(%integer_pow.37, %constant.2882), dimensions={0,1,2}, to_apply=%region_769.30824
  %all-reduce.535 = f32[] all-reduce(%reduce.897), channel_id=986, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_769.30824.clone
  %add.4870 = f32[] add(%add.4869, %all-reduce.535)
  %reduce.898 = f32[] reduce(%integer_pow.38, %constant.2882), dimensions={0,1,2}, to_apply=%region_770.30831
  %all-reduce.536 = f32[] all-reduce(%reduce.898), channel_id=987, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_770.30831.clone
  %add.4871 = f32[] add(%add.4870, %all-reduce.536)
  %reduce.899 = f32[] reduce(%integer_pow.39, %constant.2882), dimensions={0,1,2}, to_apply=%region_771.30838
  %all-reduce.537 = f32[] all-reduce(%reduce.899), channel_id=988, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_771.30838.clone
  %add.4872 = f32[] add(%add.4871, %all-reduce.537)
  %reduce.900 = f32[] reduce(%integer_pow.40, %constant.2882), dimensions={0,1,2}, to_apply=%region_772.30845
  %all-reduce.538 = f32[] all-reduce(%reduce.900), channel_id=989, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_772.30845.clone
  %add.4873 = f32[] add(%add.4872, %all-reduce.538)
  %reduce.901 = f32[] reduce(%integer_pow.41, %constant.2882), dimensions={0,1}, to_apply=%region_773.30852
  %all-reduce.539 = f32[] all-reduce(%reduce.901), channel_id=990, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_773.30852.clone
  %add.4874 = f32[] add(%add.4873, %all-reduce.539)
  %reduce.902 = f32[] reduce(%integer_pow.42, %constant.2882), dimensions={0,1}, to_apply=%region_774.30859
  %all-reduce.540 = f32[] all-reduce(%reduce.902), channel_id=991, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_774.30859.clone
  %add.4875 = f32[] add(%add.4874, %all-reduce.540)
  %reduce.903 = f32[] reduce(%integer_pow.43, %constant.2882), dimensions={0,1}, to_apply=%region_775.30866
  %all-reduce.541 = f32[] all-reduce(%reduce.903), channel_id=992, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_775.30866.clone
  %add.4876 = f32[] add(%add.4875, %all-reduce.541)
  %reduce.904 = f32[] reduce(%integer_pow.44, %constant.2882), dimensions={0}, to_apply=%region_776.30873
  %add.4877 = f32[] add(%add.4876, %reduce.904)
  %reduce.905 = f32[] reduce(%integer_pow.45, %constant.2882), dimensions={0}, to_apply=%region_777.30880
  %add.4878 = f32[] add(%add.4877, %reduce.905)
  %reduce.906 = f32[] reduce(%integer_pow.46, %constant.2882), dimensions={0,1,2}, to_apply=%region_778.30887
  %all-reduce.542 = f32[] all-reduce(%reduce.906), channel_id=993, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_778.30887.clone
  %add.4879 = f32[] add(%add.4878, %all-reduce.542)
  %reduce.907 = f32[] reduce(%integer_pow.47, %constant.2882), dimensions={0,1,2}, to_apply=%region_779.30894
  %all-reduce.543 = f32[] all-reduce(%reduce.907), channel_id=994, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_779.30894.clone
  %add.4880 = f32[] add(%add.4879, %all-reduce.543)
  %reduce.908 = f32[] reduce(%integer_pow.48, %constant.2882), dimensions={0,1,2}, to_apply=%region_780.30901
  %all-reduce.544 = f32[] all-reduce(%reduce.908), channel_id=995, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_780.30901.clone
  %add.4881 = f32[] add(%add.4880, %all-reduce.544)
  %reduce.909 = f32[] reduce(%integer_pow.49, %constant.2882), dimensions={0,1,2}, to_apply=%region_781.30908
  %all-reduce.545 = f32[] all-reduce(%reduce.909), channel_id=996, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_781.30908.clone
  %add.4882 = f32[] add(%add.4881, %all-reduce.545)
  %reduce.910 = f32[] reduce(%integer_pow.50, %constant.2882), dimensions={0,1}, to_apply=%region_782.30915
  %all-reduce.546 = f32[] all-reduce(%reduce.910), channel_id=997, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_782.30915.clone
  %add.4884 = f32[] add(%add.4882, %all-reduce.546)
  %reduce.911 = f32[] reduce(%integer_pow.51, %constant.2882), dimensions={0,1}, to_apply=%region_783.30922
  %all-reduce.547 = f32[] all-reduce(%reduce.911), channel_id=998, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_783.30922.clone
  %add.4885 = f32[] add(%add.4884, %all-reduce.547)
  %reduce.912 = f32[] reduce(%integer_pow.52, %constant.2882), dimensions={0,1}, to_apply=%region_784.30929
  %all-reduce.548 = f32[] all-reduce(%reduce.912), channel_id=999, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_784.30929.clone
  %add.4886 = f32[] add(%add.4885, %all-reduce.548)
  %reduce.913 = f32[] reduce(%integer_pow.53, %constant.2882), dimensions={0}, to_apply=%region_785.30936
  %add.4887 = f32[] add(%add.4886, %reduce.913)
  %reduce.914 = f32[] reduce(%integer_pow.54, %constant.2882), dimensions={0}, to_apply=%region_786.30943
  %add.4888 = f32[] add(%add.4887, %reduce.914)
  %reduce.915 = f32[] reduce(%integer_pow.55, %constant.2882), dimensions={0,1,2}, to_apply=%region_787.30950
  %all-reduce.549 = f32[] all-reduce(%reduce.915), channel_id=1000, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_787.30950.clone
  %add.4889 = f32[] add(%add.4888, %all-reduce.549)
  %reduce.916 = f32[] reduce(%integer_pow.56, %constant.2882), dimensions={0,1,2}, to_apply=%region_788.30957
  %all-reduce.550 = f32[] all-reduce(%reduce.916), channel_id=1001, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_788.30957.clone
  %add.4890 = f32[] add(%add.4889, %all-reduce.550)
  %reduce.917 = f32[] reduce(%integer_pow.57, %constant.2882), dimensions={0,1,2}, to_apply=%region_789.30964
  %all-reduce.551 = f32[] all-reduce(%reduce.917), channel_id=1002, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_789.30964.clone
  %add.4892 = f32[] add(%add.4890, %all-reduce.551)
  %reduce.918 = f32[] reduce(%integer_pow.58, %constant.2882), dimensions={0,1,2}, to_apply=%region_790.30971
  %all-reduce.552 = f32[] all-reduce(%reduce.918), channel_id=1003, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_790.30971.clone
  %add.4893 = f32[] add(%add.4892, %all-reduce.552)
  %reduce.919 = f32[] reduce(%integer_pow.59, %constant.2882), dimensions={0,1}, to_apply=%region_791.30978
  %all-reduce.553 = f32[] all-reduce(%reduce.919), channel_id=1004, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_791.30978.clone
  %add.4894 = f32[] add(%add.4893, %all-reduce.553)
  %reduce.920 = f32[] reduce(%integer_pow.60, %constant.2882), dimensions={0,1}, to_apply=%region_792.30985
  %all-reduce.554 = f32[] all-reduce(%reduce.920), channel_id=1005, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_792.30985.clone
  %add.4895 = f32[] add(%add.4894, %all-reduce.554)
  %reduce.921 = f32[] reduce(%integer_pow.61, %constant.2882), dimensions={0,1}, to_apply=%region_793.30992
  %all-reduce.555 = f32[] all-reduce(%reduce.921), channel_id=1006, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_793.30992.clone
  %add.4896 = f32[] add(%add.4895, %all-reduce.555)
  %reduce.922 = f32[] reduce(%integer_pow.62, %constant.2882), dimensions={0}, to_apply=%region_794.30999
  %add.4897 = f32[] add(%add.4896, %reduce.922)
  %reduce.923 = f32[] reduce(%integer_pow.63, %constant.2882), dimensions={0}, to_apply=%region_795.31006
  %add.4898 = f32[] add(%add.4897, %reduce.923)
  %reduce.924 = f32[] reduce(%integer_pow.64, %constant.2882), dimensions={0,1,2}, to_apply=%region_796.31013
  %all-reduce.556 = f32[] all-reduce(%reduce.924), channel_id=1007, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_796.31013.clone
  %add.4899 = f32[] add(%add.4898, %all-reduce.556)
  %reduce.925 = f32[] reduce(%integer_pow.65, %constant.2882), dimensions={0,1,2}, to_apply=%region_797.31020
  %all-reduce.557 = f32[] all-reduce(%reduce.925), channel_id=1008, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_797.31020.clone
  %add.4900 = f32[] add(%add.4899, %all-reduce.557)
  %reduce.926 = f32[] reduce(%integer_pow.66, %constant.2882), dimensions={0,1,2}, to_apply=%region_798.31027
  %all-reduce.558 = f32[] all-reduce(%reduce.926), channel_id=1009, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_798.31027.clone
  %add.4901 = f32[] add(%add.4900, %all-reduce.558)
  %reduce.927 = f32[] reduce(%integer_pow.67, %constant.2882), dimensions={0,1,2}, to_apply=%region_799.31034
  %all-reduce.559 = f32[] all-reduce(%reduce.927), channel_id=1010, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_799.31034.clone
  %add.4902 = f32[] add(%add.4901, %all-reduce.559)
  %reduce.928 = f32[] reduce(%integer_pow.68, %constant.2882), dimensions={0,1}, to_apply=%region_800.31041
  %all-reduce.560 = f32[] all-reduce(%reduce.928), channel_id=1011, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_800.31041.clone
  %add.4903 = f32[] add(%add.4902, %all-reduce.560)
  %reduce.929 = f32[] reduce(%integer_pow.69, %constant.2882), dimensions={0,1}, to_apply=%region_801.31048
  %all-reduce.561 = f32[] all-reduce(%reduce.929), channel_id=1012, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_801.31048.clone
  %add.4904 = f32[] add(%add.4903, %all-reduce.561)
  %reduce.930 = f32[] reduce(%integer_pow.70, %constant.2882), dimensions={0,1}, to_apply=%region_802.31055
  %all-reduce.562 = f32[] all-reduce(%reduce.930), channel_id=1013, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_802.31055.clone
  %add.4905 = f32[] add(%add.4904, %all-reduce.562)
  %reduce.931 = f32[] reduce(%integer_pow.71, %constant.2882), dimensions={0}, to_apply=%region_803.31062
  %add.4906 = f32[] add(%add.4905, %reduce.931)
  %reduce.932 = f32[] reduce(%integer_pow.72, %constant.2882), dimensions={0}, to_apply=%region_804.31069
  %add.4907 = f32[] add(%add.4906, %reduce.932)
  %reduce.933 = f32[] reduce(%integer_pow.73, %constant.2882), dimensions={0,1,2}, to_apply=%region_805.31076
  %all-reduce.563 = f32[] all-reduce(%reduce.933), channel_id=1014, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_805.31076.clone
  %add.4908 = f32[] add(%add.4907, %all-reduce.563)
  %reduce.934 = f32[] reduce(%integer_pow.74, %constant.2882), dimensions={0,1,2}, to_apply=%region_806.31083
  %all-reduce.564 = f32[] all-reduce(%reduce.934), channel_id=1015, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_806.31083.clone
  %add.4909 = f32[] add(%add.4908, %all-reduce.564)
  %reduce.935 = f32[] reduce(%integer_pow.75, %constant.2882), dimensions={0,1,2}, to_apply=%region_807.31090
  %all-reduce.565 = f32[] all-reduce(%reduce.935), channel_id=1016, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_807.31090.clone
  %add.4910 = f32[] add(%add.4909, %all-reduce.565)
  %reduce.936 = f32[] reduce(%integer_pow.76, %constant.2882), dimensions={0,1,2}, to_apply=%region_808.31097
  %all-reduce.566 = f32[] all-reduce(%reduce.936), channel_id=1017, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_808.31097.clone
  %add.4911 = f32[] add(%add.4910, %all-reduce.566)
  %reduce.937 = f32[] reduce(%integer_pow.77, %constant.2882), dimensions={0,1}, to_apply=%region_809.31104
  %all-reduce.567 = f32[] all-reduce(%reduce.937), channel_id=1018, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_809.31104.clone
  %add.4912 = f32[] add(%add.4911, %all-reduce.567)
  %reduce.938 = f32[] reduce(%integer_pow.78, %constant.2882), dimensions={0,1}, to_apply=%region_810.31111
  %all-reduce.568 = f32[] all-reduce(%reduce.938), channel_id=1019, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_810.31111.clone
  %add.4913 = f32[] add(%add.4912, %all-reduce.568)
  %reduce.939 = f32[] reduce(%integer_pow.79, %constant.2882), dimensions={0,1}, to_apply=%region_811.31118
  %all-reduce.569 = f32[] all-reduce(%reduce.939), channel_id=1020, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_811.31118.clone
  %add.4914 = f32[] add(%add.4913, %all-reduce.569)
  %reduce.940 = f32[] reduce(%integer_pow.80, %constant.2882), dimensions={0}, to_apply=%region_812.31125
  %add.4915 = f32[] add(%add.4914, %reduce.940)
  %reduce.941 = f32[] reduce(%integer_pow.81, %constant.2882), dimensions={0}, to_apply=%region_813.31132
  %add.4916 = f32[] add(%add.4915, %reduce.941)
  %reduce.942 = f32[] reduce(%integer_pow.82, %constant.2882), dimensions={0,1,2}, to_apply=%region_814.31139
  %all-reduce.570 = f32[] all-reduce(%reduce.942), channel_id=1021, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_814.31139.clone
  %add.4918 = f32[] add(%add.4916, %all-reduce.570)
  %reduce.943 = f32[] reduce(%integer_pow.83, %constant.2882), dimensions={0,1,2}, to_apply=%region_815.31146
  %all-reduce.571 = f32[] all-reduce(%reduce.943), channel_id=1022, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_815.31146.clone
  %add.4919 = f32[] add(%add.4918, %all-reduce.571)
  %reduce.944 = f32[] reduce(%integer_pow.84, %constant.2882), dimensions={0,1,2}, to_apply=%region_816.31153
  %all-reduce.572 = f32[] all-reduce(%reduce.944), channel_id=1023, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_816.31153.clone
  %add.4920 = f32[] add(%add.4919, %all-reduce.572)
  %reduce.945 = f32[] reduce(%integer_pow.85, %constant.2882), dimensions={0,1,2}, to_apply=%region_817.31160
  %all-reduce.573 = f32[] all-reduce(%reduce.945), channel_id=1024, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_817.31160.clone
  %add.4921 = f32[] add(%add.4920, %all-reduce.573)
  %reduce.946 = f32[] reduce(%integer_pow.86, %constant.2882), dimensions={0,1}, to_apply=%region_818.31167
  %all-reduce.574 = f32[] all-reduce(%reduce.946), channel_id=1025, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_818.31167.clone
  %add.4922 = f32[] add(%add.4921, %all-reduce.574)
  %reduce.947 = f32[] reduce(%integer_pow.87, %constant.2882), dimensions={0,1}, to_apply=%region_819.31174
  %all-reduce.575 = f32[] all-reduce(%reduce.947), channel_id=1026, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_819.31174.clone
  %add.4923 = f32[] add(%add.4922, %all-reduce.575)
  %reduce.948 = f32[] reduce(%integer_pow.88, %constant.2882), dimensions={0,1}, to_apply=%region_820.31181
  %all-reduce.576 = f32[] all-reduce(%reduce.948), channel_id=1027, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_820.31181.clone
  %add.4924 = f32[] add(%add.4923, %all-reduce.576)
  %reduce.949 = f32[] reduce(%integer_pow.89, %constant.2882), dimensions={0}, to_apply=%region_821.31188
  %add.4925 = f32[] add(%add.4924, %reduce.949)
  %reduce.950 = f32[] reduce(%integer_pow.90, %constant.2882), dimensions={0}, to_apply=%region_822.31195
  %add.4926 = f32[] add(%add.4925, %reduce.950)
  %reduce.951 = f32[] reduce(%integer_pow.91, %constant.2882), dimensions={0,1,2}, to_apply=%region_823.31202
  %all-reduce.577 = f32[] all-reduce(%reduce.951), channel_id=1028, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_823.31202.clone
  %add.4927 = f32[] add(%add.4926, %all-reduce.577)
  %reduce.952 = f32[] reduce(%integer_pow.92, %constant.2882), dimensions={0,1,2}, to_apply=%region_824.31209
  %all-reduce.578 = f32[] all-reduce(%reduce.952), channel_id=1029, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_824.31209.clone
  %add.4928 = f32[] add(%add.4927, %all-reduce.578)
  %reduce.953 = f32[] reduce(%integer_pow.93, %constant.2882), dimensions={0,1,2}, to_apply=%region_825.31216
  %all-reduce.579 = f32[] all-reduce(%reduce.953), channel_id=1030, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_825.31216.clone
  %add.4930 = f32[] add(%add.4928, %all-reduce.579)
  %reduce.954 = f32[] reduce(%integer_pow.94, %constant.2882), dimensions={0,1,2}, to_apply=%region_826.31223
  %all-reduce.580 = f32[] all-reduce(%reduce.954), channel_id=1031, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_826.31223.clone
  %add.4931 = f32[] add(%add.4930, %all-reduce.580)
  %reduce.955 = f32[] reduce(%integer_pow.95, %constant.2882), dimensions={0,1}, to_apply=%region_827.31230
  %all-reduce.581 = f32[] all-reduce(%reduce.955), channel_id=1032, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_827.31230.clone
  %add.4932 = f32[] add(%add.4931, %all-reduce.581)
  %reduce.956 = f32[] reduce(%integer_pow.96, %constant.2882), dimensions={0,1}, to_apply=%region_828.31237
  %all-reduce.582 = f32[] all-reduce(%reduce.956), channel_id=1033, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_828.31237.clone
  %add.4933 = f32[] add(%add.4932, %all-reduce.582)
  %reduce.957 = f32[] reduce(%integer_pow.97, %constant.2882), dimensions={0,1}, to_apply=%region_829.31244
  %all-reduce.583 = f32[] all-reduce(%reduce.957), channel_id=1034, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_829.31244.clone
  %add.4934 = f32[] add(%add.4933, %all-reduce.583)
  %reduce.958 = f32[] reduce(%integer_pow.98, %constant.2882), dimensions={0}, to_apply=%region_830.31251
  %add.4935 = f32[] add(%add.4934, %reduce.958)
  %reduce.959 = f32[] reduce(%integer_pow.99, %constant.2882), dimensions={0}, to_apply=%region_831.31258
  %add.4936 = f32[] add(%add.4935, %reduce.959)
  %reduce.960 = f32[] reduce(%integer_pow.100, %constant.2882), dimensions={0,1,2}, to_apply=%region_832.31265
  %all-reduce.584 = f32[] all-reduce(%reduce.960), channel_id=1035, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_832.31265.clone
  %add.4937 = f32[] add(%add.4936, %all-reduce.584)
  %reduce.961 = f32[] reduce(%integer_pow.101, %constant.2882), dimensions={0,1,2}, to_apply=%region_833.31272
  %all-reduce.585 = f32[] all-reduce(%reduce.961), channel_id=1036, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_833.31272.clone
  %add.4938 = f32[] add(%add.4937, %all-reduce.585)
  %reduce.962 = f32[] reduce(%integer_pow.102, %constant.2882), dimensions={0,1,2}, to_apply=%region_834.31279
  %all-reduce.586 = f32[] all-reduce(%reduce.962), channel_id=1037, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_834.31279.clone
  %add.4939 = f32[] add(%add.4938, %all-reduce.586)
  %reduce.963 = f32[] reduce(%integer_pow.103, %constant.2882), dimensions={0,1,2}, to_apply=%region_835.31286
  %all-reduce.587 = f32[] all-reduce(%reduce.963), channel_id=1038, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_835.31286.clone
  %add.4940 = f32[] add(%add.4939, %all-reduce.587)
  %reduce.964 = f32[] reduce(%integer_pow.104, %constant.2882), dimensions={0,1}, to_apply=%region_836.31293
  %all-reduce.588 = f32[] all-reduce(%reduce.964), channel_id=1039, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_836.31293.clone
  %add.4941 = f32[] add(%add.4940, %all-reduce.588)
  %reduce.965 = f32[] reduce(%integer_pow.105, %constant.2882), dimensions={0,1}, to_apply=%region_837.31300
  %all-reduce.589 = f32[] all-reduce(%reduce.965), channel_id=1040, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_837.31300.clone
  %add.4942 = f32[] add(%add.4941, %all-reduce.589)
  %reduce.966 = f32[] reduce(%integer_pow.106, %constant.2882), dimensions={0,1}, to_apply=%region_838.31307
  %all-reduce.590 = f32[] all-reduce(%reduce.966), channel_id=1041, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_838.31307.clone
  %add.4943 = f32[] add(%add.4942, %all-reduce.590)
  %reduce.967 = f32[] reduce(%integer_pow.107, %constant.2882), dimensions={0}, to_apply=%region_839.31314
  %add.4944 = f32[] add(%add.4943, %reduce.967)
  %reduce.968 = f32[] reduce(%integer_pow.108, %constant.2882), dimensions={0}, to_apply=%region_840.31321
  %add.4945 = f32[] add(%add.4944, %reduce.968)
  %reduce.969 = f32[] reduce(%integer_pow.109, %constant.2882), dimensions={0,1,2}, to_apply=%region_841.31328
  %all-reduce.591 = f32[] all-reduce(%reduce.969), channel_id=1042, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_841.31328.clone
  %add.4946 = f32[] add(%add.4945, %all-reduce.591)
  %reduce.970 = f32[] reduce(%integer_pow.110, %constant.2882), dimensions={0,1,2}, to_apply=%region_842.31335
  %all-reduce.592 = f32[] all-reduce(%reduce.970), channel_id=1043, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_842.31335.clone
  %add.4948 = f32[] add(%add.4946, %all-reduce.592)
  %reduce.971 = f32[] reduce(%integer_pow.111, %constant.2882), dimensions={0,1,2}, to_apply=%region_843.31342
  %all-reduce.593 = f32[] all-reduce(%reduce.971), channel_id=1044, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_843.31342.clone
  %add.4949 = f32[] add(%add.4948, %all-reduce.593)
  %reduce.972 = f32[] reduce(%integer_pow.112, %constant.2882), dimensions={0,1,2}, to_apply=%region_844.31349
  %all-reduce.594 = f32[] all-reduce(%reduce.972), channel_id=1045, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_844.31349.clone
  %add.4950 = f32[] add(%add.4949, %all-reduce.594)
  %reduce.973 = f32[] reduce(%integer_pow.113, %constant.2882), dimensions={0,1}, to_apply=%region_845.31356
  %all-reduce.595 = f32[] all-reduce(%reduce.973), channel_id=1046, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_845.31356.clone
  %add.4951 = f32[] add(%add.4950, %all-reduce.595)
  %reduce.974 = f32[] reduce(%integer_pow.114, %constant.2882), dimensions={0,1}, to_apply=%region_846.31363
  %all-reduce.596 = f32[] all-reduce(%reduce.974), channel_id=1047, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_846.31363.clone
  %add.4952 = f32[] add(%add.4951, %all-reduce.596)
  %reduce.975 = f32[] reduce(%integer_pow.115, %constant.2882), dimensions={0,1}, to_apply=%region_847.31370
  %all-reduce.597 = f32[] all-reduce(%reduce.975), channel_id=1048, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_847.31370.clone
  %add.4953 = f32[] add(%add.4952, %all-reduce.597)
  %reduce.976 = f32[] reduce(%integer_pow.116, %constant.2882), dimensions={0}, to_apply=%region_848.31377
  %add.4954 = f32[] add(%add.4953, %reduce.976)
  %reduce.977 = f32[] reduce(%integer_pow.117, %constant.2882), dimensions={0}, to_apply=%region_849.31384
  %add.4955 = f32[] add(%add.4954, %reduce.977)
  %reduce.978 = f32[] reduce(%integer_pow.118, %constant.2882), dimensions={0,1,2}, to_apply=%region_850.31391
  %all-reduce.598 = f32[] all-reduce(%reduce.978), channel_id=1049, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_850.31391.clone
  %add.4956 = f32[] add(%add.4955, %all-reduce.598)
  %reduce.979 = f32[] reduce(%integer_pow.119, %constant.2882), dimensions={0,1,2}, to_apply=%region_851.31398
  %all-reduce.599 = f32[] all-reduce(%reduce.979), channel_id=1050, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_851.31398.clone
  %add.4957 = f32[] add(%add.4956, %all-reduce.599)
  %reduce.980 = f32[] reduce(%integer_pow.120, %constant.2882), dimensions={0,1,2}, to_apply=%region_852.31405
  %all-reduce.600 = f32[] all-reduce(%reduce.980), channel_id=1051, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_852.31405.clone
  %add.4958 = f32[] add(%add.4957, %all-reduce.600)
  %reduce.981 = f32[] reduce(%integer_pow.121, %constant.2882), dimensions={0,1,2}, to_apply=%region_853.31412
  %all-reduce.601 = f32[] all-reduce(%reduce.981), channel_id=1052, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_853.31412.clone
  %add.4959 = f32[] add(%add.4958, %all-reduce.601)
  %reduce.982 = f32[] reduce(%integer_pow.122, %constant.2882), dimensions={0,1}, to_apply=%region_854.31419
  %all-reduce.602 = f32[] all-reduce(%reduce.982), channel_id=1053, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_854.31419.clone
  %add.4960 = f32[] add(%add.4959, %all-reduce.602)
  %reduce.983 = f32[] reduce(%integer_pow.123, %constant.2882), dimensions={0,1}, to_apply=%region_855.31426
  %all-reduce.603 = f32[] all-reduce(%reduce.983), channel_id=1054, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_855.31426.clone
  %add.4961 = f32[] add(%add.4960, %all-reduce.603)
  %reduce.984 = f32[] reduce(%integer_pow.124, %constant.2882), dimensions={0,1}, to_apply=%region_856.31433
  %all-reduce.604 = f32[] all-reduce(%reduce.984), channel_id=1055, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_856.31433.clone
  %add.4962 = f32[] add(%add.4961, %all-reduce.604)
  %reduce.985 = f32[] reduce(%integer_pow.125, %constant.2882), dimensions={0}, to_apply=%region_857.31440
  %add.4963 = f32[] add(%add.4962, %reduce.985)
  %reduce.986 = f32[] reduce(%integer_pow.126, %constant.2882), dimensions={0}, to_apply=%region_858.31447
  %add.4964 = f32[] add(%add.4963, %reduce.986)
  %reduce.987 = f32[] reduce(%integer_pow.127, %constant.2882), dimensions={0,1,2}, to_apply=%region_859.31454
  %all-reduce.605 = f32[] all-reduce(%reduce.987), channel_id=1056, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_859.31454.clone
  %add.4965 = f32[] add(%add.4964, %all-reduce.605)
  %reduce.988 = f32[] reduce(%integer_pow.128, %constant.2882), dimensions={0,1,2}, to_apply=%region_860.31461
  %all-reduce.606 = f32[] all-reduce(%reduce.988), channel_id=1057, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_860.31461.clone
  %add.4966 = f32[] add(%add.4965, %all-reduce.606)
  %reduce.989 = f32[] reduce(%integer_pow.129, %constant.2882), dimensions={0,1,2}, to_apply=%region_861.31468
  %all-reduce.607 = f32[] all-reduce(%reduce.989), channel_id=1058, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_861.31468.clone
  %add.4967 = f32[] add(%add.4966, %all-reduce.607)
  %reduce.990 = f32[] reduce(%integer_pow.130, %constant.2882), dimensions={0,1,2}, to_apply=%region_862.31475
  %all-reduce.608 = f32[] all-reduce(%reduce.990), channel_id=1059, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_862.31475.clone
  %add.4968 = f32[] add(%add.4967, %all-reduce.608)
  %reduce.991 = f32[] reduce(%integer_pow.131, %constant.2882), dimensions={0,1}, to_apply=%region_863.31482
  %all-reduce.609 = f32[] all-reduce(%reduce.991), channel_id=1060, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_863.31482.clone
  %add.4969 = f32[] add(%add.4968, %all-reduce.609)
  %reduce.992 = f32[] reduce(%integer_pow.132, %constant.2882), dimensions={0,1}, to_apply=%region_864.31489
  %all-reduce.610 = f32[] all-reduce(%reduce.992), channel_id=1061, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_864.31489.clone
  %add.4970 = f32[] add(%add.4969, %all-reduce.610)
  %reduce.993 = f32[] reduce(%integer_pow.133, %constant.2882), dimensions={0,1}, to_apply=%region_865.31496
  %all-reduce.611 = f32[] all-reduce(%reduce.993), channel_id=1062, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_865.31496.clone
  %add.4971 = f32[] add(%add.4970, %all-reduce.611)
  %reduce.994 = f32[] reduce(%integer_pow.134, %constant.2882), dimensions={0}, to_apply=%region_866.31503
  %add.4972 = f32[] add(%add.4971, %reduce.994)
  %reduce.995 = f32[] reduce(%integer_pow.135, %constant.2882), dimensions={0}, to_apply=%region_867.31510
  %add.4973 = f32[] add(%add.4972, %reduce.995)
  %reduce.996 = f32[] reduce(%integer_pow.136, %constant.2882), dimensions={0,1,2}, to_apply=%region_868.31517
  %all-reduce.612 = f32[] all-reduce(%reduce.996), channel_id=1063, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_868.31517.clone
  %add.4974 = f32[] add(%add.4973, %all-reduce.612)
  %reduce.997 = f32[] reduce(%integer_pow.137, %constant.2882), dimensions={0,1,2}, to_apply=%region_869.31524
  %all-reduce.613 = f32[] all-reduce(%reduce.997), channel_id=1064, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_869.31524.clone
  %add.4975 = f32[] add(%add.4974, %all-reduce.613)
  %reduce.998 = f32[] reduce(%integer_pow.138, %constant.2882), dimensions={0,1,2}, to_apply=%region_870.31531
  %all-reduce.614 = f32[] all-reduce(%reduce.998), channel_id=1065, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_870.31531.clone
  %add.4976 = f32[] add(%add.4975, %all-reduce.614)
  %reduce.999 = f32[] reduce(%integer_pow.139, %constant.2882), dimensions={0,1,2}, to_apply=%region_871.31538
  %all-reduce.615 = f32[] all-reduce(%reduce.999), channel_id=1066, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_871.31538.clone
  %add.4977 = f32[] add(%add.4976, %all-reduce.615)
  %reduce.1000 = f32[] reduce(%integer_pow.140, %constant.2882), dimensions={0,1}, to_apply=%region_872.31545
  %all-reduce.616 = f32[] all-reduce(%reduce.1000), channel_id=1067, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_872.31545.clone
  %add.4978 = f32[] add(%add.4977, %all-reduce.616)
  %reduce.1001 = f32[] reduce(%integer_pow.141, %constant.2882), dimensions={0,1}, to_apply=%region_873.31552
  %all-reduce.617 = f32[] all-reduce(%reduce.1001), channel_id=1068, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_873.31552.clone
  %add.4979 = f32[] add(%add.4978, %all-reduce.617)
  %reduce.1002 = f32[] reduce(%integer_pow.142, %constant.2882), dimensions={0,1}, to_apply=%region_874.31559
  %all-reduce.618 = f32[] all-reduce(%reduce.1002), channel_id=1069, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_874.31559.clone
  %add.4980 = f32[] add(%add.4979, %all-reduce.618)
  %reduce.1003 = f32[] reduce(%integer_pow.143, %constant.2882), dimensions={0}, to_apply=%region_875.31566
  %add.4981 = f32[] add(%add.4980, %reduce.1003)
  %reduce.1004 = f32[] reduce(%integer_pow.144, %constant.2882), dimensions={0}, to_apply=%region_876.31573
  %add.4982 = f32[] add(%add.4981, %reduce.1004)
  %reduce.1005 = f32[] reduce(%integer_pow.145, %constant.2882), dimensions={0,1,2}, to_apply=%region_877.31580
  %all-reduce.619 = f32[] all-reduce(%reduce.1005), channel_id=1070, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_877.31580.clone
  %add.4983 = f32[] add(%add.4982, %all-reduce.619)
  %reduce.1006 = f32[] reduce(%integer_pow.146, %constant.2882), dimensions={0,1,2}, to_apply=%region_878.31587
  %all-reduce.620 = f32[] all-reduce(%reduce.1006), channel_id=1071, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_878.31587.clone
  %add.4984 = f32[] add(%add.4983, %all-reduce.620)
  %reduce.1007 = f32[] reduce(%integer_pow.147, %constant.2882), dimensions={0,1,2}, to_apply=%region_879.31594
  %all-reduce.621 = f32[] all-reduce(%reduce.1007), channel_id=1072, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_879.31594.clone
  %add.4985 = f32[] add(%add.4984, %all-reduce.621)
  %reduce.1008 = f32[] reduce(%integer_pow.148, %constant.2882), dimensions={0,1,2}, to_apply=%region_880.31601
  %all-reduce.622 = f32[] all-reduce(%reduce.1008), channel_id=1073, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_880.31601.clone
  %add.4986 = f32[] add(%add.4985, %all-reduce.622)
  %reduce.1009 = f32[] reduce(%integer_pow.149, %constant.2882), dimensions={0,1}, to_apply=%region_881.31608
  %all-reduce.623 = f32[] all-reduce(%reduce.1009), channel_id=1074, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_881.31608.clone
  %add.4988 = f32[] add(%add.4986, %all-reduce.623)
  %reduce.1010 = f32[] reduce(%integer_pow.150, %constant.2882), dimensions={0,1}, to_apply=%region_882.31615
  %all-reduce.624 = f32[] all-reduce(%reduce.1010), channel_id=1075, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_882.31615.clone
  %add.4989 = f32[] add(%add.4988, %all-reduce.624)
  %reduce.1011 = f32[] reduce(%integer_pow.151, %constant.2882), dimensions={0,1}, to_apply=%region_883.31622
  %all-reduce.625 = f32[] all-reduce(%reduce.1011), channel_id=1076, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_883.31622.clone
  %add.4990 = f32[] add(%add.4989, %all-reduce.625)
  %reduce.1012 = f32[] reduce(%integer_pow.152, %constant.2882), dimensions={0}, to_apply=%region_884.31629
  %add.4991 = f32[] add(%add.4990, %reduce.1012)
  %reduce.1013 = f32[] reduce(%integer_pow.153, %constant.2882), dimensions={0}, to_apply=%region_885.31636
  %add.4992 = f32[] add(%add.4991, %reduce.1013)
  %reduce.1014 = f32[] reduce(%integer_pow.154, %constant.2882), dimensions={0,1,2}, to_apply=%region_886.31643
  %all-reduce.626 = f32[] all-reduce(%reduce.1014), channel_id=1077, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_886.31643.clone
  %add.4993 = f32[] add(%add.4992, %all-reduce.626)
  %reduce.1015 = f32[] reduce(%integer_pow.155, %constant.2882), dimensions={0,1,2}, to_apply=%region_887.31650
  %all-reduce.627 = f32[] all-reduce(%reduce.1015), channel_id=1078, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_887.31650.clone
  %add.4994 = f32[] add(%add.4993, %all-reduce.627)
  %reduce.1016 = f32[] reduce(%integer_pow.156, %constant.2882), dimensions={0,1,2}, to_apply=%region_888.31657
  %all-reduce.628 = f32[] all-reduce(%reduce.1016), channel_id=1079, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_888.31657.clone
  %add.4995 = f32[] add(%add.4994, %all-reduce.628)
  %reduce.1017 = f32[] reduce(%integer_pow.157, %constant.2882), dimensions={0,1,2}, to_apply=%region_889.31664
  %all-reduce.629 = f32[] all-reduce(%reduce.1017), channel_id=1080, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_889.31664.clone
  %add.4998 = f32[] add(%add.4995, %all-reduce.629)
  %reduce.1018 = f32[] reduce(%integer_pow.158, %constant.2882), dimensions={0,1}, to_apply=%region_890.31671
  %all-reduce.630 = f32[] all-reduce(%reduce.1018), channel_id=1081, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_890.31671.clone
  %add.4999 = f32[] add(%add.4998, %all-reduce.630)
  %reduce.1019 = f32[] reduce(%integer_pow.159, %constant.2882), dimensions={0,1}, to_apply=%region_891.31678
  %all-reduce.631 = f32[] all-reduce(%reduce.1019), channel_id=1082, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_891.31678.clone
  %add.5000 = f32[] add(%add.4999, %all-reduce.631)
  %reduce.1020 = f32[] reduce(%integer_pow.160, %constant.2882), dimensions={0,1}, to_apply=%region_892.31685
  %all-reduce.632 = f32[] all-reduce(%reduce.1020), channel_id=1083, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_892.31685.clone
  %add.5001 = f32[] add(%add.5000, %all-reduce.632)
  %reduce.1021 = f32[] reduce(%integer_pow.161, %constant.2882), dimensions={0}, to_apply=%region_893.31692
  %add.5002 = f32[] add(%add.5001, %reduce.1021)
  %reduce.1022 = f32[] reduce(%integer_pow.162, %constant.2882), dimensions={0}, to_apply=%region_894.31699
  %add.5003 = f32[] add(%add.5002, %reduce.1022)
  %reduce.1023 = f32[] reduce(%integer_pow.163, %constant.2882), dimensions={0,1,2}, to_apply=%region_895.31706
  %all-reduce.633 = f32[] all-reduce(%reduce.1023), channel_id=1084, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_895.31706.clone
  %add.5004 = f32[] add(%add.5003, %all-reduce.633)
  %reduce.1024 = f32[] reduce(%integer_pow.164, %constant.2882), dimensions={0,1,2}, to_apply=%region_896.31713
  %all-reduce.634 = f32[] all-reduce(%reduce.1024), channel_id=1085, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_896.31713.clone
  %add.5006 = f32[] add(%add.5004, %all-reduce.634)
  %reduce.1025 = f32[] reduce(%integer_pow.165, %constant.2882), dimensions={0,1,2}, to_apply=%region_897.31720
  %all-reduce.635 = f32[] all-reduce(%reduce.1025), channel_id=1086, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_897.31720.clone
  %add.5007 = f32[] add(%add.5006, %all-reduce.635)
  %reduce.1026 = f32[] reduce(%integer_pow.166, %constant.2882), dimensions={0,1,2}, to_apply=%region_898.31727
  %all-reduce.636 = f32[] all-reduce(%reduce.1026), channel_id=1087, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_898.31727.clone
  %add.5008 = f32[] add(%add.5007, %all-reduce.636)
  %reduce.1027 = f32[] reduce(%integer_pow.167, %constant.2882), dimensions={0,1}, to_apply=%region_899.31734
  %all-reduce.637 = f32[] all-reduce(%reduce.1027), channel_id=1088, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_899.31734.clone
  %add.5009 = f32[] add(%add.5008, %all-reduce.637)
  %reduce.1028 = f32[] reduce(%integer_pow.168, %constant.2882), dimensions={0,1}, to_apply=%region_900.31741
  %all-reduce.638 = f32[] all-reduce(%reduce.1028), channel_id=1089, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_900.31741.clone
  %add.5010 = f32[] add(%add.5009, %all-reduce.638)
  %reduce.1029 = f32[] reduce(%integer_pow.169, %constant.2882), dimensions={0,1}, to_apply=%region_901.31748
  %all-reduce.639 = f32[] all-reduce(%reduce.1029), channel_id=1090, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_901.31748.clone
  %add.5011 = f32[] add(%add.5010, %all-reduce.639)
  %reduce.1030 = f32[] reduce(%integer_pow.170, %constant.2882), dimensions={0}, to_apply=%region_902.31755
  %add.5012 = f32[] add(%add.5011, %reduce.1030)
  %reduce.1031 = f32[] reduce(%integer_pow.171, %constant.2882), dimensions={0}, to_apply=%region_903.31762
  %add.5013 = f32[] add(%add.5012, %reduce.1031)
  %reduce.1032 = f32[] reduce(%integer_pow.172, %constant.2882), dimensions={0,1,2}, to_apply=%region_904.31769
  %all-reduce.640 = f32[] all-reduce(%reduce.1032), channel_id=1091, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_904.31769.clone
  %add.5014 = f32[] add(%add.5013, %all-reduce.640)
  %reduce.1033 = f32[] reduce(%integer_pow.173, %constant.2882), dimensions={0,1,2}, to_apply=%region_905.31776
  %all-reduce.641 = f32[] all-reduce(%reduce.1033), channel_id=1092, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_905.31776.clone
  %add.5015 = f32[] add(%add.5014, %all-reduce.641)
  %reduce.1034 = f32[] reduce(%integer_pow.174, %constant.2882), dimensions={0,1,2}, to_apply=%region_906.31783
  %all-reduce.642 = f32[] all-reduce(%reduce.1034), channel_id=1093, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_906.31783.clone
  %add.5016 = f32[] add(%add.5015, %all-reduce.642)
  %reduce.1035 = f32[] reduce(%integer_pow.175, %constant.2882), dimensions={0,1,2}, to_apply=%region_907.31790
  %all-reduce.643 = f32[] all-reduce(%reduce.1035), channel_id=1094, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_907.31790.clone
  %add.5017 = f32[] add(%add.5016, %all-reduce.643)
  %reduce.1036 = f32[] reduce(%integer_pow.176, %constant.2882), dimensions={0,1}, to_apply=%region_908.31797
  %all-reduce.644 = f32[] all-reduce(%reduce.1036), channel_id=1095, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_908.31797.clone
  %add.5018 = f32[] add(%add.5017, %all-reduce.644)
  %reduce.1037 = f32[] reduce(%integer_pow.177, %constant.2882), dimensions={0,1}, to_apply=%region_909.31804
  %all-reduce.645 = f32[] all-reduce(%reduce.1037), channel_id=1096, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_909.31804.clone
  %add.5020 = f32[] add(%add.5018, %all-reduce.645)
  %reduce.1038 = f32[] reduce(%integer_pow.178, %constant.2882), dimensions={0,1}, to_apply=%region_910.31811
  %all-reduce.646 = f32[] all-reduce(%reduce.1038), channel_id=1097, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_910.31811.clone
  %add.5021 = f32[] add(%add.5020, %all-reduce.646)
  %reduce.1039 = f32[] reduce(%integer_pow.179, %constant.2882), dimensions={0}, to_apply=%region_911.31818
  %add.5022 = f32[] add(%add.5021, %reduce.1039)
  %reduce.1040 = f32[] reduce(%integer_pow.180, %constant.2882), dimensions={0}, to_apply=%region_912.31825
  %add.5024 = f32[] add(%add.5022, %reduce.1040)
  %reduce.1041 = f32[] reduce(%integer_pow.181, %constant.2882), dimensions={0,1,2}, to_apply=%region_913.31832
  %all-reduce.647 = f32[] all-reduce(%reduce.1041), channel_id=1098, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_913.31832.clone
  %add.5025 = f32[] add(%add.5024, %all-reduce.647)
  %reduce.1042 = f32[] reduce(%integer_pow.182, %constant.2882), dimensions={0,1,2}, to_apply=%region_914.31839
  %all-reduce.648 = f32[] all-reduce(%reduce.1042), channel_id=1099, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_914.31839.clone
  %add.5026 = f32[] add(%add.5025, %all-reduce.648)
  %reduce.1043 = f32[] reduce(%integer_pow.183, %constant.2882), dimensions={0,1,2}, to_apply=%region_915.31846
  %all-reduce.649 = f32[] all-reduce(%reduce.1043), channel_id=1100, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_915.31846.clone
  %add.5027 = f32[] add(%add.5026, %all-reduce.649)
  %reduce.1044 = f32[] reduce(%integer_pow.184, %constant.2882), dimensions={0,1,2}, to_apply=%region_916.31853
  %all-reduce.650 = f32[] all-reduce(%reduce.1044), channel_id=1101, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_916.31853.clone
  %add.5028 = f32[] add(%add.5027, %all-reduce.650)
  %reduce.1045 = f32[] reduce(%integer_pow.185, %constant.2882), dimensions={0,1}, to_apply=%region_917.31860
  %all-reduce.651 = f32[] all-reduce(%reduce.1045), channel_id=1102, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_917.31860.clone
  %add.5029 = f32[] add(%add.5028, %all-reduce.651)
  %reduce.1046 = f32[] reduce(%integer_pow.186, %constant.2882), dimensions={0,1}, to_apply=%region_918.31867
  %all-reduce.652 = f32[] all-reduce(%reduce.1046), channel_id=1103, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_918.31867.clone
  %add.5031 = f32[] add(%add.5029, %all-reduce.652)
  %reduce.1047 = f32[] reduce(%integer_pow.187, %constant.2882), dimensions={0,1}, to_apply=%region_919.31874
  %all-reduce.653 = f32[] all-reduce(%reduce.1047), channel_id=1104, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_919.31874.clone
  %add.5032 = f32[] add(%add.5031, %all-reduce.653)
  %reduce.1048 = f32[] reduce(%integer_pow.188, %constant.2882), dimensions={0}, to_apply=%region_920.31881
  %add.5033 = f32[] add(%add.5032, %reduce.1048)
  %reduce.1049 = f32[] reduce(%integer_pow.189, %constant.2882), dimensions={0}, to_apply=%region_921.31888
  %add.5034 = f32[] add(%add.5033, %reduce.1049)
  %reduce.1050 = f32[] reduce(%integer_pow.190, %constant.2882), dimensions={0,1,2}, to_apply=%region_922.31895
  %all-reduce.654 = f32[] all-reduce(%reduce.1050), channel_id=1105, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_922.31895.clone
  %add.5036 = f32[] add(%add.5034, %all-reduce.654)
  %reduce.1051 = f32[] reduce(%integer_pow.191, %constant.2882), dimensions={0,1,2}, to_apply=%region_923.31902
  %all-reduce.655 = f32[] all-reduce(%reduce.1051), channel_id=1106, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_923.31902.clone
  %add.5037 = f32[] add(%add.5036, %all-reduce.655)
  %reduce.1052 = f32[] reduce(%integer_pow.192, %constant.2882), dimensions={0,1,2}, to_apply=%region_924.31909
  %all-reduce.656 = f32[] all-reduce(%reduce.1052), channel_id=1107, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_924.31909.clone
  %add.5038 = f32[] add(%add.5037, %all-reduce.656)
  %reduce.1053 = f32[] reduce(%integer_pow.193, %constant.2882), dimensions={0,1,2}, to_apply=%region_925.31916
  %all-reduce.657 = f32[] all-reduce(%reduce.1053), channel_id=1108, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_925.31916.clone
  %add.5039 = f32[] add(%add.5038, %all-reduce.657)
  %reduce.1054 = f32[] reduce(%integer_pow.194, %constant.2882), dimensions={0,1}, to_apply=%region_926.31923
  %all-reduce.658 = f32[] all-reduce(%reduce.1054), channel_id=1109, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_926.31923.clone
  %add.5040 = f32[] add(%add.5039, %all-reduce.658)
  %reduce.1055 = f32[] reduce(%integer_pow.195, %constant.2882), dimensions={0,1}, to_apply=%region_927.31930
  %all-reduce.659 = f32[] all-reduce(%reduce.1055), channel_id=1110, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_927.31930.clone
  %add.5042 = f32[] add(%add.5040, %all-reduce.659)
  %reduce.1056 = f32[] reduce(%integer_pow.196, %constant.2882), dimensions={0,1}, to_apply=%region_928.31937
  %all-reduce.660 = f32[] all-reduce(%reduce.1056), channel_id=1111, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_928.31937.clone
  %add.5043 = f32[] add(%add.5042, %all-reduce.660)
  %reduce.1057 = f32[] reduce(%integer_pow.197, %constant.2882), dimensions={0}, to_apply=%region_929.31944
  %add.5044 = f32[] add(%add.5043, %reduce.1057)
  %reduce.1058 = f32[] reduce(%integer_pow.198, %constant.2882), dimensions={0}, to_apply=%region_930.31951
  %add.5045 = f32[] add(%add.5044, %reduce.1058)
  %reduce.1059 = f32[] reduce(%integer_pow.199, %constant.2882), dimensions={0,1,2}, to_apply=%region_931.31958
  %all-reduce.661 = f32[] all-reduce(%reduce.1059), channel_id=1112, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_931.31958.clone
  %add.5046 = f32[] add(%add.5045, %all-reduce.661)
  %reduce.1060 = f32[] reduce(%integer_pow.200, %constant.2882), dimensions={0,1,2}, to_apply=%region_932.31965
  %all-reduce.662 = f32[] all-reduce(%reduce.1060), channel_id=1113, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_932.31965.clone
  %add.5047 = f32[] add(%add.5046, %all-reduce.662)
  %reduce.1061 = f32[] reduce(%integer_pow.201, %constant.2882), dimensions={0,1,2}, to_apply=%region_933.31972
  %all-reduce.663 = f32[] all-reduce(%reduce.1061), channel_id=1114, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_933.31972.clone
  %add.5048 = f32[] add(%add.5047, %all-reduce.663)
  %reduce.1062 = f32[] reduce(%integer_pow.202, %constant.2882), dimensions={0,1,2}, to_apply=%region_934.31979
  %all-reduce.664 = f32[] all-reduce(%reduce.1062), channel_id=1115, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_934.31979.clone
  %add.5049 = f32[] add(%add.5048, %all-reduce.664)
  %reduce.1063 = f32[] reduce(%integer_pow.203, %constant.2882), dimensions={0,1}, to_apply=%region_935.31986
  %all-reduce.665 = f32[] all-reduce(%reduce.1063), channel_id=1116, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_935.31986.clone
  %add.5050 = f32[] add(%add.5049, %all-reduce.665)
  %reduce.1064 = f32[] reduce(%integer_pow.204, %constant.2882), dimensions={0,1}, to_apply=%region_936.31993
  %all-reduce.666 = f32[] all-reduce(%reduce.1064), channel_id=1117, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_936.31993.clone
  %add.5051 = f32[] add(%add.5050, %all-reduce.666)
  %reduce.1065 = f32[] reduce(%integer_pow.205, %constant.2882), dimensions={0,1}, to_apply=%region_937.32000
  %all-reduce.667 = f32[] all-reduce(%reduce.1065), channel_id=1118, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_937.32000.clone
  %add.5052 = f32[] add(%add.5051, %all-reduce.667)
  %reduce.1066 = f32[] reduce(%integer_pow.206, %constant.2882), dimensions={0}, to_apply=%region_938.32007
  %add.5053 = f32[] add(%add.5052, %reduce.1066)
  %reduce.1067 = f32[] reduce(%integer_pow.207, %constant.2882), dimensions={0}, to_apply=%region_939.32014
  %add.5054 = f32[] add(%add.5053, %reduce.1067)
  %reduce.1068 = f32[] reduce(%integer_pow.208, %constant.2882), dimensions={0,1,2}, to_apply=%region_940.32021
  %all-reduce.668 = f32[] all-reduce(%reduce.1068), channel_id=1119, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_940.32021.clone
  %add.5055 = f32[] add(%add.5054, %all-reduce.668)
  %reduce.1069 = f32[] reduce(%integer_pow.209, %constant.2882), dimensions={0,1,2}, to_apply=%region_941.32028
  %all-reduce.669 = f32[] all-reduce(%reduce.1069), channel_id=1120, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_941.32028.clone
  %add.5056 = f32[] add(%add.5055, %all-reduce.669)
  %reduce.1070 = f32[] reduce(%integer_pow.210, %constant.2882), dimensions={0,1,2}, to_apply=%region_942.32035
  %all-reduce.670 = f32[] all-reduce(%reduce.1070), channel_id=1121, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_942.32035.clone
  %add.5057 = f32[] add(%add.5056, %all-reduce.670)
  %reduce.1071 = f32[] reduce(%integer_pow.211, %constant.2882), dimensions={0,1,2}, to_apply=%region_943.32042
  %all-reduce.671 = f32[] all-reduce(%reduce.1071), channel_id=1122, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_943.32042.clone
  %add.5058 = f32[] add(%add.5057, %all-reduce.671)
  %reduce.1072 = f32[] reduce(%integer_pow.212, %constant.2882), dimensions={0,1}, to_apply=%region_944.32049
  %all-reduce.672 = f32[] all-reduce(%reduce.1072), channel_id=1123, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_944.32049.clone
  %add.5059 = f32[] add(%add.5058, %all-reduce.672)
  %reduce.1073 = f32[] reduce(%integer_pow.213, %constant.2882), dimensions={0,1}, to_apply=%region_945.32056
  %all-reduce.673 = f32[] all-reduce(%reduce.1073), channel_id=1124, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_945.32056.clone
  %add.5060 = f32[] add(%add.5059, %all-reduce.673)
  %reduce.1074 = f32[] reduce(%integer_pow.214, %constant.2882), dimensions={0,1}, to_apply=%region_946.32063
  %all-reduce.674 = f32[] all-reduce(%reduce.1074), channel_id=1125, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_946.32063.clone
  %add.5061 = f32[] add(%add.5060, %all-reduce.674)
  %reduce.1075 = f32[] reduce(%integer_pow.215, %constant.2882), dimensions={0}, to_apply=%region_947.32070
  %add.5062 = f32[] add(%add.5061, %reduce.1075)
  %reduce.1076 = f32[] reduce(%integer_pow.216, %constant.2882), dimensions={0}, to_apply=%region_948.32077
  %add.5063 = f32[] add(%add.5062, %reduce.1076)
  %reduce.1077 = f32[] reduce(%integer_pow.217, %constant.2882), dimensions={0,1,2}, to_apply=%region_949.32084
  %all-reduce.675 = f32[] all-reduce(%reduce.1077), channel_id=1126, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_949.32084.clone
  %add.5064 = f32[] add(%add.5063, %all-reduce.675)
  %reduce.1078 = f32[] reduce(%integer_pow.218, %constant.2882), dimensions={0,1,2}, to_apply=%region_950.32091
  %all-reduce.676 = f32[] all-reduce(%reduce.1078), channel_id=1127, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_950.32091.clone
  %add.5065 = f32[] add(%add.5064, %all-reduce.676)
  %reduce.1079 = f32[] reduce(%integer_pow.219, %constant.2882), dimensions={0,1,2}, to_apply=%region_951.32098
  %all-reduce.677 = f32[] all-reduce(%reduce.1079), channel_id=1128, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_951.32098.clone
  %add.5066 = f32[] add(%add.5065, %all-reduce.677)
  %reduce.1080 = f32[] reduce(%integer_pow.220, %constant.2882), dimensions={0,1,2}, to_apply=%region_952.32105
  %all-reduce.678 = f32[] all-reduce(%reduce.1080), channel_id=1129, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_952.32105.clone
  %add.5067 = f32[] add(%add.5066, %all-reduce.678)
  %reduce.1081 = f32[] reduce(%integer_pow.221, %constant.2882), dimensions={0,1}, to_apply=%region_953.32112
  %all-reduce.679 = f32[] all-reduce(%reduce.1081), channel_id=1130, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_953.32112.clone
  %add.5068 = f32[] add(%add.5067, %all-reduce.679)
  %reduce.1082 = f32[] reduce(%integer_pow.222, %constant.2882), dimensions={0,1}, to_apply=%region_954.32119
  %all-reduce.680 = f32[] all-reduce(%reduce.1082), channel_id=1131, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_954.32119.clone
  %add.5069 = f32[] add(%add.5068, %all-reduce.680)
  %reduce.1083 = f32[] reduce(%integer_pow.223, %constant.2882), dimensions={0,1}, to_apply=%region_955.32126
  %all-reduce.681 = f32[] all-reduce(%reduce.1083), channel_id=1132, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_955.32126.clone
  %add.5070 = f32[] add(%add.5069, %all-reduce.681)
  %reduce.1084 = f32[] reduce(%integer_pow.224, %constant.2882), dimensions={0}, to_apply=%region_956.32133
  %add.5071 = f32[] add(%add.5070, %reduce.1084)
  %reduce.1085 = f32[] reduce(%integer_pow.225, %constant.2882), dimensions={0}, to_apply=%region_957.32140
  %add.5072 = f32[] add(%add.5071, %reduce.1085)
  %reduce.1086 = f32[] reduce(%integer_pow.226, %constant.2882), dimensions={0,1,2}, to_apply=%region_958.32147
  %all-reduce.682 = f32[] all-reduce(%reduce.1086), channel_id=1133, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_958.32147.clone
  %add.5073 = f32[] add(%add.5072, %all-reduce.682)
  %reduce.1087 = f32[] reduce(%integer_pow.227, %constant.2882), dimensions={0,1,2}, to_apply=%region_959.32154
  %all-reduce.683 = f32[] all-reduce(%reduce.1087), channel_id=1134, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_959.32154.clone
  %add.5074 = f32[] add(%add.5073, %all-reduce.683)
  %reduce.1088 = f32[] reduce(%integer_pow.228, %constant.2882), dimensions={0,1,2}, to_apply=%region_960.32161
  %all-reduce.684 = f32[] all-reduce(%reduce.1088), channel_id=1135, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_960.32161.clone
  %add.5075 = f32[] add(%add.5074, %all-reduce.684)
  %reduce.1089 = f32[] reduce(%integer_pow.229, %constant.2882), dimensions={0,1,2}, to_apply=%region_961.32168
  %all-reduce.685 = f32[] all-reduce(%reduce.1089), channel_id=1136, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_961.32168.clone
  %add.5076 = f32[] add(%add.5075, %all-reduce.685)
  %reduce.1090 = f32[] reduce(%integer_pow.230, %constant.2882), dimensions={0,1}, to_apply=%region_962.32175
  %all-reduce.686 = f32[] all-reduce(%reduce.1090), channel_id=1137, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_962.32175.clone
  %add.5077 = f32[] add(%add.5076, %all-reduce.686)
  %reduce.1091 = f32[] reduce(%integer_pow.231, %constant.2882), dimensions={0,1}, to_apply=%region_963.32182
  %all-reduce.687 = f32[] all-reduce(%reduce.1091), channel_id=1138, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_963.32182.clone
  %add.5078 = f32[] add(%add.5077, %all-reduce.687)
  %reduce.1092 = f32[] reduce(%integer_pow.232, %constant.2882), dimensions={0,1}, to_apply=%region_964.32189
  %all-reduce.688 = f32[] all-reduce(%reduce.1092), channel_id=1139, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_964.32189.clone
  %add.5079 = f32[] add(%add.5078, %all-reduce.688)
  %reduce.1093 = f32[] reduce(%integer_pow.233, %constant.2882), dimensions={0}, to_apply=%region_965.32196
  %add.5080 = f32[] add(%add.5079, %reduce.1093)
  %reduce.1094 = f32[] reduce(%integer_pow.234, %constant.2882), dimensions={0}, to_apply=%region_966.32203
  %add.5082 = f32[] add(%add.5080, %reduce.1094)
  %reduce.1095 = f32[] reduce(%integer_pow.235, %constant.2882), dimensions={0,1,2}, to_apply=%region_967.32210
  %all-reduce.689 = f32[] all-reduce(%reduce.1095), channel_id=1140, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_967.32210.clone
  %add.5083 = f32[] add(%add.5082, %all-reduce.689)
  %reduce.1096 = f32[] reduce(%integer_pow.236, %constant.2882), dimensions={0,1,2}, to_apply=%region_968.32217
  %all-reduce.690 = f32[] all-reduce(%reduce.1096), channel_id=1141, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_968.32217.clone
  %add.5084 = f32[] add(%add.5083, %all-reduce.690)
  %reduce.1097 = f32[] reduce(%integer_pow.237, %constant.2882), dimensions={0,1,2}, to_apply=%region_969.32224
  %all-reduce.691 = f32[] all-reduce(%reduce.1097), channel_id=1142, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_969.32224.clone
  %add.5085 = f32[] add(%add.5084, %all-reduce.691)
  %reduce.1098 = f32[] reduce(%integer_pow.238, %constant.2882), dimensions={0,1,2}, to_apply=%region_970.32231
  %all-reduce.692 = f32[] all-reduce(%reduce.1098), channel_id=1143, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_970.32231.clone
  %add.5086 = f32[] add(%add.5085, %all-reduce.692)
  %reduce.1099 = f32[] reduce(%integer_pow.239, %constant.2882), dimensions={0,1}, to_apply=%region_971.32238
  %all-reduce.693 = f32[] all-reduce(%reduce.1099), channel_id=1144, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_971.32238.clone
  %add.5087 = f32[] add(%add.5086, %all-reduce.693)
  %reduce.1100 = f32[] reduce(%integer_pow.240, %constant.2882), dimensions={0,1}, to_apply=%region_972.32245
  %all-reduce.694 = f32[] all-reduce(%reduce.1100), channel_id=1145, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_972.32245.clone
  %add.5088 = f32[] add(%add.5087, %all-reduce.694)
  %reduce.1101 = f32[] reduce(%integer_pow.241, %constant.2882), dimensions={0,1}, to_apply=%region_973.32252
  %all-reduce.695 = f32[] all-reduce(%reduce.1101), channel_id=1146, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_973.32252.clone
  %add.5089 = f32[] add(%add.5088, %all-reduce.695)
  %reduce.1102 = f32[] reduce(%integer_pow.242, %constant.2882), dimensions={0}, to_apply=%region_974.32259
  %add.5090 = f32[] add(%add.5089, %reduce.1102)
  %reduce.1103 = f32[] reduce(%integer_pow.243, %constant.2882), dimensions={0}, to_apply=%region_975.32266
  %add.5091 = f32[] add(%add.5090, %reduce.1103)
  %reduce.1104 = f32[] reduce(%integer_pow.244, %constant.2882), dimensions={0,1,2}, to_apply=%region_976.32273
  %all-reduce.696 = f32[] all-reduce(%reduce.1104), channel_id=1147, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_976.32273.clone
  %add.5092 = f32[] add(%add.5091, %all-reduce.696)
  %reduce.1105 = f32[] reduce(%integer_pow.245, %constant.2882), dimensions={0,1,2}, to_apply=%region_977.32280
  %all-reduce.697 = f32[] all-reduce(%reduce.1105), channel_id=1148, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_977.32280.clone
  %add.5093 = f32[] add(%add.5092, %all-reduce.697)
  %reduce.1106 = f32[] reduce(%integer_pow.246, %constant.2882), dimensions={0,1,2}, to_apply=%region_978.32287
  %all-reduce.698 = f32[] all-reduce(%reduce.1106), channel_id=1149, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_978.32287.clone
  %add.5094 = f32[] add(%add.5093, %all-reduce.698)
  %reduce.1107 = f32[] reduce(%integer_pow.247, %constant.2882), dimensions={0,1,2}, to_apply=%region_979.32294
  %all-reduce.699 = f32[] all-reduce(%reduce.1107), channel_id=1150, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_979.32294.clone
  %add.5095 = f32[] add(%add.5094, %all-reduce.699)
  %reduce.1108 = f32[] reduce(%integer_pow.248, %constant.2882), dimensions={0,1}, to_apply=%region_980.32301
  %all-reduce.700 = f32[] all-reduce(%reduce.1108), channel_id=1151, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_980.32301.clone
  %add.5097 = f32[] add(%add.5095, %all-reduce.700)
  %reduce.1109 = f32[] reduce(%integer_pow.249, %constant.2882), dimensions={0,1}, to_apply=%region_981.32308
  %all-reduce.701 = f32[] all-reduce(%reduce.1109), channel_id=1152, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_981.32308.clone
  %add.5098 = f32[] add(%add.5097, %all-reduce.701)
  %reduce.1110 = f32[] reduce(%integer_pow.250, %constant.2882), dimensions={0,1}, to_apply=%region_982.32315
  %all-reduce.702 = f32[] all-reduce(%reduce.1110), channel_id=1153, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_982.32315.clone
  %add.5099 = f32[] add(%add.5098, %all-reduce.702)
  %reduce.1111 = f32[] reduce(%integer_pow.251, %constant.2882), dimensions={0}, to_apply=%region_983.32322
  %add.5100 = f32[] add(%add.5099, %reduce.1111)
  %reduce.1112 = f32[] reduce(%integer_pow.252, %constant.2882), dimensions={0}, to_apply=%region_984.32329
  %add.5101 = f32[] add(%add.5100, %reduce.1112)
  %reduce.1113 = f32[] reduce(%integer_pow.253, %constant.2882), dimensions={0,1,2}, to_apply=%region_985.32336
  %all-reduce.703 = f32[] all-reduce(%reduce.1113), channel_id=1154, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_985.32336.clone
  %add.5102 = f32[] add(%add.5101, %all-reduce.703)
  %reduce.1114 = f32[] reduce(%integer_pow.254, %constant.2882), dimensions={0,1,2}, to_apply=%region_986.32343
  %all-reduce.704 = f32[] all-reduce(%reduce.1114), channel_id=1155, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_986.32343.clone
  %add.5103 = f32[] add(%add.5102, %all-reduce.704)
  %reduce.1115 = f32[] reduce(%integer_pow.255, %constant.2882), dimensions={0,1,2}, to_apply=%region_987.32350
  %all-reduce.705 = f32[] all-reduce(%reduce.1115), channel_id=1156, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_987.32350.clone
  %add.5104 = f32[] add(%add.5103, %all-reduce.705)
  %reduce.1116 = f32[] reduce(%integer_pow.256, %constant.2882), dimensions={0,1,2}, to_apply=%region_988.32357
  %all-reduce.706 = f32[] all-reduce(%reduce.1116), channel_id=1157, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_988.32357.clone
  %add.5105 = f32[] add(%add.5104, %all-reduce.706)
  %reduce.1117 = f32[] reduce(%integer_pow.257, %constant.2882), dimensions={0,1}, to_apply=%region_989.32364
  %all-reduce.707 = f32[] all-reduce(%reduce.1117), channel_id=1158, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_989.32364.clone
  %add.5106 = f32[] add(%add.5105, %all-reduce.707)
  %reduce.1118 = f32[] reduce(%integer_pow.258, %constant.2882), dimensions={0,1}, to_apply=%region_990.32371
  %all-reduce.708 = f32[] all-reduce(%reduce.1118), channel_id=1159, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_990.32371.clone
  %add.5107 = f32[] add(%add.5106, %all-reduce.708)
  %reduce.1119 = f32[] reduce(%integer_pow.259, %constant.2882), dimensions={0,1}, to_apply=%region_991.32378
  %all-reduce.709 = f32[] all-reduce(%reduce.1119), channel_id=1160, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_991.32378.clone
  %add.5108 = f32[] add(%add.5107, %all-reduce.709)
  %reduce.1120 = f32[] reduce(%integer_pow.260, %constant.2882), dimensions={0}, to_apply=%region_992.32385
  %add.5109 = f32[] add(%add.5108, %reduce.1120)
  %reduce.1121 = f32[] reduce(%integer_pow.261, %constant.2882), dimensions={0}, to_apply=%region_993.32392
  %add.5110 = f32[] add(%add.5109, %reduce.1121)
  %reduce.1122 = f32[] reduce(%integer_pow.262, %constant.2882), dimensions={0,1,2}, to_apply=%region_994.32399
  %all-reduce.710 = f32[] all-reduce(%reduce.1122), channel_id=1161, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_994.32399.clone
  %add.5112 = f32[] add(%add.5110, %all-reduce.710)
  %reduce.1123 = f32[] reduce(%integer_pow.263, %constant.2882), dimensions={0,1,2}, to_apply=%region_995.32406
  %all-reduce.711 = f32[] all-reduce(%reduce.1123), channel_id=1162, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_995.32406.clone
  %add.5113 = f32[] add(%add.5112, %all-reduce.711)
  %reduce.1124 = f32[] reduce(%integer_pow.264, %constant.2882), dimensions={0,1,2}, to_apply=%region_996.32413
  %all-reduce.712 = f32[] all-reduce(%reduce.1124), channel_id=1163, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_996.32413.clone
  %add.5114 = f32[] add(%add.5113, %all-reduce.712)
  %reduce.1125 = f32[] reduce(%integer_pow.265, %constant.2882), dimensions={0,1,2}, to_apply=%region_997.32420
  %all-reduce.713 = f32[] all-reduce(%reduce.1125), channel_id=1164, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_997.32420.clone
  %add.5115 = f32[] add(%add.5114, %all-reduce.713)
  %reduce.1126 = f32[] reduce(%integer_pow.266, %constant.2882), dimensions={0,1}, to_apply=%region_998.32427
  %all-reduce.714 = f32[] all-reduce(%reduce.1126), channel_id=1165, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_998.32427.clone
  %add.5116 = f32[] add(%add.5115, %all-reduce.714)
  %reduce.1127 = f32[] reduce(%integer_pow.267, %constant.2882), dimensions={0,1}, to_apply=%region_999.32434
  %all-reduce.715 = f32[] all-reduce(%reduce.1127), channel_id=1166, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_999.32434.clone
  %add.5117 = f32[] add(%add.5116, %all-reduce.715)
  %reduce.1128 = f32[] reduce(%integer_pow.268, %constant.2882), dimensions={0,1}, to_apply=%region_1000.32441
  %all-reduce.716 = f32[] all-reduce(%reduce.1128), channel_id=1167, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1000.32441.clone
  %add.5118 = f32[] add(%add.5117, %all-reduce.716)
  %reduce.1129 = f32[] reduce(%integer_pow.269, %constant.2882), dimensions={0}, to_apply=%region_1001.32448
  %add.5119 = f32[] add(%add.5118, %reduce.1129)
  %reduce.1130 = f32[] reduce(%integer_pow.270, %constant.2882), dimensions={0}, to_apply=%region_1002.32455
  %add.5120 = f32[] add(%add.5119, %reduce.1130)
  %reduce.1131 = f32[] reduce(%integer_pow.271, %constant.2882), dimensions={0,1,2}, to_apply=%region_1003.32462
  %all-reduce.717 = f32[] all-reduce(%reduce.1131), channel_id=1168, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1003.32462.clone
  %add.5121 = f32[] add(%add.5120, %all-reduce.717)
  %reduce.1132 = f32[] reduce(%integer_pow.272, %constant.2882), dimensions={0,1,2}, to_apply=%region_1004.32469
  %all-reduce.718 = f32[] all-reduce(%reduce.1132), channel_id=1169, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1004.32469.clone
  %add.5122 = f32[] add(%add.5121, %all-reduce.718)
  %reduce.1133 = f32[] reduce(%integer_pow.273, %constant.2882), dimensions={0,1,2}, to_apply=%region_1005.32476
  %all-reduce.719 = f32[] all-reduce(%reduce.1133), channel_id=1170, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1005.32476.clone
  %add.5123 = f32[] add(%add.5122, %all-reduce.719)
  %reduce.1134 = f32[] reduce(%integer_pow.274, %constant.2882), dimensions={0,1,2}, to_apply=%region_1006.32483
  %all-reduce.720 = f32[] all-reduce(%reduce.1134), channel_id=1171, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1006.32483.clone
  %add.5124 = f32[] add(%add.5123, %all-reduce.720)
  %reduce.1135 = f32[] reduce(%integer_pow.275, %constant.2882), dimensions={0,1}, to_apply=%region_1007.32490
  %all-reduce.721 = f32[] all-reduce(%reduce.1135), channel_id=1172, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1007.32490.clone
  %add.5125 = f32[] add(%add.5124, %all-reduce.721)
  %reduce.1136 = f32[] reduce(%integer_pow.276, %constant.2882), dimensions={0,1}, to_apply=%region_1008.32497
  %all-reduce.722 = f32[] all-reduce(%reduce.1136), channel_id=1173, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1008.32497.clone
  %add.5126 = f32[] add(%add.5125, %all-reduce.722)
  %reduce.1137 = f32[] reduce(%integer_pow.277, %constant.2882), dimensions={0,1}, to_apply=%region_1009.32504
  %all-reduce.723 = f32[] all-reduce(%reduce.1137), channel_id=1174, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1009.32504.clone
  %add.5127 = f32[] add(%add.5126, %all-reduce.723)
  %reduce.1138 = f32[] reduce(%integer_pow.278, %constant.2882), dimensions={0}, to_apply=%region_1010.32511
  %add.5128 = f32[] add(%add.5127, %reduce.1138)
  %reduce.1139 = f32[] reduce(%integer_pow.279, %constant.2882), dimensions={0}, to_apply=%region_1011.32518
  %add.5129 = f32[] add(%add.5128, %reduce.1139)
  %reduce.1140 = f32[] reduce(%integer_pow.280, %constant.2882), dimensions={0,1,2}, to_apply=%region_1012.32525
  %all-reduce.724 = f32[] all-reduce(%reduce.1140), channel_id=1175, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1012.32525.clone
  %add.5130 = f32[] add(%add.5129, %all-reduce.724)
  %reduce.1141 = f32[] reduce(%integer_pow.281, %constant.2882), dimensions={0,1,2}, to_apply=%region_1013.32532
  %all-reduce.725 = f32[] all-reduce(%reduce.1141), channel_id=1176, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1013.32532.clone
  %add.5131 = f32[] add(%add.5130, %all-reduce.725)
  %reduce.1142 = f32[] reduce(%integer_pow.282, %constant.2882), dimensions={0,1,2}, to_apply=%region_1014.32539
  %all-reduce.726 = f32[] all-reduce(%reduce.1142), channel_id=1177, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1014.32539.clone
  %add.5132 = f32[] add(%add.5131, %all-reduce.726)
  %reduce.1143 = f32[] reduce(%integer_pow.283, %constant.2882), dimensions={0,1,2}, to_apply=%region_1015.32546
  %all-reduce.727 = f32[] all-reduce(%reduce.1143), channel_id=1178, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1015.32546.clone
  %add.5133 = f32[] add(%add.5132, %all-reduce.727)
  %reduce.1144 = f32[] reduce(%integer_pow.284, %constant.2882), dimensions={0,1}, to_apply=%region_1016.32553
  %all-reduce.728 = f32[] all-reduce(%reduce.1144), channel_id=1179, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1016.32553.clone
  %add.5135 = f32[] add(%add.5133, %all-reduce.728)
  %reduce.1145 = f32[] reduce(%integer_pow.285, %constant.2882), dimensions={0,1}, to_apply=%region_1017.32560
  %all-reduce.729 = f32[] all-reduce(%reduce.1145), channel_id=1180, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1017.32560.clone
  %add.5136 = f32[] add(%add.5135, %all-reduce.729)
  %reduce.1146 = f32[] reduce(%integer_pow.286, %constant.2882), dimensions={0,1}, to_apply=%region_1018.32567
  %all-reduce.730 = f32[] all-reduce(%reduce.1146), channel_id=1181, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1018.32567.clone
  %add.5137 = f32[] add(%add.5136, %all-reduce.730)
  %reduce.1147 = f32[] reduce(%integer_pow.287, %constant.2882), dimensions={0}, to_apply=%region_1019.32574
  %add.5138 = f32[] add(%add.5137, %reduce.1147)
  %reduce.1148 = f32[] reduce(%integer_pow.288, %constant.2882), dimensions={0}, to_apply=%region_1020.32581
  %add.5139 = f32[] add(%add.5138, %reduce.1148)
  %reduce.1149 = f32[] reduce(%integer_pow.289, %constant.2882), dimensions={0,1,2}, to_apply=%region_1021.32588
  %all-reduce.731 = f32[] all-reduce(%reduce.1149), channel_id=1182, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1021.32588.clone
  %add.5140 = f32[] add(%add.5139, %all-reduce.731)
  %reduce.1150 = f32[] reduce(%integer_pow.290, %constant.2882), dimensions={0,1,2}, to_apply=%region_1022.32595
  %all-reduce.732 = f32[] all-reduce(%reduce.1150), channel_id=1183, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1022.32595.clone
  %add.5141 = f32[] add(%add.5140, %all-reduce.732)
  %reduce.1151 = f32[] reduce(%integer_pow.291, %constant.2882), dimensions={0,1,2}, to_apply=%region_1023.32602
  %all-reduce.733 = f32[] all-reduce(%reduce.1151), channel_id=1184, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1023.32602.clone
  %add.5142 = f32[] add(%add.5141, %all-reduce.733)
  %reduce.1152 = f32[] reduce(%integer_pow.292, %constant.2882), dimensions={0,1,2}, to_apply=%region_1024.32609
  %all-reduce.734 = f32[] all-reduce(%reduce.1152), channel_id=1185, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1024.32609.clone
  %add.5143 = f32[] add(%add.5142, %all-reduce.734)
  %reduce.1153 = f32[] reduce(%integer_pow.293, %constant.2882), dimensions={0,1}, to_apply=%region_1025.32616
  %all-reduce.735 = f32[] all-reduce(%reduce.1153), channel_id=1186, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1025.32616.clone
  %add.5144 = f32[] add(%add.5143, %all-reduce.735)
  %reduce.1154 = f32[] reduce(%integer_pow.294, %constant.2882), dimensions={0,1}, to_apply=%region_1026.32623
  %all-reduce.736 = f32[] all-reduce(%reduce.1154), channel_id=1187, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1026.32623.clone
  %add.5146 = f32[] add(%add.5144, %all-reduce.736)
  %reduce.1155 = f32[] reduce(%integer_pow.295, %constant.2882), dimensions={0,1}, to_apply=%region_1027.32630
  %all-reduce.737 = f32[] all-reduce(%reduce.1155), channel_id=1188, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1027.32630.clone
  %add.5147 = f32[] add(%add.5146, %all-reduce.737)
  %reduce.1156 = f32[] reduce(%integer_pow.296, %constant.2882), dimensions={0}, to_apply=%region_1028.32637
  %add.5148 = f32[] add(%add.5147, %reduce.1156)
  %reduce.1157 = f32[] reduce(%integer_pow.297, %constant.2882), dimensions={0}, to_apply=%region_1029.32644
  %add.5149 = f32[] add(%add.5148, %reduce.1157)
  %reduce.1158 = f32[] reduce(%integer_pow.298, %constant.2882), dimensions={0,1,2}, to_apply=%region_1030.32651
  %all-reduce.738 = f32[] all-reduce(%reduce.1158), channel_id=1189, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1030.32651.clone
  %add.5150 = f32[] add(%add.5149, %all-reduce.738)
  %reduce.1159 = f32[] reduce(%integer_pow.299, %constant.2882), dimensions={0,1,2}, to_apply=%region_1031.32658
  %all-reduce.739 = f32[] all-reduce(%reduce.1159), channel_id=1190, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1031.32658.clone
  %add.5151 = f32[] add(%add.5150, %all-reduce.739)
  %reduce.1160 = f32[] reduce(%integer_pow.300, %constant.2882), dimensions={0,1,2}, to_apply=%region_1032.32665
  %all-reduce.740 = f32[] all-reduce(%reduce.1160), channel_id=1191, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1032.32665.clone
  %add.5152 = f32[] add(%add.5151, %all-reduce.740)
  %reduce.1161 = f32[] reduce(%integer_pow.301, %constant.2882), dimensions={0,1,2}, to_apply=%region_1033.32672
  %all-reduce.741 = f32[] all-reduce(%reduce.1161), channel_id=1192, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1033.32672.clone
  %add.5153 = f32[] add(%add.5152, %all-reduce.741)
  %reduce.1162 = f32[] reduce(%integer_pow.302, %constant.2882), dimensions={0,1}, to_apply=%region_1034.32679
  %all-reduce.742 = f32[] all-reduce(%reduce.1162), channel_id=1193, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1034.32679.clone
  %add.5154 = f32[] add(%add.5153, %all-reduce.742)
  %reduce.1163 = f32[] reduce(%integer_pow.303, %constant.2882), dimensions={0,1}, to_apply=%region_1035.32686
  %all-reduce.743 = f32[] all-reduce(%reduce.1163), channel_id=1194, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1035.32686.clone
  %add.5155 = f32[] add(%add.5154, %all-reduce.743)
  %sqrt.293 = f32[] sqrt(%add.5155)
  %sub.359 = f32[2,8192,128256]{2,1,0} broadcast(%log.2), dimensions={0,1}
  %sub.360 = f32[2,8192,128256]{2,1,0} subtract(%sub.195, %sub.359)
  %broadcast.5212 = f32[2,8192,128256]{2,1,0} broadcast(%constant.2882), dimensions={}
  %mul.9453 = f32[2,8192,128256]{2,1,0} select(%eq.494, %sub.360, %broadcast.5212)
  %reduce.1164 = f32[2,8192]{1,0} reduce(%mul.9453, %constant.2882), dimensions={2}, to_apply=%region_1036.32698
  %neg.190 = f32[2,8192]{1,0} negate(%reduce.1164)
  %square.422 = f32[2,8192]{1,0} multiply(%add.2386, %add.2386)
  %mul.9455 = f32[2,8192]{1,0} multiply(%square.422, %broadcast.5144)
  %add.5156 = f32[2,8192]{1,0} add(%neg.190, %mul.9455)
  %sharding_constraint.1291 = f32[2,8192]{1,0} copy(%add.5156)
  %mul.9456 = f32[2,8192]{1,0} select(%ne.930, %sharding_constraint.1291, %broadcast.5144)
  %reduce.1165 = f32[] reduce(%mul.9456, %constant.2882), dimensions={0,1}, to_apply=%region_1037.32709
  %all-reduce.744 = f32[] all-reduce(%reduce.1165), channel_id=1195, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1037.32709.clone
  %div.3056 = f32[] divide(%all-reduce.744, %add.2385)
  %square.423 = f32[4096]{0} multiply(%add.3286, %add.3286)
  %reduce.1166 = f32[] reduce(%square.423, %constant.2882), dimensions={0}, to_apply=%region_1038.32716
  %square.424 = f32[512,14336]{1,0} multiply(%add.3292, %add.3292)
  %reduce.1167 = f32[] reduce(%square.424, %constant.2882), dimensions={0,1}, to_apply=%region_1039.32722
  %all-reduce.745 = f32[] all-reduce(%reduce.1167), channel_id=1196, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1039.32722.clone
  %add.5157 = f32[] add(%reduce.1166, %all-reduce.745)
  %square.425 = f32[512,14336]{1,0} multiply(%add.3297, %add.3297)
  %reduce.1168 = f32[] reduce(%square.425, %constant.2882), dimensions={0,1}, to_apply=%region_1040.32729
  %all-reduce.746 = f32[] all-reduce(%reduce.1168), channel_id=1197, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1040.32729.clone
  %add.5158 = f32[] add(%add.5157, %all-reduce.746)
  %square.426 = f32[14336,512]{1,0} multiply(%add.3303, %add.3303)
  %reduce.1169 = f32[] reduce(%square.426, %constant.2882), dimensions={0,1}, to_apply=%region_1041.32736
  %all-reduce.747 = f32[] all-reduce(%reduce.1169), channel_id=1198, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1041.32736.clone
  %add.5159 = f32[] add(%add.5158, %all-reduce.747)
  %square.427 = f32[4096]{0} multiply(%add.3308, %add.3308)
  %reduce.1170 = f32[] reduce(%square.427, %constant.2882), dimensions={0}, to_apply=%region_1042.32743
  %add.5160 = f32[] add(%add.5159, %reduce.1170)
  %square.428 = f32[4096]{0} multiply(%add.3314, %add.3314)
  %reduce.1171 = f32[] reduce(%square.428, %constant.2882), dimensions={0}, to_apply=%region_1043.32750
  %add.5161 = f32[] add(%add.5160, %reduce.1171)
  %square.429 = f32[512,8,128]{2,1,0} multiply(%add.3319, %add.3319)
  %reduce.1172 = f32[] reduce(%square.429, %constant.2882), dimensions={0,1,2}, to_apply=%region_1044.32757
  %all-reduce.748 = f32[] all-reduce(%reduce.1172), channel_id=1199, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1044.32757.clone
  %add.5162 = f32[] add(%add.5161, %all-reduce.748)
  %square.430 = f32[32,128,512]{2,1,0} multiply(%add.3325, %add.3325)
  %reduce.1173 = f32[] reduce(%square.430, %constant.2882), dimensions={0,1,2}, to_apply=%region_1045.32764
  %all-reduce.749 = f32[] all-reduce(%reduce.1173), channel_id=1200, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1045.32764.clone
  %add.5163 = f32[] add(%add.5162, %all-reduce.749)
  %square.431 = f32[512,32,128]{2,1,0} multiply(%add.3330, %add.3330)
  %reduce.1174 = f32[] reduce(%square.431, %constant.2882), dimensions={0,1,2}, to_apply=%region_1046.32771
  %all-reduce.750 = f32[] all-reduce(%reduce.1174), channel_id=1201, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1046.32771.clone
  %add.5164 = f32[] add(%add.5163, %all-reduce.750)
  %square.432 = f32[512,8,128]{2,1,0} multiply(%add.3335, %add.3335)
  %reduce.1175 = f32[] reduce(%square.432, %constant.2882), dimensions={0,1,2}, to_apply=%region_1047.32778
  %all-reduce.751 = f32[] all-reduce(%reduce.1175), channel_id=1202, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1047.32778.clone
  %add.5165 = f32[] add(%add.5164, %all-reduce.751)
  %square.433 = f32[512,14336]{1,0} multiply(%add.3341, %add.3341)
  %reduce.1176 = f32[] reduce(%square.433, %constant.2882), dimensions={0,1}, to_apply=%region_1048.32785
  %all-reduce.752 = f32[] all-reduce(%reduce.1176), channel_id=1203, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1048.32785.clone
  %add.5166 = f32[] add(%add.5165, %all-reduce.752)
  %square.434 = f32[512,14336]{1,0} multiply(%add.3346, %add.3346)
  %reduce.1177 = f32[] reduce(%square.434, %constant.2882), dimensions={0,1}, to_apply=%region_1049.32792
  %all-reduce.753 = f32[] all-reduce(%reduce.1177), channel_id=1204, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1049.32792.clone
  %add.5167 = f32[] add(%add.5166, %all-reduce.753)
  %square.435 = f32[14336,512]{1,0} multiply(%add.3353, %add.3353)
  %reduce.1178 = f32[] reduce(%square.435, %constant.2882), dimensions={0,1}, to_apply=%region_1050.32799
  %all-reduce.754 = f32[] all-reduce(%reduce.1178), channel_id=1205, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1050.32799.clone
  %add.5168 = f32[] add(%add.5167, %all-reduce.754)
  %square.436 = f32[4096]{0} multiply(%add.3358, %add.3358)
  %reduce.1179 = f32[] reduce(%square.436, %constant.2882), dimensions={0}, to_apply=%region_1051.32806
  %add.5169 = f32[] add(%add.5168, %reduce.1179)
  %square.437 = f32[4096]{0} multiply(%add.3363, %add.3363)
  %reduce.1180 = f32[] reduce(%square.437, %constant.2882), dimensions={0}, to_apply=%region_1052.32813
  %add.5170 = f32[] add(%add.5169, %reduce.1180)
  %square.438 = f32[512,8,128]{2,1,0} multiply(%add.3368, %add.3368)
  %reduce.1181 = f32[] reduce(%square.438, %constant.2882), dimensions={0,1,2}, to_apply=%region_1053.32820
  %all-reduce.755 = f32[] all-reduce(%reduce.1181), channel_id=1206, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1053.32820.clone
  %add.5171 = f32[] add(%add.5170, %all-reduce.755)
  %square.439 = f32[32,128,512]{2,1,0} multiply(%add.3373, %add.3373)
  %reduce.1182 = f32[] reduce(%square.439, %constant.2882), dimensions={0,1,2}, to_apply=%region_1054.32827
  %all-reduce.756 = f32[] all-reduce(%reduce.1182), channel_id=1207, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1054.32827.clone
  %add.5173 = f32[] add(%add.5171, %all-reduce.756)
  %square.440 = f32[512,32,128]{2,1,0} multiply(%add.3378, %add.3378)
  %reduce.1183 = f32[] reduce(%square.440, %constant.2882), dimensions={0,1,2}, to_apply=%region_1055.32834
  %all-reduce.757 = f32[] all-reduce(%reduce.1183), channel_id=1208, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1055.32834.clone
  %add.5174 = f32[] add(%add.5173, %all-reduce.757)
  %square.441 = f32[512,8,128]{2,1,0} multiply(%add.3383, %add.3383)
  %reduce.1184 = f32[] reduce(%square.441, %constant.2882), dimensions={0,1,2}, to_apply=%region_1056.32841
  %all-reduce.758 = f32[] all-reduce(%reduce.1184), channel_id=1209, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1056.32841.clone
  %add.5176 = f32[] add(%add.5174, %all-reduce.758)
  %square.442 = f32[512,14336]{1,0} multiply(%add.3388, %add.3388)
  %reduce.1185 = f32[] reduce(%square.442, %constant.2882), dimensions={0,1}, to_apply=%region_1057.32848
  %all-reduce.759 = f32[] all-reduce(%reduce.1185), channel_id=1210, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1057.32848.clone
  %add.5177 = f32[] add(%add.5176, %all-reduce.759)
  %square.443 = f32[512,14336]{1,0} multiply(%add.3393, %add.3393)
  %reduce.1186 = f32[] reduce(%square.443, %constant.2882), dimensions={0,1}, to_apply=%region_1058.32855
  %all-reduce.760 = f32[] all-reduce(%reduce.1186), channel_id=1211, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1058.32855.clone
  %add.5178 = f32[] add(%add.5177, %all-reduce.760)
  %square.444 = f32[14336,512]{1,0} multiply(%add.3398, %add.3398)
  %reduce.1187 = f32[] reduce(%square.444, %constant.2882), dimensions={0,1}, to_apply=%region_1059.32862
  %all-reduce.761 = f32[] all-reduce(%reduce.1187), channel_id=1212, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1059.32862.clone
  %add.5179 = f32[] add(%add.5178, %all-reduce.761)
  %square.445 = f32[4096]{0} multiply(%add.3404, %add.3404)
  %reduce.1188 = f32[] reduce(%square.445, %constant.2882), dimensions={0}, to_apply=%region_1060.32869
  %add.5180 = f32[] add(%add.5179, %reduce.1188)
  %square.446 = f32[4096]{0} multiply(%add.3411, %add.3411)
  %reduce.1189 = f32[] reduce(%square.446, %constant.2882), dimensions={0}, to_apply=%region_1061.32876
  %add.5181 = f32[] add(%add.5180, %reduce.1189)
  %square.447 = f32[512,8,128]{2,1,0} multiply(%add.3416, %add.3416)
  %reduce.1190 = f32[] reduce(%square.447, %constant.2882), dimensions={0,1,2}, to_apply=%region_1062.32883
  %all-reduce.762 = f32[] all-reduce(%reduce.1190), channel_id=1213, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1062.32883.clone
  %add.5182 = f32[] add(%add.5181, %all-reduce.762)
  %square.448 = f32[32,128,512]{2,1,0} multiply(%add.3421, %add.3421)
  %reduce.1191 = f32[] reduce(%square.448, %constant.2882), dimensions={0,1,2}, to_apply=%region_1063.32890
  %all-reduce.763 = f32[] all-reduce(%reduce.1191), channel_id=1214, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1063.32890.clone
  %add.5183 = f32[] add(%add.5182, %all-reduce.763)
  %square.449 = f32[512,32,128]{2,1,0} multiply(%add.3427, %add.3427)
  %reduce.1192 = f32[] reduce(%square.449, %constant.2882), dimensions={0,1,2}, to_apply=%region_1064.32897
  %all-reduce.764 = f32[] all-reduce(%reduce.1192), channel_id=1215, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1064.32897.clone
  %add.5184 = f32[] add(%add.5183, %all-reduce.764)
  %square.450 = f32[512,8,128]{2,1,0} multiply(%add.3432, %add.3432)
  %reduce.1193 = f32[] reduce(%square.450, %constant.2882), dimensions={0,1,2}, to_apply=%region_1065.32904
  %all-reduce.765 = f32[] all-reduce(%reduce.1193), channel_id=1216, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1065.32904.clone
  %add.5185 = f32[] add(%add.5184, %all-reduce.765)
  %square.451 = f32[512,14336]{1,0} multiply(%add.3438, %add.3438)
  %reduce.1194 = f32[] reduce(%square.451, %constant.2882), dimensions={0,1}, to_apply=%region_1066.32911
  %all-reduce.766 = f32[] all-reduce(%reduce.1194), channel_id=1217, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1066.32911.clone
  %add.5186 = f32[] add(%add.5185, %all-reduce.766)
  %square.452 = f32[512,14336]{1,0} multiply(%add.3443, %add.3443)
  %reduce.1195 = f32[] reduce(%square.452, %constant.2882), dimensions={0,1}, to_apply=%region_1067.32918
  %all-reduce.767 = f32[] all-reduce(%reduce.1195), channel_id=1218, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1067.32918.clone
  %add.5187 = f32[] add(%add.5186, %all-reduce.767)
  %square.453 = f32[14336,512]{1,0} multiply(%add.3450, %add.3450)
  %reduce.1196 = f32[] reduce(%square.453, %constant.2882), dimensions={0,1}, to_apply=%region_1068.32925
  %all-reduce.768 = f32[] all-reduce(%reduce.1196), channel_id=1219, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1068.32925.clone
  %add.5188 = f32[] add(%add.5187, %all-reduce.768)
  %square.454 = f32[4096]{0} multiply(%add.3455, %add.3455)
  %reduce.1197 = f32[] reduce(%square.454, %constant.2882), dimensions={0}, to_apply=%region_1069.32932
  %add.5189 = f32[] add(%add.5188, %reduce.1197)
  %square.455 = f32[4096]{0} multiply(%add.3460, %add.3460)
  %reduce.1198 = f32[] reduce(%square.455, %constant.2882), dimensions={0}, to_apply=%region_1070.32939
  %add.5190 = f32[] add(%add.5189, %reduce.1198)
  %square.456 = f32[512,8,128]{2,1,0} multiply(%add.3465, %add.3465)
  %reduce.1199 = f32[] reduce(%square.456, %constant.2882), dimensions={0,1,2}, to_apply=%region_1071.32946
  %all-reduce.769 = f32[] all-reduce(%reduce.1199), channel_id=1220, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1071.32946.clone
  %add.5191 = f32[] add(%add.5190, %all-reduce.769)
  %square.457 = f32[32,128,512]{2,1,0} multiply(%add.3470, %add.3470)
  %reduce.1200 = f32[] reduce(%square.457, %constant.2882), dimensions={0,1,2}, to_apply=%region_1072.32953
  %all-reduce.770 = f32[] all-reduce(%reduce.1200), channel_id=1221, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1072.32953.clone
  %add.5192 = f32[] add(%add.5191, %all-reduce.770)
  %square.458 = f32[512,32,128]{2,1,0} multiply(%add.3475, %add.3475)
  %reduce.1201 = f32[] reduce(%square.458, %constant.2882), dimensions={0,1,2}, to_apply=%region_1073.32960
  %all-reduce.771 = f32[] all-reduce(%reduce.1201), channel_id=1222, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1073.32960.clone
  %add.5193 = f32[] add(%add.5192, %all-reduce.771)
  %square.459 = f32[512,8,128]{2,1,0} multiply(%add.3480, %add.3480)
  %reduce.1202 = f32[] reduce(%square.459, %constant.2882), dimensions={0,1,2}, to_apply=%region_1074.32967
  %all-reduce.772 = f32[] all-reduce(%reduce.1202), channel_id=1223, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1074.32967.clone
  %add.5194 = f32[] add(%add.5193, %all-reduce.772)
  %square.460 = f32[512,14336]{1,0} multiply(%add.3487, %add.3487)
  %reduce.1203 = f32[] reduce(%square.460, %constant.2882), dimensions={0,1}, to_apply=%region_1075.32974
  %all-reduce.773 = f32[] all-reduce(%reduce.1203), channel_id=1224, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1075.32974.clone
  %add.5195 = f32[] add(%add.5194, %all-reduce.773)
  %square.461 = f32[512,14336]{1,0} multiply(%add.3492, %add.3492)
  %reduce.1204 = f32[] reduce(%square.461, %constant.2882), dimensions={0,1}, to_apply=%region_1076.32981
  %all-reduce.774 = f32[] all-reduce(%reduce.1204), channel_id=1225, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1076.32981.clone
  %add.5196 = f32[] add(%add.5195, %all-reduce.774)
  %square.462 = f32[14336,512]{1,0} multiply(%add.3497, %add.3497)
  %reduce.1205 = f32[] reduce(%square.462, %constant.2882), dimensions={0,1}, to_apply=%region_1077.32988
  %all-reduce.775 = f32[] all-reduce(%reduce.1205), channel_id=1226, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1077.32988.clone
  %add.5197 = f32[] add(%add.5196, %all-reduce.775)
  %square.463 = f32[4096]{0} multiply(%add.3502, %add.3502)
  %reduce.1206 = f32[] reduce(%square.463, %constant.2882), dimensions={0}, to_apply=%region_1078.32995
  %add.5198 = f32[] add(%add.5197, %reduce.1206)
  %square.464 = f32[4096]{0} multiply(%add.3507, %add.3507)
  %reduce.1207 = f32[] reduce(%square.464, %constant.2882), dimensions={0}, to_apply=%region_1079.33002
  %add.5199 = f32[] add(%add.5198, %reduce.1207)
  %square.465 = f32[512,8,128]{2,1,0} multiply(%add.3512, %add.3512)
  %reduce.1208 = f32[] reduce(%square.465, %constant.2882), dimensions={0,1,2}, to_apply=%region_1080.33009
  %all-reduce.776 = f32[] all-reduce(%reduce.1208), channel_id=1227, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1080.33009.clone
  %add.5200 = f32[] add(%add.5199, %all-reduce.776)
  %square.466 = f32[32,128,512]{2,1,0} multiply(%add.3518, %add.3518)
  %reduce.1209 = f32[] reduce(%square.466, %constant.2882), dimensions={0,1,2}, to_apply=%region_1081.33016
  %all-reduce.777 = f32[] all-reduce(%reduce.1209), channel_id=1228, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1081.33016.clone
  %add.5201 = f32[] add(%add.5200, %all-reduce.777)
  %square.467 = f32[512,32,128]{2,1,0} multiply(%add.3523, %add.3523)
  %reduce.1210 = f32[] reduce(%square.467, %constant.2882), dimensions={0,1,2}, to_apply=%region_1082.33023
  %all-reduce.778 = f32[] all-reduce(%reduce.1210), channel_id=1229, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1082.33023.clone
  %add.5202 = f32[] add(%add.5201, %all-reduce.778)
  %square.468 = f32[512,8,128]{2,1,0} multiply(%add.3529, %add.3529)
  %reduce.1211 = f32[] reduce(%square.468, %constant.2882), dimensions={0,1,2}, to_apply=%region_1083.33030
  %all-reduce.779 = f32[] all-reduce(%reduce.1211), channel_id=1230, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1083.33030.clone
  %add.5203 = f32[] add(%add.5202, %all-reduce.779)
  %square.469 = f32[512,14336]{1,0} multiply(%add.3534, %add.3534)
  %reduce.1212 = f32[] reduce(%square.469, %constant.2882), dimensions={0,1}, to_apply=%region_1084.33037
  %all-reduce.780 = f32[] all-reduce(%reduce.1212), channel_id=1231, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1084.33037.clone
  %add.5204 = f32[] add(%add.5203, %all-reduce.780)
  %square.470 = f32[512,14336]{1,0} multiply(%add.3539, %add.3539)
  %reduce.1213 = f32[] reduce(%square.470, %constant.2882), dimensions={0,1}, to_apply=%region_1085.33044
  %all-reduce.781 = f32[] all-reduce(%reduce.1213), channel_id=1232, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1085.33044.clone
  %add.5205 = f32[] add(%add.5204, %all-reduce.781)
  %square.471 = f32[14336,512]{1,0} multiply(%add.3544, %add.3544)
  %reduce.1214 = f32[] reduce(%square.471, %constant.2882), dimensions={0,1}, to_apply=%region_1086.33051
  %all-reduce.782 = f32[] all-reduce(%reduce.1214), channel_id=1233, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1086.33051.clone
  %add.5206 = f32[] add(%add.5205, %all-reduce.782)
  %square.472 = f32[4096]{0} multiply(%add.3550, %add.3550)
  %reduce.1215 = f32[] reduce(%square.472, %constant.2882), dimensions={0}, to_apply=%region_1087.33058
  %add.5207 = f32[] add(%add.5206, %reduce.1215)
  %square.473 = f32[4096]{0} multiply(%add.3555, %add.3555)
  %reduce.1216 = f32[] reduce(%square.473, %constant.2882), dimensions={0}, to_apply=%region_1088.33065
  %add.5208 = f32[] add(%add.5207, %reduce.1216)
  %square.474 = f32[512,8,128]{2,1,0} multiply(%add.3560, %add.3560)
  %reduce.1217 = f32[] reduce(%square.474, %constant.2882), dimensions={0,1,2}, to_apply=%region_1089.33072
  %all-reduce.783 = f32[] all-reduce(%reduce.1217), channel_id=1234, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1089.33072.clone
  %add.5209 = f32[] add(%add.5208, %all-reduce.783)
  %square.475 = f32[32,128,512]{2,1,0} multiply(%add.3565, %add.3565)
  %reduce.1218 = f32[] reduce(%square.475, %constant.2882), dimensions={0,1,2}, to_apply=%region_1090.33079
  %all-reduce.784 = f32[] all-reduce(%reduce.1218), channel_id=1235, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1090.33079.clone
  %add.5211 = f32[] add(%add.5209, %all-reduce.784)
  %square.476 = f32[512,32,128]{2,1,0} multiply(%add.3570, %add.3570)
  %reduce.1219 = f32[] reduce(%square.476, %constant.2882), dimensions={0,1,2}, to_apply=%region_1091.33086
  %all-reduce.785 = f32[] all-reduce(%reduce.1219), channel_id=1236, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1091.33086.clone
  %add.5212 = f32[] add(%add.5211, %all-reduce.785)
  %square.477 = f32[512,8,128]{2,1,0} multiply(%add.3575, %add.3575)
  %reduce.1220 = f32[] reduce(%square.477, %constant.2882), dimensions={0,1,2}, to_apply=%region_1092.33093
  %all-reduce.786 = f32[] all-reduce(%reduce.1220), channel_id=1237, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1092.33093.clone
  %add.5213 = f32[] add(%add.5212, %all-reduce.786)
  %square.478 = f32[512,14336]{1,0} multiply(%add.3581, %add.3581)
  %reduce.1221 = f32[] reduce(%square.478, %constant.2882), dimensions={0,1}, to_apply=%region_1093.33100
  %all-reduce.787 = f32[] all-reduce(%reduce.1221), channel_id=1238, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1093.33100.clone
  %add.5214 = f32[] add(%add.5213, %all-reduce.787)
  %square.479 = f32[512,14336]{1,0} multiply(%add.3587, %add.3587)
  %reduce.1222 = f32[] reduce(%square.479, %constant.2882), dimensions={0,1}, to_apply=%region_1094.33107
  %all-reduce.788 = f32[] all-reduce(%reduce.1222), channel_id=1239, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1094.33107.clone
  %add.5215 = f32[] add(%add.5214, %all-reduce.788)
  %square.480 = f32[14336,512]{1,0} multiply(%add.3593, %add.3593)
  %reduce.1223 = f32[] reduce(%square.480, %constant.2882), dimensions={0,1}, to_apply=%region_1095.33114
  %all-reduce.789 = f32[] all-reduce(%reduce.1223), channel_id=1240, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1095.33114.clone
  %add.5216 = f32[] add(%add.5215, %all-reduce.789)
  %square.481 = f32[4096]{0} multiply(%add.3598, %add.3598)
  %reduce.1224 = f32[] reduce(%square.481, %constant.2882), dimensions={0}, to_apply=%region_1096.33121
  %add.5217 = f32[] add(%add.5216, %reduce.1224)
  %square.482 = f32[4096]{0} multiply(%add.3603, %add.3603)
  %reduce.1225 = f32[] reduce(%square.482, %constant.2882), dimensions={0}, to_apply=%region_1097.33128
  %add.5218 = f32[] add(%add.5217, %reduce.1225)
  %square.483 = f32[512,8,128]{2,1,0} multiply(%add.3608, %add.3608)
  %reduce.1226 = f32[] reduce(%square.483, %constant.2882), dimensions={0,1,2}, to_apply=%region_1098.33135
  %all-reduce.790 = f32[] all-reduce(%reduce.1226), channel_id=1241, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1098.33135.clone
  %add.5219 = f32[] add(%add.5218, %all-reduce.790)
  %square.484 = f32[32,128,512]{2,1,0} multiply(%add.3613, %add.3613)
  %reduce.1227 = f32[] reduce(%square.484, %constant.2882), dimensions={0,1,2}, to_apply=%region_1099.33142
  %all-reduce.791 = f32[] all-reduce(%reduce.1227), channel_id=1242, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1099.33142.clone
  %add.5220 = f32[] add(%add.5219, %all-reduce.791)
  %square.485 = f32[512,32,128]{2,1,0} multiply(%add.3619, %add.3619)
  %reduce.1228 = f32[] reduce(%square.485, %constant.2882), dimensions={0,1,2}, to_apply=%region_1100.33149
  %all-reduce.792 = f32[] all-reduce(%reduce.1228), channel_id=1243, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1100.33149.clone
  %add.5221 = f32[] add(%add.5220, %all-reduce.792)
  %square.486 = f32[512,8,128]{2,1,0} multiply(%add.3624, %add.3624)
  %reduce.1229 = f32[] reduce(%square.486, %constant.2882), dimensions={0,1,2}, to_apply=%region_1101.33156
  %all-reduce.793 = f32[] all-reduce(%reduce.1229), channel_id=1244, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1101.33156.clone
  %add.5222 = f32[] add(%add.5221, %all-reduce.793)
  %square.487 = f32[512,14336]{1,0} multiply(%add.3631, %add.3631)
  %reduce.1230 = f32[] reduce(%square.487, %constant.2882), dimensions={0,1}, to_apply=%region_1102.33163
  %all-reduce.794 = f32[] all-reduce(%reduce.1230), channel_id=1245, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1102.33163.clone
  %add.5223 = f32[] add(%add.5222, %all-reduce.794)
  %square.488 = f32[512,14336]{1,0} multiply(%add.3636, %add.3636)
  %reduce.1231 = f32[] reduce(%square.488, %constant.2882), dimensions={0,1}, to_apply=%region_1103.33170
  %all-reduce.795 = f32[] all-reduce(%reduce.1231), channel_id=1246, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1103.33170.clone
  %add.5225 = f32[] add(%add.5223, %all-reduce.795)
  %square.489 = f32[14336,512]{1,0} multiply(%add.3642, %add.3642)
  %reduce.1232 = f32[] reduce(%square.489, %constant.2882), dimensions={0,1}, to_apply=%region_1104.33177
  %all-reduce.796 = f32[] all-reduce(%reduce.1232), channel_id=1247, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1104.33177.clone
  %add.5226 = f32[] add(%add.5225, %all-reduce.796)
  %square.490 = f32[4096]{0} multiply(%add.3647, %add.3647)
  %reduce.1233 = f32[] reduce(%square.490, %constant.2882), dimensions={0}, to_apply=%region_1105.33184
  %add.5227 = f32[] add(%add.5226, %reduce.1233)
  %square.491 = f32[4096]{0} multiply(%add.3653, %add.3653)
  %reduce.1234 = f32[] reduce(%square.491, %constant.2882), dimensions={0}, to_apply=%region_1106.33191
  %add.5228 = f32[] add(%add.5227, %reduce.1234)
  %square.492 = f32[512,8,128]{2,1,0} multiply(%add.3658, %add.3658)
  %reduce.1235 = f32[] reduce(%square.492, %constant.2882), dimensions={0,1,2}, to_apply=%region_1107.33198
  %all-reduce.797 = f32[] all-reduce(%reduce.1235), channel_id=1248, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1107.33198.clone
  %add.5229 = f32[] add(%add.5228, %all-reduce.797)
  %square.493 = f32[32,128,512]{2,1,0} multiply(%add.3664, %add.3664)
  %reduce.1236 = f32[] reduce(%square.493, %constant.2882), dimensions={0,1,2}, to_apply=%region_1108.33205
  %all-reduce.798 = f32[] all-reduce(%reduce.1236), channel_id=1249, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1108.33205.clone
  %add.5230 = f32[] add(%add.5229, %all-reduce.798)
  %square.494 = f32[512,32,128]{2,1,0} multiply(%add.3669, %add.3669)
  %reduce.1237 = f32[] reduce(%square.494, %constant.2882), dimensions={0,1,2}, to_apply=%region_1109.33212
  %all-reduce.799 = f32[] all-reduce(%reduce.1237), channel_id=1250, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1109.33212.clone
  %add.5231 = f32[] add(%add.5230, %all-reduce.799)
  %square.495 = f32[512,8,128]{2,1,0} multiply(%add.3675, %add.3675)
  %reduce.1238 = f32[] reduce(%square.495, %constant.2882), dimensions={0,1,2}, to_apply=%region_1110.33219
  %all-reduce.800 = f32[] all-reduce(%reduce.1238), channel_id=1251, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1110.33219.clone
  %add.5232 = f32[] add(%add.5231, %all-reduce.800)
  %square.496 = f32[512,14336]{1,0} multiply(%add.3680, %add.3680)
  %reduce.1239 = f32[] reduce(%square.496, %constant.2882), dimensions={0,1}, to_apply=%region_1111.33226
  %all-reduce.801 = f32[] all-reduce(%reduce.1239), channel_id=1252, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1111.33226.clone
  %add.5234 = f32[] add(%add.5232, %all-reduce.801)
  %square.497 = f32[512,14336]{1,0} multiply(%add.3685, %add.3685)
  %reduce.1240 = f32[] reduce(%square.497, %constant.2882), dimensions={0,1}, to_apply=%region_1112.33233
  %all-reduce.802 = f32[] all-reduce(%reduce.1240), channel_id=1253, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1112.33233.clone
  %add.5235 = f32[] add(%add.5234, %all-reduce.802)
  %square.498 = f32[14336,512]{1,0} multiply(%add.3690, %add.3690)
  %reduce.1241 = f32[] reduce(%square.498, %constant.2882), dimensions={0,1}, to_apply=%region_1113.33240
  %all-reduce.803 = f32[] all-reduce(%reduce.1241), channel_id=1254, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1113.33240.clone
  %add.5236 = f32[] add(%add.5235, %all-reduce.803)
  %square.499 = f32[4096]{0} multiply(%add.3696, %add.3696)
  %reduce.1242 = f32[] reduce(%square.499, %constant.2882), dimensions={0}, to_apply=%region_1114.33247
  %add.5237 = f32[] add(%add.5236, %reduce.1242)
  %square.500 = f32[4096]{0} multiply(%add.3701, %add.3701)
  %reduce.1243 = f32[] reduce(%square.500, %constant.2882), dimensions={0}, to_apply=%region_1115.33254
  %add.5238 = f32[] add(%add.5237, %reduce.1243)
  %square.501 = f32[512,8,128]{2,1,0} multiply(%add.3706, %add.3706)
  %reduce.1244 = f32[] reduce(%square.501, %constant.2882), dimensions={0,1,2}, to_apply=%region_1116.33261
  %all-reduce.804 = f32[] all-reduce(%reduce.1244), channel_id=1255, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1116.33261.clone
  %add.5239 = f32[] add(%add.5238, %all-reduce.804)
  %square.502 = f32[32,128,512]{2,1,0} multiply(%add.3711, %add.3711)
  %reduce.1245 = f32[] reduce(%square.502, %constant.2882), dimensions={0,1,2}, to_apply=%region_1117.33268
  %all-reduce.805 = f32[] all-reduce(%reduce.1245), channel_id=1256, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1117.33268.clone
  %add.5240 = f32[] add(%add.5239, %all-reduce.805)
  %square.503 = f32[512,32,128]{2,1,0} multiply(%add.3717, %add.3717)
  %reduce.1246 = f32[] reduce(%square.503, %constant.2882), dimensions={0,1,2}, to_apply=%region_1118.33275
  %all-reduce.806 = f32[] all-reduce(%reduce.1246), channel_id=1257, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1118.33275.clone
  %add.5241 = f32[] add(%add.5240, %all-reduce.806)
  %square.504 = f32[512,8,128]{2,1,0} multiply(%add.3722, %add.3722)
  %reduce.1247 = f32[] reduce(%square.504, %constant.2882), dimensions={0,1,2}, to_apply=%region_1119.33282
  %all-reduce.807 = f32[] all-reduce(%reduce.1247), channel_id=1258, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1119.33282.clone
  %add.5242 = f32[] add(%add.5241, %all-reduce.807)
  %square.505 = f32[512,14336]{1,0} multiply(%add.3727, %add.3727)
  %reduce.1248 = f32[] reduce(%square.505, %constant.2882), dimensions={0,1}, to_apply=%region_1120.33289
  %all-reduce.808 = f32[] all-reduce(%reduce.1248), channel_id=1259, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1120.33289.clone
  %add.5243 = f32[] add(%add.5242, %all-reduce.808)
  %square.506 = f32[512,14336]{1,0} multiply(%add.3733, %add.3733)
  %reduce.1249 = f32[] reduce(%square.506, %constant.2882), dimensions={0,1}, to_apply=%region_1121.33296
  %all-reduce.809 = f32[] all-reduce(%reduce.1249), channel_id=1260, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1121.33296.clone
  %add.5244 = f32[] add(%add.5243, %all-reduce.809)
  %square.507 = f32[14336,512]{1,0} multiply(%add.3738, %add.3738)
  %reduce.1250 = f32[] reduce(%square.507, %constant.2882), dimensions={0,1}, to_apply=%region_1122.33303
  %all-reduce.810 = f32[] all-reduce(%reduce.1250), channel_id=1261, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1122.33303.clone
  %add.5245 = f32[] add(%add.5244, %all-reduce.810)
  %square.508 = f32[4096]{0} multiply(%add.3744, %add.3744)
  %reduce.1251 = f32[] reduce(%square.508, %constant.2882), dimensions={0}, to_apply=%region_1123.33310
  %add.5246 = f32[] add(%add.5245, %reduce.1251)
  %square.509 = f32[4096]{0} multiply(%add.3749, %add.3749)
  %reduce.1252 = f32[] reduce(%square.509, %constant.2882), dimensions={0}, to_apply=%region_1124.33317
  %add.5248 = f32[] add(%add.5246, %reduce.1252)
  %square.510 = f32[512,8,128]{2,1,0} multiply(%add.3754, %add.3754)
  %reduce.1253 = f32[] reduce(%square.510, %constant.2882), dimensions={0,1,2}, to_apply=%region_1125.33324
  %all-reduce.811 = f32[] all-reduce(%reduce.1253), channel_id=1262, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1125.33324.clone
  %add.5249 = f32[] add(%add.5248, %all-reduce.811)
  %square.511 = f32[32,128,512]{2,1,0} multiply(%add.3759, %add.3759)
  %reduce.1254 = f32[] reduce(%square.511, %constant.2882), dimensions={0,1,2}, to_apply=%region_1126.33331
  %all-reduce.812 = f32[] all-reduce(%reduce.1254), channel_id=1263, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1126.33331.clone
  %add.5250 = f32[] add(%add.5249, %all-reduce.812)
  %square.512 = f32[512,32,128]{2,1,0} multiply(%add.3764, %add.3764)
  %reduce.1255 = f32[] reduce(%square.512, %constant.2882), dimensions={0,1,2}, to_apply=%region_1127.33338
  %all-reduce.813 = f32[] all-reduce(%reduce.1255), channel_id=1264, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1127.33338.clone
  %add.5251 = f32[] add(%add.5250, %all-reduce.813)
  %square.513 = f32[512,8,128]{2,1,0} multiply(%add.3770, %add.3770)
  %reduce.1256 = f32[] reduce(%square.513, %constant.2882), dimensions={0,1,2}, to_apply=%region_1128.33345
  %all-reduce.814 = f32[] all-reduce(%reduce.1256), channel_id=1265, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1128.33345.clone
  %add.5252 = f32[] add(%add.5251, %all-reduce.814)
  %square.514 = f32[512,14336]{1,0} multiply(%add.3775, %add.3775)
  %reduce.1257 = f32[] reduce(%square.514, %constant.2882), dimensions={0,1}, to_apply=%region_1129.33352
  %all-reduce.815 = f32[] all-reduce(%reduce.1257), channel_id=1266, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1129.33352.clone
  %add.5253 = f32[] add(%add.5252, %all-reduce.815)
  %square.515 = f32[512,14336]{1,0} multiply(%add.3781, %add.3781)
  %reduce.1258 = f32[] reduce(%square.515, %constant.2882), dimensions={0,1}, to_apply=%region_1130.33359
  %all-reduce.816 = f32[] all-reduce(%reduce.1258), channel_id=1267, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1130.33359.clone
  %add.5254 = f32[] add(%add.5253, %all-reduce.816)
  %square.516 = f32[14336,512]{1,0} multiply(%add.3786, %add.3786)
  %reduce.1259 = f32[] reduce(%square.516, %constant.2882), dimensions={0,1}, to_apply=%region_1131.33366
  %all-reduce.817 = f32[] all-reduce(%reduce.1259), channel_id=1268, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1131.33366.clone
  %add.5255 = f32[] add(%add.5254, %all-reduce.817)
  %square.517 = f32[4096]{0} multiply(%add.3791, %add.3791)
  %reduce.1260 = f32[] reduce(%square.517, %constant.2882), dimensions={0}, to_apply=%region_1132.33373
  %add.5256 = f32[] add(%add.5255, %reduce.1260)
  %square.518 = f32[4096]{0} multiply(%add.3796, %add.3796)
  %reduce.1261 = f32[] reduce(%square.518, %constant.2882), dimensions={0}, to_apply=%region_1133.33380
  %add.5257 = f32[] add(%add.5256, %reduce.1261)
  %square.519 = f32[512,8,128]{2,1,0} multiply(%add.3801, %add.3801)
  %reduce.1262 = f32[] reduce(%square.519, %constant.2882), dimensions={0,1,2}, to_apply=%region_1134.33387
  %all-reduce.818 = f32[] all-reduce(%reduce.1262), channel_id=1269, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1134.33387.clone
  %add.5259 = f32[] add(%add.5257, %all-reduce.818)
  %square.520 = f32[32,128,512]{2,1,0} multiply(%add.3808, %add.3808)
  %reduce.1263 = f32[] reduce(%square.520, %constant.2882), dimensions={0,1,2}, to_apply=%region_1135.33394
  %all-reduce.819 = f32[] all-reduce(%reduce.1263), channel_id=1270, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1135.33394.clone
  %add.5260 = f32[] add(%add.5259, %all-reduce.819)
  %square.521 = f32[512,32,128]{2,1,0} multiply(%add.3813, %add.3813)
  %reduce.1264 = f32[] reduce(%square.521, %constant.2882), dimensions={0,1,2}, to_apply=%region_1136.33401
  %all-reduce.820 = f32[] all-reduce(%reduce.1264), channel_id=1271, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1136.33401.clone
  %add.5261 = f32[] add(%add.5260, %all-reduce.820)
  %square.522 = f32[512,8,128]{2,1,0} multiply(%add.3818, %add.3818)
  %reduce.1265 = f32[] reduce(%square.522, %constant.2882), dimensions={0,1,2}, to_apply=%region_1137.33408
  %all-reduce.821 = f32[] all-reduce(%reduce.1265), channel_id=1272, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1137.33408.clone
  %add.5262 = f32[] add(%add.5261, %all-reduce.821)
  %square.523 = f32[512,14336]{1,0} multiply(%add.3823, %add.3823)
  %reduce.1266 = f32[] reduce(%square.523, %constant.2882), dimensions={0,1}, to_apply=%region_1138.33415
  %all-reduce.822 = f32[] all-reduce(%reduce.1266), channel_id=1273, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1138.33415.clone
  %add.5263 = f32[] add(%add.5262, %all-reduce.822)
  %square.524 = f32[512,14336]{1,0} multiply(%add.3828, %add.3828)
  %reduce.1267 = f32[] reduce(%square.524, %constant.2882), dimensions={0,1}, to_apply=%region_1139.33422
  %all-reduce.823 = f32[] all-reduce(%reduce.1267), channel_id=1274, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1139.33422.clone
  %add.5264 = f32[] add(%add.5263, %all-reduce.823)
  %square.525 = f32[14336,512]{1,0} multiply(%add.3833, %add.3833)
  %reduce.1268 = f32[] reduce(%square.525, %constant.2882), dimensions={0,1}, to_apply=%region_1140.33429
  %all-reduce.824 = f32[] all-reduce(%reduce.1268), channel_id=1275, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1140.33429.clone
  %add.5265 = f32[] add(%add.5264, %all-reduce.824)
  %square.526 = f32[4096]{0} multiply(%add.3838, %add.3838)
  %reduce.1269 = f32[] reduce(%square.526, %constant.2882), dimensions={0}, to_apply=%region_1141.33436
  %add.5266 = f32[] add(%add.5265, %reduce.1269)
  %square.527 = f32[4096]{0} multiply(%add.3843, %add.3843)
  %reduce.1270 = f32[] reduce(%square.527, %constant.2882), dimensions={0}, to_apply=%region_1142.33443
  %add.5267 = f32[] add(%add.5266, %reduce.1270)
  %square.528 = f32[512,8,128]{2,1,0} multiply(%add.3848, %add.3848)
  %reduce.1271 = f32[] reduce(%square.528, %constant.2882), dimensions={0,1,2}, to_apply=%region_1143.33450
  %all-reduce.825 = f32[] all-reduce(%reduce.1271), channel_id=1276, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1143.33450.clone
  %add.5270 = f32[] add(%add.5267, %all-reduce.825)
  %square.529 = f32[32,128,512]{2,1,0} multiply(%add.3853, %add.3853)
  %reduce.1272 = f32[] reduce(%square.529, %constant.2882), dimensions={0,1,2}, to_apply=%region_1144.33457
  %all-reduce.826 = f32[] all-reduce(%reduce.1272), channel_id=1277, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1144.33457.clone
  %add.5271 = f32[] add(%add.5270, %all-reduce.826)
  %square.530 = f32[512,32,128]{2,1,0} multiply(%add.3859, %add.3859)
  %reduce.1273 = f32[] reduce(%square.530, %constant.2882), dimensions={0,1,2}, to_apply=%region_1145.33464
  %all-reduce.827 = f32[] all-reduce(%reduce.1273), channel_id=1278, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1145.33464.clone
  %add.5272 = f32[] add(%add.5271, %all-reduce.827)
  %square.531 = f32[512,8,128]{2,1,0} multiply(%add.3866, %add.3866)
  %reduce.1274 = f32[] reduce(%square.531, %constant.2882), dimensions={0,1,2}, to_apply=%region_1146.33471
  %all-reduce.828 = f32[] all-reduce(%reduce.1274), channel_id=1279, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1146.33471.clone
  %add.5273 = f32[] add(%add.5272, %all-reduce.828)
  %square.532 = f32[512,14336]{1,0} multiply(%add.3871, %add.3871)
  %reduce.1275 = f32[] reduce(%square.532, %constant.2882), dimensions={0,1}, to_apply=%region_1147.33478
  %all-reduce.829 = f32[] all-reduce(%reduce.1275), channel_id=1280, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1147.33478.clone
  %add.5274 = f32[] add(%add.5273, %all-reduce.829)
  %square.533 = f32[512,14336]{1,0} multiply(%add.3877, %add.3877)
  %reduce.1276 = f32[] reduce(%square.533, %constant.2882), dimensions={0,1}, to_apply=%region_1148.33485
  %all-reduce.830 = f32[] all-reduce(%reduce.1276), channel_id=1281, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1148.33485.clone
  %add.5275 = f32[] add(%add.5274, %all-reduce.830)
  %square.534 = f32[14336,512]{1,0} multiply(%add.3883, %add.3883)
  %reduce.1277 = f32[] reduce(%square.534, %constant.2882), dimensions={0,1}, to_apply=%region_1149.33492
  %all-reduce.831 = f32[] all-reduce(%reduce.1277), channel_id=1282, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1149.33492.clone
  %add.5276 = f32[] add(%add.5275, %all-reduce.831)
  %square.535 = f32[4096]{0} multiply(%add.3888, %add.3888)
  %reduce.1278 = f32[] reduce(%square.535, %constant.2882), dimensions={0}, to_apply=%region_1150.33499
  %add.5277 = f32[] add(%add.5276, %reduce.1278)
  %square.536 = f32[4096]{0} multiply(%add.3894, %add.3894)
  %reduce.1279 = f32[] reduce(%square.536, %constant.2882), dimensions={0}, to_apply=%region_1151.33506
  %add.5279 = f32[] add(%add.5277, %reduce.1279)
  %square.537 = f32[512,8,128]{2,1,0} multiply(%add.3900, %add.3900)
  %reduce.1280 = f32[] reduce(%square.537, %constant.2882), dimensions={0,1,2}, to_apply=%region_1152.33513
  %all-reduce.832 = f32[] all-reduce(%reduce.1280), channel_id=1283, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1152.33513.clone
  %add.5280 = f32[] add(%add.5279, %all-reduce.832)
  %square.538 = f32[32,128,512]{2,1,0} multiply(%add.3906, %add.3906)
  %reduce.1281 = f32[] reduce(%square.538, %constant.2882), dimensions={0,1,2}, to_apply=%region_1153.33520
  %all-reduce.833 = f32[] all-reduce(%reduce.1281), channel_id=1284, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1153.33520.clone
  %add.5281 = f32[] add(%add.5280, %all-reduce.833)
  %square.539 = f32[512,32,128]{2,1,0} multiply(%add.3912, %add.3912)
  %reduce.1282 = f32[] reduce(%square.539, %constant.2882), dimensions={0,1,2}, to_apply=%region_1154.33527
  %all-reduce.834 = f32[] all-reduce(%reduce.1282), channel_id=1285, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1154.33527.clone
  %add.5282 = f32[] add(%add.5281, %all-reduce.834)
  %square.540 = f32[512,8,128]{2,1,0} multiply(%add.3917, %add.3917)
  %reduce.1283 = f32[] reduce(%square.540, %constant.2882), dimensions={0,1,2}, to_apply=%region_1155.33534
  %all-reduce.835 = f32[] all-reduce(%reduce.1283), channel_id=1286, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1155.33534.clone
  %add.5283 = f32[] add(%add.5282, %all-reduce.835)
  %square.541 = f32[512,14336]{1,0} multiply(%add.3922, %add.3922)
  %reduce.1284 = f32[] reduce(%square.541, %constant.2882), dimensions={0,1}, to_apply=%region_1156.33541
  %all-reduce.836 = f32[] all-reduce(%reduce.1284), channel_id=1287, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1156.33541.clone
  %add.5284 = f32[] add(%add.5283, %all-reduce.836)
  %square.542 = f32[512,14336]{1,0} multiply(%add.3927, %add.3927)
  %reduce.1285 = f32[] reduce(%square.542, %constant.2882), dimensions={0,1}, to_apply=%region_1157.33548
  %all-reduce.837 = f32[] all-reduce(%reduce.1285), channel_id=1288, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1157.33548.clone
  %add.5285 = f32[] add(%add.5284, %all-reduce.837)
  %square.543 = f32[14336,512]{1,0} multiply(%add.3932, %add.3932)
  %reduce.1286 = f32[] reduce(%square.543, %constant.2882), dimensions={0,1}, to_apply=%region_1158.33555
  %all-reduce.838 = f32[] all-reduce(%reduce.1286), channel_id=1289, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1158.33555.clone
  %add.5286 = f32[] add(%add.5285, %all-reduce.838)
  %square.544 = f32[4096]{0} multiply(%add.3937, %add.3937)
  %reduce.1287 = f32[] reduce(%square.544, %constant.2882), dimensions={0}, to_apply=%region_1159.33562
  %add.5287 = f32[] add(%add.5286, %reduce.1287)
  %square.545 = f32[4096]{0} multiply(%add.3943, %add.3943)
  %reduce.1288 = f32[] reduce(%square.545, %constant.2882), dimensions={0}, to_apply=%region_1160.33569
  %add.5288 = f32[] add(%add.5287, %reduce.1288)
  %square.546 = f32[512,8,128]{2,1,0} multiply(%add.3948, %add.3948)
  %reduce.1289 = f32[] reduce(%square.546, %constant.2882), dimensions={0,1,2}, to_apply=%region_1161.33576
  %all-reduce.839 = f32[] all-reduce(%reduce.1289), channel_id=1290, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1161.33576.clone
  %add.5289 = f32[] add(%add.5288, %all-reduce.839)
  %square.547 = f32[32,128,512]{2,1,0} multiply(%add.3953, %add.3953)
  %reduce.1290 = f32[] reduce(%square.547, %constant.2882), dimensions={0,1,2}, to_apply=%region_1162.33583
  %all-reduce.840 = f32[] all-reduce(%reduce.1290), channel_id=1291, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1162.33583.clone
  %add.5290 = f32[] add(%add.5289, %all-reduce.840)
  %square.548 = f32[512,32,128]{2,1,0} multiply(%add.3958, %add.3958)
  %reduce.1291 = f32[] reduce(%square.548, %constant.2882), dimensions={0,1,2}, to_apply=%region_1163.33590
  %all-reduce.841 = f32[] all-reduce(%reduce.1291), channel_id=1292, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1163.33590.clone
  %add.5291 = f32[] add(%add.5290, %all-reduce.841)
  %square.549 = f32[512,8,128]{2,1,0} multiply(%add.3963, %add.3963)
  %reduce.1292 = f32[] reduce(%square.549, %constant.2882), dimensions={0,1,2}, to_apply=%region_1164.33597
  %all-reduce.842 = f32[] all-reduce(%reduce.1292), channel_id=1293, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1164.33597.clone
  %add.5292 = f32[] add(%add.5291, %all-reduce.842)
  %square.550 = f32[512,14336]{1,0} multiply(%add.3968, %add.3968)
  %reduce.1293 = f32[] reduce(%square.550, %constant.2882), dimensions={0,1}, to_apply=%region_1165.33604
  %all-reduce.843 = f32[] all-reduce(%reduce.1293), channel_id=1294, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1165.33604.clone
  %add.5293 = f32[] add(%add.5292, %all-reduce.843)
  %square.551 = f32[512,14336]{1,0} multiply(%add.3975, %add.3975)
  %reduce.1294 = f32[] reduce(%square.551, %constant.2882), dimensions={0,1}, to_apply=%region_1166.33611
  %all-reduce.844 = f32[] all-reduce(%reduce.1294), channel_id=1295, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1166.33611.clone
  %add.5294 = f32[] add(%add.5293, %all-reduce.844)
  %square.552 = f32[14336,512]{1,0} multiply(%add.3980, %add.3980)
  %reduce.1295 = f32[] reduce(%square.552, %constant.2882), dimensions={0,1}, to_apply=%region_1167.33618
  %all-reduce.845 = f32[] all-reduce(%reduce.1295), channel_id=1296, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1167.33618.clone
  %add.5295 = f32[] add(%add.5294, %all-reduce.845)
  %square.553 = f32[4096]{0} multiply(%add.3985, %add.3985)
  %reduce.1296 = f32[] reduce(%square.553, %constant.2882), dimensions={0}, to_apply=%region_1168.33625
  %add.5296 = f32[] add(%add.5295, %reduce.1296)
  %square.554 = f32[4096]{0} multiply(%add.3990, %add.3990)
  %reduce.1297 = f32[] reduce(%square.554, %constant.2882), dimensions={0}, to_apply=%region_1169.33632
  %add.5297 = f32[] add(%add.5296, %reduce.1297)
  %square.555 = f32[512,8,128]{2,1,0} multiply(%add.3995, %add.3995)
  %reduce.1298 = f32[] reduce(%square.555, %constant.2882), dimensions={0,1,2}, to_apply=%region_1170.33639
  %all-reduce.846 = f32[] all-reduce(%reduce.1298), channel_id=1297, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1170.33639.clone
  %add.5298 = f32[] add(%add.5297, %all-reduce.846)
  %square.556 = f32[32,128,512]{2,1,0} multiply(%add.4000, %add.4000)
  %reduce.1299 = f32[] reduce(%square.556, %constant.2882), dimensions={0,1,2}, to_apply=%region_1171.33646
  %all-reduce.847 = f32[] all-reduce(%reduce.1299), channel_id=1298, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1171.33646.clone
  %add.5299 = f32[] add(%add.5298, %all-reduce.847)
  %square.557 = f32[512,32,128]{2,1,0} multiply(%add.4006, %add.4006)
  %reduce.1300 = f32[] reduce(%square.557, %constant.2882), dimensions={0,1,2}, to_apply=%region_1172.33653
  %all-reduce.848 = f32[] all-reduce(%reduce.1300), channel_id=1299, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1172.33653.clone
  %add.5300 = f32[] add(%add.5299, %all-reduce.848)
  %square.558 = f32[512,8,128]{2,1,0} multiply(%add.4012, %add.4012)
  %reduce.1301 = f32[] reduce(%square.558, %constant.2882), dimensions={0,1,2}, to_apply=%region_1173.33660
  %all-reduce.849 = f32[] all-reduce(%reduce.1301), channel_id=1300, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1173.33660.clone
  %add.5301 = f32[] add(%add.5300, %all-reduce.849)
  %square.559 = f32[512,14336]{1,0} multiply(%add.4017, %add.4017)
  %reduce.1302 = f32[] reduce(%square.559, %constant.2882), dimensions={0,1}, to_apply=%region_1174.33667
  %all-reduce.850 = f32[] all-reduce(%reduce.1302), channel_id=1301, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1174.33667.clone
  %add.5302 = f32[] add(%add.5301, %all-reduce.850)
  %square.560 = f32[512,14336]{1,0} multiply(%add.4022, %add.4022)
  %reduce.1303 = f32[] reduce(%square.560, %constant.2882), dimensions={0,1}, to_apply=%region_1175.33674
  %all-reduce.851 = f32[] all-reduce(%reduce.1303), channel_id=1302, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1175.33674.clone
  %add.5303 = f32[] add(%add.5302, %all-reduce.851)
  %square.561 = f32[14336,512]{1,0} multiply(%add.4027, %add.4027)
  %reduce.1304 = f32[] reduce(%square.561, %constant.2882), dimensions={0,1}, to_apply=%region_1176.33681
  %all-reduce.852 = f32[] all-reduce(%reduce.1304), channel_id=1303, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1176.33681.clone
  %add.5305 = f32[] add(%add.5303, %all-reduce.852)
  %square.562 = f32[4096]{0} multiply(%add.4032, %add.4032)
  %reduce.1305 = f32[] reduce(%square.562, %constant.2882), dimensions={0}, to_apply=%region_1177.33688
  %add.5306 = f32[] add(%add.5305, %reduce.1305)
  %square.563 = f32[4096]{0} multiply(%add.4038, %add.4038)
  %reduce.1306 = f32[] reduce(%square.563, %constant.2882), dimensions={0}, to_apply=%region_1178.33695
  %add.5307 = f32[] add(%add.5306, %reduce.1306)
  %square.564 = f32[512,8,128]{2,1,0} multiply(%add.4043, %add.4043)
  %reduce.1307 = f32[] reduce(%square.564, %constant.2882), dimensions={0,1,2}, to_apply=%region_1179.33702
  %all-reduce.853 = f32[] all-reduce(%reduce.1307), channel_id=1304, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1179.33702.clone
  %add.5308 = f32[] add(%add.5307, %all-reduce.853)
  %square.565 = f32[32,128,512]{2,1,0} multiply(%add.4049, %add.4049)
  %reduce.1308 = f32[] reduce(%square.565, %constant.2882), dimensions={0,1,2}, to_apply=%region_1180.33709
  %all-reduce.854 = f32[] all-reduce(%reduce.1308), channel_id=1305, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1180.33709.clone
  %add.5310 = f32[] add(%add.5308, %all-reduce.854)
  %square.566 = f32[512,32,128]{2,1,0} multiply(%add.4054, %add.4054)
  %reduce.1309 = f32[] reduce(%square.566, %constant.2882), dimensions={0,1,2}, to_apply=%region_1181.33716
  %all-reduce.855 = f32[] all-reduce(%reduce.1309), channel_id=1306, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1181.33716.clone
  %add.5311 = f32[] add(%add.5310, %all-reduce.855)
  %square.567 = f32[512,8,128]{2,1,0} multiply(%add.4059, %add.4059)
  %reduce.1310 = f32[] reduce(%square.567, %constant.2882), dimensions={0,1,2}, to_apply=%region_1182.33723
  %all-reduce.856 = f32[] all-reduce(%reduce.1310), channel_id=1307, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1182.33723.clone
  %add.5312 = f32[] add(%add.5311, %all-reduce.856)
  %square.568 = f32[512,14336]{1,0} multiply(%add.4064, %add.4064)
  %reduce.1311 = f32[] reduce(%square.568, %constant.2882), dimensions={0,1}, to_apply=%region_1183.33730
  %all-reduce.857 = f32[] all-reduce(%reduce.1311), channel_id=1308, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1183.33730.clone
  %add.5313 = f32[] add(%add.5312, %all-reduce.857)
  %square.569 = f32[512,14336]{1,0} multiply(%add.4069, %add.4069)
  %reduce.1312 = f32[] reduce(%square.569, %constant.2882), dimensions={0,1}, to_apply=%region_1184.33737
  %all-reduce.858 = f32[] all-reduce(%reduce.1312), channel_id=1309, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1184.33737.clone
  %add.5314 = f32[] add(%add.5313, %all-reduce.858)
  %square.570 = f32[14336,512]{1,0} multiply(%add.4074, %add.4074)
  %reduce.1313 = f32[] reduce(%square.570, %constant.2882), dimensions={0,1}, to_apply=%region_1185.33744
  %all-reduce.859 = f32[] all-reduce(%reduce.1313), channel_id=1310, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1185.33744.clone
  %add.5315 = f32[] add(%add.5314, %all-reduce.859)
  %square.571 = f32[4096]{0} multiply(%add.4079, %add.4079)
  %reduce.1314 = f32[] reduce(%square.571, %constant.2882), dimensions={0}, to_apply=%region_1186.33751
  %add.5317 = f32[] add(%add.5315, %reduce.1314)
  %square.572 = f32[4096]{0} multiply(%add.4085, %add.4085)
  %reduce.1315 = f32[] reduce(%square.572, %constant.2882), dimensions={0}, to_apply=%region_1187.33758
  %add.5318 = f32[] add(%add.5317, %reduce.1315)
  %square.573 = f32[512,8,128]{2,1,0} multiply(%add.4091, %add.4091)
  %reduce.1316 = f32[] reduce(%square.573, %constant.2882), dimensions={0,1,2}, to_apply=%region_1188.33765
  %all-reduce.860 = f32[] all-reduce(%reduce.1316), channel_id=1311, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1188.33765.clone
  %add.5319 = f32[] add(%add.5318, %all-reduce.860)
  %square.574 = f32[32,128,512]{2,1,0} multiply(%add.4097, %add.4097)
  %reduce.1317 = f32[] reduce(%square.574, %constant.2882), dimensions={0,1,2}, to_apply=%region_1189.33772
  %all-reduce.861 = f32[] all-reduce(%reduce.1317), channel_id=1312, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1189.33772.clone
  %add.5320 = f32[] add(%add.5319, %all-reduce.861)
  %square.575 = f32[512,32,128]{2,1,0} multiply(%add.4102, %add.4102)
  %reduce.1318 = f32[] reduce(%square.575, %constant.2882), dimensions={0,1,2}, to_apply=%region_1190.33779
  %all-reduce.862 = f32[] all-reduce(%reduce.1318), channel_id=1313, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1190.33779.clone
  %add.5321 = f32[] add(%add.5320, %all-reduce.862)
  %square.576 = f32[512,8,128]{2,1,0} multiply(%add.4108, %add.4108)
  %reduce.1319 = f32[] reduce(%square.576, %constant.2882), dimensions={0,1,2}, to_apply=%region_1191.33786
  %all-reduce.863 = f32[] all-reduce(%reduce.1319), channel_id=1314, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1191.33786.clone
  %add.5322 = f32[] add(%add.5321, %all-reduce.863)
  %square.577 = f32[512,14336]{1,0} multiply(%add.4113, %add.4113)
  %reduce.1320 = f32[] reduce(%square.577, %constant.2882), dimensions={0,1}, to_apply=%region_1192.33793
  %all-reduce.864 = f32[] all-reduce(%reduce.1320), channel_id=1315, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1192.33793.clone
  %add.5323 = f32[] add(%add.5322, %all-reduce.864)
  %square.578 = f32[512,14336]{1,0} multiply(%add.4119, %add.4119)
  %reduce.1321 = f32[] reduce(%square.578, %constant.2882), dimensions={0,1}, to_apply=%region_1193.33800
  %all-reduce.865 = f32[] all-reduce(%reduce.1321), channel_id=1316, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1193.33800.clone
  %add.5324 = f32[] add(%add.5323, %all-reduce.865)
  %square.579 = f32[14336,512]{1,0} multiply(%add.4124, %add.4124)
  %reduce.1322 = f32[] reduce(%square.579, %constant.2882), dimensions={0,1}, to_apply=%region_1194.33807
  %all-reduce.866 = f32[] all-reduce(%reduce.1322), channel_id=1317, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1194.33807.clone
  %add.5325 = f32[] add(%add.5324, %all-reduce.866)
  %square.580 = f32[4096]{0} multiply(%add.4130, %add.4130)
  %reduce.1323 = f32[] reduce(%square.580, %constant.2882), dimensions={0}, to_apply=%region_1195.33814
  %add.5326 = f32[] add(%add.5325, %reduce.1323)
  %square.581 = f32[4096]{0} multiply(%add.4135, %add.4135)
  %reduce.1324 = f32[] reduce(%square.581, %constant.2882), dimensions={0}, to_apply=%region_1196.33821
  %add.5327 = f32[] add(%add.5326, %reduce.1324)
  %square.582 = f32[512,8,128]{2,1,0} multiply(%add.4140, %add.4140)
  %reduce.1325 = f32[] reduce(%square.582, %constant.2882), dimensions={0,1,2}, to_apply=%region_1197.33828
  %all-reduce.867 = f32[] all-reduce(%reduce.1325), channel_id=1318, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1197.33828.clone
  %add.5328 = f32[] add(%add.5327, %all-reduce.867)
  %square.583 = f32[32,128,512]{2,1,0} multiply(%add.4146, %add.4146)
  %reduce.1326 = f32[] reduce(%square.583, %constant.2882), dimensions={0,1,2}, to_apply=%region_1198.33835
  %all-reduce.868 = f32[] all-reduce(%reduce.1326), channel_id=1319, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1198.33835.clone
  %add.5329 = f32[] add(%add.5328, %all-reduce.868)
  %square.584 = f32[512,32,128]{2,1,0} multiply(%add.4151, %add.4151)
  %reduce.1327 = f32[] reduce(%square.584, %constant.2882), dimensions={0,1,2}, to_apply=%region_1199.33842
  %all-reduce.869 = f32[] all-reduce(%reduce.1327), channel_id=1320, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1199.33842.clone
  %add.5330 = f32[] add(%add.5329, %all-reduce.869)
  %square.585 = f32[512,8,128]{2,1,0} multiply(%add.4157, %add.4157)
  %reduce.1328 = f32[] reduce(%square.585, %constant.2882), dimensions={0,1,2}, to_apply=%region_1200.33849
  %all-reduce.870 = f32[] all-reduce(%reduce.1328), channel_id=1321, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1200.33849.clone
  %add.5331 = f32[] add(%add.5330, %all-reduce.870)
  %square.586 = f32[512,14336]{1,0} multiply(%add.4162, %add.4162)
  %reduce.1329 = f32[] reduce(%square.586, %constant.2882), dimensions={0,1}, to_apply=%region_1201.33856
  %all-reduce.871 = f32[] all-reduce(%reduce.1329), channel_id=1322, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1201.33856.clone
  %add.5332 = f32[] add(%add.5331, %all-reduce.871)
  %square.587 = f32[512,14336]{1,0} multiply(%add.4167, %add.4167)
  %reduce.1330 = f32[] reduce(%square.587, %constant.2882), dimensions={0,1}, to_apply=%region_1202.33863
  %all-reduce.872 = f32[] all-reduce(%reduce.1330), channel_id=1323, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1202.33863.clone
  %add.5333 = f32[] add(%add.5332, %all-reduce.872)
  %square.588 = f32[14336,512]{1,0} multiply(%add.4173, %add.4173)
  %reduce.1331 = f32[] reduce(%square.588, %constant.2882), dimensions={0,1}, to_apply=%region_1203.33870
  %all-reduce.873 = f32[] all-reduce(%reduce.1331), channel_id=1324, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1203.33870.clone
  %add.5334 = f32[] add(%add.5333, %all-reduce.873)
  %square.589 = f32[4096]{0} multiply(%add.4178, %add.4178)
  %reduce.1332 = f32[] reduce(%square.589, %constant.2882), dimensions={0}, to_apply=%region_1204.33877
  %add.5335 = f32[] add(%add.5334, %reduce.1332)
  %square.590 = f32[4096]{0} multiply(%add.4184, %add.4184)
  %reduce.1333 = f32[] reduce(%square.590, %constant.2882), dimensions={0}, to_apply=%region_1205.33884
  %add.5336 = f32[] add(%add.5335, %reduce.1333)
  %square.591 = f32[512,8,128]{2,1,0} multiply(%add.4189, %add.4189)
  %reduce.1334 = f32[] reduce(%square.591, %constant.2882), dimensions={0,1,2}, to_apply=%region_1206.33891
  %all-reduce.874 = f32[] all-reduce(%reduce.1334), channel_id=1325, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1206.33891.clone
  %add.5337 = f32[] add(%add.5336, %all-reduce.874)
  %square.592 = f32[32,128,512]{2,1,0} multiply(%add.4195, %add.4195)
  %reduce.1335 = f32[] reduce(%square.592, %constant.2882), dimensions={0,1,2}, to_apply=%region_1207.33898
  %all-reduce.875 = f32[] all-reduce(%reduce.1335), channel_id=1326, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1207.33898.clone
  %add.5338 = f32[] add(%add.5337, %all-reduce.875)
  %square.593 = f32[512,32,128]{2,1,0} multiply(%add.4201, %add.4201)
  %reduce.1336 = f32[] reduce(%square.593, %constant.2882), dimensions={0,1,2}, to_apply=%region_1208.33905
  %all-reduce.876 = f32[] all-reduce(%reduce.1336), channel_id=1327, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1208.33905.clone
  %add.5340 = f32[] add(%add.5338, %all-reduce.876)
  %square.594 = f32[512,8,128]{2,1,0} multiply(%add.4206, %add.4206)
  %reduce.1337 = f32[] reduce(%square.594, %constant.2882), dimensions={0,1,2}, to_apply=%region_1209.33912
  %all-reduce.877 = f32[] all-reduce(%reduce.1337), channel_id=1328, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1209.33912.clone
  %add.5341 = f32[] add(%add.5340, %all-reduce.877)
  %square.595 = f32[512,14336]{1,0} multiply(%add.4211, %add.4211)
  %reduce.1338 = f32[] reduce(%square.595, %constant.2882), dimensions={0,1}, to_apply=%region_1210.33919
  %all-reduce.878 = f32[] all-reduce(%reduce.1338), channel_id=1329, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1210.33919.clone
  %add.5342 = f32[] add(%add.5341, %all-reduce.878)
  %square.596 = f32[512,14336]{1,0} multiply(%add.4216, %add.4216)
  %reduce.1339 = f32[] reduce(%square.596, %constant.2882), dimensions={0,1}, to_apply=%region_1211.33926
  %all-reduce.879 = f32[] all-reduce(%reduce.1339), channel_id=1330, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1211.33926.clone
  %add.5343 = f32[] add(%add.5342, %all-reduce.879)
  %square.597 = f32[14336,512]{1,0} multiply(%add.4221, %add.4221)
  %reduce.1340 = f32[] reduce(%square.597, %constant.2882), dimensions={0,1}, to_apply=%region_1212.33933
  %all-reduce.880 = f32[] all-reduce(%reduce.1340), channel_id=1331, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1212.33933.clone
  %add.5344 = f32[] add(%add.5343, %all-reduce.880)
  %square.598 = f32[4096]{0} multiply(%add.4226, %add.4226)
  %reduce.1341 = f32[] reduce(%square.598, %constant.2882), dimensions={0}, to_apply=%region_1213.33940
  %add.5345 = f32[] add(%add.5344, %reduce.1341)
  %square.599 = f32[4096]{0} multiply(%add.4231, %add.4231)
  %reduce.1342 = f32[] reduce(%square.599, %constant.2882), dimensions={0}, to_apply=%region_1214.33947
  %add.5346 = f32[] add(%add.5345, %reduce.1342)
  %square.600 = f32[512,8,128]{2,1,0} multiply(%add.4237, %add.4237)
  %reduce.1343 = f32[] reduce(%square.600, %constant.2882), dimensions={0,1,2}, to_apply=%region_1215.33954
  %all-reduce.881 = f32[] all-reduce(%reduce.1343), channel_id=1332, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1215.33954.clone
  %add.5347 = f32[] add(%add.5346, %all-reduce.881)
  %square.601 = f32[32,128,512]{2,1,0} multiply(%add.4242, %add.4242)
  %reduce.1344 = f32[] reduce(%square.601, %constant.2882), dimensions={0,1,2}, to_apply=%region_1216.33961
  %all-reduce.882 = f32[] all-reduce(%reduce.1344), channel_id=1333, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1216.33961.clone
  %add.5348 = f32[] add(%add.5347, %all-reduce.882)
  %square.602 = f32[512,32,128]{2,1,0} multiply(%add.4247, %add.4247)
  %reduce.1345 = f32[] reduce(%square.602, %constant.2882), dimensions={0,1,2}, to_apply=%region_1217.33968
  %all-reduce.883 = f32[] all-reduce(%reduce.1345), channel_id=1334, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1217.33968.clone
  %add.5349 = f32[] add(%add.5348, %all-reduce.883)
  %square.603 = f32[512,8,128]{2,1,0} multiply(%add.4252, %add.4252)
  %reduce.1346 = f32[] reduce(%square.603, %constant.2882), dimensions={0,1,2}, to_apply=%region_1218.33975
  %all-reduce.884 = f32[] all-reduce(%reduce.1346), channel_id=1335, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1218.33975.clone
  %add.5350 = f32[] add(%add.5349, %all-reduce.884)
  %square.604 = f32[512,14336]{1,0} multiply(%add.4258, %add.4258)
  %reduce.1347 = f32[] reduce(%square.604, %constant.2882), dimensions={0,1}, to_apply=%region_1219.33982
  %all-reduce.885 = f32[] all-reduce(%reduce.1347), channel_id=1336, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1219.33982.clone
  %add.5351 = f32[] add(%add.5350, %all-reduce.885)
  %square.605 = f32[512,14336]{1,0} multiply(%add.4264, %add.4264)
  %reduce.1348 = f32[] reduce(%square.605, %constant.2882), dimensions={0,1}, to_apply=%region_1220.33989
  %all-reduce.886 = f32[] all-reduce(%reduce.1348), channel_id=1337, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1220.33989.clone
  %add.5352 = f32[] add(%add.5351, %all-reduce.886)
  %square.606 = f32[14336,512]{1,0} multiply(%add.4269, %add.4269)
  %reduce.1349 = f32[] reduce(%square.606, %constant.2882), dimensions={0,1}, to_apply=%region_1221.33996
  %all-reduce.887 = f32[] all-reduce(%reduce.1349), channel_id=1338, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1221.33996.clone
  %add.5353 = f32[] add(%add.5352, %all-reduce.887)
  %square.607 = f32[4096]{0} multiply(%add.4274, %add.4274)
  %reduce.1350 = f32[] reduce(%square.607, %constant.2882), dimensions={0}, to_apply=%region_1222.34003
  %add.5354 = f32[] add(%add.5353, %reduce.1350)
  %square.608 = f32[4096]{0} multiply(%add.4279, %add.4279)
  %reduce.1351 = f32[] reduce(%square.608, %constant.2882), dimensions={0}, to_apply=%region_1223.34010
  %add.5355 = f32[] add(%add.5354, %reduce.1351)
  %square.609 = f32[512,8,128]{2,1,0} multiply(%add.4284, %add.4284)
  %reduce.1352 = f32[] reduce(%square.609, %constant.2882), dimensions={0,1,2}, to_apply=%region_1224.34017
  %all-reduce.888 = f32[] all-reduce(%reduce.1352), channel_id=1339, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1224.34017.clone
  %add.5356 = f32[] add(%add.5355, %all-reduce.888)
  %square.610 = f32[32,128,512]{2,1,0} multiply(%add.4289, %add.4289)
  %reduce.1353 = f32[] reduce(%square.610, %constant.2882), dimensions={0,1,2}, to_apply=%region_1225.34024
  %all-reduce.889 = f32[] all-reduce(%reduce.1353), channel_id=1340, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1225.34024.clone
  %add.5357 = f32[] add(%add.5356, %all-reduce.889)
  %square.611 = f32[512,32,128]{2,1,0} multiply(%add.4295, %add.4295)
  %reduce.1354 = f32[] reduce(%square.611, %constant.2882), dimensions={0,1,2}, to_apply=%region_1226.34031
  %all-reduce.890 = f32[] all-reduce(%reduce.1354), channel_id=1341, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1226.34031.clone
  %add.5358 = f32[] add(%add.5357, %all-reduce.890)
  %square.612 = f32[512,8,128]{2,1,0} multiply(%add.4300, %add.4300)
  %reduce.1355 = f32[] reduce(%square.612, %constant.2882), dimensions={0,1,2}, to_apply=%region_1227.34038
  %all-reduce.891 = f32[] all-reduce(%reduce.1355), channel_id=1342, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1227.34038.clone
  %add.5359 = f32[] add(%add.5358, %all-reduce.891)
  %square.613 = f32[512,14336]{1,0} multiply(%add.4305, %add.4305)
  %reduce.1356 = f32[] reduce(%square.613, %constant.2882), dimensions={0,1}, to_apply=%region_1228.34045
  %all-reduce.892 = f32[] all-reduce(%reduce.1356), channel_id=1343, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1228.34045.clone
  %add.5360 = f32[] add(%add.5359, %all-reduce.892)
  %square.614 = f32[512,14336]{1,0} multiply(%add.4310, %add.4310)
  %reduce.1357 = f32[] reduce(%square.614, %constant.2882), dimensions={0,1}, to_apply=%region_1229.34052
  %all-reduce.893 = f32[] all-reduce(%reduce.1357), channel_id=1344, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1229.34052.clone
  %add.5361 = f32[] add(%add.5360, %all-reduce.893)
  %square.615 = f32[14336,512]{1,0} multiply(%add.4316, %add.4316)
  %reduce.1358 = f32[] reduce(%square.615, %constant.2882), dimensions={0,1}, to_apply=%region_1230.34059
  %all-reduce.894 = f32[] all-reduce(%reduce.1358), channel_id=1345, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1230.34059.clone
  %add.5362 = f32[] add(%add.5361, %all-reduce.894)
  %square.616 = f32[4096]{0} multiply(%add.4322, %add.4322)
  %reduce.1359 = f32[] reduce(%square.616, %constant.2882), dimensions={0}, to_apply=%region_1231.34066
  %add.5363 = f32[] add(%add.5362, %reduce.1359)
  %square.617 = f32[4096]{0} multiply(%add.4327, %add.4327)
  %reduce.1360 = f32[] reduce(%square.617, %constant.2882), dimensions={0}, to_apply=%region_1232.34073
  %add.5364 = f32[] add(%add.5363, %reduce.1360)
  %square.618 = f32[512,8,128]{2,1,0} multiply(%add.4333, %add.4333)
  %reduce.1361 = f32[] reduce(%square.618, %constant.2882), dimensions={0,1,2}, to_apply=%region_1233.34080
  %all-reduce.895 = f32[] all-reduce(%reduce.1361), channel_id=1346, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1233.34080.clone
  %add.5365 = f32[] add(%add.5364, %all-reduce.895)
  %square.619 = f32[32,128,512]{2,1,0} multiply(%add.4339, %add.4339)
  %reduce.1362 = f32[] reduce(%square.619, %constant.2882), dimensions={0,1,2}, to_apply=%region_1234.34087
  %all-reduce.896 = f32[] all-reduce(%reduce.1362), channel_id=1347, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1234.34087.clone
  %add.5366 = f32[] add(%add.5365, %all-reduce.896)
  %square.620 = f32[512,32,128]{2,1,0} multiply(%add.4344, %add.4344)
  %reduce.1363 = f32[] reduce(%square.620, %constant.2882), dimensions={0,1,2}, to_apply=%region_1235.34094
  %all-reduce.897 = f32[] all-reduce(%reduce.1363), channel_id=1348, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1235.34094.clone
  %add.5367 = f32[] add(%add.5366, %all-reduce.897)
  %square.621 = f32[512,8,128]{2,1,0} multiply(%add.4350, %add.4350)
  %reduce.1364 = f32[] reduce(%square.621, %constant.2882), dimensions={0,1,2}, to_apply=%region_1236.34101
  %all-reduce.898 = f32[] all-reduce(%reduce.1364), channel_id=1349, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1236.34101.clone
  %add.5368 = f32[] add(%add.5367, %all-reduce.898)
  %square.622 = f32[512,14336]{1,0} multiply(%add.4355, %add.4355)
  %reduce.1365 = f32[] reduce(%square.622, %constant.2882), dimensions={0,1}, to_apply=%region_1237.34108
  %all-reduce.899 = f32[] all-reduce(%reduce.1365), channel_id=1350, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1237.34108.clone
  %add.5369 = f32[] add(%add.5368, %all-reduce.899)
  %square.623 = f32[512,14336]{1,0} multiply(%add.4361, %add.4361)
  %reduce.1366 = f32[] reduce(%square.623, %constant.2882), dimensions={0,1}, to_apply=%region_1238.34115
  %all-reduce.900 = f32[] all-reduce(%reduce.1366), channel_id=1351, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1238.34115.clone
  %add.5370 = f32[] add(%add.5369, %all-reduce.900)
  %square.624 = f32[14336,512]{1,0} multiply(%add.4366, %add.4366)
  %reduce.1367 = f32[] reduce(%square.624, %constant.2882), dimensions={0,1}, to_apply=%region_1239.34122
  %all-reduce.901 = f32[] all-reduce(%reduce.1367), channel_id=1352, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1239.34122.clone
  %add.5371 = f32[] add(%add.5370, %all-reduce.901)
  %square.625 = f32[4096]{0} multiply(%add.4372, %add.4372)
  %reduce.1368 = f32[] reduce(%square.625, %constant.2882), dimensions={0}, to_apply=%region_1240.34129
  %add.5372 = f32[] add(%add.5371, %reduce.1368)
  %square.626 = f32[4096]{0} multiply(%add.4377, %add.4377)
  %reduce.1369 = f32[] reduce(%square.626, %constant.2882), dimensions={0}, to_apply=%region_1241.34136
  %add.5374 = f32[] add(%add.5372, %reduce.1369)
  %square.627 = f32[512,8,128]{2,1,0} multiply(%add.4382, %add.4382)
  %reduce.1370 = f32[] reduce(%square.627, %constant.2882), dimensions={0,1,2}, to_apply=%region_1242.34143
  %all-reduce.902 = f32[] all-reduce(%reduce.1370), channel_id=1353, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1242.34143.clone
  %add.5375 = f32[] add(%add.5374, %all-reduce.902)
  %square.628 = f32[32,128,512]{2,1,0} multiply(%add.4387, %add.4387)
  %reduce.1371 = f32[] reduce(%square.628, %constant.2882), dimensions={0,1,2}, to_apply=%region_1243.34150
  %all-reduce.903 = f32[] all-reduce(%reduce.1371), channel_id=1354, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1243.34150.clone
  %add.5376 = f32[] add(%add.5375, %all-reduce.903)
  %square.629 = f32[512,32,128]{2,1,0} multiply(%add.4392, %add.4392)
  %reduce.1372 = f32[] reduce(%square.629, %constant.2882), dimensions={0,1,2}, to_apply=%region_1244.34157
  %all-reduce.904 = f32[] all-reduce(%reduce.1372), channel_id=1355, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1244.34157.clone
  %add.5378 = f32[] add(%add.5376, %all-reduce.904)
  %square.630 = f32[512,8,128]{2,1,0} multiply(%add.4398, %add.4398)
  %reduce.1373 = f32[] reduce(%square.630, %constant.2882), dimensions={0,1,2}, to_apply=%region_1245.34164
  %all-reduce.905 = f32[] all-reduce(%reduce.1373), channel_id=1356, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1245.34164.clone
  %add.5379 = f32[] add(%add.5378, %all-reduce.905)
  %square.631 = f32[512,14336]{1,0} multiply(%add.4403, %add.4403)
  %reduce.1374 = f32[] reduce(%square.631, %constant.2882), dimensions={0,1}, to_apply=%region_1246.34171
  %all-reduce.906 = f32[] all-reduce(%reduce.1374), channel_id=1357, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1246.34171.clone
  %add.5380 = f32[] add(%add.5379, %all-reduce.906)
  %square.632 = f32[512,14336]{1,0} multiply(%add.4408, %add.4408)
  %reduce.1375 = f32[] reduce(%square.632, %constant.2882), dimensions={0,1}, to_apply=%region_1247.34178
  %all-reduce.907 = f32[] all-reduce(%reduce.1375), channel_id=1358, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1247.34178.clone
  %add.5381 = f32[] add(%add.5380, %all-reduce.907)
  %square.633 = f32[14336,512]{1,0} multiply(%add.4413, %add.4413)
  %reduce.1376 = f32[] reduce(%square.633, %constant.2882), dimensions={0,1}, to_apply=%region_1248.34185
  %all-reduce.908 = f32[] all-reduce(%reduce.1376), channel_id=1359, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1248.34185.clone
  %add.5382 = f32[] add(%add.5381, %all-reduce.908)
  %square.634 = f32[4096]{0} multiply(%add.4418, %add.4418)
  %reduce.1377 = f32[] reduce(%square.634, %constant.2882), dimensions={0}, to_apply=%region_1249.34192
  %add.5383 = f32[] add(%add.5382, %reduce.1377)
  %square.635 = f32[4096]{0} multiply(%add.4423, %add.4423)
  %reduce.1378 = f32[] reduce(%square.635, %constant.2882), dimensions={0}, to_apply=%region_1250.34199
  %add.5384 = f32[] add(%add.5383, %reduce.1378)
  %square.636 = f32[512,8,128]{2,1,0} multiply(%add.4430, %add.4430)
  %reduce.1379 = f32[] reduce(%square.636, %constant.2882), dimensions={0,1,2}, to_apply=%region_1251.34206
  %all-reduce.909 = f32[] all-reduce(%reduce.1379), channel_id=1360, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1251.34206.clone
  %add.5385 = f32[] add(%add.5384, %all-reduce.909)
  %square.637 = f32[32,128,512]{2,1,0} multiply(%add.4436, %add.4436)
  %reduce.1380 = f32[] reduce(%square.637, %constant.2882), dimensions={0,1,2}, to_apply=%region_1252.34213
  %all-reduce.910 = f32[] all-reduce(%reduce.1380), channel_id=1361, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1252.34213.clone
  %add.5386 = f32[] add(%add.5385, %all-reduce.910)
  %square.638 = f32[512,32,128]{2,1,0} multiply(%add.4441, %add.4441)
  %reduce.1381 = f32[] reduce(%square.638, %constant.2882), dimensions={0,1,2}, to_apply=%region_1253.34220
  %all-reduce.911 = f32[] all-reduce(%reduce.1381), channel_id=1362, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1253.34220.clone
  %add.5387 = f32[] add(%add.5386, %all-reduce.911)
  %square.639 = f32[512,8,128]{2,1,0} multiply(%add.4446, %add.4446)
  %reduce.1382 = f32[] reduce(%square.639, %constant.2882), dimensions={0,1,2}, to_apply=%region_1254.34227
  %all-reduce.912 = f32[] all-reduce(%reduce.1382), channel_id=1363, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1254.34227.clone
  %add.5388 = f32[] add(%add.5387, %all-reduce.912)
  %square.640 = f32[512,14336]{1,0} multiply(%add.4451, %add.4451)
  %reduce.1383 = f32[] reduce(%square.640, %constant.2882), dimensions={0,1}, to_apply=%region_1255.34234
  %all-reduce.913 = f32[] all-reduce(%reduce.1383), channel_id=1364, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1255.34234.clone
  %add.5389 = f32[] add(%add.5388, %all-reduce.913)
  %square.641 = f32[512,14336]{1,0} multiply(%add.4456, %add.4456)
  %reduce.1384 = f32[] reduce(%square.641, %constant.2882), dimensions={0,1}, to_apply=%region_1256.34241
  %all-reduce.914 = f32[] all-reduce(%reduce.1384), channel_id=1365, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1256.34241.clone
  %add.5390 = f32[] add(%add.5389, %all-reduce.914)
  %square.642 = f32[14336,512]{1,0} multiply(%add.4462, %add.4462)
  %reduce.1385 = f32[] reduce(%square.642, %constant.2882), dimensions={0,1}, to_apply=%region_1257.34248
  %all-reduce.915 = f32[] all-reduce(%reduce.1385), channel_id=1366, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1257.34248.clone
  %add.5391 = f32[] add(%add.5390, %all-reduce.915)
  %square.643 = f32[4096]{0} multiply(%add.4467, %add.4467)
  %reduce.1386 = f32[] reduce(%square.643, %constant.2882), dimensions={0}, to_apply=%region_1258.34255
  %add.5392 = f32[] add(%add.5391, %reduce.1386)
  %square.644 = f32[4096]{0} multiply(%add.4472, %add.4472)
  %reduce.1387 = f32[] reduce(%square.644, %constant.2882), dimensions={0}, to_apply=%region_1259.34262
  %add.5393 = f32[] add(%add.5392, %reduce.1387)
  %square.645 = f32[512,8,128]{2,1,0} multiply(%add.4478, %add.4478)
  %reduce.1388 = f32[] reduce(%square.645, %constant.2882), dimensions={0,1,2}, to_apply=%region_1260.34269
  %all-reduce.916 = f32[] all-reduce(%reduce.1388), channel_id=1367, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1260.34269.clone
  %add.5394 = f32[] add(%add.5393, %all-reduce.916)
  %square.646 = f32[32,128,512]{2,1,0} multiply(%add.4483, %add.4483)
  %reduce.1389 = f32[] reduce(%square.646, %constant.2882), dimensions={0,1,2}, to_apply=%region_1261.34276
  %all-reduce.917 = f32[] all-reduce(%reduce.1389), channel_id=1368, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1261.34276.clone
  %add.5395 = f32[] add(%add.5394, %all-reduce.917)
  %square.647 = f32[512,32,128]{2,1,0} multiply(%add.4488, %add.4488)
  %reduce.1390 = f32[] reduce(%square.647, %constant.2882), dimensions={0,1,2}, to_apply=%region_1262.34283
  %all-reduce.918 = f32[] all-reduce(%reduce.1390), channel_id=1369, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1262.34283.clone
  %add.5396 = f32[] add(%add.5395, %all-reduce.918)
  %square.648 = f32[512,8,128]{2,1,0} multiply(%add.4494, %add.4494)
  %reduce.1391 = f32[] reduce(%square.648, %constant.2882), dimensions={0,1,2}, to_apply=%region_1263.34290
  %all-reduce.919 = f32[] all-reduce(%reduce.1391), channel_id=1370, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1263.34290.clone
  %add.5397 = f32[] add(%add.5396, %all-reduce.919)
  %square.649 = f32[512,14336]{1,0} multiply(%add.4499, %add.4499)
  %reduce.1392 = f32[] reduce(%square.649, %constant.2882), dimensions={0,1}, to_apply=%region_1264.34297
  %all-reduce.920 = f32[] all-reduce(%reduce.1392), channel_id=1371, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1264.34297.clone
  %add.5398 = f32[] add(%add.5397, %all-reduce.920)
  %square.650 = f32[512,14336]{1,0} multiply(%add.4504, %add.4504)
  %reduce.1393 = f32[] reduce(%square.650, %constant.2882), dimensions={0,1}, to_apply=%region_1265.34304
  %all-reduce.921 = f32[] all-reduce(%reduce.1393), channel_id=1372, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1265.34304.clone
  %add.5399 = f32[] add(%add.5398, %all-reduce.921)
  %square.651 = f32[14336,512]{1,0} multiply(%add.4509, %add.4509)
  %reduce.1394 = f32[] reduce(%square.651, %constant.2882), dimensions={0,1}, to_apply=%region_1266.34311
  %all-reduce.922 = f32[] all-reduce(%reduce.1394), channel_id=1373, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1266.34311.clone
  %add.5400 = f32[] add(%add.5399, %all-reduce.922)
  %square.652 = f32[4096]{0} multiply(%add.4514, %add.4514)
  %reduce.1395 = f32[] reduce(%square.652, %constant.2882), dimensions={0}, to_apply=%region_1267.34318
  %add.5401 = f32[] add(%add.5400, %reduce.1395)
  %square.653 = f32[4096]{0} multiply(%add.4519, %add.4519)
  %reduce.1396 = f32[] reduce(%square.653, %constant.2882), dimensions={0}, to_apply=%region_1268.34325
  %add.5402 = f32[] add(%add.5401, %reduce.1396)
  %square.654 = f32[512,8,128]{2,1,0} multiply(%add.4524, %add.4524)
  %reduce.1397 = f32[] reduce(%square.654, %constant.2882), dimensions={0,1,2}, to_apply=%region_1269.34332
  %all-reduce.923 = f32[] all-reduce(%reduce.1397), channel_id=1374, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1269.34332.clone
  %add.5404 = f32[] add(%add.5402, %all-reduce.923)
  %square.655 = f32[32,128,512]{2,1,0} multiply(%add.4529, %add.4529)
  %reduce.1398 = f32[] reduce(%square.655, %constant.2882), dimensions={0,1,2}, to_apply=%region_1270.34339
  %all-reduce.924 = f32[] all-reduce(%reduce.1398), channel_id=1375, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1270.34339.clone
  %add.5405 = f32[] add(%add.5404, %all-reduce.924)
  %square.656 = f32[512,32,128]{2,1,0} multiply(%add.4535, %add.4535)
  %reduce.1399 = f32[] reduce(%square.656, %constant.2882), dimensions={0,1,2}, to_apply=%region_1271.34346
  %all-reduce.925 = f32[] all-reduce(%reduce.1399), channel_id=1376, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1271.34346.clone
  %add.5406 = f32[] add(%add.5405, %all-reduce.925)
  %square.657 = f32[512,8,128]{2,1,0} multiply(%add.4541, %add.4541)
  %reduce.1400 = f32[] reduce(%square.657, %constant.2882), dimensions={0,1,2}, to_apply=%region_1272.34353
  %all-reduce.926 = f32[] all-reduce(%reduce.1400), channel_id=1377, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1272.34353.clone
  %add.5407 = f32[] add(%add.5406, %all-reduce.926)
  %square.658 = f32[512,14336]{1,0} multiply(%add.4546, %add.4546)
  %reduce.1401 = f32[] reduce(%square.658, %constant.2882), dimensions={0,1}, to_apply=%region_1273.34360
  %all-reduce.927 = f32[] all-reduce(%reduce.1401), channel_id=1378, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1273.34360.clone
  %add.5408 = f32[] add(%add.5407, %all-reduce.927)
  %square.659 = f32[512,14336]{1,0} multiply(%add.4552, %add.4552)
  %reduce.1402 = f32[] reduce(%square.659, %constant.2882), dimensions={0,1}, to_apply=%region_1274.34367
  %all-reduce.928 = f32[] all-reduce(%reduce.1402), channel_id=1379, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1274.34367.clone
  %add.5409 = f32[] add(%add.5408, %all-reduce.928)
  %square.660 = f32[14336,512]{1,0} multiply(%add.4557, %add.4557)
  %reduce.1403 = f32[] reduce(%square.660, %constant.2882), dimensions={0,1}, to_apply=%region_1275.34374
  %all-reduce.929 = f32[] all-reduce(%reduce.1403), channel_id=1380, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1275.34374.clone
  %add.5410 = f32[] add(%add.5409, %all-reduce.929)
  %square.661 = f32[4096]{0} multiply(%add.4562, %add.4562)
  %reduce.1404 = f32[] reduce(%square.661, %constant.2882), dimensions={0}, to_apply=%region_1276.34381
  %add.5411 = f32[] add(%add.5410, %reduce.1404)
  %square.662 = f32[4096]{0} multiply(%add.4568, %add.4568)
  %reduce.1405 = f32[] reduce(%square.662, %constant.2882), dimensions={0}, to_apply=%region_1277.34388
  %add.5412 = f32[] add(%add.5411, %reduce.1405)
  %square.663 = f32[512,8,128]{2,1,0} multiply(%add.4575, %add.4575)
  %reduce.1406 = f32[] reduce(%square.663, %constant.2882), dimensions={0,1,2}, to_apply=%region_1278.34395
  %all-reduce.930 = f32[] all-reduce(%reduce.1406), channel_id=1381, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1278.34395.clone
  %add.5413 = f32[] add(%add.5412, %all-reduce.930)
  %square.664 = f32[32,128,512]{2,1,0} multiply(%add.4580, %add.4580)
  %reduce.1407 = f32[] reduce(%square.664, %constant.2882), dimensions={0,1,2}, to_apply=%region_1279.34402
  %all-reduce.931 = f32[] all-reduce(%reduce.1407), channel_id=1382, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1279.34402.clone
  %add.5414 = f32[] add(%add.5413, %all-reduce.931)
  %square.665 = f32[512,32,128]{2,1,0} multiply(%add.4586, %add.4586)
  %reduce.1408 = f32[] reduce(%square.665, %constant.2882), dimensions={0,1,2}, to_apply=%region_1280.34409
  %all-reduce.932 = f32[] all-reduce(%reduce.1408), channel_id=1383, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1280.34409.clone
  %add.5416 = f32[] add(%add.5414, %all-reduce.932)
  %square.666 = f32[512,8,128]{2,1,0} multiply(%add.4591, %add.4591)
  %reduce.1409 = f32[] reduce(%square.666, %constant.2882), dimensions={0,1,2}, to_apply=%region_1281.34416
  %all-reduce.933 = f32[] all-reduce(%reduce.1409), channel_id=1384, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1281.34416.clone
  %add.5417 = f32[] add(%add.5416, %all-reduce.933)
  %square.667 = f32[512,14336]{1,0} multiply(%add.4596, %add.4596)
  %reduce.1410 = f32[] reduce(%square.667, %constant.2882), dimensions={0,1}, to_apply=%region_1282.34423
  %all-reduce.934 = f32[] all-reduce(%reduce.1410), channel_id=1385, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1282.34423.clone
  %add.5418 = f32[] add(%add.5417, %all-reduce.934)
  %square.668 = f32[512,14336]{1,0} multiply(%add.4601, %add.4601)
  %reduce.1411 = f32[] reduce(%square.668, %constant.2882), dimensions={0,1}, to_apply=%region_1283.34430
  %all-reduce.935 = f32[] all-reduce(%reduce.1411), channel_id=1386, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1283.34430.clone
  %add.5419 = f32[] add(%add.5418, %all-reduce.935)
  %square.669 = f32[14336,512]{1,0} multiply(%add.4606, %add.4606)
  %reduce.1412 = f32[] reduce(%square.669, %constant.2882), dimensions={0,1}, to_apply=%region_1284.34437
  %all-reduce.936 = f32[] all-reduce(%reduce.1412), channel_id=1387, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1284.34437.clone
  %add.5420 = f32[] add(%add.5419, %all-reduce.936)
  %square.670 = f32[4096]{0} multiply(%add.4612, %add.4612)
  %reduce.1413 = f32[] reduce(%square.670, %constant.2882), dimensions={0}, to_apply=%region_1285.34444
  %add.5421 = f32[] add(%add.5420, %reduce.1413)
  %square.671 = f32[4096]{0} multiply(%add.4617, %add.4617)
  %reduce.1414 = f32[] reduce(%square.671, %constant.2882), dimensions={0}, to_apply=%region_1286.34451
  %add.5422 = f32[] add(%add.5421, %reduce.1414)
  %square.672 = f32[512,8,128]{2,1,0} multiply(%add.4622, %add.4622)
  %reduce.1415 = f32[] reduce(%square.672, %constant.2882), dimensions={0,1,2}, to_apply=%region_1287.34458
  %all-reduce.937 = f32[] all-reduce(%reduce.1415), channel_id=1388, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1287.34458.clone
  %add.5423 = f32[] add(%add.5422, %all-reduce.937)
  %square.673 = f32[32,128,512]{2,1,0} multiply(%add.4628, %add.4628)
  %reduce.1416 = f32[] reduce(%square.673, %constant.2882), dimensions={0,1,2}, to_apply=%region_1288.34465
  %all-reduce.938 = f32[] all-reduce(%reduce.1416), channel_id=1389, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1288.34465.clone
  %add.5424 = f32[] add(%add.5423, %all-reduce.938)
  %square.674 = f32[512,32,128]{2,1,0} multiply(%add.4633, %add.4633)
  %reduce.1417 = f32[] reduce(%square.674, %constant.2882), dimensions={0,1,2}, to_apply=%region_1289.34472
  %all-reduce.939 = f32[] all-reduce(%reduce.1417), channel_id=1390, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1289.34472.clone
  %add.5425 = f32[] add(%add.5424, %all-reduce.939)
  %square.675 = f32[512,8,128]{2,1,0} multiply(%add.4638, %add.4638)
  %reduce.1418 = f32[] reduce(%square.675, %constant.2882), dimensions={0,1,2}, to_apply=%region_1290.34479
  %all-reduce.940 = f32[] all-reduce(%reduce.1418), channel_id=1391, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1290.34479.clone
  %add.5426 = f32[] add(%add.5425, %all-reduce.940)
  %square.676 = f32[512,14336]{1,0} multiply(%add.4643, %add.4643)
  %reduce.1419 = f32[] reduce(%square.676, %constant.2882), dimensions={0,1}, to_apply=%region_1291.34486
  %all-reduce.941 = f32[] all-reduce(%reduce.1419), channel_id=1392, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1291.34486.clone
  %add.5427 = f32[] add(%add.5426, %all-reduce.941)
  %square.677 = f32[512,14336]{1,0} multiply(%add.4649, %add.4649)
  %reduce.1420 = f32[] reduce(%square.677, %constant.2882), dimensions={0,1}, to_apply=%region_1292.34493
  %all-reduce.942 = f32[] all-reduce(%reduce.1420), channel_id=1393, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1292.34493.clone
  %add.5428 = f32[] add(%add.5427, %all-reduce.942)
  %square.678 = f32[14336,512]{1,0} multiply(%add.4654, %add.4654)
  %reduce.1421 = f32[] reduce(%square.678, %constant.2882), dimensions={0,1}, to_apply=%region_1293.34500
  %all-reduce.943 = f32[] all-reduce(%reduce.1421), channel_id=1394, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1293.34500.clone
  %add.5429 = f32[] add(%add.5428, %all-reduce.943)
  %square.679 = f32[4096]{0} multiply(%add.4660, %add.4660)
  %reduce.1422 = f32[] reduce(%square.679, %constant.2882), dimensions={0}, to_apply=%region_1294.34507
  %add.5430 = f32[] add(%add.5429, %reduce.1422)
  %square.680 = f32[4096]{0} multiply(%add.4665, %add.4665)
  %reduce.1423 = f32[] reduce(%square.680, %constant.2882), dimensions={0}, to_apply=%region_1295.34514
  %add.5431 = f32[] add(%add.5430, %reduce.1423)
  %square.681 = f32[512,8,128]{2,1,0} multiply(%add.4670, %add.4670)
  %reduce.1424 = f32[] reduce(%square.681, %constant.2882), dimensions={0,1,2}, to_apply=%region_1296.34521
  %all-reduce.944 = f32[] all-reduce(%reduce.1424), channel_id=1395, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1296.34521.clone
  %add.5432 = f32[] add(%add.5431, %all-reduce.944)
  %square.682 = f32[32,128,512]{2,1,0} multiply(%add.4675, %add.4675)
  %reduce.1425 = f32[] reduce(%square.682, %constant.2882), dimensions={0,1,2}, to_apply=%region_1297.34528
  %all-reduce.945 = f32[] all-reduce(%reduce.1425), channel_id=1396, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1297.34528.clone
  %add.5433 = f32[] add(%add.5432, %all-reduce.945)
  %square.683 = f32[512,32,128]{2,1,0} multiply(%add.4680, %add.4680)
  %reduce.1426 = f32[] reduce(%square.683, %constant.2882), dimensions={0,1,2}, to_apply=%region_1298.34535
  %all-reduce.946 = f32[] all-reduce(%reduce.1426), channel_id=1397, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1298.34535.clone
  %add.5434 = f32[] add(%add.5433, %all-reduce.946)
  %square.684 = f32[512,8,128]{2,1,0} multiply(%add.4685, %add.4685)
  %reduce.1427 = f32[] reduce(%square.684, %constant.2882), dimensions={0,1,2}, to_apply=%region_1299.34542
  %all-reduce.947 = f32[] all-reduce(%reduce.1427), channel_id=1398, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1299.34542.clone
  %add.5435 = f32[] add(%add.5434, %all-reduce.947)
  %square.685 = f32[512,14336]{1,0} multiply(%add.4691, %add.4691)
  %reduce.1428 = f32[] reduce(%square.685, %constant.2882), dimensions={0,1}, to_apply=%region_1300.34549
  %all-reduce.948 = f32[] all-reduce(%reduce.1428), channel_id=1399, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1300.34549.clone
  %add.5436 = f32[] add(%add.5435, %all-reduce.948)
  %square.686 = f32[512,14336]{1,0} multiply(%add.4696, %add.4696)
  %reduce.1429 = f32[] reduce(%square.686, %constant.2882), dimensions={0,1}, to_apply=%region_1301.34556
  %all-reduce.949 = f32[] all-reduce(%reduce.1429), channel_id=1400, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1301.34556.clone
  %add.5437 = f32[] add(%add.5436, %all-reduce.949)
  %square.687 = f32[14336,512]{1,0} multiply(%add.4701, %add.4701)
  %reduce.1430 = f32[] reduce(%square.687, %constant.2882), dimensions={0,1}, to_apply=%region_1302.34563
  %all-reduce.950 = f32[] all-reduce(%reduce.1430), channel_id=1401, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1302.34563.clone
  %add.5438 = f32[] add(%add.5437, %all-reduce.950)
  %square.688 = f32[4096]{0} multiply(%add.4707, %add.4707)
  %reduce.1431 = f32[] reduce(%square.688, %constant.2882), dimensions={0}, to_apply=%region_1303.34570
  %add.5439 = f32[] add(%add.5438, %reduce.1431)
  %square.689 = f32[4096]{0} multiply(%add.4712, %add.4712)
  %reduce.1432 = f32[] reduce(%square.689, %constant.2882), dimensions={0}, to_apply=%region_1304.34577
  %add.5440 = f32[] add(%add.5439, %reduce.1432)
  %square.690 = f32[512,8,128]{2,1,0} multiply(%add.4718, %add.4718)
  %reduce.1433 = f32[] reduce(%square.690, %constant.2882), dimensions={0,1,2}, to_apply=%region_1305.34584
  %all-reduce.951 = f32[] all-reduce(%reduce.1433), channel_id=1402, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1305.34584.clone
  %add.5441 = f32[] add(%add.5440, %all-reduce.951)
  %square.691 = f32[32,128,512]{2,1,0} multiply(%add.4724, %add.4724)
  %reduce.1434 = f32[] reduce(%square.691, %constant.2882), dimensions={0,1,2}, to_apply=%region_1306.34591
  %all-reduce.952 = f32[] all-reduce(%reduce.1434), channel_id=1403, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1306.34591.clone
  %add.5442 = f32[] add(%add.5441, %all-reduce.952)
  %square.692 = f32[512,32,128]{2,1,0} multiply(%add.4729, %add.4729)
  %reduce.1435 = f32[] reduce(%square.692, %constant.2882), dimensions={0,1,2}, to_apply=%region_1307.34598
  %all-reduce.953 = f32[] all-reduce(%reduce.1435), channel_id=1404, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1307.34598.clone
  %add.5443 = f32[] add(%add.5442, %all-reduce.953)
  %square.693 = f32[512,8,128]{2,1,0} multiply(%add.4734, %add.4734)
  %reduce.1436 = f32[] reduce(%square.693, %constant.2882), dimensions={0,1,2}, to_apply=%region_1308.34605
  %all-reduce.954 = f32[] all-reduce(%reduce.1436), channel_id=1405, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1308.34605.clone
  %add.5444 = f32[] add(%add.5443, %all-reduce.954)
  %square.694 = f32[512,14336]{1,0} multiply(%add.4739, %add.4739)
  %reduce.1437 = f32[] reduce(%square.694, %constant.2882), dimensions={0,1}, to_apply=%region_1309.34612
  %all-reduce.955 = f32[] all-reduce(%reduce.1437), channel_id=1406, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1309.34612.clone
  %add.5445 = f32[] add(%add.5444, %all-reduce.955)
  %square.695 = f32[512,14336]{1,0} multiply(%add.4745, %add.4745)
  %reduce.1438 = f32[] reduce(%square.695, %constant.2882), dimensions={0,1}, to_apply=%region_1310.34619
  %all-reduce.956 = f32[] all-reduce(%reduce.1438), channel_id=1407, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1310.34619.clone
  %add.5446 = f32[] add(%add.5445, %all-reduce.956)
  %square.696 = f32[14336,512]{1,0} multiply(%add.4750, %add.4750)
  %reduce.1439 = f32[] reduce(%square.696, %constant.2882), dimensions={0,1}, to_apply=%region_1311.34626
  %all-reduce.957 = f32[] all-reduce(%reduce.1439), channel_id=1408, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1311.34626.clone
  %add.5447 = f32[] add(%add.5446, %all-reduce.957)
  %square.697 = f32[4096]{0} multiply(%add.4756, %add.4756)
  %reduce.1440 = f32[] reduce(%square.697, %constant.2882), dimensions={0}, to_apply=%region_1312.34633
  %add.5448 = f32[] add(%add.5447, %reduce.1440)
  %square.698 = f32[4096]{0} multiply(%add.4761, %add.4761)
  %reduce.1441 = f32[] reduce(%square.698, %constant.2882), dimensions={0}, to_apply=%region_1313.34640
  %add.5449 = f32[] add(%add.5448, %reduce.1441)
  %square.699 = f32[512,8,128]{2,1,0} multiply(%add.4766, %add.4766)
  %reduce.1442 = f32[] reduce(%square.699, %constant.2882), dimensions={0,1,2}, to_apply=%region_1314.34647
  %all-reduce.958 = f32[] all-reduce(%reduce.1442), channel_id=1409, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1314.34647.clone
  %add.5450 = f32[] add(%add.5449, %all-reduce.958)
  %square.700 = f32[32,128,512]{2,1,0} multiply(%add.4772, %add.4772)
  %reduce.1443 = f32[] reduce(%square.700, %constant.2882), dimensions={0,1,2}, to_apply=%region_1315.34654
  %all-reduce.959 = f32[] all-reduce(%reduce.1443), channel_id=1410, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1315.34654.clone
  %add.5451 = f32[] add(%add.5450, %all-reduce.959)
  %square.701 = f32[512,32,128]{2,1,0} multiply(%add.4778, %add.4778)
  %reduce.1444 = f32[] reduce(%square.701, %constant.2882), dimensions={0,1,2}, to_apply=%region_1316.34661
  %all-reduce.960 = f32[] all-reduce(%reduce.1444), channel_id=1411, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1316.34661.clone
  %add.5454 = f32[] add(%add.5451, %all-reduce.960)
  %square.702 = f32[512,8,128]{2,1,0} multiply(%add.4783, %add.4783)
  %reduce.1445 = f32[] reduce(%square.702, %constant.2882), dimensions={0,1,2}, to_apply=%region_1317.34668
  %all-reduce.961 = f32[] all-reduce(%reduce.1445), channel_id=1412, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1317.34668.clone
  %add.5455 = f32[] add(%add.5454, %all-reduce.961)
  %square.703 = f32[512,14336]{1,0} multiply(%add.4788, %add.4788)
  %reduce.1446 = f32[] reduce(%square.703, %constant.2882), dimensions={0,1}, to_apply=%region_1318.34675
  %all-reduce.962 = f32[] all-reduce(%reduce.1446), channel_id=1413, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1318.34675.clone
  %add.5456 = f32[] add(%add.5455, %all-reduce.962)
  %square.704 = f32[512,14336]{1,0} multiply(%add.4794, %add.4794)
  %reduce.1447 = f32[] reduce(%square.704, %constant.2882), dimensions={0,1}, to_apply=%region_1319.34682
  %all-reduce.963 = f32[] all-reduce(%reduce.1447), channel_id=1414, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1319.34682.clone
  %add.5457 = f32[] add(%add.5456, %all-reduce.963)
  %square.705 = f32[14336,512]{1,0} multiply(%add.4799, %add.4799)
  %reduce.1448 = f32[] reduce(%square.705, %constant.2882), dimensions={0,1}, to_apply=%region_1320.34689
  %all-reduce.964 = f32[] all-reduce(%reduce.1448), channel_id=1415, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1320.34689.clone
  %add.5458 = f32[] add(%add.5457, %all-reduce.964)
  %square.706 = f32[4096]{0} multiply(%add.4805, %add.4805)
  %reduce.1449 = f32[] reduce(%square.706, %constant.2882), dimensions={0}, to_apply=%region_1321.34696
  %add.5459 = f32[] add(%add.5458, %reduce.1449)
  %square.707 = f32[4096]{0} multiply(%add.4810, %add.4810)
  %reduce.1450 = f32[] reduce(%square.707, %constant.2882), dimensions={0}, to_apply=%region_1322.34703
  %add.5460 = f32[] add(%add.5459, %reduce.1450)
  %square.708 = f32[512,8,128]{2,1,0} multiply(%add.4817, %add.4817)
  %reduce.1451 = f32[] reduce(%square.708, %constant.2882), dimensions={0,1,2}, to_apply=%region_1323.34710
  %all-reduce.965 = f32[] all-reduce(%reduce.1451), channel_id=1416, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1323.34710.clone
  %add.5462 = f32[] add(%add.5460, %all-reduce.965)
  %square.709 = f32[32,128,512]{2,1,0} multiply(%add.4822, %add.4822)
  %reduce.1452 = f32[] reduce(%square.709, %constant.2882), dimensions={0,1,2}, to_apply=%region_1324.34717
  %all-reduce.966 = f32[] all-reduce(%reduce.1452), channel_id=1417, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1324.34717.clone
  %add.5463 = f32[] add(%add.5462, %all-reduce.966)
  %square.710 = f32[512,32,128]{2,1,0} multiply(%add.4827, %add.4827)
  %reduce.1453 = f32[] reduce(%square.710, %constant.2882), dimensions={0,1,2}, to_apply=%region_1325.34724
  %all-reduce.967 = f32[] all-reduce(%reduce.1453), channel_id=1418, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1325.34724.clone
  %add.5464 = f32[] add(%add.5463, %all-reduce.967)
  %square.711 = f32[512,8,128]{2,1,0} multiply(%add.4832, %add.4832)
  %reduce.1454 = f32[] reduce(%square.711, %constant.2882), dimensions={0,1,2}, to_apply=%region_1326.34731
  %all-reduce.968 = f32[] all-reduce(%reduce.1454), channel_id=1419, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1326.34731.clone
  %add.5465 = f32[] add(%add.5464, %all-reduce.968)
  %square.712 = f32[512,128256]{1,0} multiply(%add.4838, %add.4838)
  %reduce.1455 = f32[] reduce(%square.712, %constant.2882), dimensions={0,1}, to_apply=%region_1327.34738
  %all-reduce.969 = f32[] all-reduce(%reduce.1455), channel_id=1420, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1327.34738.clone
  %add.5466 = f32[] add(%add.5465, %all-reduce.969)
  %square.713 = f32[128256,512]{1,0} multiply(%add.4844, %add.4844)
  %reduce.1456 = f32[] reduce(%square.713, %constant.2882), dimensions={0,1}, to_apply=%region_1328.34745
  %all-reduce.970 = f32[] all-reduce(%reduce.1456), channel_id=1421, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1328.34745.clone
  %add.5467 = f32[] add(%add.5466, %all-reduce.970)
  %sqrt.294 = f32[] sqrt(%add.5467)
  %all-reduce.971 = f32[] all-reduce(%reduce.513), channel_id=1422, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1330.34759.clone
  %add.5468 = f32[] add(%reduce.293, %all-reduce.971)
  %all-reduce.972 = f32[] all-reduce(%reduce.514), channel_id=1423, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1331.34766.clone
  %add.5469 = f32[] add(%add.5468, %all-reduce.972)
  %all-reduce.973 = f32[] all-reduce(%reduce.515), channel_id=1424, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1332.34773.clone
  %add.5470 = f32[] add(%add.5469, %all-reduce.973)
  %add.5471 = f32[] add(%add.5470, %reduce.517)
  %add.5472 = f32[] add(%add.5471, %reduce.524)
  %all-reduce.974 = f32[] all-reduce(%reduce.525), channel_id=1425, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1335.34794.clone
  %add.5473 = f32[] add(%add.5472, %all-reduce.974)
  %all-reduce.975 = f32[] all-reduce(%reduce.526), channel_id=1426, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1336.34801.clone
  %add.5474 = f32[] add(%add.5473, %all-reduce.975)
  %all-reduce.976 = f32[] all-reduce(%reduce.527), channel_id=1427, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1337.34808.clone
  %add.5476 = f32[] add(%add.5474, %all-reduce.976)
  %all-reduce.977 = f32[] all-reduce(%reduce.528), channel_id=1428, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1338.34815.clone
  %add.5477 = f32[] add(%add.5476, %all-reduce.977)
  %all-reduce.978 = f32[] all-reduce(%reduce.529), channel_id=1429, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1339.34822.clone
  %add.5478 = f32[] add(%add.5477, %all-reduce.978)
  %all-reduce.979 = f32[] all-reduce(%reduce.530), channel_id=1430, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1340.34829.clone
  %add.5479 = f32[] add(%add.5478, %all-reduce.979)
  %all-reduce.980 = f32[] all-reduce(%reduce.531), channel_id=1431, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1341.34836.clone
  %add.5480 = f32[] add(%add.5479, %all-reduce.980)
  %add.5481 = f32[] add(%add.5480, %reduce.533)
  %add.5482 = f32[] add(%add.5481, %reduce.535)
  %all-reduce.981 = f32[] all-reduce(%reduce.536), channel_id=1432, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1344.34857.clone
  %add.5483 = f32[] add(%add.5482, %all-reduce.981)
  %all-reduce.982 = f32[] all-reduce(%reduce.537), channel_id=1433, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1345.34864.clone
  %add.5484 = f32[] add(%add.5483, %all-reduce.982)
  %all-reduce.983 = f32[] all-reduce(%reduce.538), channel_id=1434, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1346.34871.clone
  %add.5485 = f32[] add(%add.5484, %all-reduce.983)
  %all-reduce.984 = f32[] all-reduce(%reduce.539), channel_id=1435, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1347.34878.clone
  %add.5487 = f32[] add(%add.5485, %all-reduce.984)
  %all-reduce.985 = f32[] all-reduce(%reduce.540), channel_id=1436, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1348.34885.clone
  %add.5488 = f32[] add(%add.5487, %all-reduce.985)
  %all-reduce.986 = f32[] all-reduce(%reduce.541), channel_id=1437, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1349.34892.clone
  %add.5489 = f32[] add(%add.5488, %all-reduce.986)
  %all-reduce.987 = f32[] all-reduce(%reduce.542), channel_id=1438, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1350.34899.clone
  %add.5490 = f32[] add(%add.5489, %all-reduce.987)
  %add.5492 = f32[] add(%add.5490, %reduce.544)
  %add.5493 = f32[] add(%add.5492, %reduce.546)
  %all-reduce.988 = f32[] all-reduce(%reduce.547), channel_id=1439, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1353.34920.clone
  %add.5494 = f32[] add(%add.5493, %all-reduce.988)
  %all-reduce.989 = f32[] all-reduce(%reduce.548), channel_id=1440, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1354.34927.clone
  %add.5495 = f32[] add(%add.5494, %all-reduce.989)
  %all-reduce.990 = f32[] all-reduce(%reduce.549), channel_id=1441, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1355.34934.clone
  %add.5496 = f32[] add(%add.5495, %all-reduce.990)
  %all-reduce.991 = f32[] all-reduce(%reduce.550), channel_id=1442, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1356.34941.clone
  %add.5498 = f32[] add(%add.5496, %all-reduce.991)
  %all-reduce.992 = f32[] all-reduce(%reduce.551), channel_id=1443, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1357.34948.clone
  %add.5499 = f32[] add(%add.5498, %all-reduce.992)
  %all-reduce.993 = f32[] all-reduce(%reduce.552), channel_id=1444, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1358.34955.clone
  %add.5500 = f32[] add(%add.5499, %all-reduce.993)
  %all-reduce.994 = f32[] all-reduce(%reduce.553), channel_id=1445, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1359.34962.clone
  %add.5501 = f32[] add(%add.5500, %all-reduce.994)
  %add.5502 = f32[] add(%add.5501, %reduce.555)
  %add.5503 = f32[] add(%add.5502, %reduce.557)
  %all-reduce.995 = f32[] all-reduce(%reduce.558), channel_id=1446, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1362.34983.clone
  %add.5504 = f32[] add(%add.5503, %all-reduce.995)
  %all-reduce.996 = f32[] all-reduce(%reduce.559), channel_id=1447, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1363.34990.clone
  %add.5505 = f32[] add(%add.5504, %all-reduce.996)
  %all-reduce.997 = f32[] all-reduce(%reduce.560), channel_id=1448, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1364.34997.clone
  %add.5506 = f32[] add(%add.5505, %all-reduce.997)
  %all-reduce.998 = f32[] all-reduce(%reduce.561), channel_id=1449, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1365.35004.clone
  %add.5507 = f32[] add(%add.5506, %all-reduce.998)
  %all-reduce.999 = f32[] all-reduce(%reduce.562), channel_id=1450, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1366.35011.clone
  %add.5508 = f32[] add(%add.5507, %all-reduce.999)
  %all-reduce.1000 = f32[] all-reduce(%reduce.563), channel_id=1451, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1367.35018.clone
  %add.5509 = f32[] add(%add.5508, %all-reduce.1000)
  %all-reduce.1001 = f32[] all-reduce(%reduce.564), channel_id=1452, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1368.35025.clone
  %add.5510 = f32[] add(%add.5509, %all-reduce.1001)
  %add.5511 = f32[] add(%add.5510, %reduce.566)
  %add.5512 = f32[] add(%add.5511, %reduce.568)
  %all-reduce.1002 = f32[] all-reduce(%reduce.569), channel_id=1453, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1371.35046.clone
  %add.5513 = f32[] add(%add.5512, %all-reduce.1002)
  %all-reduce.1003 = f32[] all-reduce(%reduce.570), channel_id=1454, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1372.35053.clone
  %add.5514 = f32[] add(%add.5513, %all-reduce.1003)
  %all-reduce.1004 = f32[] all-reduce(%reduce.571), channel_id=1455, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1373.35060.clone
  %add.5515 = f32[] add(%add.5514, %all-reduce.1004)
  %all-reduce.1005 = f32[] all-reduce(%reduce.572), channel_id=1456, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1374.35067.clone
  %add.5516 = f32[] add(%add.5515, %all-reduce.1005)
  %all-reduce.1006 = f32[] all-reduce(%reduce.573), channel_id=1457, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1375.35074.clone
  %add.5517 = f32[] add(%add.5516, %all-reduce.1006)
  %all-reduce.1007 = f32[] all-reduce(%reduce.574), channel_id=1458, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1376.35081.clone
  %add.5518 = f32[] add(%add.5517, %all-reduce.1007)
  %all-reduce.1008 = f32[] all-reduce(%reduce.575), channel_id=1459, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1377.35088.clone
  %add.5519 = f32[] add(%add.5518, %all-reduce.1008)
  %add.5520 = f32[] add(%add.5519, %reduce.577)
  %add.5521 = f32[] add(%add.5520, %reduce.579)
  %all-reduce.1009 = f32[] all-reduce(%reduce.580), channel_id=1460, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1380.35109.clone
  %add.5522 = f32[] add(%add.5521, %all-reduce.1009)
  %all-reduce.1010 = f32[] all-reduce(%reduce.581), channel_id=1461, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1381.35116.clone
  %add.5523 = f32[] add(%add.5522, %all-reduce.1010)
  %all-reduce.1011 = f32[] all-reduce(%reduce.582), channel_id=1462, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1382.35123.clone
  %add.5524 = f32[] add(%add.5523, %all-reduce.1011)
  %all-reduce.1012 = f32[] all-reduce(%reduce.583), channel_id=1463, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1383.35130.clone
  %add.5525 = f32[] add(%add.5524, %all-reduce.1012)
  %all-reduce.1013 = f32[] all-reduce(%reduce.584), channel_id=1464, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1384.35137.clone
  %add.5526 = f32[] add(%add.5525, %all-reduce.1013)
  %all-reduce.1014 = f32[] all-reduce(%reduce.585), channel_id=1465, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1385.35144.clone
  %add.5527 = f32[] add(%add.5526, %all-reduce.1014)
  %all-reduce.1015 = f32[] all-reduce(%reduce.586), channel_id=1466, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1386.35151.clone
  %add.5528 = f32[] add(%add.5527, %all-reduce.1015)
  %add.5529 = f32[] add(%add.5528, %reduce.588)
  %add.5530 = f32[] add(%add.5529, %reduce.590)
  %all-reduce.1016 = f32[] all-reduce(%reduce.591), channel_id=1467, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1389.35172.clone
  %add.5531 = f32[] add(%add.5530, %all-reduce.1016)
  %all-reduce.1017 = f32[] all-reduce(%reduce.592), channel_id=1468, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1390.35179.clone
  %add.5532 = f32[] add(%add.5531, %all-reduce.1017)
  %all-reduce.1018 = f32[] all-reduce(%reduce.593), channel_id=1469, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1391.35186.clone
  %add.5533 = f32[] add(%add.5532, %all-reduce.1018)
  %all-reduce.1019 = f32[] all-reduce(%reduce.594), channel_id=1470, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1392.35193.clone
  %add.5534 = f32[] add(%add.5533, %all-reduce.1019)
  %all-reduce.1020 = f32[] all-reduce(%reduce.595), channel_id=1471, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1393.35200.clone
  %add.5535 = f32[] add(%add.5534, %all-reduce.1020)
  %all-reduce.1021 = f32[] all-reduce(%reduce.596), channel_id=1472, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1394.35207.clone
  %add.5536 = f32[] add(%add.5535, %all-reduce.1021)
  %all-reduce.1022 = f32[] all-reduce(%reduce.597), channel_id=1473, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1395.35214.clone
  %add.5538 = f32[] add(%add.5536, %all-reduce.1022)
  %add.5539 = f32[] add(%add.5538, %reduce.599)
  %add.5540 = f32[] add(%add.5539, %reduce.601)
  %all-reduce.1023 = f32[] all-reduce(%reduce.602), channel_id=1474, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1398.35235.clone
  %add.5541 = f32[] add(%add.5540, %all-reduce.1023)
  %all-reduce.1024 = f32[] all-reduce(%reduce.603), channel_id=1475, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1399.35242.clone
  %add.5542 = f32[] add(%add.5541, %all-reduce.1024)
  %all-reduce.1025 = f32[] all-reduce(%reduce.604), channel_id=1476, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1400.35249.clone
  %add.5543 = f32[] add(%add.5542, %all-reduce.1025)
  %all-reduce.1026 = f32[] all-reduce(%reduce.605), channel_id=1477, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1401.35256.clone
  %add.5544 = f32[] add(%add.5543, %all-reduce.1026)
  %all-reduce.1027 = f32[] all-reduce(%reduce.606), channel_id=1478, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1402.35263.clone
  %add.5545 = f32[] add(%add.5544, %all-reduce.1027)
  %all-reduce.1028 = f32[] all-reduce(%reduce.607), channel_id=1479, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1403.35270.clone
  %add.5546 = f32[] add(%add.5545, %all-reduce.1028)
  %all-reduce.1029 = f32[] all-reduce(%reduce.608), channel_id=1480, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1404.35277.clone
  %add.5547 = f32[] add(%add.5546, %all-reduce.1029)
  %add.5548 = f32[] add(%add.5547, %reduce.610)
  %add.5550 = f32[] add(%add.5548, %reduce.612)
  %all-reduce.1030 = f32[] all-reduce(%reduce.613), channel_id=1481, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1407.35298.clone
  %add.5551 = f32[] add(%add.5550, %all-reduce.1030)
  %all-reduce.1031 = f32[] all-reduce(%reduce.614), channel_id=1482, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1408.35305.clone
  %add.5552 = f32[] add(%add.5551, %all-reduce.1031)
  %all-reduce.1032 = f32[] all-reduce(%reduce.615), channel_id=1483, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1409.35312.clone
  %add.5553 = f32[] add(%add.5552, %all-reduce.1032)
  %all-reduce.1033 = f32[] all-reduce(%reduce.616), channel_id=1484, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1410.35319.clone
  %add.5554 = f32[] add(%add.5553, %all-reduce.1033)
  %all-reduce.1034 = f32[] all-reduce(%reduce.617), channel_id=1485, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1411.35326.clone
  %add.5555 = f32[] add(%add.5554, %all-reduce.1034)
  %all-reduce.1035 = f32[] all-reduce(%reduce.618), channel_id=1486, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1412.35333.clone
  %add.5556 = f32[] add(%add.5555, %all-reduce.1035)
  %all-reduce.1036 = f32[] all-reduce(%reduce.619), channel_id=1487, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1413.35340.clone
  %add.5557 = f32[] add(%add.5556, %all-reduce.1036)
  %add.5558 = f32[] add(%add.5557, %reduce.621)
  %add.5560 = f32[] add(%add.5558, %reduce.623)
  %all-reduce.1037 = f32[] all-reduce(%reduce.624), channel_id=1488, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1416.35361.clone
  %add.5561 = f32[] add(%add.5560, %all-reduce.1037)
  %all-reduce.1038 = f32[] all-reduce(%reduce.625), channel_id=1489, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1417.35368.clone
  %add.5562 = f32[] add(%add.5561, %all-reduce.1038)
  %all-reduce.1039 = f32[] all-reduce(%reduce.626), channel_id=1490, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1418.35375.clone
  %add.5563 = f32[] add(%add.5562, %all-reduce.1039)
  %all-reduce.1040 = f32[] all-reduce(%reduce.627), channel_id=1491, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1419.35382.clone
  %add.5564 = f32[] add(%add.5563, %all-reduce.1040)
  %all-reduce.1041 = f32[] all-reduce(%reduce.628), channel_id=1492, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1420.35389.clone
  %add.5565 = f32[] add(%add.5564, %all-reduce.1041)
  %all-reduce.1042 = f32[] all-reduce(%reduce.629), channel_id=1493, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1421.35396.clone
  %add.5566 = f32[] add(%add.5565, %all-reduce.1042)
  %all-reduce.1043 = f32[] all-reduce(%reduce.630), channel_id=1494, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1422.35403.clone
  %add.5568 = f32[] add(%add.5566, %all-reduce.1043)
  %add.5569 = f32[] add(%add.5568, %reduce.632)
  %add.5570 = f32[] add(%add.5569, %reduce.634)
  %all-reduce.1044 = f32[] all-reduce(%reduce.635), channel_id=1495, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1425.35424.clone
  %add.5571 = f32[] add(%add.5570, %all-reduce.1044)
  %all-reduce.1045 = f32[] all-reduce(%reduce.636), channel_id=1496, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1426.35431.clone
  %add.5572 = f32[] add(%add.5571, %all-reduce.1045)
  %all-reduce.1046 = f32[] all-reduce(%reduce.637), channel_id=1497, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1427.35438.clone
  %add.5573 = f32[] add(%add.5572, %all-reduce.1046)
  %all-reduce.1047 = f32[] all-reduce(%reduce.638), channel_id=1498, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1428.35445.clone
  %add.5574 = f32[] add(%add.5573, %all-reduce.1047)
  %all-reduce.1048 = f32[] all-reduce(%reduce.639), channel_id=1499, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1429.35452.clone
  %add.5575 = f32[] add(%add.5574, %all-reduce.1048)
  %all-reduce.1049 = f32[] all-reduce(%reduce.640), channel_id=1500, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1430.35459.clone
  %add.5576 = f32[] add(%add.5575, %all-reduce.1049)
  %all-reduce.1050 = f32[] all-reduce(%reduce.641), channel_id=1501, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1431.35466.clone
  %add.5577 = f32[] add(%add.5576, %all-reduce.1050)
  %add.5578 = f32[] add(%add.5577, %reduce.643)
  %add.5579 = f32[] add(%add.5578, %reduce.645)
  %all-reduce.1051 = f32[] all-reduce(%reduce.646), channel_id=1502, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1434.35487.clone
  %add.5580 = f32[] add(%add.5579, %all-reduce.1051)
  %all-reduce.1052 = f32[] all-reduce(%reduce.647), channel_id=1503, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1435.35494.clone
  %add.5581 = f32[] add(%add.5580, %all-reduce.1052)
  %all-reduce.1053 = f32[] all-reduce(%reduce.648), channel_id=1504, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1436.35501.clone
  %add.5582 = f32[] add(%add.5581, %all-reduce.1053)
  %all-reduce.1054 = f32[] all-reduce(%reduce.649), channel_id=1505, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1437.35508.clone
  %add.5583 = f32[] add(%add.5582, %all-reduce.1054)
  %all-reduce.1055 = f32[] all-reduce(%reduce.650), channel_id=1506, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1438.35515.clone
  %add.5584 = f32[] add(%add.5583, %all-reduce.1055)
  %all-reduce.1056 = f32[] all-reduce(%reduce.651), channel_id=1507, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1439.35522.clone
  %add.5586 = f32[] add(%add.5584, %all-reduce.1056)
  %all-reduce.1057 = f32[] all-reduce(%reduce.652), channel_id=1508, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1440.35529.clone
  %add.5587 = f32[] add(%add.5586, %all-reduce.1057)
  %add.5588 = f32[] add(%add.5587, %reduce.654)
  %add.5589 = f32[] add(%add.5588, %reduce.656)
  %all-reduce.1058 = f32[] all-reduce(%reduce.657), channel_id=1509, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1443.35550.clone
  %add.5590 = f32[] add(%add.5589, %all-reduce.1058)
  %all-reduce.1059 = f32[] all-reduce(%reduce.658), channel_id=1510, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1444.35557.clone
  %add.5591 = f32[] add(%add.5590, %all-reduce.1059)
  %all-reduce.1060 = f32[] all-reduce(%reduce.659), channel_id=1511, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1445.35564.clone
  %add.5592 = f32[] add(%add.5591, %all-reduce.1060)
  %all-reduce.1061 = f32[] all-reduce(%reduce.660), channel_id=1512, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1446.35571.clone
  %add.5593 = f32[] add(%add.5592, %all-reduce.1061)
  %all-reduce.1062 = f32[] all-reduce(%reduce.661), channel_id=1513, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1447.35578.clone
  %add.5594 = f32[] add(%add.5593, %all-reduce.1062)
  %all-reduce.1063 = f32[] all-reduce(%reduce.662), channel_id=1514, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1448.35585.clone
  %add.5595 = f32[] add(%add.5594, %all-reduce.1063)
  %all-reduce.1064 = f32[] all-reduce(%reduce.663), channel_id=1515, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1449.35592.clone
  %add.5596 = f32[] add(%add.5595, %all-reduce.1064)
  %add.5598 = f32[] add(%add.5596, %reduce.665)
  %add.5599 = f32[] add(%add.5598, %reduce.667)
  %all-reduce.1065 = f32[] all-reduce(%reduce.668), channel_id=1516, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1452.35613.clone
  %add.5600 = f32[] add(%add.5599, %all-reduce.1065)
  %all-reduce.1066 = f32[] all-reduce(%reduce.669), channel_id=1517, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1453.35620.clone
  %add.5602 = f32[] add(%add.5600, %all-reduce.1066)
  %all-reduce.1067 = f32[] all-reduce(%reduce.670), channel_id=1518, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1454.35627.clone
  %add.5603 = f32[] add(%add.5602, %all-reduce.1067)
  %all-reduce.1068 = f32[] all-reduce(%reduce.671), channel_id=1519, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1455.35634.clone
  %add.5604 = f32[] add(%add.5603, %all-reduce.1068)
  %all-reduce.1069 = f32[] all-reduce(%reduce.672), channel_id=1520, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1456.35641.clone
  %add.5605 = f32[] add(%add.5604, %all-reduce.1069)
  %all-reduce.1070 = f32[] all-reduce(%reduce.673), channel_id=1521, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1457.35648.clone
  %add.5606 = f32[] add(%add.5605, %all-reduce.1070)
  %all-reduce.1071 = f32[] all-reduce(%reduce.674), channel_id=1522, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1458.35655.clone
  %add.5607 = f32[] add(%add.5606, %all-reduce.1071)
  %add.5608 = f32[] add(%add.5607, %reduce.676)
  %add.5609 = f32[] add(%add.5608, %reduce.678)
  %all-reduce.1072 = f32[] all-reduce(%reduce.679), channel_id=1523, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1461.35676.clone
  %add.5610 = f32[] add(%add.5609, %all-reduce.1072)
  %all-reduce.1073 = f32[] all-reduce(%reduce.680), channel_id=1524, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1462.35683.clone
  %add.5611 = f32[] add(%add.5610, %all-reduce.1073)
  %all-reduce.1074 = f32[] all-reduce(%reduce.681), channel_id=1525, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1463.35690.clone
  %add.5612 = f32[] add(%add.5611, %all-reduce.1074)
  %all-reduce.1075 = f32[] all-reduce(%reduce.682), channel_id=1526, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1464.35697.clone
  %add.5613 = f32[] add(%add.5612, %all-reduce.1075)
  %all-reduce.1076 = f32[] all-reduce(%reduce.683), channel_id=1527, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1465.35704.clone
  %add.5614 = f32[] add(%add.5613, %all-reduce.1076)
  %all-reduce.1077 = f32[] all-reduce(%reduce.684), channel_id=1528, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1466.35711.clone
  %add.5615 = f32[] add(%add.5614, %all-reduce.1077)
  %all-reduce.1078 = f32[] all-reduce(%reduce.685), channel_id=1529, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1467.35718.clone
  %add.5616 = f32[] add(%add.5615, %all-reduce.1078)
  %add.5617 = f32[] add(%add.5616, %reduce.687)
  %add.5618 = f32[] add(%add.5617, %reduce.689)
  %all-reduce.1079 = f32[] all-reduce(%reduce.690), channel_id=1530, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1470.35739.clone
  %add.5619 = f32[] add(%add.5618, %all-reduce.1079)
  %all-reduce.1080 = f32[] all-reduce(%reduce.691), channel_id=1531, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1471.35746.clone
  %add.5620 = f32[] add(%add.5619, %all-reduce.1080)
  %all-reduce.1081 = f32[] all-reduce(%reduce.692), channel_id=1532, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1472.35753.clone
  %add.5621 = f32[] add(%add.5620, %all-reduce.1081)
  %all-reduce.1082 = f32[] all-reduce(%reduce.693), channel_id=1533, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1473.35760.clone
  %add.5622 = f32[] add(%add.5621, %all-reduce.1082)
  %all-reduce.1083 = f32[] all-reduce(%reduce.694), channel_id=1534, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1474.35767.clone
  %add.5623 = f32[] add(%add.5622, %all-reduce.1083)
  %all-reduce.1084 = f32[] all-reduce(%reduce.695), channel_id=1535, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1475.35774.clone
  %add.5624 = f32[] add(%add.5623, %all-reduce.1084)
  %all-reduce.1085 = f32[] all-reduce(%reduce.696), channel_id=1536, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1476.35781.clone
  %add.5625 = f32[] add(%add.5624, %all-reduce.1085)
  %add.5626 = f32[] add(%add.5625, %reduce.698)
  %add.5627 = f32[] add(%add.5626, %reduce.700)
  %all-reduce.1086 = f32[] all-reduce(%reduce.701), channel_id=1537, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1479.35802.clone
  %add.5628 = f32[] add(%add.5627, %all-reduce.1086)
  %all-reduce.1087 = f32[] all-reduce(%reduce.702), channel_id=1538, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1480.35809.clone
  %add.5629 = f32[] add(%add.5628, %all-reduce.1087)
  %all-reduce.1088 = f32[] all-reduce(%reduce.703), channel_id=1539, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1481.35816.clone
  %add.5630 = f32[] add(%add.5629, %all-reduce.1088)
  %all-reduce.1089 = f32[] all-reduce(%reduce.704), channel_id=1540, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1482.35823.clone
  %add.5632 = f32[] add(%add.5630, %all-reduce.1089)
  %all-reduce.1090 = f32[] all-reduce(%reduce.705), channel_id=1541, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1483.35830.clone
  %add.5633 = f32[] add(%add.5632, %all-reduce.1090)
  %all-reduce.1091 = f32[] all-reduce(%reduce.706), channel_id=1542, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1484.35837.clone
  %add.5634 = f32[] add(%add.5633, %all-reduce.1091)
  %all-reduce.1092 = f32[] all-reduce(%reduce.707), channel_id=1543, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1485.35844.clone
  %add.5635 = f32[] add(%add.5634, %all-reduce.1092)
  %add.5636 = f32[] add(%add.5635, %reduce.709)
  %add.5637 = f32[] add(%add.5636, %reduce.711)
  %all-reduce.1093 = f32[] all-reduce(%reduce.712), channel_id=1544, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1488.35865.clone
  %add.5638 = f32[] add(%add.5637, %all-reduce.1093)
  %all-reduce.1094 = f32[] all-reduce(%reduce.713), channel_id=1545, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1489.35872.clone
  %add.5639 = f32[] add(%add.5638, %all-reduce.1094)
  %all-reduce.1095 = f32[] all-reduce(%reduce.714), channel_id=1546, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1490.35879.clone
  %add.5640 = f32[] add(%add.5639, %all-reduce.1095)
  %all-reduce.1096 = f32[] all-reduce(%reduce.715), channel_id=1547, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1491.35886.clone
  %add.5641 = f32[] add(%add.5640, %all-reduce.1096)
  %all-reduce.1097 = f32[] all-reduce(%reduce.716), channel_id=1548, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1492.35893.clone
  %add.5642 = f32[] add(%add.5641, %all-reduce.1097)
  %all-reduce.1098 = f32[] all-reduce(%reduce.717), channel_id=1549, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1493.35900.clone
  %add.5643 = f32[] add(%add.5642, %all-reduce.1098)
  %all-reduce.1099 = f32[] all-reduce(%reduce.718), channel_id=1550, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1494.35907.clone
  %add.5644 = f32[] add(%add.5643, %all-reduce.1099)
  %add.5645 = f32[] add(%add.5644, %reduce.720)
  %add.5646 = f32[] add(%add.5645, %reduce.722)
  %all-reduce.1100 = f32[] all-reduce(%reduce.723), channel_id=1551, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1497.35928.clone
  %add.5647 = f32[] add(%add.5646, %all-reduce.1100)
  %all-reduce.1101 = f32[] all-reduce(%reduce.724), channel_id=1552, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1498.35935.clone
  %add.5648 = f32[] add(%add.5647, %all-reduce.1101)
  %all-reduce.1102 = f32[] all-reduce(%reduce.725), channel_id=1553, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1499.35942.clone
  %add.5649 = f32[] add(%add.5648, %all-reduce.1102)
  %all-reduce.1103 = f32[] all-reduce(%reduce.726), channel_id=1554, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1500.35949.clone
  %add.5650 = f32[] add(%add.5649, %all-reduce.1103)
  %all-reduce.1104 = f32[] all-reduce(%reduce.727), channel_id=1555, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1501.35956.clone
  %add.5651 = f32[] add(%add.5650, %all-reduce.1104)
  %all-reduce.1105 = f32[] all-reduce(%reduce.728), channel_id=1556, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1502.35963.clone
  %add.5652 = f32[] add(%add.5651, %all-reduce.1105)
  %all-reduce.1106 = f32[] all-reduce(%reduce.729), channel_id=1557, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1503.35970.clone
  %add.5653 = f32[] add(%add.5652, %all-reduce.1106)
  %add.5654 = f32[] add(%add.5653, %reduce.731)
  %add.5655 = f32[] add(%add.5654, %reduce.733)
  %all-reduce.1107 = f32[] all-reduce(%reduce.734), channel_id=1558, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1506.35991.clone
  %add.5656 = f32[] add(%add.5655, %all-reduce.1107)
  %all-reduce.1108 = f32[] all-reduce(%reduce.735), channel_id=1559, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1507.35998.clone
  %add.5657 = f32[] add(%add.5656, %all-reduce.1108)
  %all-reduce.1109 = f32[] all-reduce(%reduce.736), channel_id=1560, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1508.36005.clone
  %add.5659 = f32[] add(%add.5657, %all-reduce.1109)
  %all-reduce.1110 = f32[] all-reduce(%reduce.737), channel_id=1561, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1509.36012.clone
  %add.5660 = f32[] add(%add.5659, %all-reduce.1110)
  %all-reduce.1111 = f32[] all-reduce(%reduce.738), channel_id=1562, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1510.36019.clone
  %add.5661 = f32[] add(%add.5660, %all-reduce.1111)
  %all-reduce.1112 = f32[] all-reduce(%reduce.739), channel_id=1563, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1511.36026.clone
  %add.5662 = f32[] add(%add.5661, %all-reduce.1112)
  %all-reduce.1113 = f32[] all-reduce(%reduce.740), channel_id=1564, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1512.36033.clone
  %add.5663 = f32[] add(%add.5662, %all-reduce.1113)
  %add.5664 = f32[] add(%add.5663, %reduce.742)
  %add.5665 = f32[] add(%add.5664, %reduce.744)
  %all-reduce.1114 = f32[] all-reduce(%reduce.745), channel_id=1565, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1515.36054.clone
  %add.5666 = f32[] add(%add.5665, %all-reduce.1114)
  %all-reduce.1115 = f32[] all-reduce(%reduce.746), channel_id=1566, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1516.36061.clone
  %add.5667 = f32[] add(%add.5666, %all-reduce.1115)
  %all-reduce.1116 = f32[] all-reduce(%reduce.747), channel_id=1567, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1517.36068.clone
  %add.5668 = f32[] add(%add.5667, %all-reduce.1116)
  %all-reduce.1117 = f32[] all-reduce(%reduce.748), channel_id=1568, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1518.36075.clone
  %add.5669 = f32[] add(%add.5668, %all-reduce.1117)
  %all-reduce.1118 = f32[] all-reduce(%reduce.749), channel_id=1569, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1519.36082.clone
  %add.5670 = f32[] add(%add.5669, %all-reduce.1118)
  %all-reduce.1119 = f32[] all-reduce(%reduce.750), channel_id=1570, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1520.36089.clone
  %add.5671 = f32[] add(%add.5670, %all-reduce.1119)
  %all-reduce.1120 = f32[] all-reduce(%reduce.751), channel_id=1571, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1521.36096.clone
  %add.5672 = f32[] add(%add.5671, %all-reduce.1120)
  %add.5673 = f32[] add(%add.5672, %reduce.753)
  %add.5674 = f32[] add(%add.5673, %reduce.755)
  %all-reduce.1121 = f32[] all-reduce(%reduce.756), channel_id=1572, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1524.36117.clone
  %add.5675 = f32[] add(%add.5674, %all-reduce.1121)
  %all-reduce.1122 = f32[] all-reduce(%reduce.757), channel_id=1573, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1525.36124.clone
  %add.5676 = f32[] add(%add.5675, %all-reduce.1122)
  %all-reduce.1123 = f32[] all-reduce(%reduce.758), channel_id=1574, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1526.36131.clone
  %add.5677 = f32[] add(%add.5676, %all-reduce.1123)
  %all-reduce.1124 = f32[] all-reduce(%reduce.759), channel_id=1575, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1527.36138.clone
  %add.5678 = f32[] add(%add.5677, %all-reduce.1124)
  %all-reduce.1125 = f32[] all-reduce(%reduce.760), channel_id=1576, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1528.36145.clone
  %add.5679 = f32[] add(%add.5678, %all-reduce.1125)
  %all-reduce.1126 = f32[] all-reduce(%reduce.761), channel_id=1577, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1529.36152.clone
  %add.5681 = f32[] add(%add.5679, %all-reduce.1126)
  %all-reduce.1127 = f32[] all-reduce(%reduce.762), channel_id=1578, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1530.36159.clone
  %add.5682 = f32[] add(%add.5681, %all-reduce.1127)
  %add.5683 = f32[] add(%add.5682, %reduce.764)
  %add.5684 = f32[] add(%add.5683, %reduce.766)
  %all-reduce.1128 = f32[] all-reduce(%reduce.767), channel_id=1579, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1533.36180.clone
  %add.5685 = f32[] add(%add.5684, %all-reduce.1128)
  %all-reduce.1129 = f32[] all-reduce(%reduce.768), channel_id=1580, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1534.36187.clone
  %add.5686 = f32[] add(%add.5685, %all-reduce.1129)
  %all-reduce.1130 = f32[] all-reduce(%reduce.769), channel_id=1581, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1535.36194.clone
  %add.5687 = f32[] add(%add.5686, %all-reduce.1130)
  %all-reduce.1131 = f32[] all-reduce(%reduce.770), channel_id=1582, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1536.36201.clone
  %add.5688 = f32[] add(%add.5687, %all-reduce.1131)
  %all-reduce.1132 = f32[] all-reduce(%reduce.771), channel_id=1583, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1537.36208.clone
  %add.5690 = f32[] add(%add.5688, %all-reduce.1132)
  %all-reduce.1133 = f32[] all-reduce(%reduce.772), channel_id=1584, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1538.36215.clone
  %add.5691 = f32[] add(%add.5690, %all-reduce.1133)
  %all-reduce.1134 = f32[] all-reduce(%reduce.773), channel_id=1585, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1539.36222.clone
  %add.5692 = f32[] add(%add.5691, %all-reduce.1134)
  %add.5693 = f32[] add(%add.5692, %reduce.775)
  %add.5694 = f32[] add(%add.5693, %reduce.777)
  %all-reduce.1135 = f32[] all-reduce(%reduce.778), channel_id=1586, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1542.36243.clone
  %add.5695 = f32[] add(%add.5694, %all-reduce.1135)
  %all-reduce.1136 = f32[] all-reduce(%reduce.779), channel_id=1587, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1543.36250.clone
  %add.5697 = f32[] add(%add.5695, %all-reduce.1136)
  %all-reduce.1137 = f32[] all-reduce(%reduce.780), channel_id=1588, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1544.36257.clone
  %add.5698 = f32[] add(%add.5697, %all-reduce.1137)
  %all-reduce.1138 = f32[] all-reduce(%reduce.781), channel_id=1589, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1545.36264.clone
  %add.5699 = f32[] add(%add.5698, %all-reduce.1138)
  %all-reduce.1139 = f32[] all-reduce(%reduce.782), channel_id=1590, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1546.36271.clone
  %add.5700 = f32[] add(%add.5699, %all-reduce.1139)
  %all-reduce.1140 = f32[] all-reduce(%reduce.783), channel_id=1591, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1547.36278.clone
  %add.5701 = f32[] add(%add.5700, %all-reduce.1140)
  %all-reduce.1141 = f32[] all-reduce(%reduce.784), channel_id=1592, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1548.36285.clone
  %add.5702 = f32[] add(%add.5701, %all-reduce.1141)
  %add.5704 = f32[] add(%add.5702, %reduce.786)
  %add.5705 = f32[] add(%add.5704, %reduce.788)
  %all-reduce.1142 = f32[] all-reduce(%reduce.789), channel_id=1593, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1551.36306.clone
  %add.5706 = f32[] add(%add.5705, %all-reduce.1142)
  %all-reduce.1143 = f32[] all-reduce(%reduce.790), channel_id=1594, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1552.36313.clone
  %add.5707 = f32[] add(%add.5706, %all-reduce.1143)
  %all-reduce.1144 = f32[] all-reduce(%reduce.791), channel_id=1595, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1553.36320.clone
  %add.5708 = f32[] add(%add.5707, %all-reduce.1144)
  %all-reduce.1145 = f32[] all-reduce(%reduce.792), channel_id=1596, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1554.36327.clone
  %add.5709 = f32[] add(%add.5708, %all-reduce.1145)
  %all-reduce.1146 = f32[] all-reduce(%reduce.793), channel_id=1597, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1555.36334.clone
  %add.5710 = f32[] add(%add.5709, %all-reduce.1146)
  %all-reduce.1147 = f32[] all-reduce(%reduce.794), channel_id=1598, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1556.36341.clone
  %add.5711 = f32[] add(%add.5710, %all-reduce.1147)
  %all-reduce.1148 = f32[] all-reduce(%reduce.795), channel_id=1599, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1557.36348.clone
  %add.5712 = f32[] add(%add.5711, %all-reduce.1148)
  %add.5713 = f32[] add(%add.5712, %reduce.797)
  %add.5715 = f32[] add(%add.5713, %reduce.799)
  %all-reduce.1149 = f32[] all-reduce(%reduce.800), channel_id=1600, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1560.36369.clone
  %add.5716 = f32[] add(%add.5715, %all-reduce.1149)
  %all-reduce.1150 = f32[] all-reduce(%reduce.801), channel_id=1601, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1561.36376.clone
  %add.5717 = f32[] add(%add.5716, %all-reduce.1150)
  %all-reduce.1151 = f32[] all-reduce(%reduce.802), channel_id=1602, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1562.36383.clone
  %add.5718 = f32[] add(%add.5717, %all-reduce.1151)
  %all-reduce.1152 = f32[] all-reduce(%reduce.803), channel_id=1603, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1563.36390.clone
  %add.5719 = f32[] add(%add.5718, %all-reduce.1152)
  %all-reduce.1153 = f32[] all-reduce(%reduce.804), channel_id=1604, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1564.36397.clone
  %add.5720 = f32[] add(%add.5719, %all-reduce.1153)
  %all-reduce.1154 = f32[] all-reduce(%reduce.805), channel_id=1605, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1565.36404.clone
  %add.5721 = f32[] add(%add.5720, %all-reduce.1154)
  %all-reduce.1155 = f32[] all-reduce(%reduce.806), channel_id=1606, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1566.36411.clone
  %add.5722 = f32[] add(%add.5721, %all-reduce.1155)
  %add.5723 = f32[] add(%add.5722, %reduce.808)
  %add.5724 = f32[] add(%add.5723, %reduce.810)
  %all-reduce.1156 = f32[] all-reduce(%reduce.811), channel_id=1607, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1569.36432.clone
  %add.5726 = f32[] add(%add.5724, %all-reduce.1156)
  %all-reduce.1157 = f32[] all-reduce(%reduce.812), channel_id=1608, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1570.36439.clone
  %add.5727 = f32[] add(%add.5726, %all-reduce.1157)
  %all-reduce.1158 = f32[] all-reduce(%reduce.813), channel_id=1609, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1571.36446.clone
  %add.5728 = f32[] add(%add.5727, %all-reduce.1158)
  %all-reduce.1159 = f32[] all-reduce(%reduce.814), channel_id=1610, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1572.36453.clone
  %add.5729 = f32[] add(%add.5728, %all-reduce.1159)
  %all-reduce.1160 = f32[] all-reduce(%reduce.815), channel_id=1611, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1573.36460.clone
  %add.5730 = f32[] add(%add.5729, %all-reduce.1160)
  %all-reduce.1161 = f32[] all-reduce(%reduce.816), channel_id=1612, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1574.36467.clone
  %add.5731 = f32[] add(%add.5730, %all-reduce.1161)
  %all-reduce.1162 = f32[] all-reduce(%reduce.817), channel_id=1613, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1575.36474.clone
  %add.5732 = f32[] add(%add.5731, %all-reduce.1162)
  %add.5733 = f32[] add(%add.5732, %reduce.819)
  %add.5735 = f32[] add(%add.5733, %reduce.821)
  %all-reduce.1163 = f32[] all-reduce(%reduce.822), channel_id=1614, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1578.36495.clone
  %add.5736 = f32[] add(%add.5735, %all-reduce.1163)
  %all-reduce.1164 = f32[] all-reduce(%reduce.823), channel_id=1615, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1579.36502.clone
  %add.5737 = f32[] add(%add.5736, %all-reduce.1164)
  %all-reduce.1165 = f32[] all-reduce(%reduce.824), channel_id=1616, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1580.36509.clone
  %add.5738 = f32[] add(%add.5737, %all-reduce.1165)
  %all-reduce.1166 = f32[] all-reduce(%reduce.825), channel_id=1617, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1581.36516.clone
  %add.5739 = f32[] add(%add.5738, %all-reduce.1166)
  %all-reduce.1167 = f32[] all-reduce(%reduce.826), channel_id=1618, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1582.36523.clone
  %add.5740 = f32[] add(%add.5739, %all-reduce.1167)
  %all-reduce.1168 = f32[] all-reduce(%reduce.827), channel_id=1619, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1583.36530.clone
  %add.5741 = f32[] add(%add.5740, %all-reduce.1168)
  %all-reduce.1169 = f32[] all-reduce(%reduce.828), channel_id=1620, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1584.36537.clone
  %add.5742 = f32[] add(%add.5741, %all-reduce.1169)
  %add.5743 = f32[] add(%add.5742, %reduce.830)
  %add.5744 = f32[] add(%add.5743, %reduce.832)
  %all-reduce.1170 = f32[] all-reduce(%reduce.833), channel_id=1621, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1587.36558.clone
  %add.5745 = f32[] add(%add.5744, %all-reduce.1170)
  %all-reduce.1171 = f32[] all-reduce(%reduce.834), channel_id=1622, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1588.36565.clone
  %add.5746 = f32[] add(%add.5745, %all-reduce.1171)
  %all-reduce.1172 = f32[] all-reduce(%reduce.835), channel_id=1623, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1589.36572.clone
  %add.5747 = f32[] add(%add.5746, %all-reduce.1172)
  %all-reduce.1173 = f32[] all-reduce(%reduce.836), channel_id=1624, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1590.36579.clone
  %add.5748 = f32[] add(%add.5747, %all-reduce.1173)
  %all-reduce.1174 = f32[] all-reduce(%reduce.837), channel_id=1625, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1591.36586.clone
  %add.5749 = f32[] add(%add.5748, %all-reduce.1174)
  %all-reduce.1175 = f32[] all-reduce(%reduce.838), channel_id=1626, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1592.36593.clone
  %add.5750 = f32[] add(%add.5749, %all-reduce.1175)
  %all-reduce.1176 = f32[] all-reduce(%reduce.839), channel_id=1627, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1593.36600.clone
  %add.5751 = f32[] add(%add.5750, %all-reduce.1176)
  %add.5752 = f32[] add(%add.5751, %reduce.841)
  %add.5753 = f32[] add(%add.5752, %reduce.843)
  %all-reduce.1177 = f32[] all-reduce(%reduce.844), channel_id=1628, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1596.36621.clone
  %add.5754 = f32[] add(%add.5753, %all-reduce.1177)
  %all-reduce.1178 = f32[] all-reduce(%reduce.845), channel_id=1629, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1597.36628.clone
  %add.5755 = f32[] add(%add.5754, %all-reduce.1178)
  %all-reduce.1179 = f32[] all-reduce(%reduce.846), channel_id=1630, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1598.36635.clone
  %add.5756 = f32[] add(%add.5755, %all-reduce.1179)
  %all-reduce.1180 = f32[] all-reduce(%reduce.847), channel_id=1631, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1599.36642.clone
  %add.5757 = f32[] add(%add.5756, %all-reduce.1180)
  %all-reduce.1181 = f32[] all-reduce(%reduce.848), channel_id=1632, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1600.36649.clone
  %add.5758 = f32[] add(%add.5757, %all-reduce.1181)
  %all-reduce.1182 = f32[] all-reduce(%reduce.849), channel_id=1633, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1601.36656.clone
  %add.5759 = f32[] add(%add.5758, %all-reduce.1182)
  %all-reduce.1183 = f32[] all-reduce(%reduce.850), channel_id=1634, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1602.36663.clone
  %add.5760 = f32[] add(%add.5759, %all-reduce.1183)
  %add.5761 = f32[] add(%add.5760, %reduce.852)
  %add.5762 = f32[] add(%add.5761, %reduce.854)
  %all-reduce.1184 = f32[] all-reduce(%reduce.855), channel_id=1635, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1605.36684.clone
  %add.5763 = f32[] add(%add.5762, %all-reduce.1184)
  %all-reduce.1185 = f32[] all-reduce(%reduce.856), channel_id=1636, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1606.36691.clone
  %add.5764 = f32[] add(%add.5763, %all-reduce.1185)
  %all-reduce.1186 = f32[] all-reduce(%reduce.857), channel_id=1637, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1607.36698.clone
  %add.5766 = f32[] add(%add.5764, %all-reduce.1186)
  %all-reduce.1187 = f32[] all-reduce(%reduce.858), channel_id=1638, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1608.36705.clone
  %add.5767 = f32[] add(%add.5766, %all-reduce.1187)
  %all-reduce.1188 = f32[] all-reduce(%reduce.859), channel_id=1639, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1609.36712.clone
  %add.5768 = f32[] add(%add.5767, %all-reduce.1188)
  %all-reduce.1189 = f32[] all-reduce(%reduce.860), channel_id=1640, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1610.36719.clone
  %add.5769 = f32[] add(%add.5768, %all-reduce.1189)
  %all-reduce.1190 = f32[] all-reduce(%reduce.861), channel_id=1641, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1611.36726.clone
  %add.5770 = f32[] add(%add.5769, %all-reduce.1190)
  %add.5771 = f32[] add(%add.5770, %reduce.863)
  %add.5773 = f32[] add(%add.5771, %reduce.865)
  %all-reduce.1191 = f32[] all-reduce(%reduce.866), channel_id=1642, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1614.36747.clone
  %add.5774 = f32[] add(%add.5773, %all-reduce.1191)
  %all-reduce.1192 = f32[] all-reduce(%reduce.867), channel_id=1643, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1615.36754.clone
  %add.5775 = f32[] add(%add.5774, %all-reduce.1192)
  %all-reduce.1193 = f32[] all-reduce(%reduce.868), channel_id=1644, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1616.36761.clone
  %add.5776 = f32[] add(%add.5775, %all-reduce.1193)
  %all-reduce.1194 = f32[] all-reduce(%reduce.869), channel_id=1645, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1617.36768.clone
  %add.5777 = f32[] add(%add.5776, %all-reduce.1194)
  %all-reduce.1195 = f32[] all-reduce(%reduce.870), channel_id=1646, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1618.36775.clone
  %add.5778 = f32[] add(%add.5777, %all-reduce.1195)
  %all-reduce.1196 = f32[] all-reduce(%reduce.872), channel_id=1647, replica_groups=[1,8]<=[8], use_global_device_ids=true, to_apply=%region_1619.36782.clone
  %add.5779 = f32[] add(%add.5778, %all-reduce.1196)
  %sqrt.295 = f32[] sqrt(%add.5779)
  ROOT %tuple.159 = (s32[], f32[4096]{0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=5*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=10*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=15*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=20*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=25*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=30*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=35*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=40*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=45*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=50*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=55*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=60*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=65*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=70*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=75*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=80*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=85*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=90*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=95*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=100*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=105*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=110*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=115*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=120*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=125*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=130*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=135*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=140*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=145*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=150*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=155*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=160*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=165*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=170*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=175*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=180*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=185*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=190*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=195*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=200*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=205*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=210*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=215*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=220*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=225*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=230*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=235*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=240*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=245*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=250*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=255*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=260*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=265*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=270*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=275*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=280*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=285*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=290*/f32[512,128256]{1,0}, f32[128256,512]{1,0}, s32[], f32[4096]{0}, f32[512,14336]{1,0}, /*index=295*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=300*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=305*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=310*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=315*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=320*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=325*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=330*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=335*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=340*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=345*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=350*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=355*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=360*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=365*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=370*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=375*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=380*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=385*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=390*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=395*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=400*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=405*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=410*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=415*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=420*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=425*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=430*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=435*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=440*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=445*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=450*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=455*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=460*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=465*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=470*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=475*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=480*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=485*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=490*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=495*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=500*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=505*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=510*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=515*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=520*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=525*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=530*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=535*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=540*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=545*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=550*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=555*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=560*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=565*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=570*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=575*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=580*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,128256]{1,0}, f32[128256,512]{1,0}, f32[4096]{0}, /*index=585*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=590*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=595*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=600*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=605*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=610*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=615*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=620*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=625*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=630*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=635*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=640*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=645*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=650*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=655*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=660*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=665*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=670*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=675*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=680*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=685*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=690*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=695*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=700*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=705*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=710*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=715*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=720*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=725*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=730*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=735*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=740*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=745*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=750*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=755*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=760*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=765*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=770*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=775*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=780*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=785*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=790*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=795*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=800*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=805*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=810*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=815*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=820*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=825*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, /*index=830*/f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, /*index=835*/f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, /*index=840*/f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, /*index=845*/f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, /*index=850*/f32[4096]{0}, f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, /*index=855*/f32[512,14336]{1,0}, f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, /*index=860*/f32[512,8,128]{2,1,0}, f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,14336]{1,0}, /*index=865*/f32[512,14336]{1,0}, f32[14336,512]{1,0}, f32[4096]{0}, f32[4096]{0}, f32[512,8,128]{2,1,0}, /*index=870*/f32[32,128,512]{2,1,0}, f32[512,32,128]{2,1,0}, f32[512,8,128]{2,1,0}, f32[512,128256]{1,0}, f32[128256,512]{1,0}, /*index=875*/s32[], f32[], f32[], f32[], f32[], /*index=880*/f32[], f32[], s32[]) tuple(%add.1953, %add.3286, %add.3292, %add.3297, %add.3303, /*index=5*/%add.3308, %add.3314, %add.3319, %add.3325, %add.3330, /*index=10*/%add.3335, %add.3341, %add.3346, %add.3353, %add.3358, /*index=15*/%add.3363, %add.3368, %add.3373, %add.3378, %add.3383, /*index=20*/%add.3388, %add.3393, %add.3398, %add.3404, %add.3411, /*index=25*/%add.3416, %add.3421, %add.3427, %add.3432, %add.3438, /*index=30*/%add.3443, %add.3450, %add.3455, %add.3460, %add.3465, /*index=35*/%add.3470, %add.3475, %add.3480, %add.3487, %add.3492, /*index=40*/%add.3497, %add.3502, %add.3507, %add.3512, %add.3518, /*index=45*/%add.3523, %add.3529, %add.3534, %add.3539, %add.3544, /*index=50*/%add.3550, %add.3555, %add.3560, %add.3565, %add.3570, /*index=55*/%add.3575, %add.3581, %add.3587, %add.3593, %add.3598, /*index=60*/%add.3603, %add.3608, %add.3613, %add.3619, %add.3624, /*index=65*/%add.3631, %add.3636, %add.3642, %add.3647, %add.3653, /*index=70*/%add.3658, %add.3664, %add.3669, %add.3675, %add.3680, /*index=75*/%add.3685, %add.3690, %add.3696, %add.3701, %add.3706, /*index=80*/%add.3711, %add.3717, %add.3722, %add.3727, %add.3733, /*index=85*/%add.3738, %add.3744, %add.3749, %add.3754, %add.3759, /*index=90*/%add.3764, %add.3770, %add.3775, %add.3781, %add.3786, /*index=95*/%add.3791, %add.3796, %add.3801, %add.3808, %add.3813, /*index=100*/%add.3818, %add.3823, %add.3828, %add.3833, %add.3838, /*index=105*/%add.3843, %add.3848, %add.3853, %add.3859, %add.3866, /*index=110*/%add.3871, %add.3877, %add.3883, %add.3888, %add.3894, /*index=115*/%add.3900, %add.3906, %add.3912, %add.3917, %add.3922, /*index=120*/%add.3927, %add.3932, %add.3937, %add.3943, %add.3948, /*index=125*/%add.3953, %add.3958, %add.3963, %add.3968, %add.3975, /*index=130*/%add.3980, %add.3985, %add.3990, %add.3995, %add.4000, /*index=135*/%add.4006, %add.4012, %add.4017, %add.4022, %add.4027, /*index=140*/%add.4032, %add.4038, %add.4043, %add.4049, %add.4054, /*index=145*/%add.4059, %add.4064, %add.4069, %add.4074, %add.4079, /*index=150*/%add.4085, %add.4091, %add.4097, %add.4102, %add.4108, /*index=155*/%add.4113, %add.4119, %add.4124, %add.4130, %add.4135, /*index=160*/%add.4140, %add.4146, %add.4151, %add.4157, %add.4162, /*index=165*/%add.4167, %add.4173, %add.4178, %add.4184, %add.4189, /*index=170*/%add.4195, %add.4201, %add.4206, %add.4211, %add.4216, /*index=175*/%add.4221, %add.4226, %add.4231, %add.4237, %add.4242, /*index=180*/%add.4247, %add.4252, %add.4258, %add.4264, %add.4269, /*index=185*/%add.4274, %add.4279, %add.4284, %add.4289, %add.4295, /*index=190*/%add.4300, %add.4305, %add.4310, %add.4316, %add.4322, /*index=195*/%add.4327, %add.4333, %add.4339, %add.4344, %add.4350, /*index=200*/%add.4355, %add.4361, %add.4366, %add.4372, %add.4377, /*index=205*/%add.4382, %add.4387, %add.4392, %add.4398, %add.4403, /*index=210*/%add.4408, %add.4413, %add.4418, %add.4423, %add.4430, /*index=215*/%add.4436, %add.4441, %add.4446, %add.4451, %add.4456, /*index=220*/%add.4462, %add.4467, %add.4472, %add.4478, %add.4483, /*index=225*/%add.4488, %add.4494, %add.4499, %add.4504, %add.4509, /*index=230*/%add.4514, %add.4519, %add.4524, %add.4529, %add.4535, /*index=235*/%add.4541, %add.4546, %add.4552, %add.4557, %add.4562, /*index=240*/%add.4568, %add.4575, %add.4580, %add.4586, %add.4591, /*index=245*/%add.4596, %add.4601, %add.4606, %add.4612, %add.4617, /*index=250*/%add.4622, %add.4628, %add.4633, %add.4638, %add.4643, /*index=255*/%add.4649, %add.4654, %add.4660, %add.4665, %add.4670, /*index=260*/%add.4675, %add.4680, %add.4685, %add.4691, %add.4696, /*index=265*/%add.4701, %add.4707, %add.4712, %add.4718, %add.4724, /*index=270*/%add.4729, %add.4734, %add.4739, %add.4745, %add.4750, /*index=275*/%add.4756, %add.4761, %add.4766, %add.4772, %add.4778, /*index=280*/%add.4783, %add.4788, %add.4794, %add.4799, %add.4805, /*index=285*/%add.4810, %add.4817, %add.4822, %add.4827, %add.4832, /*index=290*/%add.4838, %add.4844, %select_n.2702, %add.3281, %add.3288, /*index=295*/%add.3293, %add.3298, %add.3304, %add.3309, %add.3315, /*index=300*/%add.3320, %add.3326, %add.3331, %add.3336, %add.3342, /*index=305*/%add.3347, %add.3354, %add.3359, %add.3364, %add.3369, /*index=310*/%add.3374, %add.3379, %add.3384, %add.3389, %add.3394, /*index=315*/%add.3399, %add.3405, %add.3412, %add.3417, %add.3422, /*index=320*/%add.3428, %add.3433, %add.3439, %add.3444, %add.3451, /*index=325*/%add.3456, %add.3461, %add.3466, %add.3471, %add.3476, /*index=330*/%add.3481, %add.3488, %add.3493, %add.3498, %add.3503, /*index=335*/%add.3508, %add.3513, %add.3519, %add.3525, %add.3530, /*index=340*/%add.3535, %add.3540, %add.3545, %add.3551, %add.3556, /*index=345*/%add.3561, %add.3566, %add.3571, %add.3576, %add.3583, /*index=350*/%add.3588, %add.3594, %add.3599, %add.3604, %add.3609, /*index=355*/%add.3614, %add.3620, %add.3625, %add.3632, %add.3638, /*index=360*/%add.3643, %add.3648, %add.3654, %add.3659, %add.3665, /*index=365*/%add.3670, %add.3676, %add.3681, %add.3686, %add.3692, /*index=370*/%add.3697, %add.3702, %add.3707, %add.3712, %add.3718, /*index=375*/%add.3723, %add.3728, %add.3734, %add.3739, %add.3745, /*index=380*/%add.3750, %add.3755, %add.3760, %add.3765, %add.3771, /*index=385*/%add.3776, %add.3782, %add.3787, %add.3792, %add.3797, /*index=390*/%add.3802, %add.3809, %add.3814, %add.3819, %add.3824, /*index=395*/%add.3829, %add.3834, %add.3839, %add.3844, %add.3849, /*index=400*/%add.3854, %add.3860, %add.3867, %add.3872, %add.3878, /*index=405*/%add.3884, %add.3889, %add.3895, %add.3902, %add.3907, /*index=410*/%add.3913, %add.3918, %add.3923, %add.3928, %add.3933, /*index=415*/%add.3938, %add.3944, %add.3949, %add.3954, %add.3959, /*index=420*/%add.3964, %add.3969, %add.3976, %add.3981, %add.3986, /*index=425*/%add.3991, %add.3996, %add.4001, %add.4007, %add.4013, /*index=430*/%add.4018, %add.4023, %add.4028, %add.4033, %add.4039, /*index=435*/%add.4044, %add.4050, %add.4055, %add.4060, %add.4065, /*index=440*/%add.4070, %add.4075, %add.4080, %add.4087, %add.4092, /*index=445*/%add.4098, %add.4103, %add.4109, %add.4114, %add.4120, /*index=450*/%add.4125, %add.4131, %add.4136, %add.4141, %add.4147, /*index=455*/%add.4152, %add.4158, %add.4163, %add.4168, %add.4174, /*index=460*/%add.4179, %add.4185, %add.4190, %add.4196, %add.4202, /*index=465*/%add.4207, %add.4212, %add.4217, %add.4222, %add.4227, /*index=470*/%add.4232, %add.4238, %add.4243, %add.4248, %add.4254, /*index=475*/%add.4259, %add.4265, %add.4270, %add.4275, %add.4280, /*index=480*/%add.4285, %add.4290, %add.4296, %add.4301, %add.4306, /*index=485*/%add.4311, %add.4317, %add.4323, %add.4328, %add.4334, /*index=490*/%add.4340, %add.4345, %add.4351, %add.4356, %add.4362, /*index=495*/%add.4368, %add.4373, %add.4378, %add.4383, %add.4388, /*index=500*/%add.4393, %add.4399, %add.4404, %add.4409, %add.4414, /*index=505*/%add.4419, %add.4424, %add.4431, %add.4437, %add.4442, /*index=510*/%add.4447, %add.4452, %add.4457, %add.4463, %add.4468, /*index=515*/%add.4474, %add.4479, %add.4484, %add.4489, %add.4495, /*index=520*/%add.4500, %add.4505, %add.4510, %add.4515, %add.4520, /*index=525*/%add.4525, %add.4530, %add.4536, %add.4542, %add.4547, /*index=530*/%add.4553, %add.4558, %add.4564, %add.4569, %add.4576, /*index=535*/%add.4581, %add.4587, %add.4592, %add.4597, %add.4602, /*index=540*/%add.4607, %add.4613, %add.4618, %add.4623, %add.4629, /*index=545*/%add.4634, %add.4639, %add.4644, %add.4650, %add.4656, /*index=550*/%add.4661, %add.4666, %add.4671, %add.4676, %add.4681, /*index=555*/%add.4686, %add.4692, %add.4697, %add.4702, %add.4708, /*index=560*/%add.4713, %add.4720, %add.4725, %add.4730, %add.4735, /*index=565*/%add.4740, %add.4746, %add.4751, %add.4757, %add.4762, /*index=570*/%add.4767, %add.4773, %add.4779, %add.4784, %add.4789, /*index=575*/%add.4795, %add.4800, %add.4806, %add.4811, %add.4818, /*index=580*/%add.4823, %add.4828, %add.4833, %add.4839, %add.3283, /*index=585*/%add.3289, %add.3294, %add.3299, %add.3305, %add.3310, /*index=590*/%add.3316, %add.3322, %add.3327, %add.3332, %add.3338, /*index=595*/%add.3343, %add.3348, %add.3355, %add.3360, %add.3365, /*index=600*/%add.3370, %add.3375, %add.3380, %add.3385, %add.3390, /*index=605*/%add.3395, %add.3401, %add.3406, %add.3413, %add.3418, /*index=610*/%add.3424, %add.3429, %add.3435, %add.3440, %add.3446, /*index=615*/%add.3452, %add.3457, %add.3462, %add.3467, %add.3472, /*index=620*/%add.3477, %add.3482, %add.3489, %add.3494, %add.3499, /*index=625*/%add.3504, %add.3509, %add.3514, %add.3520, %add.3526, /*index=630*/%add.3531, %add.3536, %add.3541, %add.3546, %add.3552, /*index=635*/%add.3557, %add.3562, %add.3567, %add.3572, %add.3577, /*index=640*/%add.3584, %add.3589, %add.3595, %add.3600, %add.3605, /*index=645*/%add.3610, %add.3615, %add.3621, %add.3626, %add.3633, /*index=650*/%add.3639, %add.3644, %add.3649, %add.3655, %add.3660, /*index=655*/%add.3666, %add.3671, %add.3677, %add.3682, %add.3687, /*index=660*/%add.3693, %add.3698, %add.3703, %add.3708, %add.3714, /*index=665*/%add.3719, %add.3724, %add.3730, %add.3735, %add.3740, /*index=670*/%add.3746, %add.3751, %add.3756, %add.3761, %add.3766, /*index=675*/%add.3772, %add.3778, %add.3783, %add.3788, %add.3793, /*index=680*/%add.3798, %add.3803, %add.3810, %add.3815, %add.3820, /*index=685*/%add.3825, %add.3830, %add.3835, %add.3840, %add.3845, /*index=690*/%add.3850, %add.3855, %add.3861, %add.3868, %add.3874, /*index=695*/%add.3880, %add.3885, %add.3891, %add.3896, %add.3903, /*index=700*/%add.3908, %add.3914, %add.3919, %add.3924, %add.3929, /*index=705*/%add.3934, %add.3939, %add.3945, %add.3950, %add.3955, /*index=710*/%add.3960, %add.3965, %add.3970, %add.3977, %add.3982, /*index=715*/%add.3987, %add.3992, %add.3997, %add.4002, %add.4008, /*index=720*/%add.4014, %add.4019, %add.4024, %add.4029, %add.4034, /*index=725*/%add.4040, %add.4045, %add.4051, %add.4056, %add.4061, /*index=730*/%add.4066, %add.4071, %add.4076, %add.4081, %add.4088, /*index=735*/%add.4094, %add.4099, %add.4104, %add.4110, %add.4115, /*index=740*/%add.4121, %add.4126, %add.4132, %add.4137, %add.4142, /*index=745*/%add.4148, %add.4153, %add.4159, %add.4164, %add.4170, /*index=750*/%add.4175, %add.4181, %add.4186, %add.4191, %add.4197, /*index=755*/%add.4203, %add.4208, %add.4213, %add.4218, %add.4223, /*index=760*/%add.4228, %add.4234, %add.4239, %add.4244, %add.4249, /*index=765*/%add.4255, %add.4260, %add.4266, %add.4271, %add.4276, /*index=770*/%add.4281, %add.4286, %add.4292, %add.4297, %add.4302, /*index=775*/%add.4307, %add.4313, %add.4318, %add.4324, %add.4330, /*index=780*/%add.4336, %add.4341, %add.4347, %add.4352, %add.4358, /*index=785*/%add.4363, %add.4369, %add.4374, %add.4379, %add.4384, /*index=790*/%add.4389, %add.4394, %add.4400, %add.4405, %add.4410, /*index=795*/%add.4415, %add.4420, %add.4426, %add.4432, %add.4438, /*index=800*/%add.4443, %add.4448, %add.4453, %add.4458, %add.4464, /*index=805*/%add.4469, %add.4475, %add.4480, %add.4485, %add.4490, /*index=810*/%add.4496, %add.4501, %add.4506, %add.4511, %add.4516, /*index=815*/%add.4521, %add.4526, %add.4531, %add.4537, %add.4543, /*index=820*/%add.4548, %add.4554, %add.4559, %add.4565, %add.4570, /*index=825*/%add.4577, %add.4582, %add.4588, %add.4593, %add.4598, /*index=830*/%add.4603, %add.4608, %add.4614, %add.4619, %add.4624, /*index=835*/%add.4630, %add.4635, %add.4640, %add.4645, %add.4651, /*index=840*/%add.4657, %add.4662, %add.4667, %add.4672, %add.4677, /*index=845*/%add.4682, %add.4687, %add.4693, %add.4698, %add.4703, /*index=850*/%add.4709, %add.4714, %add.4721, %add.4726, %add.4731, /*index=855*/%add.4736, %add.4741, %add.4747, %add.4752, %add.4758, /*index=860*/%add.4763, %add.4769, %add.4774, %add.4780, %add.4785, /*index=865*/%add.4790, %add.4796, %add.4801, %add.4807, %add.4812, /*index=870*/%add.4819, %add.4824, %add.4829, %add.4834, %add.4840, /*index=875*/%select_n.3028, %sqrt.293, %div.3056, %constant.2882, %constant.2882, /*index=880*/%sqrt.294, %sqrt.295, %all-reduce)
}

