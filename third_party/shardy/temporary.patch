diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index 509398d..6f93f59 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1 +1,53 @@
 Auto generated patch. Do not edit or delete it, even if empty.
+diff -ruN --strip-trailing-cr a/llvm/include/llvm/ExecutionEngine/Orc/Core.h b/llvm/include/llvm/ExecutionEngine/Orc/Core.h
+--- a/llvm/include/llvm/ExecutionEngine/Orc/Core.h
++++ b/llvm/include/llvm/ExecutionEngine/Orc/Core.h
+@@ -1768,7 +1768,7 @@
+   // FIXME: We should be able to derive FailedSymsForQuery from each query once
+   //        we fix how the detach operation works.
+   struct EmitQueries {
+-    JITDylib::AsynchronousSymbolQuerySet Updated;
++    JITDylib::AsynchronousSymbolQuerySet Completed;
+     JITDylib::AsynchronousSymbolQuerySet Failed;
+     DenseMap<AsynchronousSymbolQuery *, std::shared_ptr<SymbolDependenceMap>>
+         FailedSymsForQuery;
+diff -ruN --strip-trailing-cr a/llvm/lib/ExecutionEngine/Orc/Core.cpp b/llvm/lib/ExecutionEngine/Orc/Core.cpp
+--- a/llvm/lib/ExecutionEngine/Orc/Core.cpp
++++ b/llvm/lib/ExecutionEngine/Orc/Core.cpp
+@@ -2901,13 +2901,23 @@
+ 
+   for (auto &SN : ER.Ready)
+     IL_collectQueries(
+-        EQ.Updated, SN->defs(),
++        EQ.Completed, SN->defs(),
+         [](JITDylib::SymbolTableEntry &E) { E.setState(SymbolState::Ready); },
+         [](AsynchronousSymbolQuery &Q, JITDylib &JD,
+            NonOwningSymbolStringPtr Name, JITDylib::SymbolTableEntry &E) {
+           Q.notifySymbolMetRequiredState(SymbolStringPtr(Name), E.getSymbol());
+         });
+ 
++  // std::erase_if is not available in C++17, and llvm::erase_if does not work
++  // here.
++  for (auto it = EQ.Completed.begin(), end = EQ.Completed.end(); it != end;) {
++    if ((*it)->isComplete()) {
++      ++it;
++    } else {
++      it = EQ.Completed.erase(it);
++    }
++  }
++
+ #ifdef EXPENSIVE_CHECKS
+   verifySessionState("exiting ExecutionSession::IL_emit");
+ #endif
+@@ -3043,9 +3053,8 @@
+     }
+   }
+ 
+-  for (auto &UQ : EmitQueries->Updated)
+-    if (UQ->isComplete())
+-      UQ->handleComplete(*this);
++  for (auto &UQ : EmitQueries->Completed)
++    UQ->handleComplete(*this);
+ 
+   // If there are any bad dependencies then return an error.
+   if (!BadDeps.empty()) {
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 98e83ed..335486c 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "704240125ddf17b9b4995871af3759c742a202ba"
-    LLVM_SHA256 = "0354f1e0c3842bb9f36e590e17bbb91018b014bd5c72736dff0b14d1b3f256e8"
+    LLVM_COMMIT = "621ed04e28787ade92b98e296332ac71d1b81678"
+    LLVM_SHA256 = "60729061c07f0e834acb1a18607d2552dc08596e651125a7aea9c37a4b390058"
 
     tf_http_archive(
         name = name,
