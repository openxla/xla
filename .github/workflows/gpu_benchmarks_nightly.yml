# Copyright 2025 The OpenXLA Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
name: Nightly GPU Benchmarks
permissions:
  contents: read
on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: "0 0 * * *"  # Run at midnight every day


jobs:
  Tests:
    strategy:
      # Don't fail fast - want to see results for all builds even if one fails.
      fail-fast: false
      matrix:
        job_info: [
          {
            os: "linux-x86-g2-48-l4-4gpu",
            container: "us-central1-docker.pkg.dev/tensorflow-sigs/tensorflow/ml-build:latest",
            pretty_name: "XLA Linux x86 GPU T4 48 vcpu Presubmit",
          },
          {
            os: "linux-x86-g2-16-l4-1gpu",
            container: "us-central1-docker.pkg.dev/tensorflow-sigs/tensorflow/ml-build:latest",
            pretty_name: "XLA Linux x86 GPU T4 16 vcpu Presubmit",
          },
          # Expect more GPU types in the future.
        ]
    name: ${{ matrix.job_info.pretty_name }}
    runs-on: ${{ matrix.job_info.os }}
    container: ${{ matrix.job_info.container }}
    defaults:
      run:
        shell: bash
    timeout-minutes: 240
    env:
      OUTPUT_DIR: ${{ github.workspace }}/output
    steps:
      - name: Checkout XLA
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Print machine specs
        run: |
          nvidia-smi
          free -h  # Memory information
          df -h    # Disk space information
          uname -a # Kernel information

      - name: Download Gemma2 2B HLO
        run: |
          mkdir -p tmp_hlo
          cd tmp_hlo
          wget https://storage.googleapis.com/xla-benchmarking-temp/gemma2_2b_keras_jax.hlo
          cd ..

      - name: "Run build.py"
        run: |
          ./build_tools/ci/build.py --build="${{ matrix.job_info.pretty_name }}_github_actions"

      - name: Run HLO tests and collect data
        run: |
          binary_dir="./bazel-out/k8-opt/bin/xla/tools"
          mkdir -p "$OUTPUT_DIR"

          # Run gpu_hlo_backend.hlo
          HLO_FILE_GB="xla/tools/hlo_opt/tests/gpu_hlo_backend.hlo"
          OUTPUT_PREFIX_GB="$OUTPUT_DIR/gpu_hlo_backend"
          echo "Running GPU test: $HLO_FILE_GB"
          $binary_dir/multihost_hlo_runner/hlo_runner_main_gpu \
            --device_type=gpu \
            --log_output=True \
            --use_spmd_partitioning \
            --profile_execution=True \
            --xla_gpu_dump_xspace_to="${OUTPUT_PREFIX_GB}_xspace.pb" \
            "$HLO_FILE_GB" \
            > "${OUTPUT_PREFIX_GB}.txt"

          $binary_dir/compute_gpu_device_stats_main_gpu \
            --input="${OUTPUT_PREFIX_GB}_xspace.pb" \
            >> "${OUTPUT_PREFIX_GB}.txt"

          cat "${OUTPUT_PREFIX_GB}.txt"

          # Run gemma2_2b_keras_jax.hlo
          HLO_FILE_GEMMA="tmp_hlo/gemma2_2b_keras_jax.hlo"
          OUTPUT_PREFIX_GEMMA="$OUTPUT_DIR/gemma2_2b_keras_jax"
          echo "Running GPU test: $HLO_FILE_GEMMA"
          $binary_dir/multihost_hlo_runner/hlo_runner_main_gpu \
            --device_type=gpu \
            --log_output=True \
            --use_spmd_partitioning \
            --profile_execution=True \
            --xla_gpu_dump_xspace_to="${OUTPUT_PREFIX_GEMMA}_xspace.pb" \
            "$HLO_FILE_GEMMA" \
            > "${OUTPUT_PREFIX_GEMMA}.txt"

          $binary_dir/compute_gpu_device_stats_main_gpu \
            --input="${OUTPUT_PREFIX_GEMMA}_xspace.pb" \
            >> "${OUTPUT_PREFIX_GEMMA}.txt"

          cat "${OUTPUT_PREFIX_GEMMA}.txt"

          echo "Output written to: ${OUTPUT_PREFIX_GB}.txt and ${OUTPUT_PREFIX_GEMMA}.txt"

      - name: Upload HLO test output to GCS
        run: |
          GCS_BUCKET="gs://openxla-nightly-transient"
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          DATE_FOLDER=$(date +%Y%m%d)
          COMMIT_SHA="${{ github.sha }}"
          RUN_ID="${{ github.run_id }}"

          # Upload output for gpu_hlo_backend
          GB_BASE_NAME="gpu_hlo_backend"
          GCS_FILE_NAME_GB="${DATE_FOLDER}/${TIMESTAMP}_${{ matrix.job_info.os }}_run_${RUN_ID}_commit_${COMMIT_SHA}$_${GB_BASE_NAME}.txt"
          echo "Uploading $OUTPUT_DIR/${GB_BASE_NAME}.txt to $GCS_BUCKET/$GCS_FILE_NAME_GB"
          gsutil cp "$OUTPUT_DIR/${GB_BASE_NAME}.txt" "$GCS_BUCKET/$GCS_FILE_NAME_GB"

          # Upload output for gemma2_2b_keras_jax
          GEMMA_BASE_NAME="gemma2_2b_keras_jax"
          GCS_FILE_NAME_GEMMA="${DATE_FOLDER}/${TIMESTAMP}_${{ matrix.job_info.os }}_run_${RUN_ID}_commit_${COMMIT_SHA}_${GEMMA_BASE_NAME}.txt"
          echo "Uploading $OUTPUT_DIR/${GEMMA_BASE_NAME}.txt to $GCS_BUCKET/$GCS_FILE_NAME_GEMMA"
          gsutil cp "$OUTPUT_DIR/${GEMMA_BASE_NAME}.txt" "$GCS_BUCKET/$GCS_FILE_NAME_GEMMA"

      - name: Upload XSpace artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: gpu-xla-benchmarks-xspace-${{ matrix.job_info.os }}
          path: ${{ github.workspace }}/output/*_xspace.pb
